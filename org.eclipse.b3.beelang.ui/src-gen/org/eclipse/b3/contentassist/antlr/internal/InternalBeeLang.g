/*
* generated by Xtext
*/
grammar InternalBeeLang;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.b3.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.b3.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.b3.services.BeeLangGrammarAccess;

}

@parser::members {
 
 	private BeeLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BeeLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBeeModel
entryRuleBeeModel :
{ before(grammarAccess.getBeeModelRule()); }
	 ruleBeeModel
{ after(grammarAccess.getBeeModelRule()); } 
	 EOF 
;

// Rule BeeModel
ruleBeeModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBeeModelAccess().getGroup()); }
(rule__BeeModel__Group__0)
{ after(grammarAccess.getBeeModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName :
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    @after {
		myHiddenTokenState.restore();
    }  
 :
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHIDDENBUG
entryRuleHIDDENBUG :
{ before(grammarAccess.getHIDDENBUGRule()); }
	 ruleHIDDENBUG
{ after(grammarAccess.getHIDDENBUGRule()); } 
	 EOF 
;

// Rule HIDDENBUG
ruleHIDDENBUG 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
    @after {
		myHiddenTokenState.restore();
    }  
 :
(
{ before(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword()); }
(
	'~~~~~' 
)?
{ after(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePropertyName
entryRulePropertyName :
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall()); }
	RULE_PID
{ after(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapedQualifiedName
entryRuleEscapedQualifiedName :
{ before(grammarAccess.getEscapedQualifiedNameRule()); }
	 ruleEscapedQualifiedName
{ after(grammarAccess.getEscapedQualifiedNameRule()); } 
	 EOF 
;

// Rule EscapedQualifiedName
ruleEscapedQualifiedName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives()); }
(rule__EscapedQualifiedName__Alternatives)
{ after(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceName
entryRuleInterfaceName :
{ before(grammarAccess.getInterfaceNameRule()); }
	 ruleInterfaceName
{ after(grammarAccess.getInterfaceNameRule()); } 
	 EOF 
;

// Rule InterfaceName
ruleInterfaceName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall()); }
	ruleQualifiedName
{ after(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundName
entryRuleCompoundName :
{ before(grammarAccess.getCompoundNameRule()); }
	 ruleCompoundName
{ after(grammarAccess.getCompoundNameRule()); } 
	 EOF 
;

// Rule CompoundName
ruleCompoundName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCompoundNameAccess().getGroup()); }
(rule__CompoundName__Group__0)
{ after(grammarAccess.getCompoundNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitName
entryRuleUnitName :
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartName
entryRulePartName :
{ before(grammarAccess.getPartNameRule()); }
	 rulePartName
{ after(grammarAccess.getPartNameRule()); } 
	 EOF 
;

// Rule PartName
rulePartName 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSeparator
entryRuleSeparator :
{ before(grammarAccess.getSeparatorRule()); }
	 ruleSeparator
{ after(grammarAccess.getSeparatorRule()); } 
	 EOF 
;

// Rule Separator
ruleSeparator 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSeparatorAccess().getAlternatives()); }
(rule__Separator__Alternatives)
{ after(grammarAccess.getSeparatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlfanumSym
entryRuleAlfanumSym :
{ before(grammarAccess.getAlfanumSymRule()); }
	 ruleAlfanumSym
{ after(grammarAccess.getAlfanumSymRule()); } 
	 EOF 
;

// Rule AlfanumSym
ruleAlfanumSym 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAlfanumSymAccess().getGroup()); }
(rule__AlfanumSym__Group__0)
{ after(grammarAccess.getAlfanumSymAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersion
entryRuleVersion :
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVersionAccess().getAlternatives()); }
(rule__Version__Alternatives)
{ after(grammarAccess.getVersionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionRange
entryRuleVersionRange :
{ before(grammarAccess.getVersionRangeRule()); }
	 ruleVersionRange
{ after(grammarAccess.getVersionRangeRule()); } 
	 EOF 
;

// Rule VersionRange
ruleVersionRange 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVersionRangeAccess().getAlternatives()); }
(rule__VersionRange__Alternatives)
{ after(grammarAccess.getVersionRangeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnit
entryRuleUnit :
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
    @after {
		myHiddenTokenState.restore();
    }  
 :
(
{ before(grammarAccess.getUnitAccess().getGroup()); }
(rule__Unit__Group__0)
{ after(grammarAccess.getUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvidedCapability
entryRuleProvidedCapability :
{ before(grammarAccess.getProvidedCapabilityRule()); }
	 ruleProvidedCapability
{ after(grammarAccess.getProvidedCapabilityRule()); } 
	 EOF 
;

// Rule ProvidedCapability
ruleProvidedCapability 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getProvidedCapabilityAccess().getGroup()); }
(rule__ProvidedCapability__Group__0)
{ after(grammarAccess.getProvidedCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredCapability
entryRuleRequiredCapability :
{ before(grammarAccess.getRequiredCapabilityRule()); }
	 ruleRequiredCapability
{ after(grammarAccess.getRequiredCapabilityRule()); } 
	 EOF 
;

// Rule RequiredCapability
ruleRequiredCapability 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRequiredCapabilityAccess().getGroup()); }
(rule__RequiredCapability__Group__0)
{ after(grammarAccess.getRequiredCapabilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedPropertyStatements
entryRuleNamedPropertyStatements :
{ before(grammarAccess.getNamedPropertyStatementsRule()); }
	 ruleNamedPropertyStatements
{ after(grammarAccess.getNamedPropertyStatementsRule()); } 
	 EOF 
;

// Rule NamedPropertyStatements
ruleNamedPropertyStatements 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNamedPropertyStatementsAccess().getGroup()); }
(rule__NamedPropertyStatements__Group__0)
{ after(grammarAccess.getNamedPropertyStatementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyStatements
entryRulePropertyStatements :
{ before(grammarAccess.getPropertyStatementsRule()); }
	 rulePropertyStatements
{ after(grammarAccess.getPropertyStatementsRule()); } 
	 EOF 
;

// Rule PropertyStatements
rulePropertyStatements 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyStatementsAccess().getGroup()); }
(rule__PropertyStatements__Group__0)
{ after(grammarAccess.getPropertyStatementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyStatement
entryRulePropertyStatement :
{ before(grammarAccess.getPropertyStatementRule()); }
	 rulePropertyStatement
{ after(grammarAccess.getPropertyStatementRule()); } 
	 EOF 
;

// Rule PropertyStatement
rulePropertyStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyStatementAccess().getGroup()); }
(rule__PropertyStatement__Group__0)
{ after(grammarAccess.getPropertyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsetPropertyStatement
entryRuleUnsetPropertyStatement :
{ before(grammarAccess.getUnsetPropertyStatementRule()); }
	 ruleUnsetPropertyStatement
{ after(grammarAccess.getUnsetPropertyStatementRule()); } 
	 EOF 
;

// Rule UnsetPropertyStatement
ruleUnsetPropertyStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUnsetPropertyStatementAccess().getGroup()); }
(rule__UnsetPropertyStatement__Group__0)
{ after(grammarAccess.getUnsetPropertyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationStatement
entryRuleAnnotationStatement :
{ before(grammarAccess.getAnnotationStatementRule()); }
	 ruleAnnotationStatement
{ after(grammarAccess.getAnnotationStatementRule()); } 
	 EOF 
;

// Rule AnnotationStatement
ruleAnnotationStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAnnotationStatementAccess().getGroup()); }
(rule__AnnotationStatement__Group__0)
{ after(grammarAccess.getAnnotationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyExpression
entryRulePropertyExpression :
{ before(grammarAccess.getPropertyExpressionRule()); }
	 rulePropertyExpression
{ after(grammarAccess.getPropertyExpressionRule()); } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyExpressionAccess().getExpressionParserRuleCall()); }
	ruleExpression
{ after(grammarAccess.getPropertyExpressionAccess().getExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSynchronization
entryRuleSynchronization :
{ before(grammarAccess.getSynchronizationRule()); }
	 ruleSynchronization
{ after(grammarAccess.getSynchronizationRule()); } 
	 EOF 
;

// Rule Synchronization
ruleSynchronization 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSynchronizationAccess().getGroup()); }
(rule__Synchronization__Group__0)
{ after(grammarAccess.getSynchronizationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSynchronizedPart
entryRuleSynchronizedPart :
{ before(grammarAccess.getSynchronizedPartRule()); }
	 ruleSynchronizedPart
{ after(grammarAccess.getSynchronizedPartRule()); } 
	 EOF 
;

// Rule SynchronizedPart
ruleSynchronizedPart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSynchronizedPartAccess().getAlternatives()); }
(rule__SynchronizedPart__Alternatives)
{ after(grammarAccess.getSynchronizedPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuildPart
entryRuleBuildPart :
{ before(grammarAccess.getBuildPartRule()); }
	 ruleBuildPart
{ after(grammarAccess.getBuildPartRule()); } 
	 EOF 
;

// Rule BuildPart
ruleBuildPart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBuildPartAccess().getAlternatives()); }
(rule__BuildPart__Alternatives)
{ after(grammarAccess.getBuildPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArtifacts
entryRuleArtifacts :
{ before(grammarAccess.getArtifactsRule()); }
	 ruleArtifacts
{ after(grammarAccess.getArtifactsRule()); } 
	 EOF 
;

// Rule Artifacts
ruleArtifacts 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getArtifactsAccess().getGroup()); }
(rule__Artifacts__Group__0)
{ after(grammarAccess.getArtifactsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathGroup
entryRulePathGroup :
{ before(grammarAccess.getPathGroupRule()); }
	 rulePathGroup
{ after(grammarAccess.getPathGroupRule()); } 
	 EOF 
;

// Rule PathGroup
rulePathGroup 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPathGroupAccess().getGroup()); }
(rule__PathGroup__Group__0)
{ after(grammarAccess.getPathGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathExpression
entryRulePathExpression :
{ before(grammarAccess.getPathExpressionRule()); }
	 rulePathExpression
{ after(grammarAccess.getPathExpressionRule()); } 
	 EOF 
;

// Rule PathExpression
rulePathExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPathExpressionAccess().getAlternatives()); }
(rule__PathExpression__Alternatives)
{ after(grammarAccess.getPathExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprStatement
entryRuleExprStatement :
{ before(grammarAccess.getExprStatementRule()); }
	 ruleExprStatement
{ after(grammarAccess.getExprStatementRule()); } 
	 EOF 
;

// Rule ExprStatement
ruleExprStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getExprStatementAccess().getGroup()); }
(rule__ExprStatement__Group__0)
{ after(grammarAccess.getExprStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePath
entryRulePath :
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    @after {
		myHiddenTokenState.restore();
    }  
 :
(
{ before(grammarAccess.getPathAccess().getAlternatives()); }
(rule__Path__Alternatives)
{ after(grammarAccess.getPathAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup :
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrerequisite
entryRulePrerequisite :
{ before(grammarAccess.getPrerequisiteRule()); }
	 rulePrerequisite
{ after(grammarAccess.getPrerequisiteRule()); } 
	 EOF 
;

// Rule Prerequisite
rulePrerequisite 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup()); }
(rule__Prerequisite__Group__0)
{ after(grammarAccess.getPrerequisiteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosure
entryRuleClosure :
{ before(grammarAccess.getClosureRule()); }
	 ruleClosure
{ after(grammarAccess.getClosureRule()); } 
	 EOF 
;

// Rule Closure
ruleClosure 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getClosureAccess().getGroup()); }
(rule__Closure__Group__0)
{ after(grammarAccess.getClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrerequisiteEntry
entryRulePrerequisiteEntry :
{ before(grammarAccess.getPrerequisiteEntryRule()); }
	 rulePrerequisiteEntry
{ after(grammarAccess.getPrerequisiteEntryRule()); } 
	 EOF 
;

// Rule PrerequisiteEntry
rulePrerequisiteEntry 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPrerequisiteEntryAccess().getAlternatives()); }
(rule__PrerequisiteEntry__Alternatives)
{ after(grammarAccess.getPrerequisiteEntryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartInSelf
entryRulePartInSelf :
{ before(grammarAccess.getPartInSelfRule()); }
	 rulePartInSelf
{ after(grammarAccess.getPartInSelfRule()); } 
	 EOF 
;

// Rule PartInSelf
rulePartInSelf 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPartInSelfAccess().getPartNameAssignment()); }
(rule__PartInSelf__PartNameAssignment)
{ after(grammarAccess.getPartInSelfAccess().getPartNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCapabilityReferencedPart
entryRuleCapabilityReferencedPart :
{ before(grammarAccess.getCapabilityReferencedPartRule()); }
	 ruleCapabilityReferencedPart
{ after(grammarAccess.getCapabilityReferencedPartRule()); } 
	 EOF 
;

// Rule CapabilityReferencedPart
ruleCapabilityReferencedPart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getAlternatives()); }
(rule__CapabilityReferencedPart__Alternatives)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundReferences
entryRuleCompoundReferences :
{ before(grammarAccess.getCompoundReferencesRule()); }
	 ruleCompoundReferences
{ after(grammarAccess.getCompoundReferencesRule()); } 
	 EOF 
;

// Rule CompoundReferences
ruleCompoundReferences 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCompoundReferencesAccess().getGroup()); }
(rule__CompoundReferences__Group__0)
{ after(grammarAccess.getCompoundReferencesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction :
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter :
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getParameterAccess().getValAssignment()); }
(rule__Parameter__ValAssignment)
{ after(grammarAccess.getParameterAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLayout
entryRuleLayout :
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLayoutAccess().getGroup()); }
(rule__Layout__Group__0)
{ after(grammarAccess.getLayoutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionInputGroup
entryRuleActionInputGroup :
{ before(grammarAccess.getActionInputGroupRule()); }
	 ruleActionInputGroup
{ after(grammarAccess.getActionInputGroupRule()); } 
	 EOF 
;

// Rule ActionInputGroup
ruleActionInputGroup 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getActionInputGroupAccess().getGroup()); }
(rule__ActionInputGroup__Group__0)
{ after(grammarAccess.getActionInputGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepositoryConfiguration
entryRuleRepositoryConfiguration :
{ before(grammarAccess.getRepositoryConfigurationRule()); }
	 ruleRepositoryConfiguration
{ after(grammarAccess.getRepositoryConfigurationRule()); } 
	 EOF 
;

// Rule RepositoryConfiguration
ruleRepositoryConfiguration 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getGroup()); }
(rule__RepositoryConfiguration__Group__0)
{ after(grammarAccess.getRepositoryConfigurationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleURI
entryRuleURI :
{ before(grammarAccess.getURIRule()); }
	 ruleURI
{ after(grammarAccess.getURIRule()); } 
	 EOF 
;

// Rule URI
ruleURI 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedAdvice
entryRuleNamedAdvice :
{ before(grammarAccess.getNamedAdviceRule()); }
	 ruleNamedAdvice
{ after(grammarAccess.getNamedAdviceRule()); } 
	 EOF 
;

// Rule NamedAdvice
ruleNamedAdvice 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNamedAdviceAccess().getGroup()); }
(rule__NamedAdvice__Group__0)
{ after(grammarAccess.getNamedAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvice
entryRuleAdvice :
{ before(grammarAccess.getAdviceRule()); }
	 ruleAdvice
{ after(grammarAccess.getAdviceRule()); } 
	 EOF 
;

// Rule Advice
ruleAdvice 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdviceAccess().getGroup()); }
(rule__Advice__Group__0)
{ after(grammarAccess.getAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundAdvice
entryRuleCompoundAdvice :
{ before(grammarAccess.getCompoundAdviceRule()); }
	 ruleCompoundAdvice
{ after(grammarAccess.getCompoundAdviceRule()); } 
	 EOF 
;

// Rule CompoundAdvice
ruleCompoundAdvice 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCompoundAdviceAccess().getGroup()); }
(rule__CompoundAdvice__Group__0)
{ after(grammarAccess.getCompoundAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdviceStatement
entryRuleAdviceStatement :
{ before(grammarAccess.getAdviceStatementRule()); }
	 ruleAdviceStatement
{ after(grammarAccess.getAdviceStatementRule()); } 
	 EOF 
;

// Rule AdviceStatement
ruleAdviceStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdviceStatementAccess().getGroup()); }
(rule__AdviceStatement__Group__0)
{ after(grammarAccess.getAdviceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvicePath
entryRuleAdvicePath :
{ before(grammarAccess.getAdvicePathRule()); }
	 ruleAdvicePath
{ after(grammarAccess.getAdvicePathRule()); } 
	 EOF 
;

// Rule AdvicePath
ruleAdvicePath 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdvicePathAccess().getGroup()); }
(rule__AdvicePath__Group__0)
{ after(grammarAccess.getAdvicePathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvicePathSeparator
entryRuleAdvicePathSeparator :
{ before(grammarAccess.getAdvicePathSeparatorRule()); }
	 ruleAdvicePathSeparator
{ after(grammarAccess.getAdvicePathSeparatorRule()); } 
	 EOF 
;

// Rule AdvicePathSeparator
ruleAdvicePathSeparator 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdvicePathSeparatorAccess().getAdvicePathChildrenParserRuleCall()); }
	ruleAdvicePathChildren
{ after(grammarAccess.getAdvicePathSeparatorAccess().getAdvicePathChildrenParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvicePathChildren
entryRuleAdvicePathChildren :
{ before(grammarAccess.getAdvicePathChildrenRule()); }
	 ruleAdvicePathChildren
{ after(grammarAccess.getAdvicePathChildrenRule()); } 
	 EOF 
;

// Rule AdvicePathChildren
ruleAdvicePathChildren 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdvicePathChildrenAccess().getGroup()); }
(rule__AdvicePathChildren__Group__0)
{ after(grammarAccess.getAdvicePathChildrenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvicePathElement
entryRuleAdvicePathElement :
{ before(grammarAccess.getAdvicePathElementRule()); }
	 ruleAdvicePathElement
{ after(grammarAccess.getAdvicePathElementRule()); } 
	 EOF 
;

// Rule AdvicePathElement
ruleAdvicePathElement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdvicePathElementAccess().getAlternatives()); }
(rule__AdvicePathElement__Alternatives)
{ after(grammarAccess.getAdvicePathElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardNode
entryRuleWildcardNode :
{ before(grammarAccess.getWildcardNodeRule()); }
	 ruleWildcardNode
{ after(grammarAccess.getWildcardNodeRule()); } 
	 EOF 
;

// Rule WildcardNode
ruleWildcardNode 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWildcardNodeAccess().getGroup()); }
(rule__WildcardNode__Group__0)
{ after(grammarAccess.getWildcardNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilter
entryRuleFilter :
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFilterAccess().getGroup()); }
(rule__Filter__Group__0)
{ after(grammarAccess.getFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreConditionAssert
entryRulePreConditionAssert :
{ before(grammarAccess.getPreConditionAssertRule()); }
	 rulePreConditionAssert
{ after(grammarAccess.getPreConditionAssertRule()); } 
	 EOF 
;

// Rule PreConditionAssert
rulePreConditionAssert 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPreConditionAssertAccess().getGroup()); }
(rule__PreConditionAssert__Group__0)
{ after(grammarAccess.getPreConditionAssertAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostConditionAssert
entryRulePostConditionAssert :
{ before(grammarAccess.getPostConditionAssertRule()); }
	 rulePostConditionAssert
{ after(grammarAccess.getPostConditionAssertRule()); } 
	 EOF 
;

// Rule PostConditionAssert
rulePostConditionAssert 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPostConditionAssertAccess().getGroup()); }
(rule__PostConditionAssert__Group__0)
{ after(grammarAccess.getPostConditionAssertAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertionExpression
entryRuleAssertionExpression :
{ before(grammarAccess.getAssertionExpressionRule()); }
	 ruleAssertionExpression
{ after(grammarAccess.getAssertionExpressionRule()); } 
	 EOF 
;

// Rule AssertionExpression
ruleAssertionExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssertionExpressionAccess().getGroup()); }
(rule__AssertionExpression__Group__0)
{ after(grammarAccess.getAssertionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement :
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement :
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
(rule__BreakStatement__Group__0)
{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContinueStatement
entryRuleContinueStatement :
{ before(grammarAccess.getContinueStatementRule()); }
	 ruleContinueStatement
{ after(grammarAccess.getContinueStatementRule()); } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getContinueStatementAccess().getGroup()); }
(rule__ContinueStatement__Group__0)
{ after(grammarAccess.getContinueStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement :
{ before(grammarAccess.getCompoundStatementRule()); }
	 ruleCompoundStatement
{ after(grammarAccess.getCompoundStatementRule()); } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCompoundStatementAccess().getGroup()); }
(rule__CompoundStatement__Group__0)
{ after(grammarAccess.getCompoundStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatements
entryRuleStatements :
{ before(grammarAccess.getStatementsRule()); }
	 ruleStatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule Statements
ruleStatements 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getStatementsAccess().getStatementsAssignment()); }
(rule__Statements__StatementsAssignment)*
{ after(grammarAccess.getStatementsAccess().getStatementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement :
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement :
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase :
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement :
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement :
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleVarExpressionList
entryRuleVarExpressionList :
{ before(grammarAccess.getVarExpressionListRule()); }
	 ruleVarExpressionList
{ after(grammarAccess.getVarExpressionListRule()); } 
	 EOF 
;

// Rule VarExpressionList
ruleVarExpressionList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVarExpressionListAccess().getGroup()); }
(rule__VarExpressionList__Group__0)
{ after(grammarAccess.getVarExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionList
entryRuleExpressionList :
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarExpression
entryRuleVarExpression :
{ before(grammarAccess.getVarExpressionRule()); }
	 ruleVarExpression
{ after(grammarAccess.getVarExpressionRule()); } 
	 EOF 
;

// Rule VarExpression
ruleVarExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVarExpressionAccess().getAlternatives()); }
(rule__VarExpression__Alternatives)
{ after(grammarAccess.getVarExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression :
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall()); }
	ruleValueExpression
{ after(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueExpression
entryRuleValueExpression :
{ before(grammarAccess.getValueExpressionRule()); }
	 ruleValueExpression
{ after(grammarAccess.getValueExpressionRule()); } 
	 EOF 
;

// Rule ValueExpression
ruleValueExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getValueExpressionAccess().getValueAssignment()); }
(rule__ValueExpression__ValueAssignment)
{ after(grammarAccess.getValueExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression :
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
(rule__AssignmentExpression__Group__0)
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChainExpression
entryRuleChainExpression :
{ before(grammarAccess.getChainExpressionRule()); }
	 ruleChainExpression
{ after(grammarAccess.getChainExpressionRule()); } 
	 EOF 
;

// Rule ChainExpression
ruleChainExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall()); }
	ruleChainedExpression
{ after(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChainedExpression
entryRuleChainedExpression :
{ before(grammarAccess.getChainedExpressionRule()); }
	 ruleChainedExpression
{ after(grammarAccess.getChainedExpressionRule()); } 
	 EOF 
;

// Rule ChainedExpression
ruleChainedExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall()); }
	ruleIfExpression
{ after(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression :
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression :
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression :
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression :
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression :
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression :
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOrInfixExpression
entryRuleUnaryOrInfixExpression :
{ before(grammarAccess.getUnaryOrInfixExpressionRule()); }
	 ruleUnaryOrInfixExpression
{ after(grammarAccess.getUnaryOrInfixExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrInfixExpression
ruleUnaryOrInfixExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
(rule__UnaryOrInfixExpression__Alternatives)
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression :
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
(rule__UnaryExpression__Group__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostopExpression
entryRulePostopExpression :
{ before(grammarAccess.getPostopExpressionRule()); }
	 rulePostopExpression
{ after(grammarAccess.getPostopExpressionRule()); } 
	 EOF 
;

// Rule PostopExpression
rulePostopExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPostopExpressionAccess().getGroup()); }
(rule__PostopExpression__Group__0)
{ after(grammarAccess.getPostopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfixExpression
entryRuleInfixExpression :
{ before(grammarAccess.getInfixExpressionRule()); }
	 ruleInfixExpression
{ after(grammarAccess.getInfixExpressionRule()); } 
	 EOF 
;

// Rule InfixExpression
ruleInfixExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup()); }
(rule__InfixExpression__Group__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression :
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue :
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyValueAccess().getNameAssignment()); }
(rule__PropertyValue__NameAssignment)
{ after(grammarAccess.getPropertyValueAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableValue
entryRuleVariableValue :
{ before(grammarAccess.getVariableValueRule()); }
	 ruleVariableValue
{ after(grammarAccess.getVariableValueRule()); } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVariableValueAccess().getNameAssignment()); }
(rule__VariableValue__NameAssignment)
{ after(grammarAccess.getVariableValueAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCall
entryRuleFeatureCall :
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); }
	ruleOperationCall
{ after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCall
entryRuleOperationCall :
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOperationCallAccess().getGroup()); }
(rule__OperationCall__Group__0)
{ after(grammarAccess.getOperationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral :
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueLiteral
entryRuleValueLiteral :
{ before(grammarAccess.getValueLiteralRule()); }
	 ruleValueLiteral
{ after(grammarAccess.getValueLiteralRule()); } 
	 EOF 
;

// Rule ValueLiteral
ruleValueLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getValueLiteralAccess().getAlternatives()); }
(rule__ValueLiteral__Alternatives)
{ after(grammarAccess.getValueLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral :
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBooleanLiteralAccess().getValAssignment()); }
(rule__BooleanLiteral__ValAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral :
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
(rule__IntegerLiteral__Alternatives)
{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral :
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNullLiteralAccess().getValAssignment()); }
(rule__NullLiteral__ValAssignment)
{ after(grammarAccess.getNullLiteralAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral :
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getStringLiteralAccess().getValAssignment()); }
(rule__StringLiteral__ValAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral :
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRealLiteralAccess().getValAssignment()); }
(rule__RealLiteral__ValAssignment)
{ after(grammarAccess.getRealLiteralAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegexpLiteral
entryRuleRegexpLiteral :
{ before(grammarAccess.getRegexpLiteralRule()); }
	 ruleRegexpLiteral
{ after(grammarAccess.getRegexpLiteralRule()); } 
	 EOF 
;

// Rule RegexpLiteral
ruleRegexpLiteral 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRegexpLiteralAccess().getValAssignment()); }
(rule__RegexpLiteral__ValAssignment)
{ after(grammarAccess.getRegexpLiteralAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParanthesizedExpression
entryRuleParanthesizedExpression :
{ before(grammarAccess.getParanthesizedExpressionRule()); }
	 ruleParanthesizedExpression
{ after(grammarAccess.getParanthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParanthesizedExpression
ruleParanthesizedExpression 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
(rule__ParanthesizedExpression__Group__0)
{ after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule ExecutionMode
ruleExecutionMode
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModeAccess().getAlternatives()); }
(rule__ExecutionMode__Alternatives)
{ after(grammarAccess.getExecutionModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__QualifiedName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1()); }
	RULE_HEX
{ after(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0()); }
	RULE_INT
{ after(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1()); }
	RULE_HEX
{ after(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1()); }
)

    |(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EscapedQualifiedName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1()); }
	ruleQualifiedName
{ after(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Separator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSeparatorAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getSeparatorAccess().getFullStopKeyword_0()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3()); }

	'@' 

{ after(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4()); }

	'$' 

{ after(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5()); }

	'%' 

{ after(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6()); }

	'&' 

{ after(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7()); }

	'+' 

{ after(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9()); }

	'*' 

{ after(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10()); }

	'<' 

{ after(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11()); }

	'>' 

{ after(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getColonKeyword_12()); }

	':' 

{ after(grammarAccess.getSeparatorAccess().getColonKeyword_12()); }
)

    |(
{ before(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13()); }

	'?' 

{ after(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlfanumSym__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2()); }
	RULE_HEX
{ after(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3()); }
	RULE_REAL
{ after(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlfanumSym__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0()); }
	ruleSeparator
{ after(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3()); }
	RULE_HEX
{ after(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4()); }
	RULE_REAL
{ after(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getVersionAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVersionAccess().getAlfanumSymParserRuleCall_1()); }
	ruleAlfanumSym
{ after(grammarAccess.getVersionAccess().getAlfanumSymParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRange__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getGroup_0()); }
(rule__VersionRange__Group_0__0)
{ after(grammarAccess.getVersionRangeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_1()); }
	ruleVersion
{ after(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRange__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getLeftSquareBracketKeyword_0_0_0()); }

	'[' 

{ after(grammarAccess.getVersionRangeAccess().getLeftSquareBracketKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeAccess().getLeftParenthesisKeyword_0_0_1()); }

	'(' 

{ after(grammarAccess.getVersionRangeAccess().getLeftParenthesisKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersionRange__Alternatives_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getRightSquareBracketKeyword_0_3_0()); }

	']' 

{ after(grammarAccess.getVersionRangeAccess().getRightSquareBracketKeyword_0_3_0()); }
)

    |(
{ before(grammarAccess.getVersionRangeAccess().getRightParenthesisKeyword_0_3_1()); }

	')' 

{ after(grammarAccess.getVersionRangeAccess().getRightParenthesisKeyword_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_7_0()); }
(rule__Unit__Group_7_0__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_0()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_1()); }
(rule__Unit__Group_7_1__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_1()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_2()); }
(rule__Unit__Group_7_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_2()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_3()); }
(rule__Unit__Group_7_3__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_3()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_4()); }
(rule__Unit__Group_7_4__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_4()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_5()); }
(rule__Unit__Group_7_5__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_5()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_6()); }
(rule__Unit__Group_7_6__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_6()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_7()); }
(rule__Unit__Group_7_7__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_7()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_8()); }
(rule__Unit__Group_7_8__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_8()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getPartsAssignment_7_9()); }
(rule__Unit__PartsAssignment_7_9)
{ after(grammarAccess.getUnitAccess().getPartsAssignment_7_9()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getGroup_7_10()); }
(rule__Unit__Group_7_10__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatements__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_0()); }
(rule__PropertyStatements__StatementsAssignment_1_1_0)
{ after(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_1()); }
(rule__PropertyStatements__StatementsAssignment_1_1_1)
{ after(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_2()); }
(rule__PropertyStatements__StatementsAssignment_1_1_2)
{ after(grammarAccess.getPropertyStatementsAccess().getStatementsAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatement__OpAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getOpEqualsSignKeyword_2_0_0()); }

	'=' 

{ after(grammarAccess.getPropertyStatementAccess().getOpEqualsSignKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getPropertyStatementAccess().getOpPlusSignEqualsSignKeyword_2_0_1()); }

	'+=' 

{ after(grammarAccess.getPropertyStatementAccess().getOpPlusSignEqualsSignKeyword_2_0_1()); }
)

    |(
{ before(grammarAccess.getPropertyStatementAccess().getOpHyphenMinusEqualsSignKeyword_2_0_2()); }

	'-=' 

{ after(grammarAccess.getPropertyStatementAccess().getOpHyphenMinusEqualsSignKeyword_2_0_2()); }
)

    |(
{ before(grammarAccess.getPropertyStatementAccess().getOpAsteriskEqualsSignKeyword_2_0_3()); }

	'*=' 

{ after(grammarAccess.getPropertyStatementAccess().getOpAsteriskEqualsSignKeyword_2_0_3()); }
)

    |(
{ before(grammarAccess.getPropertyStatementAccess().getOpSolidusEqualsSignKeyword_2_0_4()); }

	'/=' 

{ after(grammarAccess.getPropertyStatementAccess().getOpSolidusEqualsSignKeyword_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__OpAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getOpEqualsSignKeyword_3_0_0()); }

	'=' 

{ after(grammarAccess.getAnnotationStatementAccess().getOpEqualsSignKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getAnnotationStatementAccess().getOpPlusSignEqualsSignKeyword_3_0_1()); }

	'+=' 

{ after(grammarAccess.getAnnotationStatementAccess().getOpPlusSignEqualsSignKeyword_3_0_1()); }
)

    |(
{ before(grammarAccess.getAnnotationStatementAccess().getOpHyphenMinusEqualsSignKeyword_3_0_2()); }

	'-=' 

{ after(grammarAccess.getAnnotationStatementAccess().getOpHyphenMinusEqualsSignKeyword_3_0_2()); }
)

    |(
{ before(grammarAccess.getAnnotationStatementAccess().getOpAsteriskEqualsSignKeyword_3_0_3()); }

	'*=' 

{ after(grammarAccess.getAnnotationStatementAccess().getOpAsteriskEqualsSignKeyword_3_0_3()); }
)

    |(
{ before(grammarAccess.getAnnotationStatementAccess().getOpSolidusEqualsSignKeyword_3_0_4()); }

	'/=' 

{ after(grammarAccess.getAnnotationStatementAccess().getOpSolidusEqualsSignKeyword_3_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getGroup_0()); }
(rule__SynchronizedPart__Group_0__0)
{ after(grammarAccess.getSynchronizedPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1()); }
	rulePartName
{ after(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildPartAccess().getArtifactsParserRuleCall_0()); }
	ruleArtifacts
{ after(grammarAccess.getBuildPartAccess().getArtifactsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBuildPartAccess().getGroupParserRuleCall_1()); }
	ruleGroup
{ after(grammarAccess.getBuildPartAccess().getGroupParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBuildPartAccess().getActionParserRuleCall_2()); }
	ruleAction
{ after(grammarAccess.getBuildPartAccess().getActionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_0()); }
(rule__PathGroup__Group_1_0__0)
{ after(grammarAccess.getPathGroupAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_1()); }
(rule__PathGroup__Group_1_1__0)
{ after(grammarAccess.getPathGroupAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_0_1_0()); }
(rule__PathGroup__Group_1_0_1_0__0)*
{ after(grammarAccess.getPathGroupAccess().getGroup_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_0_1_1()); }
(rule__PathGroup__Group_1_0_1_1__0)
{ after(grammarAccess.getPathGroupAccess().getGroup_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__Alternatives_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_1_2_0()); }
(rule__PathGroup__Group_1_1_2_0__0)
{ after(grammarAccess.getPathGroupAccess().getGroup_1_1_2_0()); }
)

    |(
{ before(grammarAccess.getPathGroupAccess().getSetPropertiesAssignment_1_1_2_1()); }
(rule__PathGroup__SetPropertiesAssignment_1_1_2_1)
{ after(grammarAccess.getPathGroupAccess().getSetPropertiesAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExpressionAccess().getPathParserRuleCall_0()); }
	rulePath
{ after(grammarAccess.getPathExpressionAccess().getPathParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathExpressionAccess().getExprStatementParserRuleCall_1()); }
	ruleExprStatement
{ after(grammarAccess.getPathExpressionAccess().getExprStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathAccess().getGroup_1()); }
(rule__Path__Group_1__0)
{ after(grammarAccess.getPathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_2_0()); }
(rule__Closure__Group_2_0__0)
{ after(grammarAccess.getClosureAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getClosureAccess().getGroup_2_1()); }
(rule__Closure__Group_2_1__0)
{ after(grammarAccess.getClosureAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Alternatives_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_2_0_2_0()); }
(rule__Closure__Group_2_0_2_0__0)
{ after(grammarAccess.getClosureAccess().getGroup_2_0_2_0()); }
)

    |(
{ before(grammarAccess.getClosureAccess().getSetPropertiesAssignment_2_0_2_1()); }
(rule__Closure__SetPropertiesAssignment_2_0_2_1)
{ after(grammarAccess.getClosureAccess().getSetPropertiesAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrerequisiteEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0()); }
	rulePartInSelf
{ after(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1()); }
	ruleCapabilityReferencedPart
{ after(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2()); }
	ruleCompoundReferences
{ after(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrerequisiteEntryAccess().getExprStatementParserRuleCall_3()); }
	ruleExprStatement
{ after(grammarAccess.getPrerequisiteEntryAccess().getExprStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0()); }
(rule__CapabilityReferencedPart__Group_0__0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1()); }
(rule__CapabilityReferencedPart__Group_1__0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryConfiguration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getLocationAssignment_0_0()); }
(rule__RepositoryConfiguration__LocationAssignment_0_0)
{ after(grammarAccess.getRepositoryConfigurationAccess().getLocationAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getRepositoryConfigurationAccess().getGroup_0_1()); }
(rule__RepositoryConfiguration__Group_0_1__0)
{ after(grammarAccess.getRepositoryConfigurationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getGroup_1_0()); }
(rule__AdviceStatement__Group_1_0__0)
{ after(grammarAccess.getAdviceStatementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAdviceStatementAccess().getAdviceAssignment_1_1()); }
(rule__AdviceStatement__AdviceAssignment_1_1)
{ after(grammarAccess.getAdviceStatementAccess().getAdviceAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePathElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getGroup_0()); }
(rule__AdvicePathElement__Group_0__0)
{ after(grammarAccess.getAdvicePathElementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeAssignment_1()); }
(rule__AdvicePathElement__NodeAssignment_1)
{ after(grammarAccess.getAdvicePathElementAccess().getNodeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePathElement__NodeAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeQualifiedNameParserRuleCall_0_0_0_0()); }
	ruleQualifiedName
{ after(grammarAccess.getAdvicePathElementAccess().getNodeQualifiedNameParserRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeWildcardNodeParserRuleCall_0_0_0_1()); }
	ruleWildcardNode
{ after(grammarAccess.getAdvicePathElementAccess().getNodeWildcardNodeParserRuleCall_0_0_0_1()); }
)

    |(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeFullStopKeyword_0_0_0_2()); }

	'.' 

{ after(grammarAccess.getAdvicePathElementAccess().getNodeFullStopKeyword_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_0()); }
	ruleSwitchStatement
{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_1()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_2()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_3()); }
	ruleCompoundStatement
{ after(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_4()); }
(rule__Statement__Group_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5()); }
	ruleBreakStatement
{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_6()); }
	ruleContinueStatement
{ after(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_7()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVarExpressionAccess().getGroup_1()); }
(rule__VarExpression__Group_1__0)
{ after(grammarAccess.getVarExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpPlusSignEqualsSignKeyword_1_1_0_1()); }

	'+=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpPlusSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpHyphenMinusEqualsSignKeyword_1_1_0_2()); }

	'-=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpHyphenMinusEqualsSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpAsteriskEqualsSignKeyword_1_1_0_3()); }

	'*=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpAsteriskEqualsSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpSolidusEqualsSignKeyword_1_1_0_4()); }

	'/=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpSolidusEqualsSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpPercentSignEqualsSignKeyword_1_1_0_5()); }

	'%=' 

{ after(grammarAccess.getAssignmentExpressionAccess().getOpPercentSignEqualsSignKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorTildeEqualsSignKeyword_1_1_0_0()); }

	'~=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorTildeEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_1()); }

	'==' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_2()); }

	'!=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }

	'>=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4()); }

	'<=' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_5()); }

	'>' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_5()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_6()); }

	'<' 

{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__NameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__NameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrInfixExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1()); }
	rulePostopExpression
{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_0_0_2()); }

	'++' 

{ after(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_0_0_3()); }

	'--' 

{ after(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostopExpression__NameAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); }

	'--' 

{ after(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1()); }

	'++' 

{ after(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
(rule__InfixExpression__Group_1_0__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
(rule__InfixExpression__Group_1_1__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
(rule__InfixExpression__Group_1_2__0)
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
	ruleFeatureCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2()); }
	ruleVariableValue
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3()); }
	rulePropertyValue
{ after(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_4()); }
	ruleParanthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_0_0_1()); }
	RULE_PID
{ after(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); }
	ruleValueLiteral
{ after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1()); }
	ruleRegexpLiteral
{ after(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
	ruleIntegerLiteral
{ after(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2()); }
	ruleNullLiteral
{ after(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_4()); }
	ruleRealLiteral
{ after(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValAssignment_0()); }
(rule__IntegerLiteral__ValAssignment_0)
{ after(grammarAccess.getIntegerLiteralAccess().getValAssignment_0()); }
)

    |(
{ before(grammarAccess.getIntegerLiteralAccess().getHEXTerminalRuleCall_1()); }
	RULE_HEX
{ after(grammarAccess.getIntegerLiteralAccess().getHEXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0()); }
(	'parallel' 
)
{ after(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1()); }
(	'sequential' 
)
{ after(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BeeModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getImportsAssignment_0()); }
(rule__BeeModel__ImportsAssignment_0)*
{ after(grammarAccess.getBeeModelAccess().getImportsAssignment_0()); }
)

	rule__BeeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BeeModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getBodyAssignment_1()); }
(rule__BeeModel__BodyAssignment_1)
{ after(grammarAccess.getBeeModelAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_1()); }
(rule__QualifiedName__Alternatives_1)*
{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_1()); }
)

	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
(rule__QualifiedName__Group_2__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
)

	rule__QualifiedName__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3()); }
	ruleHIDDENBUG
{ after(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }
)

	rule__QualifiedName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1()); }
)

	rule__QualifiedName__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_2_2()); }
(rule__QualifiedName__Alternatives_2_2)*
{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__CompoundName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0()); }
)

	rule__CompoundName__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1()); }
)

	rule__CompoundName__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2()); }
	ruleEscapedQualifiedName
{ after(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AlfanumSym__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getAlternatives_0()); }
(rule__AlfanumSym__Alternatives_0)
{ after(grammarAccess.getAlfanumSymAccess().getAlternatives_0()); }
)

	rule__AlfanumSym__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AlfanumSym__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlfanumSymAccess().getAlternatives_1()); }
(rule__AlfanumSym__Alternatives_1)*
{ after(grammarAccess.getAlfanumSymAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VersionRange__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getAlternatives_0_0()); }
(rule__VersionRange__Alternatives_0_0)
{ after(grammarAccess.getVersionRangeAccess().getAlternatives_0_0()); }
)

	rule__VersionRange__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRange__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_1()); }
	ruleVersion
{ after(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_1()); }
)

	rule__VersionRange__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRange__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getGroup_0_2()); }
(rule__VersionRange__Group_0_2__0)?
{ after(grammarAccess.getVersionRangeAccess().getGroup_0_2()); }
)

	rule__VersionRange__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRange__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getAlternatives_0_3()); }
(rule__VersionRange__Alternatives_0_3)
{ after(grammarAccess.getVersionRangeAccess().getAlternatives_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VersionRange__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0()); }
)

	rule__VersionRange__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionRange__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_2_1()); }
	ruleVersion
{ after(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportClassAssignment_1()); }
(rule__Import__ImportClassAssignment_1)
{ after(grammarAccess.getImportAccess().getImportClassAssignment_1()); }
)

	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2()); }
(
	'.*' 
)?
{ after(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2()); }
)

	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getExecutionModeAssignment_0()); }
(rule__Unit__ExecutionModeAssignment_0)?
{ after(grammarAccess.getUnitAccess().getExecutionModeAssignment_0()); }
)

	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getUnitKeyword_1()); }

	'unit' 

{ after(grammarAccess.getUnitAccess().getUnitKeyword_1()); }
)

	rule__Unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getNameAssignment_2()); }
(rule__Unit__NameAssignment_2)?
{ after(grammarAccess.getUnitAccess().getNameAssignment_2()); }
)

	rule__Unit__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_3()); }
(rule__Unit__Group_3__0)?
{ after(grammarAccess.getUnitAccess().getGroup_3()); }
)

	rule__Unit__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_4()); }
(rule__Unit__Group_4__0)?
{ after(grammarAccess.getUnitAccess().getGroup_4()); }
)

	rule__Unit__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5()); }
)

	rule__Unit__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_6()); }
(rule__Unit__Group_6__0)*
{ after(grammarAccess.getUnitAccess().getGroup_6()); }
)

	rule__Unit__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAlternatives_7()); }
(rule__Unit__Alternatives_7)*
{ after(grammarAccess.getUnitAccess().getAlternatives_7()); }
)

	rule__Unit__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Unit__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionKeyword_3_0()); }

	'version' 

{ after(grammarAccess.getUnitAccess().getVersionKeyword_3_0()); }
)

	rule__Unit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionAssignment_3_1()); }
(rule__Unit__VersionAssignment_3_1)
{ after(grammarAccess.getUnitAccess().getVersionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsKeyword_4_0()); }

	'implements' 

{ after(grammarAccess.getUnitAccess().getImplementsKeyword_4_0()); }
)

	rule__Unit__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsAssignment_4_1()); }
(rule__Unit__ImplementsAssignment_4_1)
{ after(grammarAccess.getUnitAccess().getImplementsAssignment_4_1()); }
)

	rule__Unit__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getGroup_4_2()); }
(rule__Unit__Group_4_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0()); }
)

	rule__Unit__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsAssignment_4_2_1()); }
(rule__Unit__ImplementsAssignment_4_2_1)
{ after(grammarAccess.getUnitAccess().getImplementsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0()); }

	'properties' 

{ after(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0()); }
)

	rule__Unit__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertyStatementsAssignment_6_1()); }
(rule__Unit__PropertyStatementsAssignment_6_1)
{ after(grammarAccess.getUnitAccess().getPropertyStatementsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0()); }

	'provides' 

{ after(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0()); }
)

	rule__Unit__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1()); }
)

	rule__Unit__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_7_0_2()); }
(rule__Unit__Group_7_0_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_0_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_7_0_2()); }
(rule__Unit__Group_7_0_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_7_0_2()); }
)
)

	rule__Unit__Group_7_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_7_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilityAssignment_7_0_2_0()); }
(rule__Unit__ProvidedCapabilityAssignment_7_0_2_0)
{ after(grammarAccess.getUnitAccess().getProvidedCapabilityAssignment_7_0_2_0()); }
)

	rule__Unit__Group_7_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0()); }

	'provides' 

{ after(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0()); }
)

	rule__Unit__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilityAssignment_7_1_1()); }
(rule__Unit__ProvidedCapabilityAssignment_7_1_1)
{ after(grammarAccess.getUnitAccess().getProvidedCapabilityAssignment_7_1_1()); }
)

	rule__Unit__Group_7_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0()); }
)

	rule__Unit__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1()); }
)

	rule__Unit__Group_7_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_7_2_2()); }
(rule__Unit__Group_7_2_2__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_2_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_7_2_2()); }
(rule__Unit__Group_7_2_2__0)*
{ after(grammarAccess.getUnitAccess().getGroup_7_2_2()); }
)
)

	rule__Unit__Group_7_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_7_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_2_2_0()); }
(rule__Unit__RequiredCapabilitiesAssignment_7_2_2_0)
{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_2_2_0()); }
)

	rule__Unit__Group_7_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); }
)

	rule__Unit__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_1()); }
(rule__Unit__RequiredCapabilitiesAssignment_7_3_1)
{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_1()); }
)

	rule__Unit__Group_7_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unit__Group_7_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0()); }

	'meta' 

{ after(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0()); }
)

	rule__Unit__Group_7_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1()); }
)

	rule__Unit__Group_7_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2()); }
)

	rule__Unit__Group_7_4__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getGroup_7_4_3()); }
(rule__Unit__Group_7_4_3__0)
{ after(grammarAccess.getUnitAccess().getGroup_7_4_3()); }
)
(
{ before(grammarAccess.getUnitAccess().getGroup_7_4_3()); }
(rule__Unit__Group_7_4_3__0)*
{ after(grammarAccess.getUnitAccess().getGroup_7_4_3()); }
)
)

	rule__Unit__Group_7_4__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Unit__Group_7_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3_0()); }
(rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_0)
{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3_0()); }
)

	rule__Unit__Group_7_4_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0()); }

	'meta' 

{ after(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0()); }
)

	rule__Unit__Group_7_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1()); }

	'requires' 

{ after(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1()); }
)

	rule__Unit__Group_7_5__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_5_2()); }
(rule__Unit__MetaRequiredCapabilitiesAssignment_7_5_2)
{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_5_2()); }
)

	rule__Unit__Group_7_5__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3()); }

	';' 

{ after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_7_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0()); }

	'advice' 

{ after(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0()); }
)

	rule__Unit__Group_7_6__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAdviceAssignment_7_6_1()); }
(rule__Unit__AdviceAssignment_7_6_1)
{ after(grammarAccess.getUnitAccess().getAdviceAssignment_7_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0()); }

	'sequential' 

{ after(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0()); }
)

	rule__Unit__Group_7_7__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1()); }
)

	rule__Unit__Group_7_7__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_7_2()); }
(rule__Unit__SynchronizeAssignment_7_7_2)
{ after(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_7_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_7_2()); }
(rule__Unit__SynchronizeAssignment_7_7_2)*
{ after(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_7_2()); }
)
)

	rule__Unit__Group_7_7__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unit__Group_7_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0()); }

	'sequential' 

{ after(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0()); }
)

	rule__Unit__Group_7_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_8_1()); }
(rule__Unit__SynchronizeAssignment_7_8_1)
{ after(grammarAccess.getUnitAccess().getSynchronizeAssignment_7_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unit__Group_7_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0()); }

	'repositories' 

{ after(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0()); }
)

	rule__Unit__Group_7_10__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1()); }

	'{' 

{ after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1()); }
)

	rule__Unit__Group_7_10__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoryConfigAssignment_7_10_2()); }
(rule__Unit__RepositoryConfigAssignment_7_10_2)*
{ after(grammarAccess.getUnitAccess().getRepositoryConfigAssignment_7_10_2()); }
)

	rule__Unit__Group_7_10__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_7_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3()); }

	'}' 

{ after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProvidedCapability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getGroup_0()); }
(rule__ProvidedCapability__Group_0__0)?
{ after(grammarAccess.getProvidedCapabilityAccess().getGroup_0()); }
)

	rule__ProvidedCapability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getInterfaceAssignment_1()); }
(rule__ProvidedCapability__InterfaceAssignment_1)
{ after(grammarAccess.getProvidedCapabilityAccess().getInterfaceAssignment_1()); }
)

	rule__ProvidedCapability__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2()); }
)

	rule__ProvidedCapability__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_3()); }
(rule__ProvidedCapability__NameAssignment_3)
{ after(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_3()); }
)

	rule__ProvidedCapability__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getGroup_4()); }
(rule__ProvidedCapability__Group_4__0)?
{ after(grammarAccess.getProvidedCapabilityAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProvidedCapability__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0()); }
)

	rule__ProvidedCapability__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getFilterAssignment_0_1()); }
(rule__ProvidedCapability__FilterAssignment_0_1)
{ after(grammarAccess.getProvidedCapabilityAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProvidedCapability__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0()); }
)

	rule__ProvidedCapability__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedCapability__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_4_1()); }
(rule__ProvidedCapability__VersionAssignment_4_1)
{ after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredCapability__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getGroup_0()); }
(rule__RequiredCapability__Group_0__0)?
{ after(grammarAccess.getRequiredCapabilityAccess().getGroup_0()); }
)

	rule__RequiredCapability__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getInterfaceAssignment_1()); }
(rule__RequiredCapability__InterfaceAssignment_1)
{ after(grammarAccess.getRequiredCapabilityAccess().getInterfaceAssignment_1()); }
)

	rule__RequiredCapability__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2()); }
)

	rule__RequiredCapability__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_3()); }
(rule__RequiredCapability__NameAssignment_3)
{ after(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_3()); }
)

	rule__RequiredCapability__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getGroup_4()); }
(rule__RequiredCapability__Group_4__0)?
{ after(grammarAccess.getRequiredCapabilityAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RequiredCapability__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0()); }
)

	rule__RequiredCapability__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getFilterAssignment_0_1()); }
(rule__RequiredCapability__FilterAssignment_0_1)
{ after(grammarAccess.getRequiredCapabilityAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredCapability__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0()); }
)

	rule__RequiredCapability__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredCapability__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_4_1()); }
(rule__RequiredCapability__RangeAssignment_4_1)
{ after(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedPropertyStatements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyStatementsAccess().getNameAssignment_0()); }
(rule__NamedPropertyStatements__NameAssignment_0)?
{ after(grammarAccess.getNamedPropertyStatementsAccess().getNameAssignment_0()); }
)

	rule__NamedPropertyStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertyStatements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyStatementsAccess().getStatementsAssignment_1()); }
(rule__NamedPropertyStatements__StatementsAssignment_1)
{ after(grammarAccess.getNamedPropertyStatementsAccess().getStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyStatements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getPropertyStatementsAccess().getLeftCurlyBracketKeyword_0()); }
)

	rule__PropertyStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getGroup_1()); }
(rule__PropertyStatements__Group_1__0)*
{ after(grammarAccess.getPropertyStatementsAccess().getGroup_1()); }
)

	rule__PropertyStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatements__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getPropertyStatementsAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyStatements__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getGroup_1_0()); }
(rule__PropertyStatements__Group_1_0__0)?
{ after(grammarAccess.getPropertyStatementsAccess().getGroup_1_0()); }
)

	rule__PropertyStatements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatements__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getAlternatives_1_1()); }
(rule__PropertyStatements__Alternatives_1_1)
{ after(grammarAccess.getPropertyStatementsAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyStatements__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getWhenKeyword_1_0_0()); }

	'when' 

{ after(grammarAccess.getPropertyStatementsAccess().getWhenKeyword_1_0_0()); }
)

	rule__PropertyStatements__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatements__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getFilterAssignment_1_0_1()); }
(rule__PropertyStatements__FilterAssignment_1_0_1)
{ after(grammarAccess.getPropertyStatementsAccess().getFilterAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getImmutableAssignment_0()); }
(rule__PropertyStatement__ImmutableAssignment_0)?
{ after(grammarAccess.getPropertyStatementAccess().getImmutableAssignment_0()); }
)

	rule__PropertyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getKeyAssignment_1()); }
(rule__PropertyStatement__KeyAssignment_1)
{ after(grammarAccess.getPropertyStatementAccess().getKeyAssignment_1()); }
)

	rule__PropertyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getOpAssignment_2()); }
(rule__PropertyStatement__OpAssignment_2)
{ after(grammarAccess.getPropertyStatementAccess().getOpAssignment_2()); }
)

	rule__PropertyStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getValueAssignment_3()); }
(rule__PropertyStatement__ValueAssignment_3)
{ after(grammarAccess.getPropertyStatementAccess().getValueAssignment_3()); }
)

	rule__PropertyStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPropertyStatementAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnsetPropertyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsetPropertyStatementAccess().getUnsetKeyword_0()); }

	'unset' 

{ after(grammarAccess.getUnsetPropertyStatementAccess().getUnsetKeyword_0()); }
)

	rule__UnsetPropertyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnsetPropertyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesAssignment_1()); }
(rule__UnsetPropertyStatement__UnsetPropertiesAssignment_1)
{ after(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesAssignment_1()); }
)

	rule__UnsetPropertyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnsetPropertyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsetPropertyStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getUnsetPropertyStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getGroup_0()); }
(rule__AnnotationStatement__Group_0__0)?
{ after(grammarAccess.getAnnotationStatementAccess().getGroup_0()); }
)

	rule__AnnotationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getImmutableAssignment_1()); }
(rule__AnnotationStatement__ImmutableAssignment_1)?
{ after(grammarAccess.getAnnotationStatementAccess().getImmutableAssignment_1()); }
)

	rule__AnnotationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getKeyAssignment_2()); }
(rule__AnnotationStatement__KeyAssignment_2)
{ after(grammarAccess.getAnnotationStatementAccess().getKeyAssignment_2()); }
)

	rule__AnnotationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getOpAssignment_3()); }
(rule__AnnotationStatement__OpAssignment_3)
{ after(grammarAccess.getAnnotationStatementAccess().getOpAssignment_3()); }
)

	rule__AnnotationStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getValueAssignment_4()); }
(rule__AnnotationStatement__ValueAssignment_4)
{ after(grammarAccess.getAnnotationStatementAccess().getValueAssignment_4()); }
)

	rule__AnnotationStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getAnnotationStatementAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AnnotationStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getAnnotationStatementAccess().getWhenKeyword_0_0()); }
)

	rule__AnnotationStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getFilterAssignment_0_1()); }
(rule__AnnotationStatement__FilterAssignment_0_1)
{ after(grammarAccess.getAnnotationStatementAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Synchronization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0()); }
(rule__Synchronization__PartrefsAssignment_0)
{ after(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0()); }
)

	rule__Synchronization__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSynchronizationAccess().getGroup_1()); }
(rule__Synchronization__Group_1__0)
{ after(grammarAccess.getSynchronizationAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getSynchronizationAccess().getGroup_1()); }
(rule__Synchronization__Group_1__0)*
{ after(grammarAccess.getSynchronizationAccess().getGroup_1()); }
)
)

	rule__Synchronization__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Synchronization__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0()); }
)

	rule__Synchronization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Synchronization__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1()); }
(rule__Synchronization__PartrefsAssignment_1_1)
{ after(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SynchronizedPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0()); }
	ruleCompoundName
{ after(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0()); }
)

	rule__SynchronizedPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getGroup_0_1()); }
(rule__SynchronizedPart__Group_0_1__0)?
{ after(grammarAccess.getSynchronizedPartAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SynchronizedPart__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0()); }

	'#' 

{ after(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0()); }
)

	rule__SynchronizedPart__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedPart__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1()); }
	rulePartName
{ after(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Artifacts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getVisibilityAssignment_0()); }
(rule__Artifacts__VisibilityAssignment_0)?
{ after(grammarAccess.getArtifactsAccess().getVisibilityAssignment_0()); }
)

	rule__Artifacts__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getArtifactsKeyword_1()); }

	'artifacts' 

{ after(grammarAccess.getArtifactsAccess().getArtifactsKeyword_1()); }
)

	rule__Artifacts__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getNameAssignment_2()); }
(rule__Artifacts__NameAssignment_2)
{ after(grammarAccess.getArtifactsAccess().getNameAssignment_2()); }
)

	rule__Artifacts__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getGroup_3()); }
(rule__Artifacts__Group_3__0)?
{ after(grammarAccess.getArtifactsAccess().getGroup_3()); }
)

	rule__Artifacts__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getAssertsAssignment_4()); }
(rule__Artifacts__AssertsAssignment_4)?
{ after(grammarAccess.getArtifactsAccess().getAssertsAssignment_4()); }
)

	rule__Artifacts__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getArtifactsAccess().getLeftCurlyBracketKeyword_5()); }
)

	rule__Artifacts__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getPathsAssignment_6()); }
(rule__Artifacts__PathsAssignment_6)*
{ after(grammarAccess.getArtifactsAccess().getPathsAssignment_6()); }
)

	rule__Artifacts__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getArtifactsAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Artifacts__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getProvidesKeyword_3_0()); }

	'provides' 

{ after(grammarAccess.getArtifactsAccess().getProvidesKeyword_3_0()); }
)

	rule__Artifacts__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesAssignment_3_1()); }
(rule__Artifacts__ProvidedCapabilitiesAssignment_3_1)
{ after(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesAssignment_3_1()); }
)

	rule__Artifacts__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getGroup_3_2()); }
(rule__Artifacts__Group_3_2__0)*
{ after(grammarAccess.getArtifactsAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Artifacts__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getArtifactsAccess().getCommaKeyword_3_2_0()); }
)

	rule__Artifacts__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Artifacts__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesAssignment_3_2_1()); }
(rule__Artifacts__ProvidedCapabilitiesAssignment_3_2_1)
{ after(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_0()); }
(rule__PathGroup__Group_0__0)?
{ after(grammarAccess.getPathGroupAccess().getGroup_0()); }
)

	rule__PathGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAlternatives_1()); }
(rule__PathGroup__Alternatives_1)
{ after(grammarAccess.getPathGroupAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getPathGroupAccess().getWhenKeyword_0_0()); }
)

	rule__PathGroup__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getFilterAssignment_0_1()); }
(rule__PathGroup__FilterAssignment_0_1)
{ after(grammarAccess.getPathGroupAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_0()); }
(rule__PathGroup__PathsAssignment_1_0_0)
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_0()); }
)

	rule__PathGroup__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAlternatives_1_0_1()); }
(rule__PathGroup__Alternatives_1_0_1)
{ after(grammarAccess.getPathGroupAccess().getAlternatives_1_0_1()); }
)

	rule__PathGroup__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_0_2()); }

	';' 

{ after(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathGroup__Group_1_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_0_0()); }

	',' 

{ after(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_0_0()); }
)

	rule__PathGroup__Group_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_0_1()); }
(rule__PathGroup__PathsAssignment_1_0_1_0_1)
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group_1_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getFirstIsBaseAssignment_1_0_1_1_0()); }
(rule__PathGroup__FirstIsBaseAssignment_1_0_1_1_0)
{ after(grammarAccess.getPathGroupAccess().getFirstIsBaseAssignment_1_0_1_1_0()); }
)

	rule__PathGroup__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_1_1()); }
(rule__PathGroup__PathsAssignment_1_0_1_1_1)
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_1_1()); }
)

	rule__PathGroup__Group_1_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getGroup_1_0_1_1_2()); }
(rule__PathGroup__Group_1_0_1_1_2__0)*
{ after(grammarAccess.getPathGroupAccess().getGroup_1_0_1_1_2()); }
)

	rule__PathGroup__Group_1_0_1_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getRightSquareBracketKeyword_1_0_1_1_3()); }

	']' 

{ after(grammarAccess.getPathGroupAccess().getRightSquareBracketKeyword_1_0_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PathGroup__Group_1_0_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_1_2_0()); }

	',' 

{ after(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_1_2_0()); }
)

	rule__PathGroup__Group_1_0_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_0_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_1_2_1()); }
(rule__PathGroup__PathsAssignment_1_0_1_1_2_1)
{ after(grammarAccess.getPathGroupAccess().getPathsAssignment_1_0_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathGroup__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_1_0()); }

	'annotations' 

{ after(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_1_0()); }
)

	rule__PathGroup__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getLeftCurlyBracketKeyword_1_1_1()); }

	'{' 

{ after(grammarAccess.getPathGroupAccess().getLeftCurlyBracketKeyword_1_1_1()); }
)

	rule__PathGroup__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPathGroupAccess().getAlternatives_1_1_2()); }
(rule__PathGroup__Alternatives_1_1_2)
{ after(grammarAccess.getPathGroupAccess().getAlternatives_1_1_2()); }
)
(
{ before(grammarAccess.getPathGroupAccess().getAlternatives_1_1_2()); }
(rule__PathGroup__Alternatives_1_1_2)*
{ after(grammarAccess.getPathGroupAccess().getAlternatives_1_1_2()); }
)
)

	rule__PathGroup__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getRightCurlyBracketKeyword_1_1_3()); }

	'}' 

{ after(grammarAccess.getPathGroupAccess().getRightCurlyBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PathGroup__Group_1_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getUnsetKeyword_1_1_2_0_0()); }

	'unset' 

{ after(grammarAccess.getPathGroupAccess().getUnsetKeyword_1_1_2_0_0()); }
)

	rule__PathGroup__Group_1_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getUnsetPropertiesAssignment_1_1_2_0_1()); }
(rule__PathGroup__UnsetPropertiesAssignment_1_1_2_0_1)
{ after(grammarAccess.getPathGroupAccess().getUnsetPropertiesAssignment_1_1_2_0_1()); }
)

	rule__PathGroup__Group_1_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PathGroup__Group_1_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_1_2_0_2()); }

	';' 

{ after(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStatementAccess().getExprKeyword_0()); }

	'expr' 

{ after(grammarAccess.getExprStatementAccess().getExprKeyword_0()); }
)

	rule__ExprStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExprStatementAccess().getLeftParenthesisKeyword_1()); }
)

	rule__ExprStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStatementAccess().getExpressionAssignment_2()); }
(rule__ExprStatement__ExpressionAssignment_2)
{ after(grammarAccess.getExprStatementAccess().getExpressionAssignment_2()); }
)

	rule__ExprStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getExprStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Path__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
(
	'/' 
)?
{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
)

	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1()); }
	ruleQualifiedName
{ after(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1()); }
)

	rule__Path__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getGroup_1_2()); }
(rule__Path__Group_1_2__0)*
{ after(grammarAccess.getPathAccess().getGroup_1_2()); }
)

	rule__Path__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); }
(
	'/' 
)?
{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Path__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); }

	'/' 

{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); }
)

	rule__Path__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1()); }
	ruleQualifiedName
{ after(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getVisibilityAssignment_0()); }
(rule__Group__VisibilityAssignment_0)?
{ after(grammarAccess.getGroupAccess().getVisibilityAssignment_0()); }
)

	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getExecutionModeAssignment_1()); }
(rule__Group__ExecutionModeAssignment_1)?
{ after(grammarAccess.getGroupAccess().getExecutionModeAssignment_1()); }
)

	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupKeyword_2()); }

	'group' 

{ after(grammarAccess.getGroupAccess().getGroupKeyword_2()); }
)

	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameAssignment_3()); }
(rule__Group__NameAssignment_3)
{ after(grammarAccess.getGroupAccess().getNameAssignment_3()); }
)

	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroup_4()); }
(rule__Group__Group_4__0)?
{ after(grammarAccess.getGroupAccess().getGroup_4()); }
)

	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getAssertsAssignment_5()); }
(rule__Group__AssertsAssignment_5)?
{ after(grammarAccess.getGroupAccess().getAssertsAssignment_5()); }
)

	rule__Group__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getAssertsAssignment_6()); }
(rule__Group__AssertsAssignment_6)?
{ after(grammarAccess.getGroupAccess().getAssertsAssignment_6()); }
)

	rule__Group__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_7()); }
)

	rule__Group__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getPrerequisitesAssignment_8()); }
(rule__Group__PrerequisitesAssignment_8)*
{ after(grammarAccess.getGroupAccess().getPrerequisitesAssignment_8()); }
)

	rule__Group__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Group__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getProvidesKeyword_4_0()); }

	'provides' 

{ after(grammarAccess.getGroupAccess().getProvidesKeyword_4_0()); }
)

	rule__Group__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getProvidedCapabilitiesAssignment_4_1()); }
(rule__Group__ProvidedCapabilitiesAssignment_4_1)
{ after(grammarAccess.getGroupAccess().getProvidedCapabilitiesAssignment_4_1()); }
)

	rule__Group__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroup_4_2()); }
(rule__Group__Group_4_2__0)*
{ after(grammarAccess.getGroupAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Group__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getGroupAccess().getCommaKeyword_4_2_0()); }
)

	rule__Group__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getProvidedCapabilitiesAssignment_4_2_1()); }
(rule__Group__ProvidedCapabilitiesAssignment_4_2_1)
{ after(grammarAccess.getGroupAccess().getProvidedCapabilitiesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_0()); }
(rule__Prerequisite__Group_0__0)
{ after(grammarAccess.getPrerequisiteAccess().getGroup_0()); }
)

	rule__Prerequisite__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getSurpressedAssignment_0_0()); }
(rule__Prerequisite__SurpressedAssignment_0_0)?
{ after(grammarAccess.getPrerequisiteAccess().getSurpressedAssignment_0_0()); }
)

	rule__Prerequisite__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_0_1()); }
(rule__Prerequisite__Group_0_1__0)?
{ after(grammarAccess.getPrerequisiteAccess().getGroup_0_1()); }
)

	rule__Prerequisite__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_0_2()); }
(rule__Prerequisite__Group_0_2__0)?
{ after(grammarAccess.getPrerequisiteAccess().getGroup_0_2()); }
)

	rule__Prerequisite__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getGroup_0_3()); }
(rule__Prerequisite__Group_0_3__0)
{ after(grammarAccess.getPrerequisiteAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Prerequisite__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_1_0()); }

	'when' 

{ after(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_1_0()); }
)

	rule__Prerequisite__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1_1()); }
(rule__Prerequisite__FilterAssignment_0_1_1)
{ after(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getAliasAssignment_0_2_0()); }
(rule__Prerequisite__AliasAssignment_0_2_0)
{ after(grammarAccess.getPrerequisiteAccess().getAliasAssignment_0_2_0()); }
)

	rule__Prerequisite__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_2_1()); }

	'=' 

{ after(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Prerequisite__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_0_3_0()); }
(rule__Prerequisite__PartReferenceAssignment_0_3_0)
{ after(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_0_3_0()); }
)

	rule__Prerequisite__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Prerequisite__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getClosureAssignment_0_3_1()); }
(rule__Prerequisite__ClosureAssignment_0_3_1)?
{ after(grammarAccess.getPrerequisiteAccess().getClosureAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Closure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getWithKeyword_0()); }

	'with' 

{ after(grammarAccess.getClosureAccess().getWithKeyword_0()); }
)

	rule__Closure__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__Closure__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getAlternatives_2()); }
(rule__Closure__Alternatives_2)*
{ after(grammarAccess.getClosureAccess().getAlternatives_2()); }
)

	rule__Closure__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Closure__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0_0()); }

	'properties' 

{ after(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0_0()); }
)

	rule__Closure__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_2_0_1()); }

	'{' 

{ after(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_2_0_1()); }
)

	rule__Closure__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getClosureAccess().getAlternatives_2_0_2()); }
(rule__Closure__Alternatives_2_0_2)
{ after(grammarAccess.getClosureAccess().getAlternatives_2_0_2()); }
)
(
{ before(grammarAccess.getClosureAccess().getAlternatives_2_0_2()); }
(rule__Closure__Alternatives_2_0_2)*
{ after(grammarAccess.getClosureAccess().getAlternatives_2_0_2()); }
)
)

	rule__Closure__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_2_0_3()); }

	'}' 

{ after(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Closure__Group_2_0_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getUnsetKeyword_2_0_2_0_0()); }

	'unset' 

{ after(grammarAccess.getClosureAccess().getUnsetKeyword_2_0_2_0_0()); }
)

	rule__Closure__Group_2_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_0_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getUnsetPropertiesAssignment_2_0_2_0_1()); }
(rule__Closure__UnsetPropertiesAssignment_2_0_2_0_1)
{ after(grammarAccess.getClosureAccess().getUnsetPropertiesAssignment_2_0_2_0_1()); }
)

	rule__Closure__Group_2_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_0_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getSemicolonKeyword_2_0_2_0_2()); }

	';' 

{ after(grammarAccess.getClosureAccess().getSemicolonKeyword_2_0_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Closure__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getAdviceKeyword_2_1_0()); }

	'advice' 

{ after(grammarAccess.getClosureAccess().getAdviceKeyword_2_1_0()); }
)

	rule__Closure__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getAdviceAssignment_2_1_1()); }
(rule__Closure__AdviceAssignment_2_1_1)
{ after(grammarAccess.getClosureAccess().getAdviceAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CapabilityReferencedPart__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_0_0()); }
(rule__CapabilityReferencedPart__InterfaceAssignment_0_0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_0_0()); }
)

	rule__CapabilityReferencedPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1()); }

	'/' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1()); }
)

	rule__CapabilityReferencedPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_0_2()); }
(rule__CapabilityReferencedPart__NameAssignment_0_2)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_0_2()); }
)

	rule__CapabilityReferencedPart__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0_3()); }
(rule__CapabilityReferencedPart__Group_0_3__0)?
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0_3()); }
)

	rule__CapabilityReferencedPart__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4()); }

	'#' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4()); }
)

	rule__CapabilityReferencedPart__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_0_5()); }
(rule__CapabilityReferencedPart__PartNameAssignment_0_5)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CapabilityReferencedPart__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0()); }

	'/' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0()); }
)

	rule__CapabilityReferencedPart__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_0_3_1()); }
(rule__CapabilityReferencedPart__RangeAssignment_0_3_1)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CapabilityReferencedPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_1_0()); }
(rule__CapabilityReferencedPart__InterfaceAssignment_1_0)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_1_0()); }
)

	rule__CapabilityReferencedPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1()); }
)

	rule__CapabilityReferencedPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_1_2()); }
(rule__CapabilityReferencedPart__NameAssignment_1_2)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_1_2()); }
)

	rule__CapabilityReferencedPart__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1_3()); }
(rule__CapabilityReferencedPart__Group_1_3__0)?
{ after(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CapabilityReferencedPart__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0()); }

	'/' 

{ after(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0()); }
)

	rule__CapabilityReferencedPart__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CapabilityReferencedPart__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_3_1()); }
(rule__CapabilityReferencedPart__RangeAssignment_1_3_1)
{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundReferences__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0()); }
)

	rule__CompoundReferences__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundReferences__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_1()); }
(rule__CompoundReferences__PrerequisitesAssignment_1)*
{ after(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_1()); }
)

	rule__CompoundReferences__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundReferences__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getVisibilityAssignment_0()); }
(rule__Action__VisibilityAssignment_0)?
{ after(grammarAccess.getActionAccess().getVisibilityAssignment_0()); }
)

	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getExecutionModeAssignment_1()); }
(rule__Action__ExecutionModeAssignment_1)?
{ after(grammarAccess.getActionAccess().getExecutionModeAssignment_1()); }
)

	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionKeyword_2()); }

	'action' 

{ after(grammarAccess.getActionAccess().getActionKeyword_2()); }
)

	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPartNameParserRuleCall_3()); }
	rulePartName
{ after(grammarAccess.getActionAccess().getPartNameParserRuleCall_3()); }
)

	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_4()); }
(rule__Action__Group_4__0)?
{ after(grammarAccess.getActionAccess().getGroup_4()); }
)

	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAssertsAssignment_5()); }
(rule__Action__AssertsAssignment_5)?
{ after(grammarAccess.getActionAccess().getAssertsAssignment_5()); }
)

	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAssertsAssignment_6()); }
(rule__Action__AssertsAssignment_6)?
{ after(grammarAccess.getActionAccess().getAssertsAssignment_6()); }
)

	rule__Action__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_7()); }
)

	rule__Action__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_8()); }
(rule__Action__Group_8__0)?
{ after(grammarAccess.getActionAccess().getGroup_8()); }
)

	rule__Action__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAdviceAssignment_9()); }
(rule__Action__AdviceAssignment_9)?
{ after(grammarAccess.getActionAccess().getAdviceAssignment_9()); }
)

	rule__Action__Group__10
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getResultGroupAssignment_10()); }
(rule__Action__ResultGroupAssignment_10)?
{ after(grammarAccess.getActionAccess().getResultGroupAssignment_10()); }
)

	rule__Action__Group__11
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLayoutAssignment_11()); }
(rule__Action__LayoutAssignment_11)*
{ after(grammarAccess.getActionAccess().getLayoutAssignment_11()); }
)

	rule__Action__Group__12
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getStatementsAssignment_12()); }
(rule__Action__StatementsAssignment_12)
{ after(grammarAccess.getActionAccess().getStatementsAssignment_12()); }
)

	rule__Action__Group__13
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_13()); }

	'}' 

{ after(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}






























rule__Action__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getProvidesKeyword_4_0()); }

	'provides' 

{ after(grammarAccess.getActionAccess().getProvidesKeyword_4_0()); }
)

	rule__Action__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getProvidedCapabilitiesAssignment_4_1()); }
(rule__Action__ProvidedCapabilitiesAssignment_4_1)
{ after(grammarAccess.getActionAccess().getProvidedCapabilitiesAssignment_4_1()); }
)

	rule__Action__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_4_2()); }
(rule__Action__Group_4_2__0)*
{ after(grammarAccess.getActionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getActionAccess().getCommaKeyword_4_2_0()); }
)

	rule__Action__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getProvidedCapabilitiesAssignment_4_2_1()); }
(rule__Action__ProvidedCapabilitiesAssignment_4_2_1)
{ after(grammarAccess.getActionAccess().getProvidedCapabilitiesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPropertiesKeyword_8_0()); }

	'properties' 

{ after(grammarAccess.getActionAccess().getPropertiesKeyword_8_0()); }
)

	rule__Action__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPropertiesAssignment_8_1()); }
(rule__Action__PropertiesAssignment_8_1)
{ after(grammarAccess.getActionAccess().getPropertiesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Layout__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getGroup_0()); }
(rule__Layout__Group_0__0)?
{ after(grammarAccess.getLayoutAccess().getGroup_0()); }
)

	rule__Layout__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getLayoutKeyword_1()); }

	'layout' 

{ after(grammarAccess.getLayoutAccess().getLayoutKeyword_1()); }
)

	rule__Layout__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getNameAssignment_2()); }
(rule__Layout__NameAssignment_2)?
{ after(grammarAccess.getLayoutAccess().getNameAssignment_2()); }
)

	rule__Layout__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getAssertsAssignment_3()); }
(rule__Layout__AssertsAssignment_3)?
{ after(grammarAccess.getLayoutAccess().getAssertsAssignment_3()); }
)

	rule__Layout__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__Layout__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getPathsAssignment_5()); }
(rule__Layout__PathsAssignment_5)*
{ after(grammarAccess.getLayoutAccess().getPathsAssignment_5()); }
)

	rule__Layout__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Layout__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getWhenKeyword_0_0()); }

	'when' 

{ after(grammarAccess.getLayoutAccess().getWhenKeyword_0_0()); }
)

	rule__Layout__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getFilterAssignment_0_1()); }
(rule__Layout__FilterAssignment_0_1)
{ after(grammarAccess.getLayoutAccess().getFilterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActionInputGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getActionInputGroupAccess().getGroupKeyword_0()); }
)

	rule__ActionInputGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInputGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getAssertsAssignment_1()); }
(rule__ActionInputGroup__AssertsAssignment_1)?
{ after(grammarAccess.getActionInputGroupAccess().getAssertsAssignment_1()); }
)

	rule__ActionInputGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInputGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getAssertsAssignment_2()); }
(rule__ActionInputGroup__AssertsAssignment_2)?
{ after(grammarAccess.getActionInputGroupAccess().getAssertsAssignment_2()); }
)

	rule__ActionInputGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInputGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getActionInputGroupAccess().getLeftCurlyBracketKeyword_3()); }
)

	rule__ActionInputGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInputGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getPrerequisitesAssignment_4()); }
(rule__ActionInputGroup__PrerequisitesAssignment_4)*
{ after(grammarAccess.getActionInputGroupAccess().getPrerequisitesAssignment_4()); }
)

	rule__ActionInputGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionInputGroup__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getActionInputGroupAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RepositoryConfiguration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getAlternatives_0()); }
(rule__RepositoryConfiguration__Alternatives_0)
{ after(grammarAccess.getRepositoryConfigurationAccess().getAlternatives_0()); }
)

	rule__RepositoryConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryConfiguration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getAdviceAssignment_1()); }
(rule__RepositoryConfiguration__AdviceAssignment_1)?
{ after(grammarAccess.getRepositoryConfigurationAccess().getAdviceAssignment_1()); }
)

	rule__RepositoryConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryConfiguration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RepositoryConfiguration__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0()); }

	'resolver' 

{ after(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0()); }
)

	rule__RepositoryConfiguration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryConfiguration__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getResolverClassAssignment_0_1_1()); }
(rule__RepositoryConfiguration__ResolverClassAssignment_0_1_1)
{ after(grammarAccess.getRepositoryConfigurationAccess().getResolverClassAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedAdvice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedAdviceAccess().getNameAssignment_0()); }
(rule__NamedAdvice__NameAssignment_0)?
{ after(grammarAccess.getNamedAdviceAccess().getNameAssignment_0()); }
)

	rule__NamedAdvice__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAdvice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedAdviceAccess().getAdviceAssignment_1()); }
(rule__NamedAdvice__AdviceAssignment_1)
{ after(grammarAccess.getNamedAdviceAccess().getAdviceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getAdviceKeyword_0()); }

	'advice' 

{ after(grammarAccess.getAdviceAccess().getAdviceKeyword_0()); }
)

	rule__Advice__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1()); }
	ruleCompoundAdvice
{ after(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundAdvice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0()); }
)

	rule__CompoundAdvice__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundAdvice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getGroup_1()); }
(rule__CompoundAdvice__Group_1__0)*
{ after(grammarAccess.getCompoundAdviceAccess().getGroup_1()); }
)

	rule__CompoundAdvice__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundAdvice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompoundAdvice__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getAdviceAssignment_1_0()); }
(rule__CompoundAdvice__AdviceAssignment_1_0)
{ after(grammarAccess.getCompoundAdviceAccess().getAdviceAssignment_1_0()); }
)

	rule__CompoundAdvice__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundAdvice__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdviceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getPathAssignment_0()); }
(rule__AdviceStatement__PathAssignment_0)
{ after(grammarAccess.getAdviceStatementAccess().getPathAssignment_0()); }
)

	rule__AdviceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getAlternatives_1()); }
(rule__AdviceStatement__Alternatives_1)
{ after(grammarAccess.getAdviceStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdviceStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getEqualsSignKeyword_1_0_0()); }

	'=' 

{ after(grammarAccess.getAdviceStatementAccess().getEqualsSignKeyword_1_0_0()); }
)

	rule__AdviceStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getValueAssignment_1_0_1()); }
(rule__AdviceStatement__ValueAssignment_1_0_1)
{ after(grammarAccess.getAdviceStatementAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdvicePath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_0()); }
(rule__AdvicePath__PathElementsAssignment_0)?
{ after(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_0()); }
)

	rule__AdvicePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_1()); }
(rule__AdvicePath__PathElementsAssignment_1)
{ after(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_1()); }
)

	rule__AdvicePath__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePath__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getGroup_2()); }
(rule__AdvicePath__Group_2__0)*
{ after(grammarAccess.getAdvicePathAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdvicePath__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_2_0()); }
(rule__AdvicePath__PathElementsAssignment_2_0)
{ after(grammarAccess.getAdvicePathAccess().getPathElementsAssignment_2_0()); }
)

	rule__AdvicePath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePath__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementAssignment_2_1()); }
(rule__AdvicePath__PathElementAssignment_2_1)
{ after(grammarAccess.getAdvicePathAccess().getPathElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdvicePathChildren__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0()); }
(

)
{ after(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0()); }
)

	rule__AdvicePathChildren__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePathChildren__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathChildrenAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getAdvicePathChildrenAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdvicePathElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeAssignment_0_0()); }
(rule__AdvicePathElement__NodeAssignment_0_0)
{ after(grammarAccess.getAdvicePathElementAccess().getNodeAssignment_0_0()); }
)

	rule__AdvicePathElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePathElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getGroup_0_1()); }
(rule__AdvicePathElement__Group_0_1__0)?
{ after(grammarAccess.getAdvicePathElementAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdvicePathElement__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getLeftSquareBracketKeyword_0_1_0()); }

	'[' 

{ after(grammarAccess.getAdvicePathElementAccess().getLeftSquareBracketKeyword_0_1_0()); }
)

	rule__AdvicePathElement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePathElement__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getPredicateAssignment_0_1_1()); }
(rule__AdvicePathElement__PredicateAssignment_0_1_1)
{ after(grammarAccess.getAdvicePathElementAccess().getPredicateAssignment_0_1_1()); }
)

	rule__AdvicePathElement__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AdvicePathElement__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getRightSquareBracketKeyword_0_1_2()); }

	']' 

{ after(grammarAccess.getAdvicePathElementAccess().getRightSquareBracketKeyword_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WildcardNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_0()); }
)

	rule__WildcardNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Filter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0()); }
)

	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getPredicateAssignment_1()); }
(rule__Filter__PredicateAssignment_1)
{ after(grammarAccess.getFilterAccess().getPredicateAssignment_1()); }
)

	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreConditionAssert__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getScopeAssignment_0()); }
(rule__PreConditionAssert__ScopeAssignment_0)
{ after(grammarAccess.getPreConditionAssertAccess().getScopeAssignment_0()); }
)

	rule__PreConditionAssert__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PreConditionAssert__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPreConditionAssertAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__PreConditionAssert__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PreConditionAssert__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getAssertsAssignment_2()); }
(rule__PreConditionAssert__AssertsAssignment_2)*
{ after(grammarAccess.getPreConditionAssertAccess().getAssertsAssignment_2()); }
)

	rule__PreConditionAssert__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PreConditionAssert__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getPreConditionAssertAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PostConditionAssert__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getScopeAssignment_0()); }
(rule__PostConditionAssert__ScopeAssignment_0)
{ after(grammarAccess.getPostConditionAssertAccess().getScopeAssignment_0()); }
)

	rule__PostConditionAssert__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostConditionAssert__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPostConditionAssertAccess().getLeftCurlyBracketKeyword_1()); }
)

	rule__PostConditionAssert__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PostConditionAssert__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getAssertsAssignment_2()); }
(rule__PostConditionAssert__AssertsAssignment_2)*
{ after(grammarAccess.getPostConditionAssertAccess().getAssertsAssignment_2()); }
)

	rule__PostConditionAssert__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__PostConditionAssert__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getPostConditionAssertAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssertionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0()); }

	'assert' 

{ after(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0()); }
)

	rule__AssertionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1()); }
(rule__AssertionExpression__ExprAssignment_1)
{ after(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1()); }
)

	rule__AssertionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getGroup_2()); }
(rule__AssertionExpression__Group_2__0)?
{ after(grammarAccess.getAssertionExpressionAccess().getGroup_2()); }
)

	rule__AssertionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssertionExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0()); }
)

	rule__AssertionExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_2_1()); }
(rule__AssertionExpression__MessageAssignment_2_1)
{ after(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_4_0()); }
	ruleVarExpression
{ after(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_4_0()); }
)

	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BreakStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
(

)
{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
)

	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }
)

	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContinueStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0()); }
(

)
{ after(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0()); }
)

	rule__ContinueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueStatementAccess().getContinueKeyword_1()); }

	'continue' 

{ after(grammarAccess.getContinueStatementAccess().getContinueKeyword_1()); }
)

	rule__ContinueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompoundStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0()); }
)

	rule__CompoundStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_1()); }
(rule__CompoundStatement__StatementsAssignment_1)
{ after(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_1()); }
)

	rule__CompoundStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
(rule__WhileStatement__ConditionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)

	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
(rule__WhileStatement__BodyAssignment_4)
{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)

	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)

	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchExprAssignment_2()); }
(rule__SwitchStatement__SwitchExprAssignment_2)
{ after(grammarAccess.getSwitchStatementAccess().getSwitchExprAssignment_2()); }
)

	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)

	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCaseAssignment_5()); }
(rule__SwitchStatement__CaseAssignment_5)*
{ after(grammarAccess.getSwitchStatementAccess().getCaseAssignment_5()); }
)

	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup_6()); }
(rule__SwitchStatement__Group_6__0)?
{ after(grammarAccess.getSwitchStatementAccess().getGroup_6()); }
)

	rule__SwitchStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SwitchStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0()); }

	'default' 

{ after(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0()); }
)

	rule__SwitchStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1()); }
)

	rule__SwitchStatement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_6_2()); }
(rule__SwitchStatement__StatementsAssignment_6_2)
{ after(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCaseAccess().getCaseKeyword_0()); }
)

	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getConditionAssignment_1()); }
(rule__Case__ConditionAssignment_1)
{ after(grammarAccess.getCaseAccess().getConditionAssignment_1()); }
)

	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getCaseAccess().getColonKeyword_2()); }
)

	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsAssignment_3()); }
(rule__Case__StatementsAssignment_3)
{ after(grammarAccess.getCaseAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForStatementAction_0()); }
(

)
{ after(grammarAccess.getForStatementAccess().getForStatementAction_0()); }
)

	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_1()); }
)

	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2()); }
)

	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInitAssignment_3()); }
(rule__ForStatement__InitAssignment_3)?
{ after(grammarAccess.getForStatementAccess().getInitAssignment_3()); }
)

	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_4()); }
)

	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCondAssignment_5()); }
(rule__ForStatement__CondAssignment_5)?
{ after(grammarAccess.getForStatementAccess().getCondAssignment_5()); }
)

	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_6()); }
)

	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIterateAssignment_7()); }
(rule__ForStatement__IterateAssignment_7)?
{ after(grammarAccess.getForStatementAccess().getIterateAssignment_7()); }
)

	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_8()); }
)

	rule__ForStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBodyAssignment_9()); }
(rule__ForStatement__BodyAssignment_9)
{ after(grammarAccess.getForStatementAccess().getBodyAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)

	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnAssignment_1()); }
(rule__ReturnStatement__ReturnAssignment_1)
{ after(grammarAccess.getReturnStatementAccess().getReturnAssignment_1()); }
)

	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getExprAssignment_0()); }
(rule__VarExpressionList__ExprAssignment_0)
{ after(grammarAccess.getVarExpressionListAccess().getExprAssignment_0()); }
)

	rule__VarExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getGroup_1()); }
(rule__VarExpressionList__Group_1__0)*
{ after(grammarAccess.getVarExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0()); }
)

	rule__VarExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getExprAssignment_1_1()); }
(rule__VarExpressionList__ExprAssignment_1_1)
{ after(grammarAccess.getVarExpressionListAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprAssignment_0()); }
(rule__ExpressionList__ExprAssignment_0)
{ after(grammarAccess.getExpressionListAccess().getExprAssignment_0()); }
)

	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
(rule__ExpressionList__Group_1__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)

	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprAssignment_1_1()); }
(rule__ExpressionList__ExprAssignment_1_1)
{ after(grammarAccess.getExpressionListAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getVarKeyword_1_0()); }

	'var' 

{ after(grammarAccess.getVarExpressionAccess().getVarKeyword_1_0()); }
)

	rule__VarExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getNameAssignment_1_1()); }
(rule__VarExpression__NameAssignment_1_1)
{ after(grammarAccess.getVarExpressionAccess().getNameAssignment_1_1()); }
)

	rule__VarExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_2()); }

	'=' 

{ after(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_2()); }
)

	rule__VarExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getValueAssignment_1_3()); }
(rule__VarExpression__ValueAssignment_1_3)
{ after(grammarAccess.getVarExpressionAccess().getValueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssignmentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getChainExpressionParserRuleCall_0()); }
	ruleChainExpression
{ after(grammarAccess.getAssignmentExpressionAccess().getChainExpressionParserRuleCall_0()); }
)

	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
(rule__AssignmentExpression__Group_1__0)?
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0()); }
)

	rule__AssignmentExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_1_1()); }
(rule__AssignmentExpression__OpAssignment_1_1)
{ after(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_1_1()); }
)

	rule__AssignmentExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2()); }
(rule__AssignmentExpression__RightAssignment_1_2)
{ after(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
{ after(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0()); }
)

	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup_1()); }
(rule__IfExpression__Group_1__0)?
{ after(grammarAccess.getIfExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0()); }
(

)
{ after(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0()); }
)

	rule__IfExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1()); }
)

	rule__IfExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenPartAssignment_1_2()); }
(rule__IfExpression__ThenPartAssignment_1_2)
{ after(grammarAccess.getIfExpressionAccess().getThenPartAssignment_1_2()); }
)

	rule__IfExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3()); }
)

	rule__IfExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElsePartAssignment_1_4()); }
(rule__IfExpression__ElsePartAssignment_1_4)
{ after(grammarAccess.getIfExpressionAccess().getElsePartAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)

	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__OrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)

	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)

	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
(rule__RelationalExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0()); }
)

	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1()); }
(rule__AdditiveExpression__NameAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1()); }
)

	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2()); }
(rule__AdditiveExpression__ParamsAssignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
	ruleUnaryOrInfixExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
)

	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0()); }
)

	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1()); }
(rule__MultiplicativeExpression__NameAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1()); }
)

	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2()); }
(rule__MultiplicativeExpression__ParamsAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getNameAssignment_0()); }
(rule__UnaryExpression__NameAssignment_0)
{ after(grammarAccess.getUnaryExpressionAccess().getNameAssignment_0()); }
)

	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_1()); }
(rule__UnaryExpression__ParamsAssignment_1)
{ after(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); }
	ruleInfixExpression
{ after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); }
)

	rule__PostopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getGroup_1()); }
(rule__PostopExpression__Group_1__0)?
{ after(grammarAccess.getPostopExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostopExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0()); }
(

)
{ after(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0()); }
)

	rule__PostopExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PostopExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getNameAssignment_1_1()); }
(rule__PostopExpression__NameAssignment_1_1)
{ after(grammarAccess.getPostopExpressionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getInfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

	rule__InfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
(rule__InfixExpression__Alternatives_1)*
{ after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0()); }
)

	rule__InfixExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }
)

	rule__InfixExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
(rule__InfixExpression__NameAssignment_1_0_2)
{ after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
)

	rule__InfixExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }

	'(' 

{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
)

	rule__InfixExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4()); }
(rule__InfixExpression__Group_1_0_4__0)?
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4()); }
)

	rule__InfixExpression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }

	')' 

{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InfixExpression__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_0()); }
(rule__InfixExpression__ParamsAssignment_1_0_4_0)
{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_0()); }
)

	rule__InfixExpression__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4_1()); }
(rule__InfixExpression__Group_1_0_4_1__0)*
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_0_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0()); }

	',' 

{ after(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0()); }
)

	rule__InfixExpression__Group_1_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
(rule__InfixExpression__ParamsAssignment_1_0_4_1_1)
{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0()); }
)

	rule__InfixExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }

	'[' 

{ after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); }
)

	rule__InfixExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getIndexAssignment_1_1_2()); }
(rule__InfixExpression__IndexAssignment_1_1_2)
{ after(grammarAccess.getInfixExpressionAccess().getIndexAssignment_1_1_2()); }
)

	rule__InfixExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }

	']' 

{ after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); }
)

	rule__InfixExpression__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4()); }
(rule__InfixExpression__Group_1_1_4__0)?
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InfixExpression__Group_1_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0()); }

	'(' 

{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0()); }
)

	rule__InfixExpression__Group_1_1_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1()); }
(rule__InfixExpression__Group_1_1_4_1__0)?
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1()); }
)

	rule__InfixExpression__Group_1_1_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2()); }

	')' 

{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfixExpression__Group_1_1_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_0()); }
(rule__InfixExpression__ParamsAssignment_1_1_4_1_0)
{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_0()); }
)

	rule__InfixExpression__Group_1_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1_1()); }
(rule__InfixExpression__Group_1_1_4_1_1__0)*
{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_1_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0()); }

	',' 

{ after(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0()); }
)

	rule__InfixExpression__Group_1_1_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_1_1()); }
(rule__InfixExpression__ParamsAssignment_1_1_4_1_1_1)
{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfixExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0()); }
(

)
{ after(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0()); }
)

	rule__InfixExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }

	'.' 

{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }
)

	rule__InfixExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_2()); }
(rule__InfixExpression__TypeAssignment_1_2_2)
{ after(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OperationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameAssignment_0()); }
(rule__OperationCall__NameAssignment_0)
{ after(grammarAccess.getOperationCallAccess().getNameAssignment_0()); }
)

	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
)

	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2()); }
(rule__OperationCall__Group_2__0)?
{ after(grammarAccess.getOperationCallAccess().getGroup_2()); }
)

	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
(rule__OperationCall__ParamsAssignment_2_0)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
)

	rule__OperationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
(rule__OperationCall__Group_2_1__0)*
{ after(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
)

	rule__OperationCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
(rule__OperationCall__ParamsAssignment_2_1_1)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParanthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

	rule__ParanthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

	rule__ParanthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BeeModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BeeModel__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0()); }
	ruleUnit{ after(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportClassQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getImportAccess().getImportClassQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ExecutionModeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0()); }
	ruleExecutionMode{ after(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0()); }
	ruleUnitName{ after(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__VersionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0()); }
	ruleVersion{ after(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ImplementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0()); }
	ruleInterfaceName{ after(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ImplementsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0()); }
	ruleInterfaceName{ after(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__PropertyStatementsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPropertyStatementsNamedPropertyStatementsParserRuleCall_6_1_0()); }
	ruleNamedPropertyStatements{ after(grammarAccess.getUnitAccess().getPropertyStatementsNamedPropertyStatementsParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ProvidedCapabilityAssignment_7_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_0_2_0_0()); }
	ruleProvidedCapability{ after(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ProvidedCapabilityAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_1_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RequiredCapabilitiesAssignment_7_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RequiredCapabilitiesAssignment_7_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__MetaRequiredCapabilitiesAssignment_7_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0()); }
	ruleRequiredCapability{ after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__AdviceAssignment_7_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0()); }
	ruleNamedAdvice{ after(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__SynchronizeAssignment_7_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_7_2_0()); }
	ruleSynchronization{ after(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__SynchronizeAssignment_7_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_8_1_0()); }
	ruleSynchronization{ after(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__PartsAssignment_7_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPartsBuildPartParserRuleCall_7_9_0()); }
	ruleBuildPart{ after(grammarAccess.getUnitAccess().getPartsBuildPartParserRuleCall_7_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RepositoryConfigAssignment_7_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_7_10_2_0()); }
	ruleRepositoryConfiguration{ after(grammarAccess.getUnitAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_7_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__InterfaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedCapability__VersionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0()); }
	ruleVersion{ after(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__InterfaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredCapability__RangeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0()); }
	ruleVersionRange{ after(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyStatements__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyStatements__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_0()); }
	rulePropertyStatements{ after(grammarAccess.getNamedPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatements__FilterAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getFilterFilterParserRuleCall_1_0_1_0()); }
	ruleFilter{ after(grammarAccess.getPropertyStatementsAccess().getFilterFilterParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatements__StatementsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsUnsetPropertyStatementParserRuleCall_1_1_0_0()); }
	ruleUnsetPropertyStatement{ after(grammarAccess.getPropertyStatementsAccess().getStatementsUnsetPropertyStatementParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatements__StatementsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementParserRuleCall_1_1_1_0()); }
	rulePropertyStatement{ after(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatements__StatementsAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_1_2_0()); }
	rulePropertyStatements{ after(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatement__ImmutableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0()); }
(
{ before(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0()); }

	'immutable' 

{ after(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0()); }
)

{ after(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatement__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getKeyPropertyNameParserRuleCall_1_0()); }
	rulePropertyName{ after(grammarAccess.getPropertyStatementAccess().getKeyPropertyNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatement__OpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getOpAlternatives_2_0()); }
(rule__PropertyStatement__OpAlternatives_2_0)
{ after(grammarAccess.getPropertyStatementAccess().getOpAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStatement__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStatementAccess().getValuePropertyExpressionParserRuleCall_3_0()); }
	rulePropertyExpression{ after(grammarAccess.getPropertyStatementAccess().getValuePropertyExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnsetPropertyStatement__UnsetPropertiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_0()); }
	rulePropertyName{ after(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getAnnotationStatementAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__ImmutableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0()); }
(
{ before(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0()); }

	'immutable' 

{ after(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0()); }
)

{ after(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__KeyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getKeyPropertyNameParserRuleCall_2_0()); }
	rulePropertyName{ after(grammarAccess.getAnnotationStatementAccess().getKeyPropertyNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__OpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getOpAlternatives_3_0()); }
(rule__AnnotationStatement__OpAlternatives_3_0)
{ after(grammarAccess.getAnnotationStatementAccess().getOpAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationStatement__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationStatementAccess().getValuePropertyExpressionParserRuleCall_4_0()); }
	rulePropertyExpression{ after(grammarAccess.getAnnotationStatementAccess().getValuePropertyExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Synchronization__PartrefsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0()); }
	ruleSynchronizedPart{ after(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Synchronization__PartrefsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0()); }
	ruleSynchronizedPart{ after(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getArtifactsAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getNamePartNameParserRuleCall_2_0()); }
	rulePartName{ after(grammarAccess.getArtifactsAccess().getNamePartNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__ProvidedCapabilitiesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__ProvidedCapabilitiesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__AssertsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getAssertsPostConditionAssertParserRuleCall_4_0()); }
	rulePostConditionAssert{ after(grammarAccess.getArtifactsAccess().getAssertsPostConditionAssertParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Artifacts__PathsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArtifactsAccess().getPathsPathGroupParserRuleCall_6_0()); }
	rulePathGroup{ after(grammarAccess.getArtifactsAccess().getPathsPathGroupParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getPathGroupAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__PathsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_0_0()); }
	rulePathExpression{ after(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__PathsAssignment_1_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_0_1_0()); }
	rulePathExpression{ after(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__FirstIsBaseAssignment_1_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0()); }
(
{ before(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0()); }

	'[' 

{ after(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0()); }
)

{ after(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__PathsAssignment_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_1_0()); }
	rulePathExpression{ after(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__PathsAssignment_1_0_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_2_1_0()); }
	rulePathExpression{ after(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__UnsetPropertiesAssignment_1_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_1_2_0_1_0()); }
	rulePropertyName{ after(grammarAccess.getPathGroupAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathGroup__SetPropertiesAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathGroupAccess().getSetPropertiesAnnotationStatementParserRuleCall_1_1_2_1_0()); }
	ruleAnnotationStatement{ after(grammarAccess.getPathGroupAccess().getSetPropertiesAnnotationStatementParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getExprStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getGroupAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ExecutionModeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getExecutionModeExecutionModeEnumRuleCall_1_0()); }
	ruleExecutionMode{ after(grammarAccess.getGroupAccess().getExecutionModeExecutionModeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNamePartNameParserRuleCall_3_0()); }
	rulePartName{ after(grammarAccess.getGroupAccess().getNamePartNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ProvidedCapabilitiesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ProvidedCapabilitiesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__AssertsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getAssertsPreConditionAssertParserRuleCall_5_0()); }
	rulePreConditionAssert{ after(grammarAccess.getGroupAccess().getAssertsPreConditionAssertParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__AssertsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getAssertsPostConditionAssertParserRuleCall_6_0()); }
	rulePostConditionAssert{ after(grammarAccess.getGroupAccess().getAssertsPostConditionAssertParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__PrerequisitesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_8_0()); }
	rulePrerequisite{ after(grammarAccess.getGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__SurpressedAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0()); }
(
{ before(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0()); }

	'hidden' 

{ after(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0()); }
)

{ after(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__FilterAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_1_0()); }
	ruleFilter{ after(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__AliasAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_2_0_0()); }
	RULE_ID{ after(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__PartReferenceAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_3_0_0()); }
	rulePrerequisiteEntry{ after(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prerequisite__ClosureAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_3_1_0()); }
	ruleClosure{ after(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__UnsetPropertiesAssignment_2_0_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getUnsetPropertiesPropertyNameParserRuleCall_2_0_2_0_1_0()); }
	rulePropertyName{ after(grammarAccess.getClosureAccess().getUnsetPropertiesPropertyNameParserRuleCall_2_0_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__SetPropertiesAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getSetPropertiesPropertyStatementParserRuleCall_2_0_2_1_0()); }
	rulePropertyStatement{ after(grammarAccess.getClosureAccess().getSetPropertiesPropertyStatementParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__AdviceAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_2_1_1_0()); }
	ruleCompoundAdvice{ after(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartInSelf__PartNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0()); }
	rulePartName{ after(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__InterfaceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0()); }
	ruleInterfaceName{ after(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0()); }
	ruleUnitName{ after(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__RangeAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0()); }
	ruleVersionRange{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__PartNameAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0()); }
	rulePartName{ after(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__InterfaceAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0()); }
	ruleInterfaceName{ after(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0()); }
	ruleUnitName{ after(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CapabilityReferencedPart__RangeAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0()); }
	ruleVersionRange{ after(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundReferences__PrerequisitesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0()); }
	rulePrerequisite{ after(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getActionAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ExecutionModeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getExecutionModeExecutionModeEnumRuleCall_1_0()); }
	ruleExecutionMode{ after(grammarAccess.getActionAccess().getExecutionModeExecutionModeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ProvidedCapabilitiesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ProvidedCapabilitiesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0()); }
	ruleProvidedCapability{ after(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AssertsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAssertsPreConditionAssertParserRuleCall_5_0()); }
	rulePreConditionAssert{ after(grammarAccess.getActionAccess().getAssertsPreConditionAssertParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AssertsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAssertsPostConditionAssertParserRuleCall_6_0()); }
	rulePostConditionAssert{ after(grammarAccess.getActionAccess().getAssertsPostConditionAssertParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__PropertiesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPropertiesPropertyStatementsParserRuleCall_8_1_0()); }
	rulePropertyStatements{ after(grammarAccess.getActionAccess().getPropertiesPropertyStatementsParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AdviceAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAdviceAdviceParserRuleCall_9_0()); }
	ruleAdvice{ after(grammarAccess.getActionAccess().getAdviceAdviceParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ResultGroupAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getResultGroupActionInputGroupParserRuleCall_10_0()); }
	ruleActionInputGroup{ after(grammarAccess.getActionAccess().getResultGroupActionInputGroupParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__LayoutAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLayoutLayoutParserRuleCall_11_0()); }
	ruleLayout{ after(grammarAccess.getActionAccess().getLayoutLayoutParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__StatementsAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getStatementsStatementsParserRuleCall_12_0()); }
	ruleStatements{ after(grammarAccess.getActionAccess().getStatementsStatementsParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__FilterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getFilterFilterParserRuleCall_0_1_0()); }
	ruleFilter{ after(grammarAccess.getLayoutAccess().getFilterFilterParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getLayoutAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__AssertsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getAssertsPostConditionAssertParserRuleCall_3_0()); }
	rulePostConditionAssert{ after(grammarAccess.getLayoutAccess().getAssertsPostConditionAssertParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__PathsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getPathsPathGroupParserRuleCall_5_0()); }
	rulePathGroup{ after(grammarAccess.getLayoutAccess().getPathsPathGroupParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInputGroup__AssertsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getAssertsPreConditionAssertParserRuleCall_1_0()); }
	rulePreConditionAssert{ after(grammarAccess.getActionInputGroupAccess().getAssertsPreConditionAssertParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInputGroup__AssertsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getAssertsPostConditionAssertParserRuleCall_2_0()); }
	rulePostConditionAssert{ after(grammarAccess.getActionInputGroupAccess().getAssertsPostConditionAssertParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInputGroup__PrerequisitesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInputGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0()); }
	rulePrerequisite{ after(grammarAccess.getActionInputGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryConfiguration__LocationAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0()); }
	ruleURI{ after(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryConfiguration__ResolverClassAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryConfiguration__AdviceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0()); }
	ruleCompoundAdvice{ after(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAdvice__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAdvice__AdviceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0()); }
	ruleCompoundAdvice{ after(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundAdvice__AdviceAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0()); }
	ruleAdviceStatement{ after(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__PathAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0()); }
	ruleAdvicePath{ after(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__AdviceAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0()); }
	ruleCompoundAdvice{ after(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePath__PathElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_0_0()); }
	ruleAdvicePathSeparator{ after(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePath__PathElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathElementParserRuleCall_1_0()); }
	ruleAdvicePathElement{ after(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePath__PathElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_2_0_0()); }
	ruleAdvicePathSeparator{ after(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePath__PathElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathAccess().getPathElementAdvicePathElementParserRuleCall_2_1_0()); }
	ruleAdvicePathElement{ after(grammarAccess.getAdvicePathAccess().getPathElementAdvicePathElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePathElement__NodeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeAlternatives_0_0_0()); }
(rule__AdvicePathElement__NodeAlternatives_0_0_0)
{ after(grammarAccess.getAdvicePathElementAccess().getNodeAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePathElement__PredicateAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getPredicateExpressionParserRuleCall_0_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAdvicePathElementAccess().getPredicateExpressionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdvicePathElement__NodeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0()); }
(
{ before(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0()); }

	'..' 

{ after(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0()); }
)

{ after(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__PredicateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditionAssert__ScopeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0()); }
(
{ before(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0()); }

	'precondition' 

{ after(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0()); }
)

{ after(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditionAssert__AssertsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
	ruleAssertionExpression{ after(grammarAccess.getPreConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostConditionAssert__ScopeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0()); }
(
{ before(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0()); }

	'postcondition' 

{ after(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0()); }
)

{ after(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostConditionAssert__AssertsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
	ruleAssertionExpression{ after(grammarAccess.getPostConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionExpression__MessageAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0()); }
	ruleStatements{ after(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionVarExpressionParserRuleCall_2_0()); }
	ruleVarExpression{ after(grammarAccess.getWhileStatementAccess().getConditionVarExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__SwitchExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0()); }
	ruleVarExpression{ after(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__CaseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0()); }
	ruleCase{ after(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__StatementsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0()); }
	ruleStatements{ after(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0()); }
	ruleValueLiteral{ after(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getCaseAccess().getStatementsStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__InitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0()); }
	ruleVarExpressionList{ after(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__CondAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IterateAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_7_0()); }
	ruleExpressionList{ after(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BodyAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_9_0()); }
	ruleStatement{ after(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ReturnAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpressionList__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0()); }
	ruleVarExpression{ after(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpressionList__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0()); }
	ruleVarExpression{ after(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpression__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpression__ValueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueExpressionAccess().getValueAssignmentExpressionParserRuleCall_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getValueExpressionAccess().getValueAssignmentExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__AssignmentExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getAssignmentExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenPartAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0()); }
	ruleChainedExpression{ after(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElsePartAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0()); }
	ruleChainedExpression{ after(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__RelationalExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0()); }
(rule__AdditiveExpression__NameAlternatives_1_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParamsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0()); }
(rule__MultiplicativeExpression__NameAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParamsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
	ruleUnaryOrInfixExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_0_0()); }
(rule__UnaryExpression__NameAlternatives_0_0)
{ after(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ParamsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_1_0()); }
	rulePostopExpression{ after(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostopExpression__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostopExpressionAccess().getNameAlternatives_1_1_0()); }
(rule__PostopExpression__NameAlternatives_1_1_0)
{ after(grammarAccess.getPostopExpressionAccess().getNameAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
	RULE_ID{ after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_0_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0()); }
	ruleParameter{ after(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_0_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__IndexAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0()); }
	ruleExpression{ after(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_1_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0()); }
	ruleParameter{ after(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_1_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__TypeAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0()); }
	RULE_ID{ after(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_0()); }
	RULE_PID{ after(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getNameAlternatives_0_0()); }
(rule__OperationCall__NameAlternatives_0_0)
{ after(grammarAccess.getOperationCallAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_0_0()); }
	ruleParameter{ after(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_1_1_0()); }
	ruleParameter{ after(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValAlternatives_0()); }
(rule__BooleanLiteral__ValAlternatives_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
(
{ before(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
)

{ after(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0()); }
	RULE_REAL{ after(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegexpLiteral__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_0()); }
	RULE_REGEX{ after(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_PID : '$' RULE_ID ('.' RULE_ID)*;

RULE_REGEX : '~/' ('\\' ('/'|'f'|'n'|'r'|'t'|'v'|'\\'|'.'|'*'|'+'|'?'|'w'|'W'|'s'|'S'|'d'|'D'|'b'|'|'|'{'|'}'|'['|']'|'('|')'|'0'..'7' '0'..'7' '0'..'7'|'x' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'c' 'A'..'Z')|~(('\\'|'/'|' '|'\t'|'\r'|'\n')))* '/' ('g'|'m'|'i')?;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'"'|'\r'|'\n')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'x'|'0'|'"'|'\''|'\\')|~(('\\'|'\''|'\r'|'\n')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_HEX : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_REAL : (RULE_INT '.' RULE_INT|RULE_INT '.'|'.' RULE_INT|RULE_INT) (('e'|'E') ('-'|'+') RULE_INT)?;

RULE_ANY_OTHER : .;


