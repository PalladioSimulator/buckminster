/*
* generated by Xtext
*/
package org.eclipse.b3.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.b3.services.BeeLangGrammarAccess;

public class BeeLangParser extends AbstractContentAssistParser {
	
	@Inject
	private BeeLangGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangLexer createLexer(CharStream stream) {
		return new org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangLexer(stream);
	}
	
	@Override
	protected org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser createParser() {
		org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser result = new org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getQualifiedNameAccess().getAlternatives_1(), "rule__QualifiedName__Alternatives_1");
					put(grammarAccess.getQualifiedNameAccess().getAlternatives_2_2(), "rule__QualifiedName__Alternatives_2_2");
					put(grammarAccess.getEscapedQualifiedNameAccess().getAlternatives(), "rule__EscapedQualifiedName__Alternatives");
					put(grammarAccess.getSeparatorAccess().getAlternatives(), "rule__Separator__Alternatives");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_0(), "rule__AlfanumSym__Alternatives_0");
					put(grammarAccess.getAlfanumSymAccess().getAlternatives_1(), "rule__AlfanumSym__Alternatives_1");
					put(grammarAccess.getVersionAccess().getAlternatives(), "rule__Version__Alternatives");
					put(grammarAccess.getVersionRangeAccess().getAlternatives(), "rule__VersionRange__Alternatives");
					put(grammarAccess.getVersionRangeAccess().getMinLimitAlternatives_0_0_0(), "rule__VersionRange__MinLimitAlternatives_0_0_0");
					put(grammarAccess.getVersionRangeAccess().getMaxLimitAlternatives_0_3_0(), "rule__VersionRange__MaxLimitAlternatives_0_3_0");
					put(grammarAccess.getUnitAccess().getAlternatives_7(), "rule__Unit__Alternatives_7");
					put(grammarAccess.getPropertyOperationAccess().getAlternatives(), "rule__PropertyOperation__Alternatives");
					put(grammarAccess.getFilteredPropertyOperationAccess().getBodyAlternatives_2_0(), "rule__FilteredPropertyOperation__BodyAlternatives_2_0");
					put(grammarAccess.getSynchronizedPartAccess().getAlternatives(), "rule__SynchronizedPart__Alternatives");
					put(grammarAccess.getPathVectorElementAccess().getAlternatives(), "rule__PathVectorElement__Alternatives");
					put(grammarAccess.getFilteredPathVectorAccess().getBodyAlternatives_2_0(), "rule__FilteredPathVector__BodyAlternatives_2_0");
					put(grammarAccess.getPathAccess().getAlternatives(), "rule__Path__Alternatives");
					put(grammarAccess.getPrerequisiteEntryAccess().getAlternatives(), "rule__PrerequisiteEntry__Alternatives");
					put(grammarAccess.getCapabilityReferencedPartAccess().getAlternatives(), "rule__CapabilityReferencedPart__Alternatives");
					put(grammarAccess.getRepositoryConfigurationAccess().getAlternatives_0(), "rule__RepositoryConfiguration__Alternatives_0");
					put(grammarAccess.getAdviceStatementAccess().getAlternatives_1(), "rule__AdviceStatement__Alternatives_1");
					put(grammarAccess.getSelectorAccess().getAlternatives(), "rule__Selector__Alternatives");
					put(grammarAccess.getMultiNodeSelectorAccess().getAlternatives(), "rule__MultiNodeSelector__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getForStatementAccess().getAlternatives_4(), "rule__ForStatement__Alternatives_4");
					put(grammarAccess.getTryCatchStatementAccess().getAlternatives_2(), "rule__TryCatchStatement__Alternatives_2");
					put(grammarAccess.getVarExpressionAccess().getAlternatives(), "rule__VarExpression__Alternatives");
					put(grammarAccess.getBitwiseExpressionAccess().getNameAlternatives_1_1_0(), "rule__BitwiseExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getShiftExpressionAccess().getNameAlternatives_1_1_0(), "rule__ShiftExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0(), "rule__AdditiveExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0(), "rule__MultiplicativeExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives(), "rule__UnaryOrInfixExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_1_0(), "rule__UnaryExpression__NameAlternatives_1_0");
					put(grammarAccess.getPostopExpressionAccess().getNameAlternatives_1_1_0(), "rule__PostopExpression__NameAlternatives_1_1_0");
					put(grammarAccess.getInfixExpressionAccess().getAlternatives_1(), "rule__InfixExpression__Alternatives_1");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0(), "rule__KeywordVariables__NameAlternatives_1_0");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getFeatureAccess().getNameAlternatives_1_0(), "rule__Feature__NameAlternatives_1_0");
					put(grammarAccess.getValueLiteralAccess().getAlternatives(), "rule__ValueLiteral__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getValAlternatives_1_0(), "rule__BooleanLiteral__ValAlternatives_1_0");
					put(grammarAccess.getIntegerLiteralAccess().getAlternatives(), "rule__IntegerLiteral__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getExecutionModeAccess().getAlternatives(), "rule__ExecutionMode__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getBeeModelAccess().getGroup(), "rule__BeeModel__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_2(), "rule__QualifiedName__Group_2__0");
					put(grammarAccess.getPROPAccess().getGroup(), "rule__PROP__Group__0");
					put(grammarAccess.getCompoundNameAccess().getGroup(), "rule__CompoundName__Group__0");
					put(grammarAccess.getAlfanumSymAccess().getGroup(), "rule__AlfanumSym__Group__0");
					put(grammarAccess.getVersionRangeAccess().getGroup_0(), "rule__VersionRange__Group_0__0");
					put(grammarAccess.getVersionRangeAccess().getGroup_0_2(), "rule__VersionRange__Group_0_2__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getUnitAccess().getGroup(), "rule__Unit__Group__0");
					put(grammarAccess.getUnitAccess().getGroup_3(), "rule__Unit__Group_3__0");
					put(grammarAccess.getUnitAccess().getGroup_4(), "rule__Unit__Group_4__0");
					put(grammarAccess.getUnitAccess().getGroup_4_2(), "rule__Unit__Group_4_2__0");
					put(grammarAccess.getUnitAccess().getGroup_6(), "rule__Unit__Group_6__0");
					put(grammarAccess.getUnitAccess().getGroup_7_0(), "rule__Unit__Group_7_0__0");
					put(grammarAccess.getUnitAccess().getGroup_7_0_2(), "rule__Unit__Group_7_0_2__0");
					put(grammarAccess.getUnitAccess().getGroup_7_1(), "rule__Unit__Group_7_1__0");
					put(grammarAccess.getUnitAccess().getGroup_7_2(), "rule__Unit__Group_7_2__0");
					put(grammarAccess.getUnitAccess().getGroup_7_2_2(), "rule__Unit__Group_7_2_2__0");
					put(grammarAccess.getUnitAccess().getGroup_7_3(), "rule__Unit__Group_7_3__0");
					put(grammarAccess.getUnitAccess().getGroup_7_4(), "rule__Unit__Group_7_4__0");
					put(grammarAccess.getUnitAccess().getGroup_7_4_3(), "rule__Unit__Group_7_4_3__0");
					put(grammarAccess.getUnitAccess().getGroup_7_5(), "rule__Unit__Group_7_5__0");
					put(grammarAccess.getUnitAccess().getGroup_7_6(), "rule__Unit__Group_7_6__0");
					put(grammarAccess.getUnitAccess().getGroup_7_7(), "rule__Unit__Group_7_7__0");
					put(grammarAccess.getUnitAccess().getGroup_7_8(), "rule__Unit__Group_7_8__0");
					put(grammarAccess.getUnitAccess().getGroup_7_10(), "rule__Unit__Group_7_10__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup(), "rule__ProvidedCapability__Group__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup_0(), "rule__ProvidedCapability__Group_0__0");
					put(grammarAccess.getProvidedCapabilityAccess().getGroup_4(), "rule__ProvidedCapability__Group_4__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup(), "rule__RequiredCapability__Group__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup_0(), "rule__RequiredCapability__Group_0__0");
					put(grammarAccess.getRequiredCapabilityAccess().getGroup_4(), "rule__RequiredCapability__Group_4__0");
					put(grammarAccess.getNamedPropertyStatementsAccess().getGroup(), "rule__NamedPropertyStatements__Group__0");
					put(grammarAccess.getCompoundPropertyOperationAccess().getGroup(), "rule__CompoundPropertyOperation__Group__0");
					put(grammarAccess.getFilteredPropertyOperationAccess().getGroup(), "rule__FilteredPropertyOperation__Group__0");
					put(grammarAccess.getSetPropertyOperationAccess().getGroup(), "rule__SetPropertyOperation__Group__0");
					put(grammarAccess.getUnsetPropertyOperationAccess().getGroup(), "rule__UnsetPropertyOperation__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup(), "rule__Synchronization__Group__0");
					put(grammarAccess.getSynchronizationAccess().getGroup_1(), "rule__Synchronization__Group_1__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0(), "rule__SynchronizedPart__Group_0__0");
					put(grammarAccess.getSynchronizedPartAccess().getGroup_0_1(), "rule__SynchronizedPart__Group_0_1__0");
					put(grammarAccess.getPathGroupAccess().getGroup(), "rule__PathGroup__Group__0");
					put(grammarAccess.getPathGroupAccess().getGroup_1(), "rule__PathGroup__Group_1__0");
					put(grammarAccess.getFilteredPathVectorAccess().getGroup(), "rule__FilteredPathVector__Group__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup(), "rule__BasePathVector__Group__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_2(), "rule__BasePathVector__Group_2__0");
					put(grammarAccess.getBasePathVectorAccess().getGroup_2_1(), "rule__BasePathVector__Group_2_1__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup(), "rule__UnbasedPathVector__Group__0");
					put(grammarAccess.getUnbasedPathVectorAccess().getGroup_1(), "rule__UnbasedPathVector__Group_1__0");
					put(grammarAccess.getCompoundPathVectorAccess().getGroup(), "rule__CompoundPathVector__Group__0");
					put(grammarAccess.getPathAccess().getGroup_1(), "rule__Path__Group_1__0");
					put(grammarAccess.getPathAccess().getGroup_1_2(), "rule__Path__Group_1_2__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup(), "rule__Prerequisite__Group__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_0(), "rule__Prerequisite__Group_0__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_0_1(), "rule__Prerequisite__Group_0_1__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_0_2(), "rule__Prerequisite__Group_0_2__0");
					put(grammarAccess.getPrerequisiteAccess().getGroup_0_3(), "rule__Prerequisite__Group_0_3__0");
					put(grammarAccess.getClosureAccess().getGroup(), "rule__Closure__Group__0");
					put(grammarAccess.getClosureAccess().getGroup_2(), "rule__Closure__Group_2__0");
					put(grammarAccess.getClosureAccess().getGroup_3(), "rule__Closure__Group_3__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0(), "rule__CapabilityReferencedPart__Group_0__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_0_3(), "rule__CapabilityReferencedPart__Group_0_3__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1(), "rule__CapabilityReferencedPart__Group_1__0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getGroup_1_3(), "rule__CapabilityReferencedPart__Group_1_3__0");
					put(grammarAccess.getCompoundReferencesAccess().getGroup(), "rule__CompoundReferences__Group__0");
					put(grammarAccess.getPartAccess().getGroup(), "rule__Part__Group__0");
					put(grammarAccess.getPartAccess().getGroup_3(), "rule__Part__Group_3__0");
					put(grammarAccess.getPartAccess().getGroup_3_2(), "rule__Part__Group_3_2__0");
					put(grammarAccess.getPartAccess().getGroup_7(), "rule__Part__Group_7__0");
					put(grammarAccess.getLayoutAccess().getGroup(), "rule__Layout__Group__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getRepositoryConfigurationAccess().getGroup(), "rule__RepositoryConfiguration__Group__0");
					put(grammarAccess.getRepositoryConfigurationAccess().getGroup_0_1(), "rule__RepositoryConfiguration__Group_0_1__0");
					put(grammarAccess.getNamedAdviceAccess().getGroup(), "rule__NamedAdvice__Group__0");
					put(grammarAccess.getAdviceAccess().getGroup(), "rule__Advice__Group__0");
					put(grammarAccess.getCompoundAdviceAccess().getGroup(), "rule__CompoundAdvice__Group__0");
					put(grammarAccess.getCompoundAdviceAccess().getGroup_1(), "rule__CompoundAdvice__Group_1__0");
					put(grammarAccess.getAdviceStatementAccess().getGroup(), "rule__AdviceStatement__Group__0");
					put(grammarAccess.getAdviceStatementAccess().getGroup_1_0(), "rule__AdviceStatement__Group_1_0__0");
					put(grammarAccess.getAdvicePathAccess().getGroup(), "rule__AdvicePath__Group__0");
					put(grammarAccess.getAdvicePathAccess().getGroup_2(), "rule__AdvicePath__Group_2__0");
					put(grammarAccess.getDiscriminatingSelectorAccess().getGroup(), "rule__DiscriminatingSelector__Group__0");
					put(grammarAccess.getThisSelectorAccess().getGroup(), "rule__ThisSelector__Group__0");
					put(grammarAccess.getParentSelectorAccess().getGroup(), "rule__ParentSelector__Group__0");
					put(grammarAccess.getChildrenSelectorAccess().getGroup(), "rule__ChildrenSelector__Group__0");
					put(grammarAccess.getAncestorSelectorAccess().getGroup(), "rule__AncestorSelector__Group__0");
					put(grammarAccess.getRegexpSelectorAccess().getGroup(), "rule__RegexpSelector__Group__0");
					put(grammarAccess.getWildcardNodeAccess().getGroup(), "rule__WildcardNode__Group__0");
					put(grammarAccess.getFilterAccess().getGroup(), "rule__Filter__Group__0");
					put(grammarAccess.getPreConditionAccess().getGroup(), "rule__PreCondition__Group__0");
					put(grammarAccess.getPostConditionAccess().getGroup(), "rule__PostCondition__Group__0");
					put(grammarAccess.getAssertionExpressionAccess().getGroup(), "rule__AssertionExpression__Group__0");
					put(grammarAccess.getAssertionExpressionAccess().getGroup_2(), "rule__AssertionExpression__Group_2__0");
					put(grammarAccess.getStatementAccess().getGroup_6(), "rule__Statement__Group_6__0");
					put(grammarAccess.getBreakStatementAccess().getGroup(), "rule__BreakStatement__Group__0");
					put(grammarAccess.getContinueStatementAccess().getGroup(), "rule__ContinueStatement__Group__0");
					put(grammarAccess.getCompoundStatementAccess().getGroup(), "rule__CompoundStatement__Group__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup(), "rule__SwitchStatement__Group__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup_6(), "rule__SwitchStatement__Group_6__0");
					put(grammarAccess.getCaseAccess().getGroup(), "rule__Case__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup_4_0(), "rule__ForStatement__Group_4_0__0");
					put(grammarAccess.getForStatementAccess().getGroup_4_1(), "rule__ForStatement__Group_4_1__0");
					put(grammarAccess.getDoWhileStatementAccess().getGroup(), "rule__DoWhileStatement__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getFunctionStatementAccess().getGroup(), "rule__FunctionStatement__Group__0");
					put(grammarAccess.getFunctionStatementAccess().getGroup_3(), "rule__FunctionStatement__Group_3__0");
					put(grammarAccess.getFunctionStatementAccess().getGroup_3_1(), "rule__FunctionStatement__Group_3_1__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getLabelStatementAccess().getGroup(), "rule__LabelStatement__Group__0");
					put(grammarAccess.getThrowStatementAccess().getGroup(), "rule__ThrowStatement__Group__0");
					put(grammarAccess.getTryCatchStatementAccess().getGroup(), "rule__TryCatchStatement__Group__0");
					put(grammarAccess.getTryCatchStatementAccess().getGroup_2_0(), "rule__TryCatchStatement__Group_2_0__0");
					put(grammarAccess.getCatchBlockAccess().getGroup(), "rule__CatchBlock__Group__0");
					put(grammarAccess.getFinallyBlockAccess().getGroup(), "rule__FinallyBlock__Group__0");
					put(grammarAccess.getWithStatementAccess().getGroup(), "rule__WithStatement__Group__0");
					put(grammarAccess.getVarExpressionListAccess().getGroup(), "rule__VarExpressionList__Group__0");
					put(grammarAccess.getVarExpressionListAccess().getGroup_1(), "rule__VarExpressionList__Group_1__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getVarExpressionAccess().getGroup_1(), "rule__VarExpression__Group_1__0");
					put(grammarAccess.getVarExpressionAccess().getGroup_1_3(), "rule__VarExpression__Group_1_3__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup_1(), "rule__IfExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getBitwiseExpressionAccess().getGroup(), "rule__BitwiseExpression__Group__0");
					put(grammarAccess.getBitwiseExpressionAccess().getGroup_1(), "rule__BitwiseExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup(), "rule__ShiftExpression__Group__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup_1(), "rule__ShiftExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup(), "rule__PostopExpression__Group__0");
					put(grammarAccess.getPostopExpressionAccess().getGroup_1(), "rule__PostopExpression__Group_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup(), "rule__InfixExpression__Group__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_0(), "rule__InfixExpression__Group_1_0__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4(), "rule__InfixExpression__Group_1_0_4__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4_1(), "rule__InfixExpression__Group_1_0_4_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1(), "rule__InfixExpression__Group_1_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4(), "rule__InfixExpression__Group_1_1_4__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1(), "rule__InfixExpression__Group_1_1_4_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_1_4_1_1(), "rule__InfixExpression__Group_1_1_4_1_1__0");
					put(grammarAccess.getInfixExpressionAccess().getGroup_1_2(), "rule__InfixExpression__Group_1_2__0");
					put(grammarAccess.getCallExpressionAccess().getGroup(), "rule__CallExpression__Group__0");
					put(grammarAccess.getCallExpressionAccess().getGroup_1(), "rule__CallExpression__Group_1__0");
					put(grammarAccess.getCallExpressionAccess().getGroup_1_2(), "rule__CallExpression__Group_1_2__0");
					put(grammarAccess.getCallExpressionAccess().getGroup_1_2_1(), "rule__CallExpression__Group_1_2_1__0");
					put(grammarAccess.getPropertyValueAccess().getGroup(), "rule__PropertyValue__Group__0");
					put(grammarAccess.getVariableValueAccess().getGroup(), "rule__VariableValue__Group__0");
					put(grammarAccess.getKeywordVariablesAccess().getGroup(), "rule__KeywordVariables__Group__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup(), "rule__ConstructorCallExpression__Group__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_4(), "rule__ConstructorCallExpression__Group_4__0");
					put(grammarAccess.getConstructorCallExpressionAccess().getGroup_4_1(), "rule__ConstructorCallExpression__Group_4_1__0");
					put(grammarAccess.getLiteralArrayAccess().getGroup(), "rule__LiteralArray__Group__0");
					put(grammarAccess.getLiteralArrayAccess().getGroup_2(), "rule__LiteralArray__Group_2__0");
					put(grammarAccess.getLiteralArrayAccess().getGroup_2_1(), "rule__LiteralArray__Group_2_1__0");
					put(grammarAccess.getLiteralObjectAccess().getGroup(), "rule__LiteralObject__Group__0");
					put(grammarAccess.getLiteralObjectAccess().getGroup_2(), "rule__LiteralObject__Group_2__0");
					put(grammarAccess.getLiteralObjectAccess().getGroup_2_1(), "rule__LiteralObject__Group_2_1__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup(), "rule__LiteralFunction__Group__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3(), "rule__LiteralFunction__Group_3__0");
					put(grammarAccess.getLiteralFunctionAccess().getGroup_3_1(), "rule__LiteralFunction__Group_3_1__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup_0(), "rule__IntegerLiteral__Group_0__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getUndefinedLiteralAccess().getGroup(), "rule__UndefinedLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
					put(grammarAccess.getRegexpLiteralAccess().getGroup(), "rule__RegexpLiteral__Group__0");
					put(grammarAccess.getQueryLiteralAccess().getGroup(), "rule__QueryLiteral__Group__0");
					put(grammarAccess.getParanthesizedExpressionAccess().getGroup(), "rule__ParanthesizedExpression__Group__0");
					put(grammarAccess.getBeeModelAccess().getImportsAssignment_0(), "rule__BeeModel__ImportsAssignment_0");
					put(grammarAccess.getBeeModelAccess().getBodyAssignment_1(), "rule__BeeModel__BodyAssignment_1");
					put(grammarAccess.getVersionAccess().getOriginalAssignment_0(), "rule__Version__OriginalAssignment_0");
					put(grammarAccess.getVersionAccess().getOriginalAssignment_1(), "rule__Version__OriginalAssignment_1");
					put(grammarAccess.getVersionRangeAccess().getMinLimitAssignment_0_0(), "rule__VersionRange__MinLimitAssignment_0_0");
					put(grammarAccess.getVersionRangeAccess().getMinAssignment_0_1(), "rule__VersionRange__MinAssignment_0_1");
					put(grammarAccess.getVersionRangeAccess().getMaxAssignment_0_2_1(), "rule__VersionRange__MaxAssignment_0_2_1");
					put(grammarAccess.getVersionRangeAccess().getMaxLimitAssignment_0_3(), "rule__VersionRange__MaxLimitAssignment_0_3");
					put(grammarAccess.getVersionRangeAccess().getMinAssignment_1(), "rule__VersionRange__MinAssignment_1");
					put(grammarAccess.getImportAccess().getImportClassAssignment_1(), "rule__Import__ImportClassAssignment_1");
					put(grammarAccess.getUnitAccess().getExecutionModeAssignment_0(), "rule__Unit__ExecutionModeAssignment_0");
					put(grammarAccess.getUnitAccess().getNameAssignment_2(), "rule__Unit__NameAssignment_2");
					put(grammarAccess.getUnitAccess().getVersionAssignment_3_1(), "rule__Unit__VersionAssignment_3_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_4_1(), "rule__Unit__ImplementsAssignment_4_1");
					put(grammarAccess.getUnitAccess().getImplementsAssignment_4_2_1(), "rule__Unit__ImplementsAssignment_4_2_1");
					put(grammarAccess.getUnitAccess().getCompoundPropertyOperationAssignment_6_1(), "rule__Unit__CompoundPropertyOperationAssignment_6_1");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_0_2_0(), "rule__Unit__ProvidedCapabilitiesAssignment_7_0_2_0");
					put(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_1_1(), "rule__Unit__ProvidedCapabilitiesAssignment_7_1_1");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_2_2_0(), "rule__Unit__RequiredCapabilitiesAssignment_7_2_2_0");
					put(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_1(), "rule__Unit__RequiredCapabilitiesAssignment_7_3_1");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3_0(), "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_0");
					put(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_5_2(), "rule__Unit__MetaRequiredCapabilitiesAssignment_7_5_2");
					put(grammarAccess.getUnitAccess().getAdviceAssignment_7_6_1(), "rule__Unit__AdviceAssignment_7_6_1");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_7_7_2(), "rule__Unit__SynchronizationsAssignment_7_7_2");
					put(grammarAccess.getUnitAccess().getSynchronizationsAssignment_7_8_1(), "rule__Unit__SynchronizationsAssignment_7_8_1");
					put(grammarAccess.getUnitAccess().getPartsAssignment_7_9(), "rule__Unit__PartsAssignment_7_9");
					put(grammarAccess.getUnitAccess().getRepositoryConfigurationsAssignment_7_10_2(), "rule__Unit__RepositoryConfigurationsAssignment_7_10_2");
					put(grammarAccess.getProvidedCapabilityAccess().getFilterAssignment_0_1(), "rule__ProvidedCapability__FilterAssignment_0_1");
					put(grammarAccess.getProvidedCapabilityAccess().getInterfaceAssignment_1(), "rule__ProvidedCapability__InterfaceAssignment_1");
					put(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_3(), "rule__ProvidedCapability__NameAssignment_3");
					put(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_4_1(), "rule__ProvidedCapability__VersionAssignment_4_1");
					put(grammarAccess.getRequiredCapabilityAccess().getFilterAssignment_0_1(), "rule__RequiredCapability__FilterAssignment_0_1");
					put(grammarAccess.getRequiredCapabilityAccess().getInterfaceAssignment_1(), "rule__RequiredCapability__InterfaceAssignment_1");
					put(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_3(), "rule__RequiredCapability__NameAssignment_3");
					put(grammarAccess.getRequiredCapabilityAccess().getRangeAssignment_4_1(), "rule__RequiredCapability__RangeAssignment_4_1");
					put(grammarAccess.getNamedPropertyStatementsAccess().getNameAssignment_0(), "rule__NamedPropertyStatements__NameAssignment_0");
					put(grammarAccess.getNamedPropertyStatementsAccess().getBodyAssignment_1(), "rule__NamedPropertyStatements__BodyAssignment_1");
					put(grammarAccess.getCompoundPropertyOperationAccess().getOperationsAssignment_1(), "rule__CompoundPropertyOperation__OperationsAssignment_1");
					put(grammarAccess.getFilteredPropertyOperationAccess().getFilterAssignment_1(), "rule__FilteredPropertyOperation__FilterAssignment_1");
					put(grammarAccess.getFilteredPropertyOperationAccess().getBodyAssignment_2(), "rule__FilteredPropertyOperation__BodyAssignment_2");
					put(grammarAccess.getSetPropertyOperationAccess().getImmutableAssignment_0(), "rule__SetPropertyOperation__ImmutableAssignment_0");
					put(grammarAccess.getSetPropertyOperationAccess().getKeyAssignment_1(), "rule__SetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSetPropertyOperationAccess().getOpAssignment_2(), "rule__SetPropertyOperation__OpAssignment_2");
					put(grammarAccess.getSetPropertyOperationAccess().getValueAssignment_3(), "rule__SetPropertyOperation__ValueAssignment_3");
					put(grammarAccess.getUnsetPropertyOperationAccess().getKeyAssignment_1(), "rule__UnsetPropertyOperation__KeyAssignment_1");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_0(), "rule__Synchronization__PartrefsAssignment_0");
					put(grammarAccess.getSynchronizationAccess().getPartrefsAssignment_1_1(), "rule__Synchronization__PartrefsAssignment_1_1");
					put(grammarAccess.getPathGroupAccess().getPathsAssignment_0(), "rule__PathGroup__PathsAssignment_0");
					put(grammarAccess.getPathGroupAccess().getAnnotationsAssignment_1_1(), "rule__PathGroup__AnnotationsAssignment_1_1");
					put(grammarAccess.getFilteredPathVectorAccess().getFilterAssignment_1(), "rule__FilteredPathVector__FilterAssignment_1");
					put(grammarAccess.getFilteredPathVectorAccess().getBodyAssignment_2(), "rule__FilteredPathVector__BodyAssignment_2");
					put(grammarAccess.getBasePathVectorAccess().getBasePathAssignment_0(), "rule__BasePathVector__BasePathAssignment_0");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_0(), "rule__BasePathVector__PathsAssignment_2_0");
					put(grammarAccess.getBasePathVectorAccess().getPathsAssignment_2_1_1(), "rule__BasePathVector__PathsAssignment_2_1_1");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_0(), "rule__UnbasedPathVector__PathsAssignment_0");
					put(grammarAccess.getUnbasedPathVectorAccess().getPathsAssignment_1_1(), "rule__UnbasedPathVector__PathsAssignment_1_1");
					put(grammarAccess.getCompoundPathVectorAccess().getBodyAssignment_1(), "rule__CompoundPathVector__BodyAssignment_1");
					put(grammarAccess.getPrerequisiteAccess().getSurpressedAssignment_0_0(), "rule__Prerequisite__SurpressedAssignment_0_0");
					put(grammarAccess.getPrerequisiteAccess().getFilterAssignment_0_1_1(), "rule__Prerequisite__FilterAssignment_0_1_1");
					put(grammarAccess.getPrerequisiteAccess().getAliasAssignment_0_2_0(), "rule__Prerequisite__AliasAssignment_0_2_0");
					put(grammarAccess.getPrerequisiteAccess().getPartReferenceAssignment_0_3_0(), "rule__Prerequisite__PartReferenceAssignment_0_3_0");
					put(grammarAccess.getPrerequisiteAccess().getClosureAssignment_0_3_1(), "rule__Prerequisite__ClosureAssignment_0_3_1");
					put(grammarAccess.getClosureAccess().getPropertiesAssignment_2_1(), "rule__Closure__PropertiesAssignment_2_1");
					put(grammarAccess.getClosureAccess().getAdviceAssignment_3_1(), "rule__Closure__AdviceAssignment_3_1");
					put(grammarAccess.getPartInSelfAccess().getPartNameAssignment(), "rule__PartInSelf__PartNameAssignment");
					put(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_0_0(), "rule__CapabilityReferencedPart__InterfaceAssignment_0_0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_0_2(), "rule__CapabilityReferencedPart__NameAssignment_0_2");
					put(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_0_3_1(), "rule__CapabilityReferencedPart__RangeAssignment_0_3_1");
					put(grammarAccess.getCapabilityReferencedPartAccess().getPartNameAssignment_0_5(), "rule__CapabilityReferencedPart__PartNameAssignment_0_5");
					put(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceAssignment_1_0(), "rule__CapabilityReferencedPart__InterfaceAssignment_1_0");
					put(grammarAccess.getCapabilityReferencedPartAccess().getNameAssignment_1_2(), "rule__CapabilityReferencedPart__NameAssignment_1_2");
					put(grammarAccess.getCapabilityReferencedPartAccess().getRangeAssignment_1_3_1(), "rule__CapabilityReferencedPart__RangeAssignment_1_3_1");
					put(grammarAccess.getCompoundReferencesAccess().getPrerequisitesAssignment_1(), "rule__CompoundReferences__PrerequisitesAssignment_1");
					put(grammarAccess.getPartAccess().getVisibilityAssignment_0(), "rule__Part__VisibilityAssignment_0");
					put(grammarAccess.getPartAccess().getExecutionModeAssignment_1(), "rule__Part__ExecutionModeAssignment_1");
					put(grammarAccess.getPartAccess().getProvidedCapabilitiesAssignment_3_1(), "rule__Part__ProvidedCapabilitiesAssignment_3_1");
					put(grammarAccess.getPartAccess().getProvidedCapabilitiesAssignment_3_2_1(), "rule__Part__ProvidedCapabilitiesAssignment_3_2_1");
					put(grammarAccess.getPartAccess().getPreConditionAssignment_4(), "rule__Part__PreConditionAssignment_4");
					put(grammarAccess.getPartAccess().getPostConditionAssignment_5(), "rule__Part__PostConditionAssignment_5");
					put(grammarAccess.getPartAccess().getPropertiesAssignment_7_1(), "rule__Part__PropertiesAssignment_7_1");
					put(grammarAccess.getPartAccess().getAdviceAssignment_8(), "rule__Part__AdviceAssignment_8");
					put(grammarAccess.getPartAccess().getGroupAssignment_9(), "rule__Part__GroupAssignment_9");
					put(grammarAccess.getPartAccess().getLayoutAssignment_10(), "rule__Part__LayoutAssignment_10");
					put(grammarAccess.getPartAccess().getStatementsAssignment_11(), "rule__Part__StatementsAssignment_11");
					put(grammarAccess.getParameterAccess().getValAssignment(), "rule__Parameter__ValAssignment");
					put(grammarAccess.getLayoutAccess().getPostConditionAssignment_1(), "rule__Layout__PostConditionAssignment_1");
					put(grammarAccess.getLayoutAccess().getBodyAssignment_3(), "rule__Layout__BodyAssignment_3");
					put(grammarAccess.getGroupAccess().getPreConditionAssignment_1(), "rule__Group__PreConditionAssignment_1");
					put(grammarAccess.getGroupAccess().getPostConditionAssignment_2(), "rule__Group__PostConditionAssignment_2");
					put(grammarAccess.getGroupAccess().getPrerequisitesAssignment_4(), "rule__Group__PrerequisitesAssignment_4");
					put(grammarAccess.getRepositoryConfigurationAccess().getLocationAssignment_0_0(), "rule__RepositoryConfiguration__LocationAssignment_0_0");
					put(grammarAccess.getRepositoryConfigurationAccess().getResolverClassAssignment_0_1_1(), "rule__RepositoryConfiguration__ResolverClassAssignment_0_1_1");
					put(grammarAccess.getRepositoryConfigurationAccess().getAdviceAssignment_1(), "rule__RepositoryConfiguration__AdviceAssignment_1");
					put(grammarAccess.getNamedAdviceAccess().getNameAssignment_0(), "rule__NamedAdvice__NameAssignment_0");
					put(grammarAccess.getNamedAdviceAccess().getAdviceAssignment_1(), "rule__NamedAdvice__AdviceAssignment_1");
					put(grammarAccess.getCompoundAdviceAccess().getAdviceAssignment_1_0(), "rule__CompoundAdvice__AdviceAssignment_1_0");
					put(grammarAccess.getAdviceStatementAccess().getPathAssignment_0(), "rule__AdviceStatement__PathAssignment_0");
					put(grammarAccess.getAdviceStatementAccess().getOpAssignment_1_0_0(), "rule__AdviceStatement__OpAssignment_1_0_0");
					put(grammarAccess.getAdviceStatementAccess().getValueAssignment_1_0_1(), "rule__AdviceStatement__ValueAssignment_1_0_1");
					put(grammarAccess.getAdviceStatementAccess().getAdviceAssignment_1_1(), "rule__AdviceStatement__AdviceAssignment_1_1");
					put(grammarAccess.getAdvicePathAccess().getAbsoluteAssignment_0(), "rule__AdvicePath__AbsoluteAssignment_0");
					put(grammarAccess.getAdvicePathAccess().getSelectorsAssignment_1(), "rule__AdvicePath__SelectorsAssignment_1");
					put(grammarAccess.getAdvicePathAccess().getSelectorsAssignment_2_1(), "rule__AdvicePath__SelectorsAssignment_2_1");
					put(grammarAccess.getDiscriminatingSelectorAccess().getSelectorAssignment_0(), "rule__DiscriminatingSelector__SelectorAssignment_0");
					put(grammarAccess.getDiscriminatingSelectorAccess().getPredicateAssignment_2(), "rule__DiscriminatingSelector__PredicateAssignment_2");
					put(grammarAccess.getNameSelectorAccess().getNameAssignment(), "rule__NameSelector__NameAssignment");
					put(grammarAccess.getRegexpSelectorAccess().getPatternAssignment_1(), "rule__RegexpSelector__PatternAssignment_1");
					put(grammarAccess.getFilterAccess().getPredicateAssignment_1(), "rule__Filter__PredicateAssignment_1");
					put(grammarAccess.getPreConditionAccess().getAssertsAssignment_2(), "rule__PreCondition__AssertsAssignment_2");
					put(grammarAccess.getPostConditionAccess().getAssertsAssignment_2(), "rule__PostCondition__AssertsAssignment_2");
					put(grammarAccess.getAssertionExpressionAccess().getExprAssignment_1(), "rule__AssertionExpression__ExprAssignment_1");
					put(grammarAccess.getAssertionExpressionAccess().getMessageAssignment_2_1(), "rule__AssertionExpression__MessageAssignment_2_1");
					put(grammarAccess.getBreakStatementAccess().getLabelAssignment_2(), "rule__BreakStatement__LabelAssignment_2");
					put(grammarAccess.getContinueStatementAccess().getLabelAssignment_2(), "rule__ContinueStatement__LabelAssignment_2");
					put(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_1(), "rule__CompoundStatement__StatementsAssignment_1");
					put(grammarAccess.getStatementsAccess().getStatementsAssignment(), "rule__Statements__StatementsAssignment");
					put(grammarAccess.getWhileStatementAccess().getConditionAssignment_2(), "rule__WhileStatement__ConditionAssignment_2");
					put(grammarAccess.getWhileStatementAccess().getBodyAssignment_4(), "rule__WhileStatement__BodyAssignment_4");
					put(grammarAccess.getSwitchStatementAccess().getSwitchExprAssignment_2(), "rule__SwitchStatement__SwitchExprAssignment_2");
					put(grammarAccess.getSwitchStatementAccess().getCaseAssignment_5(), "rule__SwitchStatement__CaseAssignment_5");
					put(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_6_2(), "rule__SwitchStatement__StatementsAssignment_6_2");
					put(grammarAccess.getCaseAccess().getConditionAssignment_1(), "rule__Case__ConditionAssignment_1");
					put(grammarAccess.getCaseAccess().getStatementsAssignment_3(), "rule__Case__StatementsAssignment_3");
					put(grammarAccess.getForStatementAccess().getInitAssignment_3(), "rule__ForStatement__InitAssignment_3");
					put(grammarAccess.getForStatementAccess().getRegularAssignment_4_0_0(), "rule__ForStatement__RegularAssignment_4_0_0");
					put(grammarAccess.getForStatementAccess().getCondAssignment_4_0_1(), "rule__ForStatement__CondAssignment_4_0_1");
					put(grammarAccess.getForStatementAccess().getIterateAssignment_4_0_3(), "rule__ForStatement__IterateAssignment_4_0_3");
					put(grammarAccess.getForStatementAccess().getIterateAssignment_4_1_1(), "rule__ForStatement__IterateAssignment_4_1_1");
					put(grammarAccess.getForStatementAccess().getBodyAssignment_6(), "rule__ForStatement__BodyAssignment_6");
					put(grammarAccess.getDoWhileStatementAccess().getStatementAssignment_1(), "rule__DoWhileStatement__StatementAssignment_1");
					put(grammarAccess.getDoWhileStatementAccess().getConditionAssignment_4(), "rule__DoWhileStatement__ConditionAssignment_4");
					put(grammarAccess.getReturnStatementAccess().getReturnAssignment_1(), "rule__ReturnStatement__ReturnAssignment_1");
					put(grammarAccess.getFunctionStatementAccess().getNameAssignment_1(), "rule__FunctionStatement__NameAssignment_1");
					put(grammarAccess.getFunctionStatementAccess().getParamsAssignment_3_0(), "rule__FunctionStatement__ParamsAssignment_3_0");
					put(grammarAccess.getFunctionStatementAccess().getParamsAssignment_3_1_1(), "rule__FunctionStatement__ParamsAssignment_3_1_1");
					put(grammarAccess.getFunctionStatementAccess().getStatementsAssignment_6(), "rule__FunctionStatement__StatementsAssignment_6");
					put(grammarAccess.getIfStatementAccess().getCondAssignment_2(), "rule__IfStatement__CondAssignment_2");
					put(grammarAccess.getIfStatementAccess().getThenAssignment_4(), "rule__IfStatement__ThenAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElseAssignment_5_1(), "rule__IfStatement__ElseAssignment_5_1");
					put(grammarAccess.getLabelStatementAccess().getNameAssignment_0(), "rule__LabelStatement__NameAssignment_0");
					put(grammarAccess.getLabelStatementAccess().getStatementAssignment_2(), "rule__LabelStatement__StatementAssignment_2");
					put(grammarAccess.getThrowStatementAccess().getExprAssignment_1(), "rule__ThrowStatement__ExprAssignment_1");
					put(grammarAccess.getTryCatchStatementAccess().getTryBlockAssignment_1(), "rule__TryCatchStatement__TryBlockAssignment_1");
					put(grammarAccess.getTryCatchStatementAccess().getCatchBlockAssignment_2_0_0(), "rule__TryCatchStatement__CatchBlockAssignment_2_0_0");
					put(grammarAccess.getTryCatchStatementAccess().getFinallyBlockAssignment_2_0_1(), "rule__TryCatchStatement__FinallyBlockAssignment_2_0_1");
					put(grammarAccess.getTryCatchStatementAccess().getFinallyAssignment_2_1(), "rule__TryCatchStatement__FinallyAssignment_2_1");
					put(grammarAccess.getCatchBlockAccess().getVariableAssignment_2(), "rule__CatchBlock__VariableAssignment_2");
					put(grammarAccess.getCatchBlockAccess().getCatchBlockAssignment_4(), "rule__CatchBlock__CatchBlockAssignment_4");
					put(grammarAccess.getFinallyBlockAccess().getFinallyBlockAssignment_1(), "rule__FinallyBlock__FinallyBlockAssignment_1");
					put(grammarAccess.getWithStatementAccess().getExprAssignment_2(), "rule__WithStatement__ExprAssignment_2");
					put(grammarAccess.getWithStatementAccess().getStatementAssignment_4(), "rule__WithStatement__StatementAssignment_4");
					put(grammarAccess.getVarExpressionListAccess().getExprAssignment_0(), "rule__VarExpressionList__ExprAssignment_0");
					put(grammarAccess.getVarExpressionListAccess().getExprAssignment_1_1(), "rule__VarExpressionList__ExprAssignment_1_1");
					put(grammarAccess.getExpressionListAccess().getExprAssignment_0(), "rule__ExpressionList__ExprAssignment_0");
					put(grammarAccess.getExpressionListAccess().getExprAssignment_1_1(), "rule__ExpressionList__ExprAssignment_1_1");
					put(grammarAccess.getVarExpressionAccess().getNameAssignment_1_2(), "rule__VarExpression__NameAssignment_1_2");
					put(grammarAccess.getVarExpressionAccess().getValueAssignment_1_3_1(), "rule__VarExpression__ValueAssignment_1_3_1");
					put(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_1_1(), "rule__AssignmentExpression__OpAssignment_1_1");
					put(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1_2(), "rule__AssignmentExpression__RightAssignment_1_2");
					put(grammarAccess.getIfExpressionAccess().getThenPartAssignment_1_2(), "rule__IfExpression__ThenPartAssignment_1_2");
					put(grammarAccess.getIfExpressionAccess().getElsePartAssignment_1_4(), "rule__IfExpression__ElsePartAssignment_1_4");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2(), "rule__OrExpression__RightAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2(), "rule__AndExpression__RightAssignment_1_2");
					put(grammarAccess.getBitwiseExpressionAccess().getNameAssignment_1_1(), "rule__BitwiseExpression__NameAssignment_1_1");
					put(grammarAccess.getBitwiseExpressionAccess().getParamsAssignment_1_2(), "rule__BitwiseExpression__ParamsAssignment_1_2");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1(), "rule__RelationalExpression__OperatorAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2(), "rule__RelationalExpression__RightAssignment_1_2");
					put(grammarAccess.getShiftExpressionAccess().getNameAssignment_1_1(), "rule__ShiftExpression__NameAssignment_1_1");
					put(grammarAccess.getShiftExpressionAccess().getParamsAssignment_1_2(), "rule__ShiftExpression__ParamsAssignment_1_2");
					put(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1(), "rule__AdditiveExpression__NameAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2(), "rule__AdditiveExpression__ParamsAssignment_1_2");
					put(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1(), "rule__MultiplicativeExpression__NameAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2(), "rule__MultiplicativeExpression__ParamsAssignment_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getNameAssignment_1(), "rule__UnaryExpression__NameAssignment_1");
					put(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_2(), "rule__UnaryExpression__ParamsAssignment_2");
					put(grammarAccess.getPostopExpressionAccess().getNameAssignment_1_1(), "rule__PostopExpression__NameAssignment_1_1");
					put(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2(), "rule__InfixExpression__NameAssignment_1_0_2");
					put(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_0(), "rule__InfixExpression__ParamsAssignment_1_0_4_0");
					put(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_1_1(), "rule__InfixExpression__ParamsAssignment_1_0_4_1_1");
					put(grammarAccess.getInfixExpressionAccess().getIndexAssignment_1_1_2(), "rule__InfixExpression__IndexAssignment_1_1_2");
					put(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_0(), "rule__InfixExpression__ParamsAssignment_1_1_4_1_0");
					put(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_1_4_1_1_1(), "rule__InfixExpression__ParamsAssignment_1_1_4_1_1_1");
					put(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_2(), "rule__InfixExpression__TypeAssignment_1_2_2");
					put(grammarAccess.getCallExpressionAccess().getParamsAssignment_1_2_0(), "rule__CallExpression__ParamsAssignment_1_2_0");
					put(grammarAccess.getCallExpressionAccess().getParamsAssignment_1_2_1_1(), "rule__CallExpression__ParamsAssignment_1_2_1_1");
					put(grammarAccess.getPropertyValueAccess().getNameAssignment_1(), "rule__PropertyValue__NameAssignment_1");
					put(grammarAccess.getVariableValueAccess().getNameAssignment_1(), "rule__VariableValue__NameAssignment_1");
					put(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1(), "rule__KeywordVariables__NameAssignment_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getNameAssignment_1(), "rule__ConstructorCallExpression__NameAssignment_1");
					put(grammarAccess.getConstructorCallExpressionAccess().getTargetAssignment_2(), "rule__ConstructorCallExpression__TargetAssignment_2");
					put(grammarAccess.getConstructorCallExpressionAccess().getParamsAssignment_4_0(), "rule__ConstructorCallExpression__ParamsAssignment_4_0");
					put(grammarAccess.getConstructorCallExpressionAccess().getParamsAssignment_4_1_1(), "rule__ConstructorCallExpression__ParamsAssignment_4_1_1");
					put(grammarAccess.getLiteralArrayAccess().getElementAssignment_2_0(), "rule__LiteralArray__ElementAssignment_2_0");
					put(grammarAccess.getLiteralArrayAccess().getElementAssignment_2_1_1(), "rule__LiteralArray__ElementAssignment_2_1_1");
					put(grammarAccess.getLiteralObjectAccess().getFeaturesAssignment_2_0(), "rule__LiteralObject__FeaturesAssignment_2_0");
					put(grammarAccess.getLiteralObjectAccess().getFeaturesAssignment_2_1_1(), "rule__LiteralObject__FeaturesAssignment_2_1_1");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_0(), "rule__LiteralFunction__ParametersAssignment_3_0");
					put(grammarAccess.getLiteralFunctionAccess().getParametersAssignment_3_1_1(), "rule__LiteralFunction__ParametersAssignment_3_1_1");
					put(grammarAccess.getLiteralFunctionAccess().getStatementsAssignment_6(), "rule__LiteralFunction__StatementsAssignment_6");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getFeatureAccess().getValueAssignment_3(), "rule__Feature__ValueAssignment_3");
					put(grammarAccess.getBooleanLiteralAccess().getValAssignment_1(), "rule__BooleanLiteral__ValAssignment_1");
					put(grammarAccess.getIntegerLiteralAccess().getIvalAssignment_0_1(), "rule__IntegerLiteral__IvalAssignment_0_1");
					put(grammarAccess.getIntegerLiteralAccess().getSvalAssignment_1(), "rule__IntegerLiteral__SvalAssignment_1");
					put(grammarAccess.getNullLiteralAccess().getValAssignment_1(), "rule__NullLiteral__ValAssignment_1");
					put(grammarAccess.getUndefinedLiteralAccess().getValAssignment_1(), "rule__UndefinedLiteral__ValAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getValAssignment_1(), "rule__StringLiteral__ValAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getValAssignment_1(), "rule__RealLiteral__ValAssignment_1");
					put(grammarAccess.getRegexpLiteralAccess().getValAssignment_1(), "rule__RegexpLiteral__ValAssignment_1");
					put(grammarAccess.getQueryLiteralAccess().getValAssignment_2(), "rule__QueryLiteral__ValAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser typedParser = (org.eclipse.b3.contentassist.antlr.internal.InternalBeeLangParser) parser;
			typedParser.entryRuleBeeModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BeeLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BeeLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
