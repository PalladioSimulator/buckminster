package org.eclipse.b3.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.b3.services.BeeLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
public class InternalBeeLangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_HEX", "RULE_PID", "RULE_STRING", "RULE_REAL", "RULE_REGEX", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'.'", "'~~~~~'", "'/'", "'-'", "'!'", "'@'", "'$'", "'%'", "'&'", "'+'", "'='", "'*'", "'<'", "'>'", "':'", "'?'", "'['", "'('", "','", "']'", "')'", "'import'", "'.*'", "';'", "'unit'", "'version'", "'implements'", "'{'", "'properties'", "'provides'", "'}'", "'requires'", "'meta'", "'advice'", "'sequential'", "'repositories'", "'when'", "'immutable'", "'unset'", "'#'", "'annotations'", "'hidden'", "'with'", "'layout'", "'group'", "'resolver'", "'..'", "'**'", "'precondition'", "'postcondition'", "'assert'", "'break'", "'continue'", "'while'", "'switch'", "'default'", "'case'", "'for'", "'in'", "'do'", "'return'", "'function'", "'if'", "'else'", "'throw'", "'try'", "'catch'", "'finally'", "'var'", "'||'", "'&&'", "'^'", "'|'", "'<<'", "'>>'", "'>>>'", "'++'", "'--'", "'typeof'", "'delete'", "'~'", "'new'", "'true'", "'false'", "'null'", "'undefined'", "'~{'", "'public'", "'private'", "'parallel'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'^='", "'|='", "'<<='", "'>>='", "'>>>='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'instanceof'"
    };
    public static final int RULE_ML_COMMENT=11;
    public static final int RULE_ID=4;
    public static final int RULE_WS=13;
    public static final int RULE_PID=7;
    public static final int EOF=-1;
    public static final int RULE_INT=5;
    public static final int RULE_REGEX=10;
    public static final int RULE_STRING=8;
    public static final int RULE_REAL=9;
    public static final int RULE_ANY_OTHER=14;
    public static final int RULE_HEX=6;
    public static final int RULE_SL_COMMENT=12;

        public InternalBeeLangParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[498+1];
         }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g"; }


     
     	private BeeLangGrammarAccess grammarAccess;
     	
        public InternalBeeLangParser(TokenStream input, IAstFactory factory, BeeLangGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/b3/parser/antlr/internal/InternalBeeLang.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "BeeModel";	
       	} 



    // $ANTLR start entryRuleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:1: entryRuleBeeModel returns [EObject current=null] : iv_ruleBeeModel= ruleBeeModel EOF ;
    public final EObject entryRuleBeeModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBeeModel = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:50: (iv_ruleBeeModel= ruleBeeModel EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:75:2: iv_ruleBeeModel= ruleBeeModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBeeModelRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBeeModel_in_entryRuleBeeModel79);
            iv_ruleBeeModel=ruleBeeModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBeeModel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBeeModel89); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBeeModel


    // $ANTLR start ruleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:82:1: ruleBeeModel returns [EObject current=null] : ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) ;
    public final EObject ruleBeeModel() throws RecognitionException {
        EObject current = null;

        EObject lv_imports_0 = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:87:6: ( ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==36) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:91:6: lv_imports_0= ruleImport
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleImport_in_ruleBeeModel148);
            	    lv_imports_0=ruleImport();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "imports", lv_imports_0, "Import", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:109:3: (lv_body_1= ruleUnit )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:112:6: lv_body_1= ruleUnit
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleUnit_in_ruleBeeModel187);
            lv_body_1=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_1, "Unit", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBeeModel


    // $ANTLR start entryRuleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:54: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:138:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQualifiedNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName225);
            iv_ruleQualifiedName=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName236); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQualifiedName


    // $ANTLR start ruleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:145:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;
        AntlrDatatypeRuleToken this_HIDDENBUG_9 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:153:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName276); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop2:
            do {
                int alt2=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt2=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt2=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt2=3;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName297); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_1);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:169:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName323); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_2);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:177:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName349); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:184:3: (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==15) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:185:2: kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,15,FOLLOW_15_in_ruleQualifiedName370); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              current.merge(kw);
            	              createLeafNode(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0(), null); 
            	          
            	    }
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName385); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop3:
            	    do {
            	        int alt3=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt3=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt3=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt3=3;
            	            }
            	            break;

            	        }

            	        switch (alt3) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName406); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_INT_6);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:205:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName432); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_HEX_7);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:213:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName458); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_ID_8);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName489);
            this_HIDDENBUG_9=ruleHIDDENBUG();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_HIDDENBUG_9);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQualifiedName


    // $ANTLR start entryRuleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:1: entryRuleHIDDENBUG returns [String current=null] : iv_ruleHIDDENBUG= ruleHIDDENBUG EOF ;
    public final String entryRuleHIDDENBUG() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleHIDDENBUG = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:50: (iv_ruleHIDDENBUG= ruleHIDDENBUG EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:240:2: iv_ruleHIDDENBUG= ruleHIDDENBUG EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getHIDDENBUGRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG533);
            iv_ruleHIDDENBUG=ruleHIDDENBUG();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleHIDDENBUG.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleHIDDENBUG544); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleHIDDENBUG


    // $ANTLR start ruleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:247:1: ruleHIDDENBUG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '~~~~~' )? ;
    public final AntlrDatatypeRuleToken ruleHIDDENBUG() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:6: ( (kw= '~~~~~' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==16) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:257:2: kw= '~~~~~'
                    {
                    kw=(Token)input.LT(1);
                    match(input,16,FOLLOW_16_in_ruleHIDDENBUG582); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleHIDDENBUG


    // $ANTLR start entryRulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:1: entryRulePropertyName returns [String current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final String entryRulePropertyName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:53: (iv_rulePropertyName= rulePropertyName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:273:2: iv_rulePropertyName= rulePropertyName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyName_in_entryRulePropertyName624);
            iv_rulePropertyName=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyName635); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyName


    // $ANTLR start rulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:280:1: rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_PID_0= RULE_PID ;
    public final AntlrDatatypeRuleToken rulePropertyName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_PID_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:286:6: (this_PID_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:287:5: this_PID_0= RULE_PID
            {
            this_PID_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyName674); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_PID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyName


    // $ANTLR start entryRuleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:1: entryRuleEscapedQualifiedName returns [String current=null] : iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF ;
    public final String entryRuleEscapedQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEscapedQualifiedName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:61: (iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:303:2: iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getEscapedQualifiedNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName717);
            iv_ruleEscapedQualifiedName=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleEscapedQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEscapedQualifiedName728); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleEscapedQualifiedName


    // $ANTLR start ruleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:310:1: ruleEscapedQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleEscapedQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_QualifiedName_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:316:6: ( (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_STRING) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_ID) ) {
                alt6=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName768); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:326:5: this_QualifiedName_1= ruleQualifiedName
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName801);
                    this_QualifiedName_1=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QualifiedName_1);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleEscapedQualifiedName


    // $ANTLR start entryRuleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:1: entryRuleInterfaceName returns [String current=null] : iv_ruleInterfaceName= ruleInterfaceName EOF ;
    public final String entryRuleInterfaceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInterfaceName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:54: (iv_ruleInterfaceName= ruleInterfaceName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:345:2: iv_ruleInterfaceName= ruleInterfaceName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInterfaceNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName845);
            iv_ruleInterfaceName=ruleInterfaceName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInterfaceName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterfaceName856); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInterfaceName


    // $ANTLR start ruleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:352:1: ruleInterfaceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_QualifiedName_0= ruleQualifiedName ;
    public final AntlrDatatypeRuleToken ruleInterfaceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:358:6: (this_QualifiedName_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:360:5: this_QualifiedName_0= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleInterfaceName902);
            this_QualifiedName_0=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInterfaceName


    // $ANTLR start entryRuleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:1: entryRuleCompoundName returns [String current=null] : iv_ruleCompoundName= ruleCompoundName EOF ;
    public final String entryRuleCompoundName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCompoundName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:53: (iv_ruleCompoundName= ruleCompoundName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:379:2: iv_ruleCompoundName= ruleCompoundName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundName_in_entryRuleCompoundName945);
            iv_ruleCompoundName=ruleCompoundName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundName956); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundName


    // $ANTLR start ruleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:386:1: ruleCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleCompoundName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;

        AntlrDatatypeRuleToken this_EscapedQualifiedName_2 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:392:6: ( (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:394:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1003);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }
            kw=(Token)input.LT(1);
            match(input,17,FOLLOW_17_in_ruleCompoundName1021); if (failed) return current;
            if ( backtracking==0 ) {

                      current.merge(kw);
                      createLeafNode(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1043);
            this_EscapedQualifiedName_2=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_2);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundName


    // $ANTLR start entryRuleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:1: entryRuleUnitName returns [String current=null] : iv_ruleUnitName= ruleUnitName EOF ;
    public final String entryRuleUnitName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnitName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:49: (iv_ruleUnitName= ruleUnitName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:430:2: iv_ruleUnitName= ruleUnitName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnitName_in_entryRuleUnitName1087);
            iv_ruleUnitName=ruleUnitName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnitName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnitName1098); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnitName


    // $ANTLR start ruleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:437:1: ruleUnitName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken ruleUnitName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:443:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:445:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1144);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnitName


    // $ANTLR start entryRulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:1: entryRulePartName returns [String current=null] : iv_rulePartName= rulePartName EOF ;
    public final String entryRulePartName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePartName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:49: (iv_rulePartName= rulePartName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:464:2: iv_rulePartName= rulePartName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPartNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePartName_in_entryRulePartName1187);
            iv_rulePartName=rulePartName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePartName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePartName1198); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartName


    // $ANTLR start rulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:471:1: rulePartName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken rulePartName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:477:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:479:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_rulePartName1244);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartName


    // $ANTLR start entryRuleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:1: entryRuleSeparator returns [String current=null] : iv_ruleSeparator= ruleSeparator EOF ;
    public final String entryRuleSeparator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSeparator = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:50: (iv_ruleSeparator= ruleSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:498:2: iv_ruleSeparator= ruleSeparator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSeparatorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSeparator_in_entryRuleSeparator1287);
            iv_ruleSeparator=ruleSeparator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSeparator.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSeparator1298); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSeparator


    // $ANTLR start ruleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:505:1: ruleSeparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) ;
    public final AntlrDatatypeRuleToken ruleSeparator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:6: ( (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            int alt7=14;
            switch ( input.LA(1) ) {
            case 15:
                {
                alt7=1;
                }
                break;
            case 18:
                {
                alt7=2;
                }
                break;
            case 19:
                {
                alt7=3;
                }
                break;
            case 20:
                {
                alt7=4;
                }
                break;
            case 21:
                {
                alt7=5;
                }
                break;
            case 22:
                {
                alt7=6;
                }
                break;
            case 23:
                {
                alt7=7;
                }
                break;
            case 24:
                {
                alt7=8;
                }
                break;
            case 25:
                {
                alt7=9;
                }
                break;
            case 26:
                {
                alt7=10;
                }
                break;
            case 27:
                {
                alt7=11;
                }
                break;
            case 28:
                {
                alt7=12;
                }
                break;
            case 29:
                {
                alt7=13;
                }
                break;
            case 30:
                {
                alt7=14;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:513:2: kw= '.'
                    {
                    kw=(Token)input.LT(1);
                    match(input,15,FOLLOW_15_in_ruleSeparator1336); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getFullStopKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:520:2: kw= '-'
                    {
                    kw=(Token)input.LT(1);
                    match(input,18,FOLLOW_18_in_ruleSeparator1355); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:527:2: kw= '!'
                    {
                    kw=(Token)input.LT(1);
                    match(input,19,FOLLOW_19_in_ruleSeparator1374); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:534:2: kw= '@'
                    {
                    kw=(Token)input.LT(1);
                    match(input,20,FOLLOW_20_in_ruleSeparator1393); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:541:2: kw= '$'
                    {
                    kw=(Token)input.LT(1);
                    match(input,21,FOLLOW_21_in_ruleSeparator1412); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:548:2: kw= '%'
                    {
                    kw=(Token)input.LT(1);
                    match(input,22,FOLLOW_22_in_ruleSeparator1431); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5(), null); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:555:2: kw= '&'
                    {
                    kw=(Token)input.LT(1);
                    match(input,23,FOLLOW_23_in_ruleSeparator1450); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6(), null); 
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:562:2: kw= '+'
                    {
                    kw=(Token)input.LT(1);
                    match(input,24,FOLLOW_24_in_ruleSeparator1469); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7(), null); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:569:2: kw= '='
                    {
                    kw=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_ruleSeparator1488); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8(), null); 
                          
                    }

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:576:2: kw= '*'
                    {
                    kw=(Token)input.LT(1);
                    match(input,26,FOLLOW_26_in_ruleSeparator1507); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9(), null); 
                          
                    }

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:583:2: kw= '<'
                    {
                    kw=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_ruleSeparator1526); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10(), null); 
                          
                    }

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:590:2: kw= '>'
                    {
                    kw=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_ruleSeparator1545); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11(), null); 
                          
                    }

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:597:2: kw= ':'
                    {
                    kw=(Token)input.LT(1);
                    match(input,29,FOLLOW_29_in_ruleSeparator1564); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getColonKeyword_12(), null); 
                          
                    }

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:604:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_ruleSeparator1583); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSeparator


    // $ANTLR start entryRuleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:1: entryRuleAlfanumSym returns [String current=null] : iv_ruleAlfanumSym= ruleAlfanumSym EOF ;
    public final String entryRuleAlfanumSym() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAlfanumSym = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:51: (iv_ruleAlfanumSym= ruleAlfanumSym EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:618:2: iv_ruleAlfanumSym= ruleAlfanumSym EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAlfanumSymRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1622);
            iv_ruleAlfanumSym=ruleAlfanumSym();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAlfanumSym.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAlfanumSym1633); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAlfanumSym


    // $ANTLR start ruleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:625:1: ruleAlfanumSym returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) ;
    public final AntlrDatatypeRuleToken ruleAlfanumSym() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_REAL_3=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_REAL_8=null;
        AntlrDatatypeRuleToken this_Separator_4 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:631:6: ( ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )
            int alt8=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt8=1;
                }
                break;
            case RULE_INT:
                {
                alt8=2;
                }
                break;
            case RULE_HEX:
                {
                alt8=3;
                }
                break;
            case RULE_REAL:
                {
                alt8=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:7: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1674); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_ID_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:640:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1700); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:648:10: this_HEX_2= RULE_HEX
                    {
                    this_HEX_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1726); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_HEX_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:656:10: this_REAL_3= RULE_REAL
                    {
                    this_REAL_3=(Token)input.LT(1);
                    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1752); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_REAL_3);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:663:2: (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            loop9:
            do {
                int alt9=6;
                switch ( input.LA(1) ) {
                case 15:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                    {
                    alt9=1;
                    }
                    break;
                case RULE_ID:
                    {
                    alt9=2;
                    }
                    break;
                case RULE_INT:
                    {
                    alt9=3;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt9=4;
                    }
                    break;
                case RULE_REAL:
                    {
                    alt9=5;
                    }
                    break;

                }

                switch (alt9) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:664:5: this_Separator_4= ruleSeparator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              currentNode=createCompositeNode(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0(), currentNode); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleSeparator_in_ruleAlfanumSym1781);
            	    this_Separator_4=ruleSeparator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_Separator_4);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              currentNode = currentNode.getParent();
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:675:10: this_ID_5= RULE_ID
            	    {
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1807); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:683:10: this_INT_6= RULE_INT
            	    {
            	    this_INT_6=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1833); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_6);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:691:10: this_HEX_7= RULE_HEX
            	    {
            	    this_HEX_7=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1859); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_7);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:699:10: this_REAL_8= RULE_REAL
            	    {
            	    this_REAL_8=(Token)input.LT(1);
            	    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1885); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_REAL_8);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAlfanumSym


    // $ANTLR start entryRuleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:1: entryRuleVersion returns [EObject current=null] : iv_ruleVersion= ruleVersion EOF ;
    public final EObject entryRuleVersion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVersion = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:49: (iv_ruleVersion= ruleVersion EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:715:2: iv_ruleVersion= ruleVersion EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVersionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVersion_in_entryRuleVersion1930);
            iv_ruleVersion=ruleVersion();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVersion; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersion1940); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersion


    // $ANTLR start ruleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:722:1: ruleVersion returns [EObject current=null] : ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) ) ;
    public final EObject ruleVersion() throws RecognitionException {
        EObject current = null;

        Token lv_original_0=null;
        AntlrDatatypeRuleToken lv_original_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:727:6: ( ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=RULE_ID && LA10_0<=RULE_HEX)||LA10_0==RULE_REAL) ) {
                alt10=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("728:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:2: (lv_original_0= RULE_STRING )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:2: (lv_original_0= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:730:6: lv_original_0= RULE_STRING
                    {
                    lv_original_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVersion1987); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getVersionAccess().getOriginalSTRINGTerminalRuleCall_0_0(), "original"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "original", lv_original_0, "STRING", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:749:6: (lv_original_1= ruleAlfanumSym )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:749:6: (lv_original_1= ruleAlfanumSym )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:752:6: lv_original_1= ruleAlfanumSym
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionAccess().getOriginalAlfanumSymParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAlfanumSym_in_ruleVersion2035);
                    lv_original_1=ruleAlfanumSym();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "original", lv_original_1, "AlfanumSym", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersion


    // $ANTLR start entryRuleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:777:1: entryRuleVersionRange returns [EObject current=null] : iv_ruleVersionRange= ruleVersionRange EOF ;
    public final EObject entryRuleVersionRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVersionRange = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:777:54: (iv_ruleVersionRange= ruleVersionRange EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:778:2: iv_ruleVersionRange= ruleVersionRange EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVersionRangeRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVersionRange_in_entryRuleVersionRange2072);
            iv_ruleVersionRange=ruleVersionRange();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVersionRange; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersionRange2082); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersionRange


    // $ANTLR start ruleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:785:1: ruleVersionRange returns [EObject current=null] : ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) ) ;
    public final EObject ruleVersionRange() throws RecognitionException {
        EObject current = null;

        Token lv_minLimit_0=null;
        Token lv_maxLimit_4=null;
        EObject lv_min_1 = null;

        EObject lv_max_3 = null;

        EObject lv_min_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:790:6: ( ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=31 && LA14_0<=32)) ) {
                alt14=1;
            }
            else if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_HEX)||(LA14_0>=RULE_STRING && LA14_0<=RULE_REAL)) ) {
                alt14=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("791:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:2: ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:2: ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:3: (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:791:3: (lv_minLimit_0= ( '[' | '(' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:793:6: lv_minLimit_0= ( '[' | '(' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:793:20: ( '[' | '(' )
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==31) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==32) ) {
                        alt11=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("793:20: ( '[' | '(' )", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:793:21: '['
                            {
                            match(input,31,FOLLOW_31_in_ruleVersionRange2130); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMinLimitLeftSquareBracketKeyword_0_0_0_0(), "minLimit"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:799:6: '('
                            {
                            match(input,32,FOLLOW_32_in_ruleVersionRange2146); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMinLimitLeftParenthesisKeyword_0_0_0_1(), "minLimit"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "minLimit", /* lv_minLimit_0 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:819:2: (lv_min_1= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:822:6: lv_min_1= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMinVersionParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2195);
                    lv_min_1=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "min", lv_min_1, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:840:2: ( ',' (lv_max_3= ruleVersion ) )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==33) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:840:3: ',' (lv_max_3= ruleVersion )
                            {
                            match(input,33,FOLLOW_33_in_ruleVersionRange2209); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:844:1: (lv_max_3= ruleVersion )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:847:6: lv_max_3= ruleVersion
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMaxVersionParserRuleCall_0_2_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2243);
                            lv_max_3=ruleVersion();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "max", lv_max_3, "Version", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:865:4: (lv_maxLimit_4= ( ']' | ')' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:867:6: lv_maxLimit_4= ( ']' | ')' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:867:20: ( ']' | ')' )
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==34) ) {
                        alt13=1;
                    }
                    else if ( (LA13_0==35) ) {
                        alt13=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("867:20: ( ']' | ')' )", 13, 0, input);

                        throw nvae;
                    }
                    switch (alt13) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:867:21: ']'
                            {
                            match(input,34,FOLLOW_34_in_ruleVersionRange2271); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMaxLimitRightSquareBracketKeyword_0_3_0_0(), "maxLimit"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:873:6: ')'
                            {
                            match(input,35,FOLLOW_35_in_ruleVersionRange2287); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMaxLimitRightParenthesisKeyword_0_3_0_1(), "maxLimit"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "maxLimit", /* lv_maxLimit_4 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:894:6: (lv_min_5= ruleVersion )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:894:6: (lv_min_5= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:897:6: lv_min_5= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMinVersionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2343);
                    lv_min_5=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "min", lv_min_5, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersionRange


    // $ANTLR start entryRuleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:922:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:922:48: (iv_ruleImport= ruleImport EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:923:2: iv_ruleImport= ruleImport EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleImport_in_entryRuleImport2380);
            iv_ruleImport=ruleImport();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleImport2390); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleImport


    // $ANTLR start ruleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:930:1: ruleImport returns [EObject current=null] : ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_importClass_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:935:6: ( ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:936:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:936:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:936:2: 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';'
            {
            match(input,36,FOLLOW_36_in_ruleImport2424); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getImportAccess().getImportKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:940:1: (lv_importClass_1= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:943:6: lv_importClass_1= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getImportAccess().getImportClassQualifiedNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleImport2458);
            lv_importClass_1=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "importClass", lv_importClass_1, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:2: ( '.*' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==37) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:3: '.*'
                    {
                    match(input,37,FOLLOW_37_in_ruleImport2472); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2(), null); 
                          
                    }

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleImport2483); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleImport


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:976:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:976:46: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:977:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnit_in_entryRuleUnit2516);
            iv_ruleUnit=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnit2526); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:984:1: ruleUnit returns [EObject current=null] : ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        Enumerator lv_executionMode_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_version_4 = null;

        AntlrDatatypeRuleToken lv_implements_6 = null;

        AntlrDatatypeRuleToken lv_implements_8 = null;

        EObject lv_CompoundPropertyOperation_11 = null;

        EObject lv_providedCapabilities_14 = null;

        EObject lv_providedCapabilities_18 = null;

        EObject lv_requiredCapabilities_22 = null;

        EObject lv_requiredCapabilities_26 = null;

        EObject lv_metaRequiredCapabilities_31 = null;

        EObject lv_metaRequiredCapabilities_36 = null;

        EObject lv_advice_39 = null;

        EObject lv_synchronizations_42 = null;

        EObject lv_synchronizations_45 = null;

        EObject lv_parts_46 = null;

        EObject lv_repositoryConfigurations_49 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:991:6: ( ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:2: (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:2: (lv_executionMode_0= ruleExecutionMode )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==49||LA16_0==104) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:995:6: lv_executionMode_0= ruleExecutionMode
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleUnit2585);
                    lv_executionMode_0=ruleExecutionMode();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "executionMode", lv_executionMode_0, "ExecutionMode", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,39,FOLLOW_39_in_ruleUnit2599); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1017:1: (lv_name_2= ruleUnitName )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID||LA17_0==RULE_STRING) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1020:6: lv_name_2= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleUnit2633);
                    lv_name_2=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1038:3: ( 'version' (lv_version_4= ruleVersion ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==40) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1038:4: 'version' (lv_version_4= ruleVersion )
                    {
                    match(input,40,FOLLOW_40_in_ruleUnit2648); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1042:1: (lv_version_4= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1045:6: lv_version_4= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleUnit2682);
                    lv_version_4=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "version", lv_version_4, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1063:4: ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==41) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1063:5: 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    {
                    match(input,41,FOLLOW_41_in_ruleUnit2698); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1067:1: (lv_implements_6= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1070:6: lv_implements_6= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2732);
                    lv_implements_6=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "implements", lv_implements_6, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1088:2: ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==33) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1088:3: ',' (lv_implements_8= ruleInterfaceName )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleUnit2746); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1092:1: (lv_implements_8= ruleInterfaceName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1095:6: lv_implements_8= ruleInterfaceName
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2780);
                    	    lv_implements_8=ruleInterfaceName();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "implements", lv_implements_8, "InterfaceName", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleUnit2797); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1117:1: ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==43) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1117:2: 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements )
            	    {
            	    match(input,43,FOLLOW_43_in_ruleUnit2807); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1121:1: (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1124:6: lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getCompoundPropertyOperationNamedPropertyStatementsParserRuleCall_6_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2841);
            	    lv_CompoundPropertyOperation_11=ruleNamedPropertyStatements();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "CompoundPropertyOperation", lv_CompoundPropertyOperation_11, "NamedPropertyStatements", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1142:4: ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )*
            loop27:
            do {
                int alt27=12;
                alt27 = dfa27.predict(input);
                switch (alt27) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1142:5: ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1142:5: ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1142:6: 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2858); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0(), null); 
            	          
            	    }
            	    match(input,42,FOLLOW_42_in_ruleUnit2867); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1150:1: ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+
            	    int cnt22=0;
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==RULE_ID||LA22_0==51) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1150:2: (lv_providedCapabilities_14= ruleProvidedCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1150:2: (lv_providedCapabilities_14= ruleProvidedCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1153:6: lv_providedCapabilities_14= ruleProvidedCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_0_2_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2902);
            	    	    lv_providedCapabilities_14=ruleProvidedCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "providedCapabilities", lv_providedCapabilities_14, "ProvidedCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit2915); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt22 >= 1 ) break loop22;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(22, input);
            	                throw eee;
            	        }
            	        cnt22++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit2926); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1180:6: ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1180:6: ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1180:7: 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2943); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1184:1: (lv_providedCapabilities_18= ruleProvidedCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1187:6: lv_providedCapabilities_18= ruleProvidedCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2977);
            	    lv_providedCapabilities_18=ruleProvidedCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "providedCapabilities", lv_providedCapabilities_18, "ProvidedCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit2990); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1210:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1210:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1210:7: 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit3007); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0(), null); 
            	          
            	    }
            	    match(input,42,FOLLOW_42_in_ruleUnit3016); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1218:1: ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+
            	    int cnt23=0;
            	    loop23:
            	    do {
            	        int alt23=2;
            	        int LA23_0 = input.LA(1);

            	        if ( (LA23_0==RULE_ID||LA23_0==51) ) {
            	            alt23=1;
            	        }


            	        switch (alt23) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1218:2: (lv_requiredCapabilities_22= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1218:2: (lv_requiredCapabilities_22= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1221:6: lv_requiredCapabilities_22= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3051);
            	    	    lv_requiredCapabilities_22=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "requiredCapabilities", lv_requiredCapabilities_22, "RequiredCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit3064); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt23 >= 1 ) break loop23;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(23, input);
            	                throw eee;
            	        }
            	        cnt23++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3075); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1248:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1248:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1248:7: 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit3092); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1252:1: (lv_requiredCapabilities_26= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1255:6: lv_requiredCapabilities_26= ruleRequiredCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3126);
            	    lv_requiredCapabilities_26=ruleRequiredCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "requiredCapabilities", lv_requiredCapabilities_26, "RequiredCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3139); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1278:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1278:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1278:7: 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3156); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0(), null); 
            	          
            	    }
            	    match(input,46,FOLLOW_46_in_ruleUnit3165); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1(), null); 
            	          
            	    }
            	    match(input,42,FOLLOW_42_in_ruleUnit3174); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1290:1: ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+
            	    int cnt24=0;
            	    loop24:
            	    do {
            	        int alt24=2;
            	        int LA24_0 = input.LA(1);

            	        if ( (LA24_0==RULE_ID||LA24_0==51) ) {
            	            alt24=1;
            	        }


            	        switch (alt24) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1290:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1290:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1293:6: lv_metaRequiredCapabilities_31= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3209);
            	    	    lv_metaRequiredCapabilities_31=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_31, "RequiredCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit3222); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt24 >= 1 ) break loop24;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(24, input);
            	                throw eee;
            	        }
            	        cnt24++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3233); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1320:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1320:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1320:7: 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3250); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0(), null); 
            	          
            	    }
            	    match(input,46,FOLLOW_46_in_ruleUnit3259); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1328:1: (lv_metaRequiredCapabilities_36= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1331:6: lv_metaRequiredCapabilities_36= ruleRequiredCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3293);
            	    lv_metaRequiredCapabilities_36=ruleRequiredCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_36, "RequiredCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3306); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1354:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1354:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1354:7: 'advice' (lv_advice_39= ruleNamedAdvice )
            	    {
            	    match(input,48,FOLLOW_48_in_ruleUnit3323); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1358:1: (lv_advice_39= ruleNamedAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1361:6: lv_advice_39= ruleNamedAdvice
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleNamedAdvice_in_ruleUnit3357);
            	    lv_advice_39=ruleNamedAdvice();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "advice", lv_advice_39, "NamedAdvice", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1380:6: ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1380:6: ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1380:7: 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}'
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3378); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0(), null); 
            	          
            	    }
            	    match(input,42,FOLLOW_42_in_ruleUnit3387); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1388:1: (lv_synchronizations_42= ruleSynchronization )+
            	    int cnt25=0;
            	    loop25:
            	    do {
            	        int alt25=2;
            	        int LA25_0 = input.LA(1);

            	        if ( (LA25_0==RULE_ID||LA25_0==RULE_STRING) ) {
            	            alt25=1;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1391:6: lv_synchronizations_42= ruleSynchronization
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_7_7_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3421);
            	    	    lv_synchronizations_42=ruleSynchronization();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "synchronizations", lv_synchronizations_42, "Synchronization", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt25 >= 1 ) break loop25;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(25, input);
            	                throw eee;
            	        }
            	        cnt25++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3435); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1414:6: ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1414:6: ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1414:7: 'sequential' (lv_synchronizations_45= ruleSynchronization )
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3452); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1418:1: (lv_synchronizations_45= ruleSynchronization )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1421:6: lv_synchronizations_45= ruleSynchronization
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_7_8_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3486);
            	    lv_synchronizations_45=ruleSynchronization();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "synchronizations", lv_synchronizations_45, "Synchronization", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1440:6: (lv_parts_46= rulePart )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1440:6: (lv_parts_46= rulePart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:6: lv_parts_46= rulePart
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getPartsPartParserRuleCall_7_9_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePart_in_ruleUnit3531);
            	    lv_parts_46=rulePart();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "parts", lv_parts_46, "Part", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;
            	case 11 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1462:6: ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1462:6: ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1462:7: 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}'
            	    {
            	    match(input,50,FOLLOW_50_in_ruleUnit3551); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0(), null); 
            	          
            	    }
            	    match(input,42,FOLLOW_42_in_ruleUnit3560); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1470:1: (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==RULE_STRING||LA26_0==60) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1473:6: lv_repositoryConfigurations_49= ruleRepositoryConfiguration
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRepositoryConfigurationsRepositoryConfigurationParserRuleCall_7_10_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3594);
            	    	    lv_repositoryConfigurations_49=ruleRepositoryConfiguration();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "repositoryConfigurations", lv_repositoryConfigurations_49, "RepositoryConfiguration", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3608); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleUnit3620); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1506:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProvidedCapability = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1506:60: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1507:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3653);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleProvidedCapability; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleProvidedCapability3663); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1514:1: ruleProvidedCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;

        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        EObject lv_version_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1519:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1520:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1520:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1520:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1520:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==51) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1520:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleProvidedCapability3698); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1524:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1527:6: lv_filter_1= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_ruleProvidedCapability3732);
                    lv_filter_1=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1545:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1548:6: lv_interface_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3772);
            lv_interface_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,17,FOLLOW_17_in_ruleProvidedCapability3785); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1570:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1573:6: lv_name_4= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3819);
            lv_name_4=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1591:2: ( '/' (lv_version_6= ruleVersion ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==17) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1591:3: '/' (lv_version_6= ruleVersion )
                    {
                    match(input,17,FOLLOW_17_in_ruleProvidedCapability3833); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1595:1: (lv_version_6= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1598:6: lv_version_6= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleProvidedCapability3867);
                    lv_version_6=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "version", lv_version_6, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1623:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRequiredCapability = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1623:60: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1624:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3906);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRequiredCapability; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRequiredCapability3916); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1631:1: ruleRequiredCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        EObject lv_range_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1636:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1637:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1637:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1637:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1637:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==51) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1637:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleRequiredCapability3951); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1641:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1644:6: lv_filter_1= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_ruleRequiredCapability3985);
                    lv_filter_1=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1662:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1665:6: lv_interface_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability4025);
            lv_interface_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,17,FOLLOW_17_in_ruleRequiredCapability4038); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1687:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1690:6: lv_name_4= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability4072);
            lv_name_4=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1708:2: ( '/' (lv_range_6= ruleVersionRange ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==17) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1708:3: '/' (lv_range_6= ruleVersionRange )
                    {
                    match(input,17,FOLLOW_17_in_ruleRequiredCapability4086); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1712:1: (lv_range_6= ruleVersionRange )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1715:6: lv_range_6= ruleVersionRange
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersionRange_in_ruleRequiredCapability4120);
                    lv_range_6=ruleVersionRange();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "range", lv_range_6, "VersionRange", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRuleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1740:1: entryRuleNamedPropertyStatements returns [EObject current=null] : iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF ;
    public final EObject entryRuleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedPropertyStatements = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1740:65: (iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1741:2: iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNamedPropertyStatementsRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4159);
            iv_ruleNamedPropertyStatements=ruleNamedPropertyStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNamedPropertyStatements; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedPropertyStatements4169); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedPropertyStatements


    // $ANTLR start ruleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1748:1: ruleNamedPropertyStatements returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) ) ;
    public final EObject ruleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1753:6: ( ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1754:1: ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1754:1: ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1754:2: (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1754:2: (lv_name_0= RULE_ID )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1756:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4216); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1774:3: (lv_body_1= ruleCompoundPropertyOperation )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1777:6: lv_body_1= ruleCompoundPropertyOperation
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNamedPropertyStatementsAccess().getBodyCompoundPropertyOperationParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleNamedPropertyStatements4259);
            lv_body_1=ruleCompoundPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_1, "CompoundPropertyOperation", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedPropertyStatements


    // $ANTLR start entryRuleCompoundPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1802:1: entryRuleCompoundPropertyOperation returns [EObject current=null] : iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF ;
    public final EObject entryRuleCompoundPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1802:67: (iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1803:2: iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_entryRuleCompoundPropertyOperation4296);
            iv_ruleCompoundPropertyOperation=ruleCompoundPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundPropertyOperation4306); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundPropertyOperation


    // $ANTLR start ruleCompoundPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1810:1: ruleCompoundPropertyOperation returns [EObject current=null] : ( '{' (lv_operations_1= rulePropertyOperation )* '}' ) ;
    public final EObject ruleCompoundPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operations_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:6: ( ( '{' (lv_operations_1= rulePropertyOperation )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1816:1: ( '{' (lv_operations_1= rulePropertyOperation )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1816:1: ( '{' (lv_operations_1= rulePropertyOperation )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1816:2: '{' (lv_operations_1= rulePropertyOperation )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundPropertyOperation4340); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPropertyOperationAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1820:1: (lv_operations_1= rulePropertyOperation )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_PID||LA33_0==42||(LA33_0>=51 && LA33_0<=53)) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1823:6: lv_operations_1= rulePropertyOperation
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundPropertyOperationAccess().getOperationsPropertyOperationParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePropertyOperation_in_ruleCompoundPropertyOperation4374);
            	    lv_operations_1=rulePropertyOperation();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundPropertyOperationRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "operations", lv_operations_1, "PropertyOperation", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundPropertyOperation4388); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPropertyOperationAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundPropertyOperation


    // $ANTLR start entryRulePropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1852:1: entryRulePropertyOperation returns [EObject current=null] : iv_rulePropertyOperation= rulePropertyOperation EOF ;
    public final EObject entryRulePropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1852:59: (iv_rulePropertyOperation= rulePropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1853:2: iv_rulePropertyOperation= rulePropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyOperation_in_entryRulePropertyOperation4421);
            iv_rulePropertyOperation=rulePropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyOperation4431); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyOperation


    // $ANTLR start rulePropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1860:1: rulePropertyOperation returns [EObject current=null] : (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation ) ;
    public final EObject rulePropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject this_FilteredPropertyOperation_0 = null;

        EObject this_SetPropertyOperation_1 = null;

        EObject this_UnsetPropertyOperation_2 = null;

        EObject this_CompoundPropertyOperation_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1865:6: ( (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1866:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1866:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )
            int alt34=4;
            switch ( input.LA(1) ) {
            case 51:
                {
                alt34=1;
                }
                break;
            case RULE_PID:
            case 52:
                {
                alt34=2;
                }
                break;
            case 53:
                {
                alt34=3;
                }
                break;
            case 42:
                {
                alt34=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1866:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1867:5: this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getFilteredPropertyOperationParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFilteredPropertyOperation_in_rulePropertyOperation4478);
                    this_FilteredPropertyOperation_0=ruleFilteredPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FilteredPropertyOperation_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1877:5: this_SetPropertyOperation_1= ruleSetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getSetPropertyOperationParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSetPropertyOperation_in_rulePropertyOperation4505);
                    this_SetPropertyOperation_1=ruleSetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_SetPropertyOperation_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1887:5: this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getUnsetPropertyOperationParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_rulePropertyOperation4532);
                    this_UnsetPropertyOperation_2=ruleUnsetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnsetPropertyOperation_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1897:5: this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getCompoundPropertyOperationParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_rulePropertyOperation4559);
                    this_CompoundPropertyOperation_3=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundPropertyOperation_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyOperation


    // $ANTLR start entryRuleFilteredPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1912:1: entryRuleFilteredPropertyOperation returns [EObject current=null] : iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF ;
    public final EObject entryRuleFilteredPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilteredPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1912:67: (iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1913:2: iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilteredPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilteredPropertyOperation_in_entryRuleFilteredPropertyOperation4591);
            iv_ruleFilteredPropertyOperation=ruleFilteredPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilteredPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilteredPropertyOperation4601); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilteredPropertyOperation


    // $ANTLR start ruleFilteredPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1920:1: ruleFilteredPropertyOperation returns [EObject current=null] : ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) ) ;
    public final EObject ruleFilteredPropertyOperation() throws RecognitionException {
        EObject current = null;

        Token lv_body_2=null;
        EObject lv_filter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1925:6: ( ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1926:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1926:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1926:2: 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) )
            {
            match(input,51,FOLLOW_51_in_ruleFilteredPropertyOperation4635); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilteredPropertyOperationAccess().getWhenKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1930:1: (lv_filter_1= ruleFilter )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1933:6: lv_filter_1= ruleFilter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getFilterFilterParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleFilter_in_ruleFilteredPropertyOperation4669);
            lv_filter_1=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1951:2: (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1953:6: lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1953:16: ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )
            int alt35=3;
            switch ( input.LA(1) ) {
            case RULE_PID:
            case 52:
                {
                alt35=1;
                }
                break;
            case 53:
                {
                alt35=2;
                }
                break;
            case 42:
                {
                alt35=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1953:16: ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1953:18: ruleSetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodySetPropertyOperationParserRuleCall_2_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSetPropertyOperation_in_ruleFilteredPropertyOperation4699);
                    ruleSetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1960:7: ruleUnsetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodyUnsetPropertyOperationParserRuleCall_2_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_ruleFilteredPropertyOperation4713);
                    ruleUnsetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1967:7: ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodyCompoundPropertyOperationParserRuleCall_2_0_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleFilteredPropertyOperation4727);
                    ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_2, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilteredPropertyOperation


    // $ANTLR start entryRuleSetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1995:1: entryRuleSetPropertyOperation returns [EObject current=null] : iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF ;
    public final EObject entryRuleSetPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1995:62: (iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1996:2: iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSetPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSetPropertyOperation_in_entryRuleSetPropertyOperation4769);
            iv_ruleSetPropertyOperation=ruleSetPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSetPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetPropertyOperation4779); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSetPropertyOperation


    // $ANTLR start ruleSetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2003:1: ruleSetPropertyOperation returns [EObject current=null] : ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' ) ;
    public final EObject ruleSetPropertyOperation() throws RecognitionException {
        EObject current = null;

        Token lv_immutable_0=null;
        AntlrDatatypeRuleToken lv_key_1 = null;

        Enumerator lv_op_2 = null;

        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2008:6: ( ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2009:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2009:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2009:2: (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2009:2: (lv_immutable_0= 'immutable' )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==52) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2011:6: lv_immutable_0= 'immutable'
                    {
                    lv_immutable_0=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_ruleSetPropertyOperation4825); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSetPropertyOperationAccess().getImmutableImmutableKeyword_0_0(), "immutable"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2030:3: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2033:6: lv_key_1= rulePropertyName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePropertyName_in_ruleSetPropertyOperation4873);
            lv_key_1=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2051:2: (lv_op_2= ruleAssignmentOperator )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2054:6: lv_op_2= ruleAssignmentOperator
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getOpAssignmentOperatorEnumRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleSetPropertyOperation4911);
            lv_op_2=ruleAssignmentOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "op", lv_op_2, "AssignmentOperator", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2072:2: (lv_value_3= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2075:6: lv_value_3= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getValueExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleSetPropertyOperation4949);
            lv_value_3=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "value", lv_value_3, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,38,FOLLOW_38_in_ruleSetPropertyOperation4962); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSetPropertyOperationAccess().getSemicolonKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSetPropertyOperation


    // $ANTLR start entryRuleUnsetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2104:1: entryRuleUnsetPropertyOperation returns [EObject current=null] : iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF ;
    public final EObject entryRuleUnsetPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2104:64: (iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2105:2: iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnsetPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_entryRuleUnsetPropertyOperation4995);
            iv_ruleUnsetPropertyOperation=ruleUnsetPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnsetPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnsetPropertyOperation5005); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnsetPropertyOperation


    // $ANTLR start ruleUnsetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2112:1: ruleUnsetPropertyOperation returns [EObject current=null] : ( 'unset' (lv_key_1= rulePropertyName ) ';' ) ;
    public final EObject ruleUnsetPropertyOperation() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_key_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2117:6: ( ( 'unset' (lv_key_1= rulePropertyName ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2118:1: ( 'unset' (lv_key_1= rulePropertyName ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2118:1: ( 'unset' (lv_key_1= rulePropertyName ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2118:2: 'unset' (lv_key_1= rulePropertyName ) ';'
            {
            match(input,53,FOLLOW_53_in_ruleUnsetPropertyOperation5039); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnsetPropertyOperationAccess().getUnsetKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2122:1: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2125:6: lv_key_1= rulePropertyName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnsetPropertyOperationAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePropertyName_in_ruleUnsetPropertyOperation5073);
            lv_key_1=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnsetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,38,FOLLOW_38_in_ruleUnsetPropertyOperation5086); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnsetPropertyOperationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnsetPropertyOperation


    // $ANTLR start entryRuleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2154:1: entryRuleSynchronization returns [EObject current=null] : iv_ruleSynchronization= ruleSynchronization EOF ;
    public final EObject entryRuleSynchronization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSynchronization = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2154:57: (iv_ruleSynchronization= ruleSynchronization EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2155:2: iv_ruleSynchronization= ruleSynchronization EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSynchronizationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSynchronization_in_entryRuleSynchronization5119);
            iv_ruleSynchronization=ruleSynchronization();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSynchronization; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronization5129); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronization


    // $ANTLR start ruleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2162:1: ruleSynchronization returns [EObject current=null] : ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) ;
    public final EObject ruleSynchronization() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_partrefs_0 = null;

        AntlrDatatypeRuleToken lv_partrefs_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2167:6: ( ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2168:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2168:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2168:2: (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2168:2: (lv_partrefs_0= ruleSynchronizedPart )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2171:6: lv_partrefs_0= ruleSynchronizedPart
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5188);
            lv_partrefs_0=ruleSynchronizedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "partrefs", lv_partrefs_0, "SynchronizedPart", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2189:2: ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+
            int cnt37=0;
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==33) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2189:3: ',' (lv_partrefs_2= ruleSynchronizedPart )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleSynchronization5202); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2193:1: (lv_partrefs_2= ruleSynchronizedPart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2196:6: lv_partrefs_2= ruleSynchronizedPart
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5236);
            	    lv_partrefs_2=ruleSynchronizedPart();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "partrefs", lv_partrefs_2, "SynchronizedPart", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt37 >= 1 ) break loop37;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(37, input);
                        throw eee;
                }
                cnt37++;
            } while (true);

            match(input,38,FOLLOW_38_in_ruleSynchronization5251); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronization


    // $ANTLR start entryRuleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2225:1: entryRuleSynchronizedPart returns [String current=null] : iv_ruleSynchronizedPart= ruleSynchronizedPart EOF ;
    public final String entryRuleSynchronizedPart() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSynchronizedPart = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2225:57: (iv_ruleSynchronizedPart= ruleSynchronizedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2226:2: iv_ruleSynchronizedPart= ruleSynchronizedPart EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSynchronizedPartRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5285);
            iv_ruleSynchronizedPart=ruleSynchronizedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSynchronizedPart.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronizedPart5296); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronizedPart


    // $ANTLR start ruleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2233:1: ruleSynchronizedPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) ;
    public final AntlrDatatypeRuleToken ruleSynchronizedPart() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_CompoundName_0 = null;

        AntlrDatatypeRuleToken this_PartName_2 = null;

        AntlrDatatypeRuleToken this_PartName_3 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2239:6: ( ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2240:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2240:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2240:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2240:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2241:5: this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )?
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5344);
                    this_CompoundName_0=ruleCompoundName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_CompoundName_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2251:1: (kw= '#' this_PartName_2= rulePartName )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==54) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2252:2: kw= '#' this_PartName_2= rulePartName
                            {
                            kw=(Token)input.LT(1);
                            match(input,54,FOLLOW_54_in_ruleSynchronizedPart5363); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0(), null); 
                                  
                            }
                            if ( backtracking==0 ) {
                               
                                      currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1(), currentNode); 
                                  
                            }
                            pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5385);
                            this_PartName_2=rulePartName();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              		current.merge(this_PartName_2);
                                  
                            }
                            if ( backtracking==0 ) {
                               
                                      currentNode = currentNode.getParent();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2270:5: this_PartName_3= rulePartName
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5421);
                    this_PartName_3=rulePartName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_PartName_3);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronizedPart


    // $ANTLR start entryRulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:1: entryRulePathGroup returns [EObject current=null] : iv_rulePathGroup= rulePathGroup EOF ;
    public final EObject entryRulePathGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathGroup = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:51: (iv_rulePathGroup= rulePathGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2289:2: iv_rulePathGroup= rulePathGroup EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathGroupRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePathGroup_in_entryRulePathGroup5464);
            iv_rulePathGroup=rulePathGroup();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePathGroup; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePathGroup5474); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathGroup


    // $ANTLR start rulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2296:1: rulePathGroup returns [EObject current=null] : ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? ) ;
    public final EObject rulePathGroup() throws RecognitionException {
        EObject current = null;

        EObject lv_paths_0 = null;

        EObject lv_annotations_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2301:6: ( ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:1: ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:1: ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:2: (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:2: (lv_paths_0= rulePathVectorElement )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_ID||LA40_0==RULE_STRING||LA40_0==17||LA40_0==51) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2305:6: lv_paths_0= rulePathVectorElement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathVectorElementParserRuleCall_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePathVectorElement_in_rulePathGroup5533);
            	    lv_paths_0=rulePathVectorElement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "paths", lv_paths_0, "PathVectorElement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2323:3: ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==55) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2323:4: 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation )
                    {
                    match(input,55,FOLLOW_55_in_rulePathGroup5548); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2327:1: (lv_annotations_2= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2330:6: lv_annotations_2= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getAnnotationsCompoundPropertyOperationParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_rulePathGroup5582);
                    lv_annotations_2=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "annotations", lv_annotations_2, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathGroup


    // $ANTLR start entryRulePathVectorElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2355:1: entryRulePathVectorElement returns [EObject current=null] : iv_rulePathVectorElement= rulePathVectorElement EOF ;
    public final EObject entryRulePathVectorElement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathVectorElement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2355:59: (iv_rulePathVectorElement= rulePathVectorElement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2356:2: iv_rulePathVectorElement= rulePathVectorElement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathVectorElementRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePathVectorElement_in_entryRulePathVectorElement5621);
            iv_rulePathVectorElement=rulePathVectorElement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePathVectorElement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePathVectorElement5631); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathVectorElement


    // $ANTLR start rulePathVectorElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2363:1: rulePathVectorElement returns [EObject current=null] : (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector ) ;
    public final EObject rulePathVectorElement() throws RecognitionException {
        EObject current = null;

        EObject this_FilteredPathVector_0 = null;

        EObject this_BasePathVector_1 = null;

        EObject this_UnbasedPathVector_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2368:6: ( (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2369:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2369:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )
            int alt42=3;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2370:5: this_FilteredPathVector_0= ruleFilteredPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getFilteredPathVectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFilteredPathVector_in_rulePathVectorElement5678);
                    this_FilteredPathVector_0=ruleFilteredPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FilteredPathVector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2380:5: this_BasePathVector_1= ruleBasePathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getBasePathVectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBasePathVector_in_rulePathVectorElement5705);
                    this_BasePathVector_1=ruleBasePathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BasePathVector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:5: this_UnbasedPathVector_2= ruleUnbasedPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getUnbasedPathVectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnbasedPathVector_in_rulePathVectorElement5732);
                    this_UnbasedPathVector_2=ruleUnbasedPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnbasedPathVector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathVectorElement


    // $ANTLR start entryRuleFilteredPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2405:1: entryRuleFilteredPathVector returns [EObject current=null] : iv_ruleFilteredPathVector= ruleFilteredPathVector EOF ;
    public final EObject entryRuleFilteredPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilteredPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2405:60: (iv_ruleFilteredPathVector= ruleFilteredPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2406:2: iv_ruleFilteredPathVector= ruleFilteredPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilteredPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilteredPathVector_in_entryRuleFilteredPathVector5764);
            iv_ruleFilteredPathVector=ruleFilteredPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilteredPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilteredPathVector5774); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilteredPathVector


    // $ANTLR start ruleFilteredPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2413:1: ruleFilteredPathVector returns [EObject current=null] : ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) ) ;
    public final EObject ruleFilteredPathVector() throws RecognitionException {
        EObject current = null;

        Token lv_body_2=null;
        EObject lv_filter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2418:6: ( ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2419:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2419:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2419:2: 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) )
            {
            match(input,51,FOLLOW_51_in_ruleFilteredPathVector5808); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilteredPathVectorAccess().getWhenKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2423:1: (lv_filter_1= ruleFilter )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2426:6: lv_filter_1= ruleFilter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getFilterFilterParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleFilter_in_ruleFilteredPathVector5842);
            lv_filter_1=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2444:2: (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2446:6: lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2446:16: ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )
            int alt43=3;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2446:18: ruleBasePathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyBasePathVectorParserRuleCall_2_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBasePathVector_in_ruleFilteredPathVector5872);
                    ruleBasePathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2453:7: ruleUnbasedPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyUnbasedPathVectorParserRuleCall_2_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnbasedPathVector_in_ruleFilteredPathVector5886);
                    ruleUnbasedPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2460:7: ruleCompoundPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyCompoundPathVectorParserRuleCall_2_0_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPathVector_in_ruleFilteredPathVector5900);
                    ruleCompoundPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_2, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilteredPathVector


    // $ANTLR start entryRuleBasePathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2488:1: entryRuleBasePathVector returns [EObject current=null] : iv_ruleBasePathVector= ruleBasePathVector EOF ;
    public final EObject entryRuleBasePathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasePathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2488:56: (iv_ruleBasePathVector= ruleBasePathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2489:2: iv_ruleBasePathVector= ruleBasePathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBasePathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBasePathVector_in_entryRuleBasePathVector5942);
            iv_ruleBasePathVector=ruleBasePathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBasePathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBasePathVector5952); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBasePathVector


    // $ANTLR start ruleBasePathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2496:1: ruleBasePathVector returns [EObject current=null] : ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' ) ;
    public final EObject ruleBasePathVector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_basePath_0 = null;

        AntlrDatatypeRuleToken lv_paths_2 = null;

        AntlrDatatypeRuleToken lv_paths_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2501:6: ( ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:1: ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:1: ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:2: (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:2: (lv_basePath_0= rulePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2505:6: lv_basePath_0= rulePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getBasePathPathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePath_in_ruleBasePathVector6011);
            lv_basePath_0=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "basePath", lv_basePath_0, "Path", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,31,FOLLOW_31_in_ruleBasePathVector6024); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2527:1: ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_ID||LA45_0==RULE_STRING||LA45_0==17) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2527:2: (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2527:2: (lv_paths_2= rulePath )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2530:6: lv_paths_2= rulePath
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePath_in_ruleBasePathVector6059);
                    lv_paths_2=rulePath();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "paths", lv_paths_2, "Path", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2548:2: ( ',' (lv_paths_4= rulePath ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==33) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2548:3: ',' (lv_paths_4= rulePath )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleBasePathVector6073); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getBasePathVectorAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2552:1: (lv_paths_4= rulePath )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2555:6: lv_paths_4= rulePath
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_rulePath_in_ruleBasePathVector6107);
                    	    lv_paths_4=rulePath();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "paths", lv_paths_4, "Path", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,34,FOLLOW_34_in_ruleBasePathVector6124); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }
            match(input,38,FOLLOW_38_in_ruleBasePathVector6133); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getSemicolonKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBasePathVector


    // $ANTLR start entryRuleUnbasedPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2588:1: entryRuleUnbasedPathVector returns [EObject current=null] : iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF ;
    public final EObject entryRuleUnbasedPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnbasedPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2588:59: (iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2589:2: iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnbasedPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnbasedPathVector_in_entryRuleUnbasedPathVector6166);
            iv_ruleUnbasedPathVector=ruleUnbasedPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnbasedPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnbasedPathVector6176); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnbasedPathVector


    // $ANTLR start ruleUnbasedPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2596:1: ruleUnbasedPathVector returns [EObject current=null] : ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' ) ;
    public final EObject ruleUnbasedPathVector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_paths_0 = null;

        AntlrDatatypeRuleToken lv_paths_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2601:6: ( ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2602:1: ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2602:1: ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2602:2: (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2602:2: (lv_paths_0= rulePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2605:6: lv_paths_0= rulePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePath_in_ruleUnbasedPathVector6235);
            lv_paths_0=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnbasedPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "paths", lv_paths_0, "Path", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2623:2: ( ',' (lv_paths_2= rulePath ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==33) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2623:3: ',' (lv_paths_2= rulePath )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleUnbasedPathVector6249); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnbasedPathVectorAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2627:1: (lv_paths_2= rulePath )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2630:6: lv_paths_2= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePath_in_ruleUnbasedPathVector6283);
            	    lv_paths_2=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnbasedPathVectorRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "paths", lv_paths_2, "Path", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            match(input,38,FOLLOW_38_in_ruleUnbasedPathVector6298); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnbasedPathVectorAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnbasedPathVector


    // $ANTLR start entryRuleCompoundPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2659:1: entryRuleCompoundPathVector returns [EObject current=null] : iv_ruleCompoundPathVector= ruleCompoundPathVector EOF ;
    public final EObject entryRuleCompoundPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2659:60: (iv_ruleCompoundPathVector= ruleCompoundPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2660:2: iv_ruleCompoundPathVector= ruleCompoundPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundPathVector_in_entryRuleCompoundPathVector6331);
            iv_ruleCompoundPathVector=ruleCompoundPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundPathVector6341); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundPathVector


    // $ANTLR start ruleCompoundPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2667:1: ruleCompoundPathVector returns [EObject current=null] : ( '{' (lv_body_1= rulePathVectorElement )* '}' ) ;
    public final EObject ruleCompoundPathVector() throws RecognitionException {
        EObject current = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2672:6: ( ( '{' (lv_body_1= rulePathVectorElement )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2673:1: ( '{' (lv_body_1= rulePathVectorElement )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2673:1: ( '{' (lv_body_1= rulePathVectorElement )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2673:2: '{' (lv_body_1= rulePathVectorElement )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundPathVector6375); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPathVectorAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2677:1: (lv_body_1= rulePathVectorElement )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_ID||LA47_0==RULE_STRING||LA47_0==17||LA47_0==51) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2680:6: lv_body_1= rulePathVectorElement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundPathVectorAccess().getBodyPathVectorElementParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePathVectorElement_in_ruleCompoundPathVector6409);
            	    lv_body_1=rulePathVectorElement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundPathVectorRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "body", lv_body_1, "PathVectorElement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundPathVector6423); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPathVectorAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundPathVector


    // $ANTLR start entryRulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2709:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2709:45: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2710:2: iv_rulePath= rulePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePath_in_entryRulePath6457);
            iv_rulePath=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePath6468); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2717:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_2 = null;

        AntlrDatatypeRuleToken this_QualifiedName_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2725:6: ( (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2726:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2726:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_STRING) ) {
                alt51=1;
            }
            else if ( (LA51_0==RULE_ID||LA51_0==17) ) {
                alt51=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2726:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2726:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_rulePath6508); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2734:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2734:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2734:7: (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2734:7: (kw= '/' )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==17) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2735:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath6534); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath6558);
                    this_QualifiedName_2=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QualifiedName_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2751:1: (kw= '/' this_QualifiedName_4= ruleQualifiedName )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==17) ) {
                            int LA49_1 = input.LA(2);

                            if ( (LA49_1==RULE_ID) ) {
                                alt49=1;
                            }


                        }


                        switch (alt49) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2752:2: kw= '/' this_QualifiedName_4= ruleQualifiedName
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,17,FOLLOW_17_in_rulePath6577); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              current.merge(kw);
                    	              createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1(), currentNode); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath6599);
                    	    this_QualifiedName_4=ruleQualifiedName();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      		current.merge(this_QualifiedName_4);
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode = currentNode.getParent();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2768:3: (kw= '/' )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==17) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2769:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath6620); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2782:1: entryRulePrerequisite returns [EObject current=null] : iv_rulePrerequisite= rulePrerequisite EOF ;
    public final EObject entryRulePrerequisite() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrerequisite = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2782:54: (iv_rulePrerequisite= rulePrerequisite EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2783:2: iv_rulePrerequisite= rulePrerequisite EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrerequisiteRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrerequisite_in_entryRulePrerequisite6661);
            iv_rulePrerequisite=rulePrerequisite();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrerequisite; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisite6671); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisite


    // $ANTLR start rulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2790:1: rulePrerequisite returns [EObject current=null] : ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) ;
    public final EObject rulePrerequisite() throws RecognitionException {
        EObject current = null;

        Token lv_surpressed_0=null;
        Token lv_alias_3=null;
        EObject lv_filter_2 = null;

        EObject lv_partReference_5 = null;

        EObject lv_closure_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2795:6: ( ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:3: (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2796:3: (lv_surpressed_0= 'hidden' )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==56) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2798:6: lv_surpressed_0= 'hidden'
                    {
                    lv_surpressed_0=(Token)input.LT(1);
                    match(input,56,FOLLOW_56_in_rulePrerequisite6718); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0(), "surpressed"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "surpressed", true, "hidden", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2817:3: ( 'when' (lv_filter_2= ruleFilter ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==51) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2817:4: 'when' (lv_filter_2= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_rulePrerequisite6742); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2821:1: (lv_filter_2= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2824:6: lv_filter_2= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_rulePrerequisite6776);
                    lv_filter_2=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_2, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2842:4: ( (lv_alias_3= RULE_ID ) '=' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                int LA54_1 = input.LA(2);

                if ( (LA54_1==25) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2842:5: (lv_alias_3= RULE_ID ) '='
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2842:5: (lv_alias_3= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2844:6: lv_alias_3= RULE_ID
                    {
                    lv_alias_3=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rulePrerequisite6805); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_2_0_0(), "alias"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "alias", lv_alias_3, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    match(input,25,FOLLOW_25_in_rulePrerequisite6822); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_2_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2866:3: ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2866:4: (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2866:4: (lv_partReference_5= rulePrerequisiteEntry )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2869:6: lv_partReference_5= rulePrerequisiteEntry
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_3_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite6859);
            lv_partReference_5=rulePrerequisiteEntry();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "partReference", lv_partReference_5, "PrerequisiteEntry", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2887:2: (lv_closure_6= ruleClosure )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==57) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2890:6: lv_closure_6= ruleClosure
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleClosure_in_rulePrerequisite6897);
                    lv_closure_6=ruleClosure();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "closure", lv_closure_6, "Closure", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            match(input,38,FOLLOW_38_in_rulePrerequisite6913); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisite


    // $ANTLR start entryRuleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2919:1: entryRuleClosure returns [EObject current=null] : iv_ruleClosure= ruleClosure EOF ;
    public final EObject entryRuleClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClosure = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2919:49: (iv_ruleClosure= ruleClosure EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2920:2: iv_ruleClosure= ruleClosure EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleClosure_in_entryRuleClosure6946);
            iv_ruleClosure=ruleClosure();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleClosure6956); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosure


    // $ANTLR start ruleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2927:1: ruleClosure returns [EObject current=null] : ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' ) ;
    public final EObject ruleClosure() throws RecognitionException {
        EObject current = null;

        EObject lv_properties_3 = null;

        EObject lv_advice_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2932:6: ( ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2933:1: ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2933:1: ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2933:2: 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}'
            {
            match(input,57,FOLLOW_57_in_ruleClosure6990); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_ruleClosure6999); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2941:1: ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==43) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2941:2: 'properties' (lv_properties_3= ruleCompoundPropertyOperation )
                    {
                    match(input,43,FOLLOW_43_in_ruleClosure7009); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2945:1: (lv_properties_3= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2948:6: lv_properties_3= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getPropertiesCompoundPropertyOperationParserRuleCall_2_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleClosure7043);
                    lv_properties_3=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "properties", lv_properties_3, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2966:4: ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==48) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2966:5: 'advice' (lv_advice_5= ruleCompoundAdvice )
                    {
                    match(input,48,FOLLOW_48_in_ruleClosure7059); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureAccess().getAdviceKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2970:1: (lv_advice_5= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2973:6: lv_advice_5= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleClosure7093);
                    lv_advice_5=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_5, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleClosure7108); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosure


    // $ANTLR start entryRulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3002:1: entryRulePrerequisiteEntry returns [EObject current=null] : iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF ;
    public final EObject entryRulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrerequisiteEntry = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3002:59: (iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3003:2: iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrerequisiteEntryRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry7141);
            iv_rulePrerequisiteEntry=rulePrerequisiteEntry();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrerequisiteEntry; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisiteEntry7151); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisiteEntry


    // $ANTLR start rulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3010:1: rulePrerequisiteEntry returns [EObject current=null] : (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences ) ;
    public final EObject rulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;

        EObject this_PartInSelf_0 = null;

        EObject this_CapabilityReferencedPart_1 = null;

        EObject this_CompoundReferences_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3015:6: ( (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3016:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3016:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )
            int alt58=3;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3017:5: this_PartInSelf_0= rulePartInSelf
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry7198);
                    this_PartInSelf_0=rulePartInSelf();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PartInSelf_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3027:5: this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry7225);
                    this_CapabilityReferencedPart_1=ruleCapabilityReferencedPart();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CapabilityReferencedPart_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3037:5: this_CompoundReferences_2= ruleCompoundReferences
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry7252);
                    this_CompoundReferences_2=ruleCompoundReferences();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundReferences_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisiteEntry


    // $ANTLR start entryRulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3052:1: entryRulePartInSelf returns [EObject current=null] : iv_rulePartInSelf= rulePartInSelf EOF ;
    public final EObject entryRulePartInSelf() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePartInSelf = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3052:52: (iv_rulePartInSelf= rulePartInSelf EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3053:2: iv_rulePartInSelf= rulePartInSelf EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPartInSelfRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePartInSelf_in_entryRulePartInSelf7284);
            iv_rulePartInSelf=rulePartInSelf();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePartInSelf; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePartInSelf7294); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartInSelf


    // $ANTLR start rulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3060:1: rulePartInSelf returns [EObject current=null] : (lv_partName_0= rulePartName ) ;
    public final EObject rulePartInSelf() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_partName_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3065:6: ( (lv_partName_0= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3066:1: (lv_partName_0= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3066:1: (lv_partName_0= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3069:6: lv_partName_0= rulePartName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePartName_in_rulePartInSelf7352);
            lv_partName_0=rulePartName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPartInSelfRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "partName", lv_partName_0, "PartName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartInSelf


    // $ANTLR start entryRuleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3094:1: entryRuleCapabilityReferencedPart returns [EObject current=null] : iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF ;
    public final EObject entryRuleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCapabilityReferencedPart = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3094:66: (iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3095:2: iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCapabilityReferencedPartRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart7388);
            iv_ruleCapabilityReferencedPart=ruleCapabilityReferencedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCapabilityReferencedPart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCapabilityReferencedPart7398); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCapabilityReferencedPart


    // $ANTLR start ruleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3102:1: ruleCapabilityReferencedPart returns [EObject current=null] : ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) ;
    public final EObject ruleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_interface_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_range_4 = null;

        AntlrDatatypeRuleToken lv_partName_6 = null;

        AntlrDatatypeRuleToken lv_interface_7 = null;

        AntlrDatatypeRuleToken lv_name_9 = null;

        EObject lv_range_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3107:6: ( ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:3: (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3108:3: (lv_interface_0= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3111:6: lv_interface_0= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7458);
                    lv_interface_0=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "interface", lv_interface_0, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7471); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3133:1: (lv_name_2= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3136:6: lv_name_2= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7505);
                    lv_name_2=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3154:2: ( '/' (lv_range_4= ruleVersionRange ) )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==17) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3154:3: '/' (lv_range_4= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7519); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3158:1: (lv_range_4= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3161:6: lv_range_4= ruleVersionRange
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7553);
                            lv_range_4=ruleVersionRange();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "range", lv_range_4, "VersionRange", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    match(input,54,FOLLOW_54_in_ruleCapabilityReferencedPart7568); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3183:1: (lv_partName_6= rulePartName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3186:6: lv_partName_6= rulePartName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePartName_in_ruleCapabilityReferencedPart7602);
                    lv_partName_6=rulePartName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "partName", lv_partName_6, "PartName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3205:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3205:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3205:7: (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3205:7: (lv_interface_7= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3208:6: lv_interface_7= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7648);
                    lv_interface_7=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "interface", lv_interface_7, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7661); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3230:1: (lv_name_9= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3233:6: lv_name_9= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7695);
                    lv_name_9=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_9, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:2: ( '/' (lv_range_11= ruleVersionRange ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==17) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:3: '/' (lv_range_11= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7709); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3255:1: (lv_range_11= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3258:6: lv_range_11= ruleVersionRange
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7743);
                            lv_range_11=ruleVersionRange();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "range", lv_range_11, "VersionRange", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCapabilityReferencedPart


    // $ANTLR start entryRuleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3283:1: entryRuleCompoundReferences returns [EObject current=null] : iv_ruleCompoundReferences= ruleCompoundReferences EOF ;
    public final EObject entryRuleCompoundReferences() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundReferences = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3283:60: (iv_ruleCompoundReferences= ruleCompoundReferences EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3284:2: iv_ruleCompoundReferences= ruleCompoundReferences EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundReferencesRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences7783);
            iv_ruleCompoundReferences=ruleCompoundReferences();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundReferences; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundReferences7793); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundReferences


    // $ANTLR start ruleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3291:1: ruleCompoundReferences returns [EObject current=null] : ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) ;
    public final EObject ruleCompoundReferences() throws RecognitionException {
        EObject current = null;

        EObject lv_prerequisites_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3296:6: ( ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3297:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3297:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3297:2: '{' (lv_prerequisites_1= rulePrerequisite )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundReferences7827); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3301:1: (lv_prerequisites_1= rulePrerequisite )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_ID||LA62_0==RULE_STRING||LA62_0==42||LA62_0==51||LA62_0==56) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3304:6: lv_prerequisites_1= rulePrerequisite
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleCompoundReferences7861);
            	    lv_prerequisites_1=rulePrerequisite();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundReferencesRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "prerequisites", lv_prerequisites_1, "Prerequisite", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundReferences7875); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundReferences


    // $ANTLR start entryRulePart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3333:1: entryRulePart returns [EObject current=null] : iv_rulePart= rulePart EOF ;
    public final EObject entryRulePart() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePart = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3333:46: (iv_rulePart= rulePart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3334:2: iv_rulePart= rulePart EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPartRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePart_in_entryRulePart7908);
            iv_rulePart=rulePart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePart7918); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePart


    // $ANTLR start rulePart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3341:1: rulePart returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' ) ;
    public final EObject rulePart() throws RecognitionException {
        EObject current = null;

        Enumerator lv_visibility_0 = null;

        Enumerator lv_executionMode_1 = null;

        EObject lv_providedCapabilities_4 = null;

        EObject lv_providedCapabilities_6 = null;

        EObject lv_preCondition_7 = null;

        EObject lv_postCondition_8 = null;

        EObject lv_properties_11 = null;

        EObject lv_advice_12 = null;

        EObject lv_group_13 = null;

        EObject lv_layout_14 = null;

        EObject lv_statements_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3346:6: ( ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3347:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3347:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3347:2: (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3347:2: (lv_visibility_0= ruleVisibility )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=102 && LA63_0<=103)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3350:6: lv_visibility_0= ruleVisibility
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVisibility_in_rulePart7977);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3368:3: (lv_executionMode_1= ruleExecutionMode )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==49||LA64_0==104) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3371:6: lv_executionMode_1= ruleExecutionMode
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getExecutionModeExecutionModeEnumRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExecutionMode_in_rulePart8016);
                    lv_executionMode_1=ruleExecutionMode();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "executionMode", lv_executionMode_1, "ExecutionMode", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_rulePartName_in_rulePart8030);
            rulePartName();
            _fsp--;
            if (failed) return current;
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3389:15: ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==44) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3389:16: 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    {
                    match(input,44,FOLLOW_44_in_rulePart8032); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPartAccess().getProvidesKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3393:1: (lv_providedCapabilities_4= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3396:6: lv_providedCapabilities_4= ruleProvidedCapability
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleProvidedCapability_in_rulePart8066);
                    lv_providedCapabilities_4=ruleProvidedCapability();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "providedCapabilities", lv_providedCapabilities_4, "ProvidedCapability", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3414:2: ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==33) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3414:3: ',' (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    {
                    	    match(input,33,FOLLOW_33_in_rulePart8080); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getPartAccess().getCommaKeyword_3_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3418:1: (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3421:6: lv_providedCapabilities_6= ruleProvidedCapability
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_rulePart8114);
                    	    lv_providedCapabilities_6=ruleProvidedCapability();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "providedCapabilities", lv_providedCapabilities_6, "ProvidedCapability", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3439:6: (lv_preCondition_7= rulePreCondition )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==63) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3442:6: lv_preCondition_7= rulePreCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getPreConditionPreConditionParserRuleCall_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePreCondition_in_rulePart8156);
                    lv_preCondition_7=rulePreCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "preCondition", lv_preCondition_7, "PreCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3460:3: (lv_postCondition_8= rulePostCondition )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==64) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3463:6: lv_postCondition_8= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getPostConditionPostConditionParserRuleCall_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_rulePart8195);
                    lv_postCondition_8=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_8, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_rulePart8209); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_6(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3485:1: ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==43) ) {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==42) ) {
                    alt69=1;
                }
            }
            switch (alt69) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3485:2: 'properties' (lv_properties_11= ruleCompoundPropertyOperation )
                    {
                    match(input,43,FOLLOW_43_in_rulePart8219); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPartAccess().getPropertiesKeyword_7_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3489:1: (lv_properties_11= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3492:6: lv_properties_11= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getPropertiesCompoundPropertyOperationParserRuleCall_7_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_rulePart8253);
                    lv_properties_11=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "properties", lv_properties_11, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3510:4: (lv_advice_12= ruleAdvice )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==48) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3513:6: lv_advice_12= ruleAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getAdviceAdviceParserRuleCall_8_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAdvice_in_rulePart8293);
                    lv_advice_12=ruleAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_12, "Advice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3531:3: (lv_group_13= ruleGroup )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==59) ) {
                int LA71_1 = input.LA(2);

                if ( (LA71_1==42||(LA71_1>=63 && LA71_1<=64)) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3534:6: lv_group_13= ruleGroup
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getGroupGroupParserRuleCall_9_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleGroup_in_rulePart8332);
                    lv_group_13=ruleGroup();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "group", lv_group_13, "Group", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3552:3: (lv_layout_14= ruleLayout )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==58) ) {
                int LA72_1 = input.LA(2);

                if ( (LA72_1==42||LA72_1==64) ) {
                    alt72=1;
                }
            }
            switch (alt72) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3555:6: lv_layout_14= ruleLayout
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getLayoutLayoutParserRuleCall_10_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleLayout_in_rulePart8371);
                    lv_layout_14=ruleLayout();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "layout", lv_layout_14, "Layout", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3573:3: (lv_statements_15= ruleStatements )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=RULE_ID && LA73_0<=RULE_REGEX)||(LA73_0>=18 && LA73_0<=19)||(LA73_0>=31 && LA73_0<=32)||LA73_0==38||(LA73_0>=42 && LA73_0<=43)||(LA73_0>=57 && LA73_0<=59)||(LA73_0>=66 && LA73_0<=69)||LA73_0==72||(LA73_0>=74 && LA73_0<=77)||(LA73_0>=79 && LA73_0<=80)||LA73_0==83||(LA73_0>=91 && LA73_0<=101)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3576:6: lv_statements_15= ruleStatements
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getStatementsStatementsParserRuleCall_11_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatements_in_rulePart8410);
                    lv_statements_15=ruleStatements();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "statements", lv_statements_15, "Statements", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_rulePart8424); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_12(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePart


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3605:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3605:51: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3606:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParameter_in_entryRuleParameter8457);
            iv_ruleParameter=ruleParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParameter8467); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3613:1: ruleParameter returns [EObject current=null] : (lv_val_0= ruleExpression ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_val_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3618:6: ( (lv_val_0= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3619:1: (lv_val_0= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3619:1: (lv_val_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3622:6: lv_val_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleParameter8525);
            lv_val_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_0, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3647:1: entryRuleLayout returns [EObject current=null] : iv_ruleLayout= ruleLayout EOF ;
    public final EObject entryRuleLayout() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLayout = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3647:48: (iv_ruleLayout= ruleLayout EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3648:2: iv_ruleLayout= ruleLayout EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLayoutRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLayout_in_entryRuleLayout8561);
            iv_ruleLayout=ruleLayout();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLayout; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLayout8571); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLayout


    // $ANTLR start ruleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3655:1: ruleLayout returns [EObject current=null] : ( 'layout' (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' ) ;
    public final EObject ruleLayout() throws RecognitionException {
        EObject current = null;

        EObject lv_postCondition_1 = null;

        EObject lv_body_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3660:6: ( ( 'layout' (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3661:1: ( 'layout' (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3661:1: ( 'layout' (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3661:2: 'layout' (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}'
            {
            match(input,58,FOLLOW_58_in_ruleLayout8605); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLayoutAccess().getLayoutKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3665:1: (lv_postCondition_1= rulePostCondition )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==64) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3668:6: lv_postCondition_1= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getPostConditionPostConditionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_ruleLayout8639);
                    lv_postCondition_1=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_1, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleLayout8653); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3690:1: (lv_body_3= rulePathGroup )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ID||LA75_0==RULE_STRING||LA75_0==17||LA75_0==51||LA75_0==55) ) {
                alt75=1;
            }
            else if ( (LA75_0==45) ) {
                int LA75_2 = input.LA(2);

                if ( (synpred113()) ) {
                    alt75=1;
                }
            }
            switch (alt75) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3693:6: lv_body_3= rulePathGroup
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getBodyPathGroupParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePathGroup_in_ruleLayout8687);
                    lv_body_3=rulePathGroup();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "body", lv_body_3, "PathGroup", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleLayout8701); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLayout


    // $ANTLR start entryRuleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3722:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3722:47: (iv_ruleGroup= ruleGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3723:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getGroupRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleGroup_in_entryRuleGroup8734);
            iv_ruleGroup=ruleGroup();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroup8744); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleGroup


    // $ANTLR start ruleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3730:1: ruleGroup returns [EObject current=null] : ( 'group' (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        EObject lv_preCondition_1 = null;

        EObject lv_postCondition_2 = null;

        EObject lv_prerequisites_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3735:6: ( ( 'group' (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3736:1: ( 'group' (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3736:1: ( 'group' (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3736:2: 'group' (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}'
            {
            match(input,59,FOLLOW_59_in_ruleGroup8778); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getGroupAccess().getGroupKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3740:1: (lv_preCondition_1= rulePreCondition )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==63) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3743:6: lv_preCondition_1= rulePreCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPreConditionPreConditionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePreCondition_in_ruleGroup8812);
                    lv_preCondition_1=rulePreCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "preCondition", lv_preCondition_1, "PreCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3761:3: (lv_postCondition_2= rulePostCondition )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==64) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3764:6: lv_postCondition_2= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPostConditionPostConditionParserRuleCall_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_ruleGroup8851);
                    lv_postCondition_2=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_2, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleGroup8865); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3786:1: (lv_prerequisites_4= rulePrerequisite )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_ID||LA78_0==RULE_STRING||LA78_0==42||LA78_0==51||LA78_0==56) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3789:6: lv_prerequisites_4= rulePrerequisite
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleGroup8899);
            	    lv_prerequisites_4=rulePrerequisite();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "prerequisites", lv_prerequisites_4, "Prerequisite", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleGroup8913); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleGroup


    // $ANTLR start entryRuleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3818:1: entryRuleRepositoryConfiguration returns [EObject current=null] : iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF ;
    public final EObject entryRuleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepositoryConfiguration = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3818:65: (iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3819:2: iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRepositoryConfigurationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration8946);
            iv_ruleRepositoryConfiguration=ruleRepositoryConfiguration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRepositoryConfiguration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRepositoryConfiguration8956); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRepositoryConfiguration


    // $ANTLR start ruleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3826:1: ruleRepositoryConfiguration returns [EObject current=null] : ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) ;
    public final EObject ruleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_location_0 = null;

        AntlrDatatypeRuleToken lv_resolverClass_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3831:6: ( ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_STRING) ) {
                alt79=1;
            }
            else if ( (LA79_0==60) ) {
                alt79=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3832:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:3: (lv_location_0= ruleURI )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:3: (lv_location_0= ruleURI )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3835:6: lv_location_0= ruleURI
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleURI_in_ruleRepositoryConfiguration9016);
                    lv_location_0=ruleURI();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "location", lv_location_0, "URI", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3854:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3854:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3854:7: 'resolver' (lv_resolverClass_2= ruleQualifiedName )
                    {
                    match(input,60,FOLLOW_60_in_ruleRepositoryConfiguration9036); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3858:1: (lv_resolverClass_2= ruleQualifiedName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3861:6: lv_resolverClass_2= ruleQualifiedName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration9070);
                    lv_resolverClass_2=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "resolverClass", lv_resolverClass_2, "QualifiedName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3879:4: (lv_advice_3= ruleCompoundAdvice )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==42) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3882:6: lv_advice_3= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration9110);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleRepositoryConfiguration9124); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRepositoryConfiguration


    // $ANTLR start entryRuleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3911:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3911:44: (iv_ruleURI= ruleURI EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3912:2: iv_ruleURI= ruleURI EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleURI_in_entryRuleURI9158);
            iv_ruleURI=ruleURI();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleURI.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleURI9169); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleURI


    // $ANTLR start ruleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3919:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3925:6: (this_STRING_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3926:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleURI9208); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleURI


    // $ANTLR start entryRuleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3941:1: entryRuleNamedAdvice returns [EObject current=null] : iv_ruleNamedAdvice= ruleNamedAdvice EOF ;
    public final EObject entryRuleNamedAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3941:53: (iv_ruleNamedAdvice= ruleNamedAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3942:2: iv_ruleNamedAdvice= ruleNamedAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNamedAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice9250);
            iv_ruleNamedAdvice=ruleNamedAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNamedAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedAdvice9260); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedAdvice


    // $ANTLR start ruleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3949:1: ruleNamedAdvice returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) ;
    public final EObject ruleNamedAdvice() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3954:6: ( ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3955:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3955:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3955:2: (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3955:2: (lv_name_0= RULE_ID )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==RULE_ID) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3957:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedAdvice9307); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3975:3: (lv_advice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3978:6: lv_advice_1= ruleCompoundAdvice
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice9350);
            lv_advice_1=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "advice", lv_advice_1, "CompoundAdvice", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedAdvice


    // $ANTLR start entryRuleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4003:1: entryRuleAdvice returns [EObject current=null] : iv_ruleAdvice= ruleAdvice EOF ;
    public final EObject entryRuleAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4003:48: (iv_ruleAdvice= ruleAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4004:2: iv_ruleAdvice= ruleAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdvice_in_entryRuleAdvice9387);
            iv_ruleAdvice=ruleAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvice9397); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvice


    // $ANTLR start ruleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4011:1: ruleAdvice returns [EObject current=null] : ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) ;
    public final EObject ruleAdvice() throws RecognitionException {
        EObject current = null;

        EObject this_CompoundAdvice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4016:6: ( ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:2: 'advice' this_CompoundAdvice_1= ruleCompoundAdvice
            {
            match(input,48,FOLLOW_48_in_ruleAdvice9431); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAdviceAccess().getAdviceKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdvice9453);
            this_CompoundAdvice_1=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CompoundAdvice_1; 
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvice


    // $ANTLR start entryRuleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4037:1: entryRuleCompoundAdvice returns [EObject current=null] : iv_ruleCompoundAdvice= ruleCompoundAdvice EOF ;
    public final EObject entryRuleCompoundAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4037:56: (iv_ruleCompoundAdvice= ruleCompoundAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4038:2: iv_ruleCompoundAdvice= ruleCompoundAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice9485);
            iv_ruleCompoundAdvice=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundAdvice9495); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundAdvice


    // $ANTLR start ruleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4045:1: ruleCompoundAdvice returns [EObject current=null] : ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) ;
    public final EObject ruleCompoundAdvice() throws RecognitionException {
        EObject current = null;

        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4050:6: ( ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4051:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4051:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4051:2: '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundAdvice9529); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4055:1: ( (lv_advice_1= ruleAdviceStatement ) ';' )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_ID||LA82_0==RULE_REGEX||LA82_0==15||LA82_0==26||LA82_0==29||(LA82_0>=61 && LA82_0<=62)) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4055:2: (lv_advice_1= ruleAdviceStatement ) ';'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4055:2: (lv_advice_1= ruleAdviceStatement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4058:6: lv_advice_1= ruleAdviceStatement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice9564);
            	    lv_advice_1=ruleAdviceStatement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundAdviceRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "advice", lv_advice_1, "AdviceStatement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,38,FOLLOW_38_in_ruleCompoundAdvice9577); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundAdvice9588); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundAdvice


    // $ANTLR start entryRuleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4091:1: entryRuleAdviceStatement returns [EObject current=null] : iv_ruleAdviceStatement= ruleAdviceStatement EOF ;
    public final EObject entryRuleAdviceStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdviceStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4091:57: (iv_ruleAdviceStatement= ruleAdviceStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4092:2: iv_ruleAdviceStatement= ruleAdviceStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdviceStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement9621);
            iv_ruleAdviceStatement=ruleAdviceStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdviceStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdviceStatement9631); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdviceStatement


    // $ANTLR start ruleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:1: ruleAdviceStatement returns [EObject current=null] : ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) ;
    public final EObject ruleAdviceStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_path_0 = null;

        Enumerator lv_op_1 = null;

        EObject lv_value_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4104:6: ( ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:1: ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:1: ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:2: (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:2: (lv_path_0= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4108:6: lv_path_0= ruleAdvicePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleAdviceStatement9690);
            lv_path_0=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "path", lv_path_0, "AdvicePath", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:2: ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==25||(LA83_0>=105 && LA83_0<=115)) ) {
                alt83=1;
            }
            else if ( (LA83_0==42) ) {
                alt83=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4126:2: ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:3: ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:3: ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:4: (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:4: (lv_op_1= ruleAssignmentOperator )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4129:6: lv_op_1= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getOpAssignmentOperatorEnumRuleCall_1_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleAdviceStatement9730);
                    lv_op_1=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "op", lv_op_1, "AssignmentOperator", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4147:2: (lv_value_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4150:6: lv_value_2= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleAdviceStatement9768);
                    lv_value_2=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "value", lv_value_2, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4169:6: (lv_advice_3= ruleCompoundAdvice )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4169:6: (lv_advice_3= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4172:6: lv_advice_3= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement9813);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdviceStatement


    // $ANTLR start entryRuleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4197:1: entryRuleAdvicePath returns [EObject current=null] : iv_ruleAdvicePath= ruleAdvicePath EOF ;
    public final EObject entryRuleAdvicePath() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdvicePath = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4197:52: (iv_ruleAdvicePath= ruleAdvicePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4198:2: iv_ruleAdvicePath= ruleAdvicePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdvicePathRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath9851);
            iv_ruleAdvicePath=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdvicePath; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePath9861); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePath


    // $ANTLR start ruleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4205:1: ruleAdvicePath returns [EObject current=null] : ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* ) ;
    public final EObject ruleAdvicePath() throws RecognitionException {
        EObject current = null;

        Token lv_absolute_0=null;
        EObject lv_selectors_1 = null;

        EObject lv_selectors_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4210:6: ( ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4211:1: ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4211:1: ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4211:2: (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4211:2: (lv_absolute_0= ':' )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==29) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4213:6: lv_absolute_0= ':'
                    {
                    lv_absolute_0=(Token)input.LT(1);
                    match(input,29,FOLLOW_29_in_ruleAdvicePath9907); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAdvicePathAccess().getAbsoluteColonKeyword_0_0(), "absolute"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "absolute", true, ":", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4232:3: (lv_selectors_1= ruleSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4235:6: lv_selectors_1= ruleSelector
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getSelectorsSelectorParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleSelector_in_ruleAdvicePath9955);
            lv_selectors_1=ruleSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "selectors", lv_selectors_1, "Selector", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4253:2: ( ':' (lv_selectors_3= ruleSelector ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==29) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4253:3: ':' (lv_selectors_3= ruleSelector )
            	    {
            	    match(input,29,FOLLOW_29_in_ruleAdvicePath9969); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAdvicePathAccess().getColonKeyword_2_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4257:1: (lv_selectors_3= ruleSelector )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4260:6: lv_selectors_3= ruleSelector
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getSelectorsSelectorParserRuleCall_2_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSelector_in_ruleAdvicePath10003);
            	    lv_selectors_3=ruleSelector();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "selectors", lv_selectors_3, "Selector", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePath


    // $ANTLR start entryRuleSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4285:1: entryRuleSelector returns [EObject current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final EObject entryRuleSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4285:50: (iv_ruleSelector= ruleSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4286:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSelector_in_entryRuleSelector10042);
            iv_ruleSelector=ruleSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSelector10052); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSelector


    // $ANTLR start ruleSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4293:1: ruleSelector returns [EObject current=null] : (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector ) ;
    public final EObject ruleSelector() throws RecognitionException {
        EObject current = null;

        EObject this_DiscriminatingSelector_0 = null;

        EObject this_MultiNodeSelector_1 = null;

        EObject this_NodeSelector_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4298:6: ( (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4299:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4299:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )
            int alt86=3;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4300:5: this_DiscriminatingSelector_0= ruleDiscriminatingSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getDiscriminatingSelectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleDiscriminatingSelector_in_ruleSelector10099);
                    this_DiscriminatingSelector_0=ruleDiscriminatingSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_DiscriminatingSelector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4310:5: this_MultiNodeSelector_1= ruleMultiNodeSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getMultiNodeSelectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleMultiNodeSelector_in_ruleSelector10126);
                    this_MultiNodeSelector_1=ruleMultiNodeSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_MultiNodeSelector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4320:5: this_NodeSelector_2= ruleNodeSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getNodeSelectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNodeSelector_in_ruleSelector10153);
                    this_NodeSelector_2=ruleNodeSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NodeSelector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSelector


    // $ANTLR start entryRuleMultiNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4335:1: entryRuleMultiNodeSelector returns [EObject current=null] : iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF ;
    public final EObject entryRuleMultiNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiNodeSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4335:59: (iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4336:2: iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiNodeSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleMultiNodeSelector_in_entryRuleMultiNodeSelector10185);
            iv_ruleMultiNodeSelector=ruleMultiNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiNodeSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiNodeSelector10195); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiNodeSelector


    // $ANTLR start ruleMultiNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4343:1: ruleMultiNodeSelector returns [EObject current=null] : (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector ) ;
    public final EObject ruleMultiNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject this_NameSelector_0 = null;

        EObject this_ThisSelector_1 = null;

        EObject this_ChildrenSelector_2 = null;

        EObject this_AncestorSelector_3 = null;

        EObject this_RegexpSelector_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4348:6: ( (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4349:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4349:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )
            int alt87=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt87=1;
                }
                break;
            case 15:
                {
                alt87=2;
                }
                break;
            case 26:
                {
                alt87=3;
                }
                break;
            case 62:
                {
                alt87=4;
                }
                break;
            case RULE_REGEX:
                {
                alt87=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4349:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4350:5: this_NameSelector_0= ruleNameSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getNameSelectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNameSelector_in_ruleMultiNodeSelector10242);
                    this_NameSelector_0=ruleNameSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NameSelector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4360:5: this_ThisSelector_1= ruleThisSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getThisSelectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleThisSelector_in_ruleMultiNodeSelector10269);
                    this_ThisSelector_1=ruleThisSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ThisSelector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4370:5: this_ChildrenSelector_2= ruleChildrenSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getChildrenSelectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleChildrenSelector_in_ruleMultiNodeSelector10296);
                    this_ChildrenSelector_2=ruleChildrenSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ChildrenSelector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4380:5: this_AncestorSelector_3= ruleAncestorSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getAncestorSelectorParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleAncestorSelector_in_ruleMultiNodeSelector10323);
                    this_AncestorSelector_3=ruleAncestorSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_AncestorSelector_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4390:5: this_RegexpSelector_4= ruleRegexpSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getRegexpSelectorParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRegexpSelector_in_ruleMultiNodeSelector10350);
                    this_RegexpSelector_4=ruleRegexpSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RegexpSelector_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiNodeSelector


    // $ANTLR start entryRuleDiscriminatingSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4405:1: entryRuleDiscriminatingSelector returns [EObject current=null] : iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF ;
    public final EObject entryRuleDiscriminatingSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiscriminatingSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4405:64: (iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4406:2: iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDiscriminatingSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleDiscriminatingSelector_in_entryRuleDiscriminatingSelector10382);
            iv_ruleDiscriminatingSelector=ruleDiscriminatingSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDiscriminatingSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDiscriminatingSelector10392); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDiscriminatingSelector


    // $ANTLR start ruleDiscriminatingSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4413:1: ruleDiscriminatingSelector returns [EObject current=null] : ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' ) ;
    public final EObject ruleDiscriminatingSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_selector_0 = null;

        EObject lv_predicate_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4418:6: ( ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:1: ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:1: ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:2: (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:2: (lv_selector_0= ruleMultiNodeSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4422:6: lv_selector_0= ruleMultiNodeSelector
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDiscriminatingSelectorAccess().getSelectorMultiNodeSelectorParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleMultiNodeSelector_in_ruleDiscriminatingSelector10451);
            lv_selector_0=ruleMultiNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDiscriminatingSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "selector", lv_selector_0, "MultiNodeSelector", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,31,FOLLOW_31_in_ruleDiscriminatingSelector10464); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDiscriminatingSelectorAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4444:1: (lv_predicate_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4447:6: lv_predicate_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDiscriminatingSelectorAccess().getPredicateExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleDiscriminatingSelector10498);
            lv_predicate_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDiscriminatingSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "predicate", lv_predicate_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,34,FOLLOW_34_in_ruleDiscriminatingSelector10511); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDiscriminatingSelectorAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDiscriminatingSelector


    // $ANTLR start entryRuleNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4476:1: entryRuleNodeSelector returns [EObject current=null] : iv_ruleNodeSelector= ruleNodeSelector EOF ;
    public final EObject entryRuleNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4476:54: (iv_ruleNodeSelector= ruleNodeSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4477:2: iv_ruleNodeSelector= ruleNodeSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNodeSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNodeSelector_in_entryRuleNodeSelector10544);
            iv_ruleNodeSelector=ruleNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNodeSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNodeSelector10554); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNodeSelector


    // $ANTLR start ruleNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4484:1: ruleNodeSelector returns [EObject current=null] : this_ParentSelector_0= ruleParentSelector ;
    public final EObject ruleNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject this_ParentSelector_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4489:6: (this_ParentSelector_0= ruleParentSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4491:5: this_ParentSelector_0= ruleParentSelector
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getNodeSelectorAccess().getParentSelectorParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleParentSelector_in_ruleNodeSelector10600);
            this_ParentSelector_0=ruleParentSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_ParentSelector_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNodeSelector


    // $ANTLR start entryRuleNameSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4506:1: entryRuleNameSelector returns [EObject current=null] : iv_ruleNameSelector= ruleNameSelector EOF ;
    public final EObject entryRuleNameSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4506:54: (iv_ruleNameSelector= ruleNameSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4507:2: iv_ruleNameSelector= ruleNameSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNameSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNameSelector_in_entryRuleNameSelector10631);
            iv_ruleNameSelector=ruleNameSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNameSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNameSelector10641); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNameSelector


    // $ANTLR start ruleNameSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4514:1: ruleNameSelector returns [EObject current=null] : (lv_name_0= ruleQualifiedName ) ;
    public final EObject ruleNameSelector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4519:6: ( (lv_name_0= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4520:1: (lv_name_0= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4520:1: (lv_name_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4523:6: lv_name_0= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNameSelectorAccess().getNameQualifiedNameParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleNameSelector10699);
            lv_name_0=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNameSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_0, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNameSelector


    // $ANTLR start entryRuleThisSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4548:1: entryRuleThisSelector returns [EObject current=null] : iv_ruleThisSelector= ruleThisSelector EOF ;
    public final EObject entryRuleThisSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4548:54: (iv_ruleThisSelector= ruleThisSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4549:2: iv_ruleThisSelector= ruleThisSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getThisSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleThisSelector_in_entryRuleThisSelector10735);
            iv_ruleThisSelector=ruleThisSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleThisSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleThisSelector10745); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleThisSelector


    // $ANTLR start ruleThisSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4556:1: ruleThisSelector returns [EObject current=null] : ( () '.' ) ;
    public final EObject ruleThisSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4561:6: ( ( () '.' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:1: ( () '.' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:1: ( () '.' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:2: () '.'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4563:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getThisSelectorAccess().getThisSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getThisSelectorAccess().getThisSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,15,FOLLOW_15_in_ruleThisSelector10788); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThisSelectorAccess().getFullStopKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleThisSelector


    // $ANTLR start entryRuleParentSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4584:1: entryRuleParentSelector returns [EObject current=null] : iv_ruleParentSelector= ruleParentSelector EOF ;
    public final EObject entryRuleParentSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParentSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4584:56: (iv_ruleParentSelector= ruleParentSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4585:2: iv_ruleParentSelector= ruleParentSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParentSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParentSelector_in_entryRuleParentSelector10821);
            iv_ruleParentSelector=ruleParentSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParentSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParentSelector10831); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParentSelector


    // $ANTLR start ruleParentSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4592:1: ruleParentSelector returns [EObject current=null] : ( () '..' ) ;
    public final EObject ruleParentSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4597:6: ( ( () '..' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:1: ( () '..' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:1: ( () '..' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:2: () '..'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4599:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getParentSelectorAccess().getParentSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getParentSelectorAccess().getParentSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,61,FOLLOW_61_in_ruleParentSelector10874); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParentSelectorAccess().getFullStopFullStopKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParentSelector


    // $ANTLR start entryRuleChildrenSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4620:1: entryRuleChildrenSelector returns [EObject current=null] : iv_ruleChildrenSelector= ruleChildrenSelector EOF ;
    public final EObject entryRuleChildrenSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildrenSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4620:58: (iv_ruleChildrenSelector= ruleChildrenSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4621:2: iv_ruleChildrenSelector= ruleChildrenSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getChildrenSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleChildrenSelector_in_entryRuleChildrenSelector10907);
            iv_ruleChildrenSelector=ruleChildrenSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleChildrenSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleChildrenSelector10917); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChildrenSelector


    // $ANTLR start ruleChildrenSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4628:1: ruleChildrenSelector returns [EObject current=null] : ( () '*' ) ;
    public final EObject ruleChildrenSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4633:6: ( ( () '*' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4634:1: ( () '*' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4634:1: ( () '*' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4634:2: () '*'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4634:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4635:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getChildrenSelectorAccess().getChildrenSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getChildrenSelectorAccess().getChildrenSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,26,FOLLOW_26_in_ruleChildrenSelector10960); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getChildrenSelectorAccess().getAsteriskKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChildrenSelector


    // $ANTLR start entryRuleAncestorSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4656:1: entryRuleAncestorSelector returns [EObject current=null] : iv_ruleAncestorSelector= ruleAncestorSelector EOF ;
    public final EObject entryRuleAncestorSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAncestorSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4656:58: (iv_ruleAncestorSelector= ruleAncestorSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4657:2: iv_ruleAncestorSelector= ruleAncestorSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAncestorSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAncestorSelector_in_entryRuleAncestorSelector10993);
            iv_ruleAncestorSelector=ruleAncestorSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAncestorSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAncestorSelector11003); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAncestorSelector


    // $ANTLR start ruleAncestorSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4664:1: ruleAncestorSelector returns [EObject current=null] : ( () '**' ) ;
    public final EObject ruleAncestorSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4669:6: ( ( () '**' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4670:1: ( () '**' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4670:1: ( () '**' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4670:2: () '**'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4670:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4671:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getAncestorSelectorAccess().getAncestorSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getAncestorSelectorAccess().getAncestorSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,62,FOLLOW_62_in_ruleAncestorSelector11046); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAncestorSelectorAccess().getAsteriskAsteriskKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAncestorSelector


    // $ANTLR start entryRuleRegexpSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4692:1: entryRuleRegexpSelector returns [EObject current=null] : iv_ruleRegexpSelector= ruleRegexpSelector EOF ;
    public final EObject entryRuleRegexpSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegexpSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4692:56: (iv_ruleRegexpSelector= ruleRegexpSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4693:2: iv_ruleRegexpSelector= ruleRegexpSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRegexpSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRegexpSelector_in_entryRuleRegexpSelector11079);
            iv_ruleRegexpSelector=ruleRegexpSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRegexpSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpSelector11089); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpSelector


    // $ANTLR start ruleRegexpSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4700:1: ruleRegexpSelector returns [EObject current=null] : ( () (lv_pattern_1= RULE_REGEX ) ) ;
    public final EObject ruleRegexpSelector() throws RecognitionException {
        EObject current = null;

        Token lv_pattern_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4705:6: ( ( () (lv_pattern_1= RULE_REGEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4706:1: ( () (lv_pattern_1= RULE_REGEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4706:1: ( () (lv_pattern_1= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4706:2: () (lv_pattern_1= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4706:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4707:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRegexpSelectorAccess().getRegexpSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRegexpSelectorAccess().getRegexpSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4717:2: (lv_pattern_1= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4719:6: lv_pattern_1= RULE_REGEX
            {
            lv_pattern_1=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpSelector11145); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getRegexpSelectorAccess().getPatternREGEXTerminalRuleCall_1_0(), "pattern"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRegexpSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "pattern", lv_pattern_1, "REGEX", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpSelector


    // $ANTLR start entryRuleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4746:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4746:48: (iv_ruleFilter= ruleFilter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4747:2: iv_ruleFilter= ruleFilter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilter_in_entryRuleFilter11188);
            iv_ruleFilter=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilter11198); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilter


    // $ANTLR start ruleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4754:1: ruleFilter returns [EObject current=null] : ( '(' (lv_predicate_1= ruleExpression ) ')' ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;

        EObject lv_predicate_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4759:6: ( ( '(' (lv_predicate_1= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4760:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4760:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4760:2: '(' (lv_predicate_1= ruleExpression ) ')'
            {
            match(input,32,FOLLOW_32_in_ruleFilter11232); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4764:1: (lv_predicate_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4767:6: lv_predicate_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleFilter11266);
            lv_predicate_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "predicate", lv_predicate_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleFilter11279); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilter


    // $ANTLR start entryRulePreCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4796:1: entryRulePreCondition returns [EObject current=null] : iv_rulePreCondition= rulePreCondition EOF ;
    public final EObject entryRulePreCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreCondition = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4796:54: (iv_rulePreCondition= rulePreCondition EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4797:2: iv_rulePreCondition= rulePreCondition EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPreConditionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePreCondition_in_entryRulePreCondition11312);
            iv_rulePreCondition=rulePreCondition();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePreCondition; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePreCondition11322); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePreCondition


    // $ANTLR start rulePreCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4804:1: rulePreCondition returns [EObject current=null] : ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePreCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4809:6: ( ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4810:1: ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4810:1: ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4810:2: 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            match(input,63,FOLLOW_63_in_rulePreCondition11356); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getPreconditionKeyword_0(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_rulePreCondition11365); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4818:1: (lv_asserts_2= ruleAssertionExpression )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==65) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4821:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPreConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePreCondition11399);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPreConditionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePreCondition11413); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePreCondition


    // $ANTLR start entryRulePostCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4850:1: entryRulePostCondition returns [EObject current=null] : iv_rulePostCondition= rulePostCondition EOF ;
    public final EObject entryRulePostCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostCondition = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4850:55: (iv_rulePostCondition= rulePostCondition EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4851:2: iv_rulePostCondition= rulePostCondition EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostConditionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePostCondition_in_entryRulePostCondition11446);
            iv_rulePostCondition=rulePostCondition();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostCondition; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePostCondition11456); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostCondition


    // $ANTLR start rulePostCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4858:1: rulePostCondition returns [EObject current=null] : ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePostCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4863:6: ( ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4864:1: ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4864:1: ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4864:2: 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            match(input,64,FOLLOW_64_in_rulePostCondition11490); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getPostconditionKeyword_0(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_rulePostCondition11499); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4872:1: (lv_asserts_2= ruleAssertionExpression )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==65) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4875:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPostConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePostCondition11533);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPostConditionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePostCondition11547); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostCondition


    // $ANTLR start entryRuleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4904:1: entryRuleAssertionExpression returns [EObject current=null] : iv_ruleAssertionExpression= ruleAssertionExpression EOF ;
    public final EObject entryRuleAssertionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertionExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4904:61: (iv_ruleAssertionExpression= ruleAssertionExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4905:2: iv_ruleAssertionExpression= ruleAssertionExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssertionExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression11580);
            iv_ruleAssertionExpression=ruleAssertionExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssertionExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssertionExpression11590); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssertionExpression


    // $ANTLR start ruleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4912:1: ruleAssertionExpression returns [EObject current=null] : ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) ;
    public final EObject ruleAssertionExpression() throws RecognitionException {
        EObject current = null;

        Token lv_message_3=null;
        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4917:6: ( ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4918:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4918:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4918:2: 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';'
            {
            match(input,65,FOLLOW_65_in_ruleAssertionExpression11624); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4922:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4925:6: lv_expr_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleAssertionExpression11658);
            lv_expr_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4943:2: ( ',' (lv_message_3= RULE_STRING ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==33) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4943:3: ',' (lv_message_3= RULE_STRING )
                    {
                    match(input,33,FOLLOW_33_in_ruleAssertionExpression11672); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4947:1: (lv_message_3= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4949:6: lv_message_3= RULE_STRING
                    {
                    lv_message_3=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleAssertionExpression11694); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0(), "message"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "message", lv_message_3, "STRING", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleAssertionExpression11713); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssertionExpression


    // $ANTLR start entryRuleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4978:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4978:51: (iv_ruleStatement= ruleStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4979:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement11746);
            iv_ruleStatement=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement11756); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatement


    // $ANTLR start ruleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4986:1: ruleStatement returns [EObject current=null] : (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_IfStatement_0 = null;

        EObject this_SwitchStatement_1 = null;

        EObject this_WhileStatement_2 = null;

        EObject this_ForStatement_3 = null;

        EObject this_DoWhileStatement_4 = null;

        EObject this_CompoundStatement_5 = null;

        EObject this_VarExpression_6 = null;

        EObject this_BreakStatement_8 = null;

        EObject this_ContinueStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_FunctionStatement_11 = null;

        EObject this_LabelStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryCatchStatement_14 = null;

        EObject this_WithStatement_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4991:6: ( (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            int alt92=15;
            switch ( input.LA(1) ) {
            case 77:
                {
                alt92=1;
                }
                break;
            case 69:
                {
                alt92=2;
                }
                break;
            case 68:
                {
                alt92=3;
                }
                break;
            case 72:
                {
                alt92=4;
                }
                break;
            case 74:
                {
                alt92=5;
                }
                break;
            case 42:
                {
                switch ( input.LA(2) ) {
                case RULE_INT:
                case RULE_HEX:
                case RULE_REAL:
                case RULE_REGEX:
                case 18:
                case 19:
                case 31:
                case 32:
                case 38:
                case 42:
                case 43:
                case 57:
                case 58:
                case 59:
                case 66:
                case 67:
                case 68:
                case 69:
                case 72:
                case 74:
                case 75:
                case 76:
                case 77:
                case 79:
                case 80:
                case 83:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                    {
                    alt92=6;
                    }
                    break;
                case RULE_STRING:
                    {
                    int LA92_17 = input.LA(3);

                    if ( (LA92_17==29) ) {
                        alt92=7;
                    }
                    else if ( (LA92_17==15||(LA92_17>=17 && LA92_17<=18)||(LA92_17>=22 && LA92_17<=28)||(LA92_17>=30 && LA92_17<=32)||LA92_17==38||(LA92_17>=84 && LA92_17<=92)||(LA92_17>=105 && LA92_17<=123)) ) {
                        alt92=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA92_18 = input.LA(3);

                    if ( (LA92_18==29) ) {
                        int LA92_22 = input.LA(4);

                        if ( (synpred138()) ) {
                            alt92=6;
                        }
                        else if ( (synpred140()) ) {
                            alt92=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 22, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA92_18==15||(LA92_18>=17 && LA92_18<=18)||(LA92_18>=22 && LA92_18<=28)||(LA92_18>=30 && LA92_18<=32)||LA92_18==38||(LA92_18>=84 && LA92_18<=92)||(LA92_18>=105 && LA92_18<=123)) ) {
                        alt92=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 18, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_PID:
                    {
                    int LA92_19 = input.LA(3);

                    if ( (LA92_19==29) ) {
                        alt92=7;
                    }
                    else if ( (LA92_19==15||(LA92_19>=17 && LA92_19<=18)||(LA92_19>=22 && LA92_19<=28)||(LA92_19>=30 && LA92_19<=32)||LA92_19==38||(LA92_19>=84 && LA92_19<=92)||(LA92_19>=105 && LA92_19<=123)) ) {
                        alt92=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 19, input);

                        throw nvae;
                    }
                    }
                    break;
                case 45:
                    {
                    alt92=7;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 6, input);

                    throw nvae;
                }

                }
                break;
            case RULE_INT:
            case RULE_HEX:
            case RULE_PID:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 18:
            case 19:
            case 31:
            case 32:
            case 38:
            case 43:
            case 58:
            case 59:
            case 83:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt92=7;
                }
                break;
            case 76:
                {
                int LA92_8 = input.LA(2);

                if ( (LA92_8==RULE_ID) ) {
                    alt92=11;
                }
                else if ( (LA92_8==32) ) {
                    alt92=7;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 8, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA92_9 = input.LA(2);

                if ( (LA92_9==29) ) {
                    alt92=12;
                }
                else if ( (LA92_9==15||(LA92_9>=17 && LA92_9<=18)||(LA92_9>=22 && LA92_9<=28)||(LA92_9>=30 && LA92_9<=32)||LA92_9==38||(LA92_9>=84 && LA92_9<=92)||(LA92_9>=105 && LA92_9<=123)) ) {
                    alt92=7;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 9, input);

                    throw nvae;
                }
                }
                break;
            case 66:
                {
                alt92=8;
                }
                break;
            case 67:
                {
                alt92=9;
                }
                break;
            case 75:
                {
                alt92=10;
                }
                break;
            case 79:
                {
                alt92=13;
                }
                break;
            case 80:
                {
                alt92=14;
                }
                break;
            case 57:
                {
                alt92=15;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4992:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 92, 0, input);

                throw nvae;
            }

            switch (alt92) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4993:5: this_IfStatement_0= ruleIfStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleIfStatement_in_ruleStatement11803);
                    this_IfStatement_0=ruleIfStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_IfStatement_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5003:5: this_SwitchStatement_1= ruleSwitchStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSwitchStatement_in_ruleStatement11830);
                    this_SwitchStatement_1=ruleSwitchStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_SwitchStatement_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5013:5: this_WhileStatement_2= ruleWhileStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleWhileStatement_in_ruleStatement11857);
                    this_WhileStatement_2=ruleWhileStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WhileStatement_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5023:5: this_ForStatement_3= ruleForStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleForStatement_in_ruleStatement11884);
                    this_ForStatement_3=ruleForStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ForStatement_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5033:5: this_DoWhileStatement_4= ruleDoWhileStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getDoWhileStatementParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleDoWhileStatement_in_ruleStatement11911);
                    this_DoWhileStatement_4=ruleDoWhileStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_DoWhileStatement_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5043:5: this_CompoundStatement_5= ruleCompoundStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundStatement_in_ruleStatement11938);
                    this_CompoundStatement_5=ruleCompoundStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundStatement_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:7: (this_VarExpression_6= ruleVarExpression )? ';'
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:7: (this_VarExpression_6= ruleVarExpression )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=RULE_ID && LA91_0<=RULE_REGEX)||(LA91_0>=18 && LA91_0<=19)||(LA91_0>=31 && LA91_0<=32)||(LA91_0>=42 && LA91_0<=43)||(LA91_0>=58 && LA91_0<=59)||LA91_0==76||LA91_0==83||(LA91_0>=91 && LA91_0<=101)) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5053:5: this_VarExpression_6= ruleVarExpression
                            {
                            if ( backtracking==0 ) {
                               
                                      currentNode=createCompositeNode(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_6_0(), currentNode); 
                                  
                            }
                            pushFollow(FOLLOW_ruleVarExpression_in_ruleStatement11967);
                            this_VarExpression_6=ruleVarExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {
                               
                                      current = this_VarExpression_6; 
                                      currentNode = currentNode.getParent();
                                  
                            }

                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_ruleStatement11977); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5067:5: this_BreakStatement_8= ruleBreakStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_7(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBreakStatement_in_ruleStatement12006);
                    this_BreakStatement_8=ruleBreakStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BreakStatement_8; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5077:5: this_ContinueStatement_9= ruleContinueStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_8(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleContinueStatement_in_ruleStatement12033);
                    this_ContinueStatement_9=ruleContinueStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ContinueStatement_9; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5087:5: this_ReturnStatement_10= ruleReturnStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_9(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleReturnStatement_in_ruleStatement12060);
                    this_ReturnStatement_10=ruleReturnStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ReturnStatement_10; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5097:5: this_FunctionStatement_11= ruleFunctionStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getFunctionStatementParserRuleCall_10(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFunctionStatement_in_ruleStatement12087);
                    this_FunctionStatement_11=ruleFunctionStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FunctionStatement_11; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5107:5: this_LabelStatement_12= ruleLabelStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getLabelStatementParserRuleCall_11(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLabelStatement_in_ruleStatement12114);
                    this_LabelStatement_12=ruleLabelStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LabelStatement_12; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5117:5: this_ThrowStatement_13= ruleThrowStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_12(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleThrowStatement_in_ruleStatement12141);
                    this_ThrowStatement_13=ruleThrowStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ThrowStatement_13; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5127:5: this_TryCatchStatement_14= ruleTryCatchStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getTryCatchStatementParserRuleCall_13(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleTryCatchStatement_in_ruleStatement12168);
                    this_TryCatchStatement_14=ruleTryCatchStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_TryCatchStatement_14; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 15 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5137:5: this_WithStatement_15= ruleWithStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWithStatementParserRuleCall_14(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleWithStatement_in_ruleStatement12195);
                    this_WithStatement_15=ruleWithStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WithStatement_15; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatement


    // $ANTLR start entryRuleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5152:1: entryRuleBreakStatement returns [EObject current=null] : iv_ruleBreakStatement= ruleBreakStatement EOF ;
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5152:56: (iv_ruleBreakStatement= ruleBreakStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5153:2: iv_ruleBreakStatement= ruleBreakStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBreakStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement12227);
            iv_ruleBreakStatement=ruleBreakStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBreakStatement12237); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBreakStatement


    // $ANTLR start ruleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5160:1: ruleBreakStatement returns [EObject current=null] : ( () 'break' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5165:6: ( ( () 'break' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5166:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5166:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5166:2: () 'break' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5166:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5167:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,66,FOLLOW_66_in_ruleBreakStatement12280); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBreakStatementAccess().getBreakKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5181:1: (lv_label_2= RULE_ID )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ID) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5183:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleBreakStatement12302); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getBreakStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBreakStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleBreakStatement12320); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBreakStatement


    // $ANTLR start entryRuleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5212:1: entryRuleContinueStatement returns [EObject current=null] : iv_ruleContinueStatement= ruleContinueStatement EOF ;
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5212:59: (iv_ruleContinueStatement= ruleContinueStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5213:2: iv_ruleContinueStatement= ruleContinueStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getContinueStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement12353);
            iv_ruleContinueStatement=ruleContinueStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleContinueStatement12363); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleContinueStatement


    // $ANTLR start ruleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5220:1: ruleContinueStatement returns [EObject current=null] : ( () 'continue' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5225:6: ( ( () 'continue' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5226:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5226:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5226:2: () 'continue' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5226:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5227:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,67,FOLLOW_67_in_ruleContinueStatement12406); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getContinueStatementAccess().getContinueKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5241:1: (lv_label_2= RULE_ID )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_ID) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5243:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleContinueStatement12428); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getContinueStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getContinueStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleContinueStatement12446); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleContinueStatement


    // $ANTLR start entryRuleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5272:1: entryRuleCompoundStatement returns [EObject current=null] : iv_ruleCompoundStatement= ruleCompoundStatement EOF ;
    public final EObject entryRuleCompoundStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5272:59: (iv_ruleCompoundStatement= ruleCompoundStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5273:2: iv_ruleCompoundStatement= ruleCompoundStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12479);
            iv_ruleCompoundStatement=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundStatement12489); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundStatement


    // $ANTLR start ruleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5280:1: ruleCompoundStatement returns [EObject current=null] : ( '{' (lv_statements_1= ruleStatements ) '}' ) ;
    public final EObject ruleCompoundStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5285:6: ( ( '{' (lv_statements_1= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5286:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5286:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5286:2: '{' (lv_statements_1= ruleStatements ) '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundStatement12523); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5290:1: (lv_statements_1= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5293:6: lv_statements_1= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleCompoundStatement12557);
            lv_statements_1=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCompoundStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_1, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,45,FOLLOW_45_in_ruleCompoundStatement12570); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundStatement


    // $ANTLR start entryRuleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5322:1: entryRuleStatements returns [EObject current=null] : iv_ruleStatements= ruleStatements EOF ;
    public final EObject entryRuleStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatements = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5322:52: (iv_ruleStatements= ruleStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5323:2: iv_ruleStatements= ruleStatements EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStatementsRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStatements_in_entryRuleStatements12603);
            iv_ruleStatements=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStatements; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatements12613); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatements


    // $ANTLR start ruleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5330:1: ruleStatements returns [EObject current=null] : (lv_statements_0= ruleStatement )+ ;
    public final EObject ruleStatements() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5335:6: ( (lv_statements_0= ruleStatement )+ )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5336:1: (lv_statements_0= ruleStatement )+
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5336:1: (lv_statements_0= ruleStatement )+
            int cnt95=0;
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( ((LA95_0>=RULE_ID && LA95_0<=RULE_REGEX)||(LA95_0>=18 && LA95_0<=19)||(LA95_0>=31 && LA95_0<=32)||LA95_0==38||(LA95_0>=42 && LA95_0<=43)||(LA95_0>=57 && LA95_0<=59)||(LA95_0>=66 && LA95_0<=69)||LA95_0==72||(LA95_0>=74 && LA95_0<=77)||(LA95_0>=79 && LA95_0<=80)||LA95_0==83||(LA95_0>=91 && LA95_0<=101)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5339:6: lv_statements_0= ruleStatement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleStatement_in_ruleStatements12671);
            	    lv_statements_0=ruleStatement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getStatementsRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "statements", lv_statements_0, "Statement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt95 >= 1 ) break loop95;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(95, input);
                        throw eee;
                }
                cnt95++;
            } while (true);


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatements


    // $ANTLR start entryRuleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5364:1: entryRuleWhileStatement returns [EObject current=null] : iv_ruleWhileStatement= ruleWhileStatement EOF ;
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5364:56: (iv_ruleWhileStatement= ruleWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5365:2: iv_ruleWhileStatement= ruleWhileStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWhileStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12708);
            iv_ruleWhileStatement=ruleWhileStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWhileStatement12718); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWhileStatement


    // $ANTLR start ruleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5372:1: ruleWhileStatement returns [EObject current=null] : ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) ;
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_2 = null;

        EObject lv_body_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5377:6: ( ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5378:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5378:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5378:2: 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement )
            {
            match(input,68,FOLLOW_68_in_ruleWhileStatement12752); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getWhileKeyword_0(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleWhileStatement12761); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5386:1: (lv_condition_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5389:6: lv_condition_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleWhileStatement12795);
            lv_condition_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleWhileStatement12808); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5411:1: (lv_body_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5414:6: lv_body_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleWhileStatement12842);
            lv_body_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWhileStatement


    // $ANTLR start entryRuleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5439:1: entryRuleSwitchStatement returns [EObject current=null] : iv_ruleSwitchStatement= ruleSwitchStatement EOF ;
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5439:57: (iv_ruleSwitchStatement= ruleSwitchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5440:2: iv_ruleSwitchStatement= ruleSwitchStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSwitchStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement12879);
            iv_ruleSwitchStatement=ruleSwitchStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSwitchStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitchStatement12889); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSwitchStatement


    // $ANTLR start ruleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5447:1: ruleSwitchStatement returns [EObject current=null] : ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) ;
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_switchExpr_2 = null;

        EObject lv_case_5 = null;

        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5452:6: ( ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5453:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5453:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5453:2: 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}'
            {
            match(input,69,FOLLOW_69_in_ruleSwitchStatement12923); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleSwitchStatement12932); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5461:1: (lv_switchExpr_2= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5464:6: lv_switchExpr_2= ruleVarExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleVarExpression_in_ruleSwitchStatement12966);
            lv_switchExpr_2=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "switchExpr", lv_switchExpr_2, "VarExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleSwitchStatement12979); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_ruleSwitchStatement12988); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5490:1: (lv_case_5= ruleCase )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==71) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5493:6: lv_case_5= ruleCase
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleCase_in_ruleSwitchStatement13022);
            	    lv_case_5=ruleCase();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "case", lv_case_5, "Case", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5511:3: ( 'default' ':' (lv_statements_8= ruleStatements )? )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==70) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5511:4: 'default' ':' (lv_statements_8= ruleStatements )?
                    {
                    match(input,70,FOLLOW_70_in_ruleSwitchStatement13037); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0(), null); 
                          
                    }
                    match(input,29,FOLLOW_29_in_ruleSwitchStatement13046); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5519:1: (lv_statements_8= ruleStatements )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( ((LA97_0>=RULE_ID && LA97_0<=RULE_REGEX)||(LA97_0>=18 && LA97_0<=19)||(LA97_0>=31 && LA97_0<=32)||LA97_0==38||(LA97_0>=42 && LA97_0<=43)||(LA97_0>=57 && LA97_0<=59)||(LA97_0>=66 && LA97_0<=69)||LA97_0==72||(LA97_0>=74 && LA97_0<=77)||(LA97_0>=79 && LA97_0<=80)||LA97_0==83||(LA97_0>=91 && LA97_0<=101)) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5522:6: lv_statements_8= ruleStatements
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleStatements_in_ruleSwitchStatement13080);
                            lv_statements_8=ruleStatements();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleSwitchStatement13096); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSwitchStatement


    // $ANTLR start entryRuleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5551:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCase = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5551:46: (iv_ruleCase= ruleCase EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5552:2: iv_ruleCase= ruleCase EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCaseRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCase_in_entryRuleCase13129);
            iv_ruleCase=ruleCase();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCase; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCase13139); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCase


    // $ANTLR start ruleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5559:1: ruleCase returns [EObject current=null] : ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_1 = null;

        EObject lv_statements_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5564:6: ( ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5565:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5565:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5565:2: 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )?
            {
            match(input,71,FOLLOW_71_in_ruleCase13173); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCaseAccess().getCaseKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5569:1: (lv_condition_1= ruleValueLiteral )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5572:6: lv_condition_1= ruleValueLiteral
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleValueLiteral_in_ruleCase13207);
            lv_condition_1=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_1, "ValueLiteral", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,29,FOLLOW_29_in_ruleCase13220); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCaseAccess().getColonKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5594:1: (lv_statements_3= ruleStatements )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( ((LA99_0>=RULE_ID && LA99_0<=RULE_REGEX)||(LA99_0>=18 && LA99_0<=19)||(LA99_0>=31 && LA99_0<=32)||LA99_0==38||(LA99_0>=42 && LA99_0<=43)||(LA99_0>=57 && LA99_0<=59)||(LA99_0>=66 && LA99_0<=69)||LA99_0==72||(LA99_0>=74 && LA99_0<=77)||(LA99_0>=79 && LA99_0<=80)||LA99_0==83||(LA99_0>=91 && LA99_0<=101)) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5597:6: lv_statements_3= ruleStatements
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getStatementsStatementsParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatements_in_ruleCase13254);
                    lv_statements_3=ruleStatements();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "statements", lv_statements_3, "Statements", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCase


    // $ANTLR start entryRuleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5622:1: entryRuleForStatement returns [EObject current=null] : iv_ruleForStatement= ruleForStatement EOF ;
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5622:54: (iv_ruleForStatement= ruleForStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5623:2: iv_ruleForStatement= ruleForStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getForStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleForStatement_in_entryRuleForStatement13292);
            iv_ruleForStatement=ruleForStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleForStatement13302); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleForStatement


    // $ANTLR start ruleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5630:1: ruleForStatement returns [EObject current=null] : ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) ;
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token lv_regular_4=null;
        EObject lv_init_3 = null;

        EObject lv_cond_5 = null;

        EObject lv_iterate_7 = null;

        EObject lv_iterate_9 = null;

        EObject lv_body_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5635:6: ( ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5636:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5636:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5636:2: () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5636:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5637:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getForStatementAccess().getForStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getForStatementAccess().getForStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,72,FOLLOW_72_in_ruleForStatement13345); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getForKeyword_1(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleForStatement13354); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5655:1: (lv_init_3= ruleVarExpressionList )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( ((LA100_0>=RULE_ID && LA100_0<=RULE_REGEX)||(LA100_0>=18 && LA100_0<=19)||(LA100_0>=31 && LA100_0<=32)||(LA100_0>=42 && LA100_0<=43)||(LA100_0>=58 && LA100_0<=59)||LA100_0==76||LA100_0==83||(LA100_0>=91 && LA100_0<=101)) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5658:6: lv_init_3= ruleVarExpressionList
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVarExpressionList_in_ruleForStatement13388);
                    lv_init_3=ruleVarExpressionList();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "init", lv_init_3, "VarExpressionList", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5676:3: ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==38) ) {
                alt103=1;
            }
            else if ( (LA103_0==73) ) {
                alt103=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5676:3: ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) )", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5676:4: ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5676:4: ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5676:5: (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5676:5: (lv_regular_4= ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5678:6: lv_regular_4= ';'
                    {
                    lv_regular_4=(Token)input.LT(1);
                    match(input,38,FOLLOW_38_in_ruleForStatement13416); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getRegularSemicolonKeyword_4_0_0_0(), "regular"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "regular", true, ";", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5697:2: (lv_cond_5= ruleExpression )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_REGEX)||(LA101_0>=18 && LA101_0<=19)||(LA101_0>=31 && LA101_0<=32)||(LA101_0>=42 && LA101_0<=43)||(LA101_0>=58 && LA101_0<=59)||LA101_0==76||(LA101_0>=91 && LA101_0<=101)) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5700:6: lv_cond_5= ruleExpression
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_4_0_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleForStatement13463);
                            lv_cond_5=ruleExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "cond", lv_cond_5, "Expression", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_ruleForStatement13477); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_4_0_2(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5722:1: (lv_iterate_7= ruleExpressionList )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_REGEX)||(LA102_0>=18 && LA102_0<=19)||(LA102_0>=31 && LA102_0<=32)||(LA102_0>=42 && LA102_0<=43)||(LA102_0>=58 && LA102_0<=59)||LA102_0==76||(LA102_0>=91 && LA102_0<=101)) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5725:6: lv_iterate_7= ruleExpressionList
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_4_0_3_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpressionList_in_ruleForStatement13511);
                            lv_iterate_7=ruleExpressionList();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "iterate", lv_iterate_7, "ExpressionList", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5744:6: ( 'in' (lv_iterate_9= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5744:6: ( 'in' (lv_iterate_9= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5744:7: 'in' (lv_iterate_9= ruleExpression )
                    {
                    match(input,73,FOLLOW_73_in_ruleForStatement13533); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getInKeyword_4_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5748:1: (lv_iterate_9= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5751:6: lv_iterate_9= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionParserRuleCall_4_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleForStatement13567);
                    lv_iterate_9=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "iterate", lv_iterate_9, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleForStatement13582); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5773:1: (lv_body_11= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5776:6: lv_body_11= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleForStatement13616);
            lv_body_11=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_11, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleForStatement


    // $ANTLR start entryRuleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5801:1: entryRuleDoWhileStatement returns [EObject current=null] : iv_ruleDoWhileStatement= ruleDoWhileStatement EOF ;
    public final EObject entryRuleDoWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoWhileStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5801:58: (iv_ruleDoWhileStatement= ruleDoWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5802:2: iv_ruleDoWhileStatement= ruleDoWhileStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDoWhileStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement13653);
            iv_ruleDoWhileStatement=ruleDoWhileStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDoWhileStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDoWhileStatement13663); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDoWhileStatement


    // $ANTLR start ruleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5809:1: ruleDoWhileStatement returns [EObject current=null] : ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) ;
    public final EObject ruleDoWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_statement_1 = null;

        EObject lv_condition_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5814:6: ( ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5815:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5815:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5815:2: 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';'
            {
            match(input,74,FOLLOW_74_in_ruleDoWhileStatement13697); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getDoKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5819:1: (lv_statement_1= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5822:6: lv_statement_1= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getStatementStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleDoWhileStatement13731);
            lv_statement_1=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_1, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,68,FOLLOW_68_in_ruleDoWhileStatement13744); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getWhileKeyword_2(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleDoWhileStatement13753); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getLeftParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5848:1: (lv_condition_4= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5851:6: lv_condition_4= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getConditionExpressionParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleDoWhileStatement13787);
            lv_condition_4=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_4, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleDoWhileStatement13800); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getRightParenthesisKeyword_5(), null); 
                  
            }
            match(input,38,FOLLOW_38_in_ruleDoWhileStatement13809); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getSemicolonKeyword_6(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDoWhileStatement


    // $ANTLR start entryRuleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5884:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5884:57: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5885:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getReturnStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13842);
            iv_ruleReturnStatement=ruleReturnStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStatement13852); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleReturnStatement


    // $ANTLR start ruleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5892:1: ruleReturnStatement returns [EObject current=null] : ( 'return' (lv_return_1= ruleExpression ) ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_return_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5897:6: ( ( 'return' (lv_return_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5898:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5898:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5898:2: 'return' (lv_return_1= ruleExpression ) ';'
            {
            match(input,75,FOLLOW_75_in_ruleReturnStatement13886); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getReturnStatementAccess().getReturnKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5902:1: (lv_return_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5905:6: lv_return_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleReturnStatement13920);
            lv_return_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getReturnStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "return", lv_return_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,38,FOLLOW_38_in_ruleReturnStatement13933); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleReturnStatement


    // $ANTLR start entryRuleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5934:1: entryRuleFunctionStatement returns [EObject current=null] : iv_ruleFunctionStatement= ruleFunctionStatement EOF ;
    public final EObject entryRuleFunctionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5934:59: (iv_ruleFunctionStatement= ruleFunctionStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5935:2: iv_ruleFunctionStatement= ruleFunctionStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFunctionStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement13966);
            iv_ruleFunctionStatement=ruleFunctionStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFunctionStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFunctionStatement13976); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFunctionStatement


    // $ANTLR start ruleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5942:1: ruleFunctionStatement returns [EObject current=null] : ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) ;
    public final EObject ruleFunctionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        Token lv_params_3=null;
        Token lv_params_5=null;
        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5947:6: ( ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5948:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5948:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5948:2: 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}'
            {
            match(input,76,FOLLOW_76_in_ruleFunctionStatement14010); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getFunctionKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5952:1: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5954:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement14032); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getFunctionStatementAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,32,FOLLOW_32_in_ruleFunctionStatement14049); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5976:1: ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5976:2: (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5976:2: (lv_params_3= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5978:6: lv_params_3= RULE_ID
            {
            lv_params_3=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement14072); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_0_0(), "params"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		add(current, "params", lv_params_3, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5996:2: ( ',' (lv_params_5= RULE_ID ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==33) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5996:3: ',' (lv_params_5= RULE_ID )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleFunctionStatement14090); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getFunctionStatementAccess().getCommaKeyword_3_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6000:1: (lv_params_5= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6002:6: lv_params_5= RULE_ID
            	    {
            	    lv_params_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement14112); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_1_1_0(), "params"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_5, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }

            match(input,35,FOLLOW_35_in_ruleFunctionStatement14132); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getRightParenthesisKeyword_4(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_ruleFunctionStatement14141); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6028:1: (lv_statements_8= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6031:6: lv_statements_8= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFunctionStatementAccess().getStatementsStatementsParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleFunctionStatement14175);
            lv_statements_8=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,45,FOLLOW_45_in_ruleFunctionStatement14188); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFunctionStatement


    // $ANTLR start entryRuleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6060:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6060:53: (iv_ruleIfStatement= ruleIfStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6061:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIfStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIfStatement_in_entryRuleIfStatement14221);
            iv_ruleIfStatement=ruleIfStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfStatement14231); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfStatement


    // $ANTLR start ruleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6068:1: ruleIfStatement returns [EObject current=null] : ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_2 = null;

        EObject lv_then_4 = null;

        EObject lv_else_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6073:6: ( ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6074:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6074:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6074:2: 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )?
            {
            match(input,77,FOLLOW_77_in_ruleIfStatement14265); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getIfKeyword_0(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleIfStatement14274); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6082:1: (lv_cond_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6085:6: lv_cond_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getCondExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleIfStatement14308);
            lv_cond_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "cond", lv_cond_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleIfStatement14321); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6107:1: (lv_then_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6110:6: lv_then_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement14355);
            lv_then_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "then", lv_then_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6128:2: ( 'else' (lv_else_6= ruleStatement ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==78) ) {
                int LA105_1 = input.LA(2);

                if ( (synpred160()) ) {
                    alt105=1;
                }
            }
            switch (alt105) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6128:3: 'else' (lv_else_6= ruleStatement )
                    {
                    match(input,78,FOLLOW_78_in_ruleIfStatement14369); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfStatementAccess().getElseKeyword_5_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6132:1: (lv_else_6= ruleStatement )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6135:6: lv_else_6= ruleStatement
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement14403);
                    lv_else_6=ruleStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "else", lv_else_6, "Statement", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfStatement


    // $ANTLR start entryRuleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6160:1: entryRuleLabelStatement returns [EObject current=null] : iv_ruleLabelStatement= ruleLabelStatement EOF ;
    public final EObject entryRuleLabelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6160:56: (iv_ruleLabelStatement= ruleLabelStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6161:2: iv_ruleLabelStatement= ruleLabelStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLabelStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement14442);
            iv_ruleLabelStatement=ruleLabelStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLabelStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabelStatement14452); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLabelStatement


    // $ANTLR start ruleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6168:1: ruleLabelStatement returns [EObject current=null] : ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) ) ;
    public final EObject ruleLabelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_statement_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6173:6: ( ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6174:1: ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6174:1: ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6174:2: (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6174:2: (lv_name_0= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6176:6: lv_name_0= RULE_ID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLabelStatement14499); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getLabelStatementAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,29,FOLLOW_29_in_ruleLabelStatement14516); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLabelStatementAccess().getColonKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6198:1: (lv_statement_2= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6201:6: lv_statement_2= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getLabelStatementAccess().getStatementStatementParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleLabelStatement14550);
            lv_statement_2=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_2, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLabelStatement


    // $ANTLR start entryRuleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6226:1: entryRuleThrowStatement returns [EObject current=null] : iv_ruleThrowStatement= ruleThrowStatement EOF ;
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6226:56: (iv_ruleThrowStatement= ruleThrowStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6227:2: iv_ruleThrowStatement= ruleThrowStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getThrowStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement14587);
            iv_ruleThrowStatement=ruleThrowStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleThrowStatement14597); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleThrowStatement


    // $ANTLR start ruleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6234:1: ruleThrowStatement returns [EObject current=null] : ( 'throw' (lv_expr_1= ruleExpression ) ';' ) ;
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6239:6: ( ( 'throw' (lv_expr_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:2: 'throw' (lv_expr_1= ruleExpression ) ';'
            {
            match(input,79,FOLLOW_79_in_ruleThrowStatement14631); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThrowStatementAccess().getThrowKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6244:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6247:6: lv_expr_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getThrowStatementAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleThrowStatement14665);
            lv_expr_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getThrowStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,38,FOLLOW_38_in_ruleThrowStatement14678); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleThrowStatement


    // $ANTLR start entryRuleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6276:1: entryRuleTryCatchStatement returns [EObject current=null] : iv_ruleTryCatchStatement= ruleTryCatchStatement EOF ;
    public final EObject entryRuleTryCatchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryCatchStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6276:59: (iv_ruleTryCatchStatement= ruleTryCatchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6277:2: iv_ruleTryCatchStatement= ruleTryCatchStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTryCatchStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement14711);
            iv_ruleTryCatchStatement=ruleTryCatchStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTryCatchStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleTryCatchStatement14721); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleTryCatchStatement


    // $ANTLR start ruleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6284:1: ruleTryCatchStatement returns [EObject current=null] : ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) ;
    public final EObject ruleTryCatchStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_tryBlock_1 = null;

        EObject lv_catchBlock_2 = null;

        EObject lv_finallyBlock_3 = null;

        EObject lv_finally_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6289:6: ( ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6290:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6290:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6290:2: 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            {
            match(input,80,FOLLOW_80_in_ruleTryCatchStatement14755); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getTryCatchStatementAccess().getTryKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6294:1: (lv_tryBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6297:6: lv_tryBlock_1= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getTryBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement14789);
            lv_tryBlock_1=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "tryBlock", lv_tryBlock_1, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==81) ) {
                alt107=1;
            }
            else if ( (LA107_0==82) ) {
                alt107=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6315:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:4: (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:4: (lv_catchBlock_2= ruleCatchBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6318:6: lv_catchBlock_2= ruleCatchBlock
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getCatchBlockCatchBlockParserRuleCall_2_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement14829);
                    lv_catchBlock_2=ruleCatchBlock();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "catchBlock", lv_catchBlock_2, "CatchBlock", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6336:2: (lv_finallyBlock_3= ruleFinallyBlock )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==82) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6339:6: lv_finallyBlock_3= ruleFinallyBlock
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyBlockFinallyBlockParserRuleCall_2_0_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14867);
                            lv_finallyBlock_3=ruleFinallyBlock();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "finallyBlock", lv_finallyBlock_3, "FinallyBlock", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6358:6: (lv_finally_4= ruleFinallyBlock )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6358:6: (lv_finally_4= ruleFinallyBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6361:6: lv_finally_4= ruleFinallyBlock
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14913);
                    lv_finally_4=ruleFinallyBlock();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "finally", lv_finally_4, "FinallyBlock", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleTryCatchStatement


    // $ANTLR start entryRuleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6386:1: entryRuleCatchBlock returns [EObject current=null] : iv_ruleCatchBlock= ruleCatchBlock EOF ;
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchBlock = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6386:52: (iv_ruleCatchBlock= ruleCatchBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6387:2: iv_ruleCatchBlock= ruleCatchBlock EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCatchBlockRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock14951);
            iv_ruleCatchBlock=ruleCatchBlock();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCatchBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCatchBlock14961); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCatchBlock


    // $ANTLR start ruleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6394:1: ruleCatchBlock returns [EObject current=null] : ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) ;
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;

        Token lv_variable_2=null;
        EObject lv_catchBlock_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6399:6: ( ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6400:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6400:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6400:2: 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement )
            {
            match(input,81,FOLLOW_81_in_ruleCatchBlock14995); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getCatchKeyword_0(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleCatchBlock15004); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6408:1: (lv_variable_2= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6410:6: lv_variable_2= RULE_ID
            {
            lv_variable_2=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleCatchBlock15026); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getCatchBlockAccess().getVariableIDTerminalRuleCall_2_0(), "variable"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "variable", lv_variable_2, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleCatchBlock15043); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6432:1: (lv_catchBlock_4= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6435:6: lv_catchBlock_4= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCatchBlockAccess().getCatchBlockCompoundStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleCatchBlock15077);
            lv_catchBlock_4=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "catchBlock", lv_catchBlock_4, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCatchBlock


    // $ANTLR start entryRuleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6460:1: entryRuleFinallyBlock returns [EObject current=null] : iv_ruleFinallyBlock= ruleFinallyBlock EOF ;
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFinallyBlock = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6460:54: (iv_ruleFinallyBlock= ruleFinallyBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6461:2: iv_ruleFinallyBlock= ruleFinallyBlock EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFinallyBlockRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock15114);
            iv_ruleFinallyBlock=ruleFinallyBlock();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFinallyBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFinallyBlock15124); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFinallyBlock


    // $ANTLR start ruleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6468:1: ruleFinallyBlock returns [EObject current=null] : ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) ;
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_finallyBlock_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6473:6: ( ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6474:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6474:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6474:2: 'finally' (lv_finallyBlock_1= ruleCompoundStatement )
            {
            match(input,82,FOLLOW_82_in_ruleFinallyBlock15158); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFinallyBlockAccess().getFinallyKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6478:1: (lv_finallyBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6481:6: lv_finallyBlock_1= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFinallyBlockAccess().getFinallyBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock15192);
            lv_finallyBlock_1=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFinallyBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "finallyBlock", lv_finallyBlock_1, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFinallyBlock


    // $ANTLR start entryRuleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6506:1: entryRuleWithStatement returns [EObject current=null] : iv_ruleWithStatement= ruleWithStatement EOF ;
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6506:55: (iv_ruleWithStatement= ruleWithStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6507:2: iv_ruleWithStatement= ruleWithStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleWithStatement_in_entryRuleWithStatement15229);
            iv_ruleWithStatement=ruleWithStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWithStatement15239); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWithStatement


    // $ANTLR start ruleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6514:1: ruleWithStatement returns [EObject current=null] : ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) ;
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_2 = null;

        EObject lv_statement_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6519:6: ( ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6520:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6520:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6520:2: 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement )
            {
            match(input,57,FOLLOW_57_in_ruleWithStatement15273); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleWithStatement15282); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6528:1: (lv_expr_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6531:6: lv_expr_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleWithStatement15316);
            lv_expr_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,35,FOLLOW_35_in_ruleWithStatement15329); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6553:1: (lv_statement_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6556:6: lv_statement_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleWithStatement15363);
            lv_statement_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWithStatement


    // $ANTLR start entryRuleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:1: entryRuleVarExpressionList returns [EObject current=null] : iv_ruleVarExpressionList= ruleVarExpressionList EOF ;
    public final EObject entryRuleVarExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarExpressionList = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:59: (iv_ruleVarExpressionList= ruleVarExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6582:2: iv_ruleVarExpressionList= ruleVarExpressionList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarExpressionListRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList15400);
            iv_ruleVarExpressionList=ruleVarExpressionList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarExpressionList; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpressionList15410); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpressionList


    // $ANTLR start ruleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6589:1: ruleVarExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) ;
    public final EObject ruleVarExpressionList() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6594:6: ( ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6595:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6595:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6595:2: (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6595:2: (lv_expr_0= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6598:6: lv_expr_0= ruleVarExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList15469);
            lv_expr_0=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "expr", lv_expr_0, "VarExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6616:2: ( ',' (lv_expr_2= ruleVarExpression ) )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==33) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6616:3: ',' (lv_expr_2= ruleVarExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleVarExpressionList15483); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6620:1: (lv_expr_2= ruleVarExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6623:6: lv_expr_2= ruleVarExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList15517);
            	    lv_expr_2=ruleVarExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "expr", lv_expr_2, "VarExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpressionList


    // $ANTLR start entryRuleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6648:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6648:56: (iv_ruleExpressionList= ruleExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6649:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionListRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleExpressionList_in_entryRuleExpressionList15556);
            iv_ruleExpressionList=ruleExpressionList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpressionList15566); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpressionList


    // $ANTLR start ruleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6656:1: ruleExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6661:6: ( ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6662:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6662:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6662:2: (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6662:2: (lv_expr_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6665:6: lv_expr_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList15625);
            lv_expr_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "expr", lv_expr_0, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6683:2: ( ',' (lv_expr_2= ruleExpression ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==33) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6683:3: ',' (lv_expr_2= ruleExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleExpressionList15639); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6687:1: (lv_expr_2= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6690:6: lv_expr_2= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList15673);
            	    lv_expr_2=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "expr", lv_expr_2, "Expression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpressionList


    // $ANTLR start entryRuleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6715:1: entryRuleVarExpression returns [EObject current=null] : iv_ruleVarExpression= ruleVarExpression EOF ;
    public final EObject entryRuleVarExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6715:55: (iv_ruleVarExpression= ruleVarExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6716:2: iv_ruleVarExpression= ruleVarExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVarExpression_in_entryRuleVarExpression15712);
            iv_ruleVarExpression=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpression15722); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpression


    // $ANTLR start ruleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6723:1: ruleVarExpression returns [EObject current=null] : (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) ) ;
    public final EObject ruleVarExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_3=null;
        EObject this_Expression_0 = null;

        EObject lv_value_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6728:6: ( (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6729:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6729:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( ((LA111_0>=RULE_ID && LA111_0<=RULE_REGEX)||(LA111_0>=18 && LA111_0<=19)||(LA111_0>=31 && LA111_0<=32)||(LA111_0>=42 && LA111_0<=43)||(LA111_0>=58 && LA111_0<=59)||LA111_0==76||(LA111_0>=91 && LA111_0<=101)) ) {
                alt111=1;
            }
            else if ( (LA111_0==83) ) {
                alt111=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6729:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6730:5: this_Expression_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression15769);
                    this_Expression_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Expression_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6739:6: ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6739:6: ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6739:7: () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6739:7: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6740:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getVarExpressionAccess().getVarExpressionAction_1_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getVarExpressionAccess().getVarExpressionAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,83,FOLLOW_83_in_ruleVarExpression15793); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarExpressionAccess().getVarKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6754:1: (lv_name_3= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6756:6: lv_name_3= RULE_ID
                    {
                    lv_name_3=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVarExpression15815); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_2_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6774:2: ( '=' (lv_value_5= ruleExpression ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==25) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6774:3: '=' (lv_value_5= ruleExpression )
                            {
                            match(input,25,FOLLOW_25_in_ruleVarExpression15833); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6778:1: (lv_value_5= ruleExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6781:6: lv_value_5= ruleExpression
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression15867);
                            lv_value_5=ruleExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "value", lv_value_5, "Expression", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6806:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6806:52: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6807:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression15907);
            iv_ruleExpression=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpression15917); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6814:1: ruleExpression returns [EObject current=null] : this_AssignmentExpression_0= ruleAssignmentExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AssignmentExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6819:6: (this_AssignmentExpression_0= ruleAssignmentExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6821:5: this_AssignmentExpression_0= ruleAssignmentExpression
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleExpression15963);
            this_AssignmentExpression_0=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AssignmentExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6836:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6836:62: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6837:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression15994);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignmentExpression16004); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6844:1: ruleAssignmentExpression returns [EObject current=null] : (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IfExpression_0 = null;

        Enumerator lv_op_2 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6849:6: ( (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6850:1: (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6850:1: (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6851:5: this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getIfExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleIfExpression_in_ruleAssignmentExpression16051);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_IfExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6859:1: ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==25||(LA112_0>=105 && LA112_0<=115)) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6859:2: () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6859:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6860:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6875:2: (lv_op_2= ruleAssignmentOperator )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6878:6: lv_op_2= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorEnumRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression16094);
                    lv_op_2=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "op", lv_op_2, "AssignmentOperator", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6896:2: (lv_right_3= ruleAssignmentExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6899:6: lv_right_3= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression16132);
                    lv_right_3=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "right", lv_right_3, "AssignmentExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6924:1: entryRuleChainedExpression returns [EObject current=null] : iv_ruleChainedExpression= ruleChainedExpression EOF ;
    public final EObject entryRuleChainedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChainedExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6924:59: (iv_ruleChainedExpression= ruleChainedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6925:2: iv_ruleChainedExpression= ruleChainedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getChainedExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression16171);
            iv_ruleChainedExpression=ruleChainedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleChainedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainedExpression16181); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainedExpression


    // $ANTLR start ruleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6932:1: ruleChainedExpression returns [EObject current=null] : this_IfExpression_0= ruleIfExpression ;
    public final EObject ruleChainedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IfExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6937:6: (this_IfExpression_0= ruleIfExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6939:5: this_IfExpression_0= ruleIfExpression
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleIfExpression_in_ruleChainedExpression16227);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_IfExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainedExpression


    // $ANTLR start entryRuleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6954:1: entryRuleIfExpression returns [EObject current=null] : iv_ruleIfExpression= ruleIfExpression EOF ;
    public final EObject entryRuleIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6954:54: (iv_ruleIfExpression= ruleIfExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6955:2: iv_ruleIfExpression= ruleIfExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIfExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIfExpression_in_entryRuleIfExpression16258);
            iv_ruleIfExpression=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfExpression16268); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfExpression


    // $ANTLR start ruleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6962:1: ruleIfExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) ;
    public final EObject ruleIfExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        EObject lv_thenPart_3 = null;

        EObject lv_elsePart_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6967:6: ( (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6968:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6968:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6969:5: this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleOrExpression_in_ruleIfExpression16315);
            this_OrExpression_0=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_OrExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6977:1: ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==30) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6977:2: () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6977:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6978:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "condition", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,30,FOLLOW_30_in_ruleIfExpression16333); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6997:1: (lv_thenPart_3= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7000:6: lv_thenPart_3= ruleChainedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression16367);
                    lv_thenPart_3=ruleChainedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "thenPart", lv_thenPart_3, "ChainedExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,29,FOLLOW_29_in_ruleIfExpression16380); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7022:1: (lv_elsePart_5= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7025:6: lv_elsePart_5= ruleChainedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression16414);
                    lv_elsePart_5=ruleChainedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "elsePart", lv_elsePart_5, "ChainedExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7050:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7050:54: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7051:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleOrExpression_in_entryRuleOrExpression16453);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrExpression16463); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7058:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7063:6: ( (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7064:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7064:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7065:5: this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression16510);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AndExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7073:1: ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==84) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7073:2: () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7073:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7074:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7089:2: (lv_operator_2= '||' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7091:6: lv_operator_2= '||'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,84,FOLLOW_84_in_ruleOrExpression16540); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0(), "operator"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "||", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7110:2: (lv_right_3= ruleAndExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7113:6: lv_right_3= ruleAndExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression16587);
            	    lv_right_3=ruleAndExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "AndExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7138:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7138:55: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7139:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAndExpression_in_entryRuleAndExpression16626);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndExpression16636); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7146:1: ruleAndExpression returns [EObject current=null] : (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2=null;
        EObject this_BitwiseExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7151:6: ( (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7152:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7152:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7153:5: this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getBitwiseExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16683);
            this_BitwiseExpression_0=ruleBitwiseExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_BitwiseExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7161:1: ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==85) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7161:2: () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7161:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7162:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7177:2: (lv_operator_2= '&&' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7179:6: lv_operator_2= '&&'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,85,FOLLOW_85_in_ruleAndExpression16713); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0(), "operator"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "&&", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7198:2: (lv_right_3= ruleBitwiseExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7201:6: lv_right_3= ruleBitwiseExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightBitwiseExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16760);
            	    lv_right_3=ruleBitwiseExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "BitwiseExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7226:1: entryRuleBitwiseExpression returns [EObject current=null] : iv_ruleBitwiseExpression= ruleBitwiseExpression EOF ;
    public final EObject entryRuleBitwiseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7226:59: (iv_ruleBitwiseExpression= ruleBitwiseExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7227:2: iv_ruleBitwiseExpression= ruleBitwiseExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBitwiseExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression16799);
            iv_ruleBitwiseExpression=ruleBitwiseExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBitwiseExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBitwiseExpression16809); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBitwiseExpression


    // $ANTLR start ruleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7234:1: ruleBitwiseExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* ) ;
    public final EObject ruleBitwiseExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_RelationalExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7239:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7240:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7240:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7241:5: this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16856);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_RelationalExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7249:1: ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==23||(LA117_0>=86 && LA117_0<=87)) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7249:2: () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7249:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7250:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getBitwiseExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7265:2: (lv_name_2= ( '&' | '^' | '|' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7267:6: lv_name_2= ( '&' | '^' | '|' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7267:16: ( '&' | '^' | '|' )
            	    int alt116=3;
            	    switch ( input.LA(1) ) {
            	    case 23:
            	        {
            	        alt116=1;
            	        }
            	        break;
            	    case 86:
            	        {
            	        alt116=2;
            	        }
            	        break;
            	    case 87:
            	        {
            	        alt116=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("7267:16: ( '&' | '^' | '|' )", 116, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt116) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7267:17: '&'
            	            {
            	            match(input,23,FOLLOW_23_in_ruleBitwiseExpression16887); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameAmpersandKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7273:6: '^'
            	            {
            	            match(input,86,FOLLOW_86_in_ruleBitwiseExpression16903); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameCircumflexAccentKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7279:6: '|'
            	            {
            	            match(input,87,FOLLOW_87_in_ruleBitwiseExpression16919); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameVerticalLineKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7299:2: (lv_params_3= ruleRelationalExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7302:6: lv_params_3= ruleRelationalExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getParamsRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16968);
            	    lv_params_3=ruleRelationalExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "RelationalExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBitwiseExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7327:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7327:62: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7328:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression17007);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRelationalExpression17017); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7335:1: ruleRelationalExpression returns [EObject current=null] : (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        Enumerator lv_operator_2 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7340:6: ( (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7341:1: (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7341:1: (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7342:5: this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleShiftExpression_in_ruleRelationalExpression17064);
            this_ShiftExpression_0=ruleShiftExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_ShiftExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7350:1: ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( ((LA118_0>=27 && LA118_0<=28)||(LA118_0>=116 && LA118_0<=123)) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7350:2: () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7350:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7351:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getRelationalExpressionAccess().getRelationalOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRelationalOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7366:2: (lv_operator_2= ruleRelationalOperator )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7369:6: lv_operator_2= ruleRelationalOperator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression17107);
            	    lv_operator_2=ruleRelationalOperator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", lv_operator_2, "RelationalOperator", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7387:2: (lv_right_3= ruleShiftExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7390:6: lv_right_3= ruleShiftExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleShiftExpression_in_ruleRelationalExpression17145);
            	    lv_right_3=ruleShiftExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "ShiftExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleShiftExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7415:1: entryRuleShiftExpression returns [EObject current=null] : iv_ruleShiftExpression= ruleShiftExpression EOF ;
    public final EObject entryRuleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7415:57: (iv_ruleShiftExpression= ruleShiftExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7416:2: iv_ruleShiftExpression= ruleShiftExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getShiftExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleShiftExpression_in_entryRuleShiftExpression17184);
            iv_ruleShiftExpression=ruleShiftExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleShiftExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleShiftExpression17194); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleShiftExpression


    // $ANTLR start ruleShiftExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7423:1: ruleShiftExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* ) ;
    public final EObject ruleShiftExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7428:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7429:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7429:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7430:5: this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression17241);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AdditiveExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:1: ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=88 && LA120_0<=90)) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:2: () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7439:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getShiftExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getShiftExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7454:2: (lv_name_2= ( '<<' | '>>' | '>>>' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7456:6: lv_name_2= ( '<<' | '>>' | '>>>' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7456:16: ( '<<' | '>>' | '>>>' )
            	    int alt119=3;
            	    switch ( input.LA(1) ) {
            	    case 88:
            	        {
            	        alt119=1;
            	        }
            	        break;
            	    case 89:
            	        {
            	        alt119=2;
            	        }
            	        break;
            	    case 90:
            	        {
            	        alt119=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("7456:16: ( '<<' | '>>' | '>>>' )", 119, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt119) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7456:17: '<<'
            	            {
            	            match(input,88,FOLLOW_88_in_ruleShiftExpression17272); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameLessThanSignLessThanSignKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7462:6: '>>'
            	            {
            	            match(input,89,FOLLOW_89_in_ruleShiftExpression17288); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameGreaterThanSignGreaterThanSignKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7468:6: '>>>'
            	            {
            	            match(input,90,FOLLOW_90_in_ruleShiftExpression17304); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getShiftExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7488:2: (lv_params_3= ruleAdditiveExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7491:6: lv_params_3= ruleAdditiveExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getShiftExpressionAccess().getParamsAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression17353);
            	    lv_params_3=ruleAdditiveExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getShiftExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "AdditiveExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleShiftExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7516:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7516:60: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7517:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression17392);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdditiveExpression17402); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7524:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7529:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7530:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7530:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7531:5: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17449);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_MultiplicativeExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7539:1: ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==18||LA122_0==24) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7539:2: () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7539:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7540:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7555:2: (lv_name_2= ( '+' | '-' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7557:6: lv_name_2= ( '+' | '-' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7557:16: ( '+' | '-' )
            	    int alt121=2;
            	    int LA121_0 = input.LA(1);

            	    if ( (LA121_0==24) ) {
            	        alt121=1;
            	    }
            	    else if ( (LA121_0==18) ) {
            	        alt121=2;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("7557:16: ( '+' | '-' )", 121, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt121) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7557:17: '+'
            	            {
            	            match(input,24,FOLLOW_24_in_ruleAdditiveExpression17480); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7563:6: '-'
            	            {
            	            match(input,18,FOLLOW_18_in_ruleAdditiveExpression17496); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7583:2: (lv_params_3= ruleMultiplicativeExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7586:6: lv_params_3= ruleMultiplicativeExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17545);
            	    lv_params_3=ruleMultiplicativeExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "MultiplicativeExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7611:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7611:66: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7612:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression17584);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiplicativeExpression17594); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7619:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_UnaryOrInfixExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7624:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7625:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7625:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7626:5: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17641);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_UnaryOrInfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7634:1: ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==17||LA124_0==22||LA124_0==26) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7634:2: () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7634:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7635:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7650:2: (lv_name_2= ( '*' | '/' | '%' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7652:6: lv_name_2= ( '*' | '/' | '%' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7652:16: ( '*' | '/' | '%' )
            	    int alt123=3;
            	    switch ( input.LA(1) ) {
            	    case 26:
            	        {
            	        alt123=1;
            	        }
            	        break;
            	    case 17:
            	        {
            	        alt123=2;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt123=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("7652:16: ( '*' | '/' | '%' )", 123, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt123) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7652:17: '*'
            	            {
            	            match(input,26,FOLLOW_26_in_ruleMultiplicativeExpression17672); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7658:6: '/'
            	            {
            	            match(input,17,FOLLOW_17_in_ruleMultiplicativeExpression17688); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7664:6: '%'
            	            {
            	            match(input,22,FOLLOW_22_in_ruleMultiplicativeExpression17704); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7684:2: (lv_params_3= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7687:6: lv_params_3= ruleUnaryOrInfixExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17753);
            	    lv_params_3=ruleUnaryOrInfixExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "UnaryOrInfixExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7712:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7712:64: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7713:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression17792);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryOrInfixExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression17802); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7720:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        EObject this_PostopExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7725:6: ( (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7726:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7726:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=18 && LA125_0<=19)||(LA125_0>=91 && LA125_0<=95)) ) {
                alt125=1;
            }
            else if ( ((LA125_0>=RULE_ID && LA125_0<=RULE_REGEX)||(LA125_0>=31 && LA125_0<=32)||(LA125_0>=42 && LA125_0<=43)||(LA125_0>=58 && LA125_0<=59)||LA125_0==76||(LA125_0>=96 && LA125_0<=101)) ) {
                alt125=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("7726:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7727:5: this_UnaryExpression_0= ruleUnaryExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression17849);
                    this_UnaryExpression_0=ruleUnaryExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnaryExpression_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7737:5: this_PostopExpression_1= rulePostopExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression17876);
                    this_PostopExpression_1=rulePostopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PostopExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7752:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7752:57: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7753:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression17908);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryExpression17918); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7760:1: ruleUnaryExpression returns [EObject current=null] : ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        EObject lv_params_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7765:6: ( ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7766:1: ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7766:1: ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7766:2: () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7766:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7767:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnaryExpressionAccess().getUnaryOperationAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOperationAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7777:2: (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7779:6: lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7779:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            int alt126=7;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt126=1;
                }
                break;
            case 18:
                {
                alt126=2;
                }
                break;
            case 91:
                {
                alt126=3;
                }
                break;
            case 92:
                {
                alt126=4;
                }
                break;
            case 93:
                {
                alt126=5;
                }
                break;
            case 94:
                {
                alt126=6;
                }
                break;
            case 95:
                {
                alt126=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("7779:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )", 126, 0, input);

                throw nvae;
            }

            switch (alt126) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7779:17: '!'
                    {
                    match(input,19,FOLLOW_19_in_ruleUnaryExpression17974); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_1_0_0(), "name"); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7785:6: '-'
                    {
                    match(input,18,FOLLOW_18_in_ruleUnaryExpression17990); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_1_0_1(), "name"); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7791:6: '++'
                    {
                    match(input,91,FOLLOW_91_in_ruleUnaryExpression18006); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_1_0_2(), "name"); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7797:6: '--'
                    {
                    match(input,92,FOLLOW_92_in_ruleUnaryExpression18022); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_0_3(), "name"); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7803:6: 'typeof'
                    {
                    match(input,93,FOLLOW_93_in_ruleUnaryExpression18038); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTypeofKeyword_1_0_4(), "name"); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7809:6: 'delete'
                    {
                    match(input,94,FOLLOW_94_in_ruleUnaryExpression18054); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameDeleteKeyword_1_0_5(), "name"); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7815:6: '~'
                    {
                    match(input,95,FOLLOW_95_in_ruleUnaryExpression18070); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTildeKeyword_1_0_6(), "name"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7835:2: (lv_params_2= rulePostopExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7838:6: lv_params_2= rulePostopExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryExpression18119);
            lv_params_2=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "params", lv_params_2, "PostopExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7863:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostopExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7863:58: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7864:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePostopExpression_in_entryRulePostopExpression18156);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePostopExpression18166); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7871:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7876:6: ( (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7877:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7877:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7878:5: this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleInfixExpression_in_rulePostopExpression18213);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_InfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7886:1: ( () (lv_name_2= ( '--' | '++' ) ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( ((LA128_0>=91 && LA128_0<=92)) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7886:2: () (lv_name_2= ( '--' | '++' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7886:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7887:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getPostopExpressionAccess().getOperationCallPostTargetAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "postTarget", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getOperationCallPostTargetAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7902:2: (lv_name_2= ( '--' | '++' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7904:6: lv_name_2= ( '--' | '++' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7904:16: ( '--' | '++' )
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==92) ) {
                        alt127=1;
                    }
                    else if ( (LA127_0==91) ) {
                        alt127=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("7904:16: ( '--' | '++' )", 127, 0, input);

                        throw nvae;
                    }
                    switch (alt127) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7904:17: '--'
                            {
                            match(input,92,FOLLOW_92_in_rulePostopExpression18244); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "name"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7910:6: '++'
                            {
                            match(input,91,FOLLOW_91_in_rulePostopExpression18260); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1(), "name"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7937:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInfixExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7937:57: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7938:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression18310);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInfixExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInfixExpression18320); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7945:1: ruleInfixExpression returns [EObject current=null] : (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_3=null;
        Token lv_type_20=null;
        EObject this_CallExpression_0 = null;

        EObject lv_params_5 = null;

        EObject lv_params_7 = null;

        EObject lv_index_11 = null;

        EObject lv_params_14 = null;

        EObject lv_params_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7950:6: ( (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7951:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7951:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7952:5: this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleCallExpression_in_ruleInfixExpression18367);
            this_CallExpression_0=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CallExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7960:1: ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            loop134:
            do {
                int alt134=4;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==15) ) {
                    int LA134_2 = input.LA(2);

                    if ( (LA134_2==RULE_ID) ) {
                        int LA134_4 = input.LA(3);

                        if ( (LA134_4==32) ) {
                            alt134=1;
                        }
                        else if ( (LA134_4==EOF||LA134_4==15||(LA134_4>=17 && LA134_4<=18)||(LA134_4>=22 && LA134_4<=31)||(LA134_4>=33 && LA134_4<=35)||LA134_4==38||LA134_4==45||LA134_4==73||(LA134_4>=84 && LA134_4<=92)||(LA134_4>=105 && LA134_4<=123)) ) {
                            alt134=3;
                        }


                    }


                }
                else if ( (LA134_0==31) ) {
                    alt134=2;
                }


                switch (alt134) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7960:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7960:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7960:3: () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7960:3: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7961:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression18386); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7980:1: (lv_name_3= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7982:6: lv_name_3= RULE_ID
            	    {
            	    lv_name_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression18408); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    match(input,32,FOLLOW_32_in_ruleInfixExpression18425); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8004:1: ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )?
            	    int alt130=2;
            	    int LA130_0 = input.LA(1);

            	    if ( ((LA130_0>=RULE_ID && LA130_0<=RULE_REGEX)||(LA130_0>=18 && LA130_0<=19)||(LA130_0>=31 && LA130_0<=32)||(LA130_0>=42 && LA130_0<=43)||(LA130_0>=58 && LA130_0<=59)||LA130_0==76||(LA130_0>=91 && LA130_0<=101)) ) {
            	        alt130=1;
            	    }
            	    switch (alt130) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8004:2: (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8004:2: (lv_params_5= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8007:6: lv_params_5= ruleParameter
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18460);
            	            lv_params_5=ruleParameter();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8025:2: ( ',' (lv_params_7= ruleParameter ) )*
            	            loop129:
            	            do {
            	                int alt129=2;
            	                int LA129_0 = input.LA(1);

            	                if ( (LA129_0==33) ) {
            	                    alt129=1;
            	                }


            	                switch (alt129) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8025:3: ',' (lv_params_7= ruleParameter )
            	            	    {
            	            	    match(input,33,FOLLOW_33_in_ruleInfixExpression18474); if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0(), null); 
            	            	          
            	            	    }
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8029:1: (lv_params_7= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8032:6: lv_params_7= ruleParameter
            	            	    {
            	            	    if ( backtracking==0 ) {
            	            	       
            	            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0(), currentNode); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18508);
            	            	    lv_params_7=ruleParameter();
            	            	    _fsp--;
            	            	    if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	      	        }
            	            	      	        
            	            	      	        try {
            	            	      	       		add(current, "params", lv_params_7, "Parameter", currentNode);
            	            	      	        } catch (ValueConverterException vce) {
            	            	      				handleValueConverterException(vce);
            	            	      	        }
            	            	      	        currentNode = currentNode.getParent();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop129;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,35,FOLLOW_35_in_ruleInfixExpression18525); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8055:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8055:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8055:7: () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8055:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8056:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,31,FOLLOW_31_in_ruleInfixExpression18551); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:1: (lv_index_11= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8078:6: lv_index_11= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleExpression_in_ruleInfixExpression18585);
            	    lv_index_11=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "index", lv_index_11, "Expression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,34,FOLLOW_34_in_ruleInfixExpression18598); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8100:1: ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    int alt133=2;
            	    int LA133_0 = input.LA(1);

            	    if ( (LA133_0==32) ) {
            	        alt133=1;
            	    }
            	    switch (alt133) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8100:2: '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')'
            	            {
            	            match(input,32,FOLLOW_32_in_ruleInfixExpression18608); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0(), null); 
            	                  
            	            }
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8104:1: ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )?
            	            int alt132=2;
            	            int LA132_0 = input.LA(1);

            	            if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_REGEX)||(LA132_0>=18 && LA132_0<=19)||(LA132_0>=31 && LA132_0<=32)||(LA132_0>=42 && LA132_0<=43)||(LA132_0>=58 && LA132_0<=59)||LA132_0==76||(LA132_0>=91 && LA132_0<=101)) ) {
            	                alt132=1;
            	            }
            	            switch (alt132) {
            	                case 1 :
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8104:2: (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )*
            	                    {
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8104:2: (lv_params_14= ruleParameter )
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8107:6: lv_params_14= ruleParameter
            	                    {
            	                    if ( backtracking==0 ) {
            	                       
            	                      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0(), currentNode); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18643);
            	                    lv_params_14=ruleParameter();
            	                    _fsp--;
            	                    if (failed) return current;
            	                    if ( backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                      	        }
            	                      	        
            	                      	        try {
            	                      	       		add(current, "params", lv_params_14, "Parameter", currentNode);
            	                      	        } catch (ValueConverterException vce) {
            	                      				handleValueConverterException(vce);
            	                      	        }
            	                      	        currentNode = currentNode.getParent();
            	                      	    
            	                    }

            	                    }

            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8125:2: ( ',' (lv_params_16= ruleParameter ) )*
            	                    loop131:
            	                    do {
            	                        int alt131=2;
            	                        int LA131_0 = input.LA(1);

            	                        if ( (LA131_0==33) ) {
            	                            alt131=1;
            	                        }


            	                        switch (alt131) {
            	                    	case 1 :
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8125:3: ',' (lv_params_16= ruleParameter )
            	                    	    {
            	                    	    match(input,33,FOLLOW_33_in_ruleInfixExpression18657); if (failed) return current;
            	                    	    if ( backtracking==0 ) {

            	                    	              createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0(), null); 
            	                    	          
            	                    	    }
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8129:1: (lv_params_16= ruleParameter )
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8132:6: lv_params_16= ruleParameter
            	                    	    {
            	                    	    if ( backtracking==0 ) {
            	                    	       
            	                    	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0(), currentNode); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18691);
            	                    	    lv_params_16=ruleParameter();
            	                    	    _fsp--;
            	                    	    if (failed) return current;
            	                    	    if ( backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	      	        }
            	                    	      	        
            	                    	      	        try {
            	                    	      	       		add(current, "params", lv_params_16, "Parameter", currentNode);
            	                    	      	        } catch (ValueConverterException vce) {
            	                    	      				handleValueConverterException(vce);
            	                    	      	        }
            	                    	      	        currentNode = currentNode.getParent();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop131;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            match(input,35,FOLLOW_35_in_ruleInfixExpression18708); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2(), null); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8155:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8155:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8155:7: () '.' (lv_type_20= RULE_ID )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8155:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8156:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression18736); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8175:1: (lv_type_20= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8177:6: lv_type_20= RULE_ID
            	    {
            	    lv_type_20=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression18758); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0(), "type"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "type", lv_type_20, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRuleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8202:1: entryRuleCallExpression returns [EObject current=null] : iv_ruleCallExpression= ruleCallExpression EOF ;
    public final EObject entryRuleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCallExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8202:56: (iv_ruleCallExpression= ruleCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8203:2: iv_ruleCallExpression= ruleCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCallExpression_in_entryRuleCallExpression18802);
            iv_ruleCallExpression=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCallExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCallExpression18812); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCallExpression


    // $ANTLR start ruleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8210:1: ruleCallExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) ;
    public final EObject ruleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PrimaryExpression_0 = null;

        EObject lv_params_3 = null;

        EObject lv_params_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8215:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8216:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8216:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8217:5: this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_rulePrimaryExpression_in_ruleCallExpression18859);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_PrimaryExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8225:1: ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==32) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8225:2: () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8225:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8226:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,32,FOLLOW_32_in_ruleCallExpression18877); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8245:1: ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )?
            	    int alt136=2;
            	    int LA136_0 = input.LA(1);

            	    if ( ((LA136_0>=RULE_ID && LA136_0<=RULE_REGEX)||(LA136_0>=18 && LA136_0<=19)||(LA136_0>=31 && LA136_0<=32)||(LA136_0>=42 && LA136_0<=43)||(LA136_0>=58 && LA136_0<=59)||LA136_0==76||(LA136_0>=91 && LA136_0<=101)) ) {
            	        alt136=1;
            	    }
            	    switch (alt136) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8245:2: (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8245:2: (lv_params_3= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8248:6: lv_params_3= ruleParameter
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_0_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression18912);
            	            lv_params_3=ruleParameter();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		add(current, "params", lv_params_3, "Parameter", currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8266:2: ( ',' (lv_params_5= ruleParameter ) )*
            	            loop135:
            	            do {
            	                int alt135=2;
            	                int LA135_0 = input.LA(1);

            	                if ( (LA135_0==33) ) {
            	                    alt135=1;
            	                }


            	                switch (alt135) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8266:3: ',' (lv_params_5= ruleParameter )
            	            	    {
            	            	    match(input,33,FOLLOW_33_in_ruleCallExpression18926); if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	              createLeafNode(grammarAccess.getCallExpressionAccess().getCommaKeyword_1_2_1_0(), null); 
            	            	          
            	            	    }
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8270:1: (lv_params_5= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8273:6: lv_params_5= ruleParameter
            	            	    {
            	            	    if ( backtracking==0 ) {
            	            	       
            	            	      	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_1_1_0(), currentNode); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression18960);
            	            	    lv_params_5=ruleParameter();
            	            	    _fsp--;
            	            	    if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	      	        }
            	            	      	        
            	            	      	        try {
            	            	      	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	            	      	        } catch (ValueConverterException vce) {
            	            	      				handleValueConverterException(vce);
            	            	      	        }
            	            	      	        currentNode = currentNode.getParent();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop135;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,35,FOLLOW_35_in_ruleCallExpression18977); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCallExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8302:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8302:59: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8303:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression19012);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryExpression19022); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8310:1: rulePrimaryExpression returns [EObject current=null] : (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Literal_0 = null;

        EObject this_ConstructorCallExpression_1 = null;

        EObject this_VariableValue_2 = null;

        EObject this_PropertyValue_3 = null;

        EObject this_KeywordVariables_4 = null;

        EObject this_ParanthesizedExpression_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8315:6: ( (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8316:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8316:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            int alt138=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_HEX:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 31:
            case 42:
            case 76:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt138=1;
                }
                break;
            case 96:
                {
                alt138=2;
                }
                break;
            case RULE_ID:
                {
                alt138=3;
                }
                break;
            case RULE_PID:
                {
                alt138=4;
                }
                break;
            case 43:
            case 58:
            case 59:
                {
                alt138=5;
                }
                break;
            case 32:
                {
                alt138=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8316:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8317:5: this_Literal_0= ruleLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteral_in_rulePrimaryExpression19069);
                    this_Literal_0=ruleLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Literal_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8327:5: this_ConstructorCallExpression_1= ruleConstructorCallExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression19096);
                    this_ConstructorCallExpression_1=ruleConstructorCallExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ConstructorCallExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8337:5: this_VariableValue_2= ruleVariableValue
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleVariableValue_in_rulePrimaryExpression19123);
                    this_VariableValue_2=ruleVariableValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_VariableValue_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8347:5: this_PropertyValue_3= rulePropertyValue
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePropertyValue_in_rulePrimaryExpression19150);
                    this_PropertyValue_3=rulePropertyValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PropertyValue_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8357:5: this_KeywordVariables_4= ruleKeywordVariables
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression19177);
                    this_KeywordVariables_4=ruleKeywordVariables();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_KeywordVariables_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8367:5: this_ParanthesizedExpression_5= ruleParanthesizedExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression19204);
                    this_ParanthesizedExpression_5=ruleParanthesizedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ParanthesizedExpression_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8382:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyValue = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8382:55: (iv_rulePropertyValue= rulePropertyValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8383:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyValueRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyValue_in_entryRulePropertyValue19236);
            iv_rulePropertyValue=rulePropertyValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyValue19246); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyValue


    // $ANTLR start rulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8390:1: rulePropertyValue returns [EObject current=null] : ( () (lv_name_1= RULE_PID ) ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8395:6: ( ( () (lv_name_1= RULE_PID ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8396:1: ( () (lv_name_1= RULE_PID ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8396:1: ( () (lv_name_1= RULE_PID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8396:2: () (lv_name_1= RULE_PID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8396:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8397:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getPropertyValueAccess().getPropertyValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyValueAccess().getPropertyValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8407:2: (lv_name_1= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8409:6: lv_name_1= RULE_PID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyValue19302); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPropertyValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "PID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyValue


    // $ANTLR start entryRuleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8434:1: entryRuleVariableValue returns [EObject current=null] : iv_ruleVariableValue= ruleVariableValue EOF ;
    public final EObject entryRuleVariableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableValue = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8434:55: (iv_ruleVariableValue= ruleVariableValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8435:2: iv_ruleVariableValue= ruleVariableValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVariableValueRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVariableValue_in_entryRuleVariableValue19343);
            iv_ruleVariableValue=ruleVariableValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVariableValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariableValue19353); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVariableValue


    // $ANTLR start ruleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8442:1: ruleVariableValue returns [EObject current=null] : ( () (lv_name_1= RULE_ID ) ) ;
    public final EObject ruleVariableValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8447:6: ( ( () (lv_name_1= RULE_ID ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8448:1: ( () (lv_name_1= RULE_ID ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8448:1: ( () (lv_name_1= RULE_ID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8448:2: () (lv_name_1= RULE_ID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8448:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8449:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getVariableValueAccess().getVariableValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getVariableValueAccess().getVariableValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8459:2: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8461:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVariableValue19409); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVariableValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVariableValue


    // $ANTLR start entryRuleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8486:1: entryRuleKeywordVariables returns [EObject current=null] : iv_ruleKeywordVariables= ruleKeywordVariables EOF ;
    public final EObject entryRuleKeywordVariables() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordVariables = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8486:58: (iv_ruleKeywordVariables= ruleKeywordVariables EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8487:2: iv_ruleKeywordVariables= ruleKeywordVariables EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getKeywordVariablesRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables19450);
            iv_ruleKeywordVariables=ruleKeywordVariables();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleKeywordVariables; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleKeywordVariables19460); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleKeywordVariables


    // $ANTLR start ruleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8494:1: ruleKeywordVariables returns [EObject current=null] : ( () (lv_name_1= ( 'group' | 'layout' | 'properties' ) ) ) ;
    public final EObject ruleKeywordVariables() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8499:6: ( ( () (lv_name_1= ( 'group' | 'layout' | 'properties' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8500:1: ( () (lv_name_1= ( 'group' | 'layout' | 'properties' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8500:1: ( () (lv_name_1= ( 'group' | 'layout' | 'properties' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8500:2: () (lv_name_1= ( 'group' | 'layout' | 'properties' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8500:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8501:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getKeywordVariablesAccess().getKeywordVariableAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getKeywordVariablesAccess().getKeywordVariableAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8511:2: (lv_name_1= ( 'group' | 'layout' | 'properties' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8513:6: lv_name_1= ( 'group' | 'layout' | 'properties' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8513:16: ( 'group' | 'layout' | 'properties' )
            int alt139=3;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt139=1;
                }
                break;
            case 58:
                {
                alt139=2;
                }
                break;
            case 43:
                {
                alt139=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8513:16: ( 'group' | 'layout' | 'properties' )", 139, 0, input);

                throw nvae;
            }

            switch (alt139) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8513:17: 'group'
                    {
                    match(input,59,FOLLOW_59_in_ruleKeywordVariables19516); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameGroupKeyword_1_0_0(), "name"); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8519:6: 'layout'
                    {
                    match(input,58,FOLLOW_58_in_ruleKeywordVariables19532); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameLayoutKeyword_1_0_1(), "name"); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8525:6: 'properties'
                    {
                    match(input,43,FOLLOW_43_in_ruleKeywordVariables19548); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_2(), "name"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleKeywordVariables


    // $ANTLR start entryRuleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8552:1: entryRuleConstructorCallExpression returns [EObject current=null] : iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF ;
    public final EObject entryRuleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructorCallExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8552:67: (iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8553:2: iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression19596);
            iv_ruleConstructorCallExpression=ruleConstructorCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleConstructorCallExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstructorCallExpression19606); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleConstructorCallExpression


    // $ANTLR start ruleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8560:1: ruleConstructorCallExpression returns [EObject current=null] : ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' ) ;
    public final EObject ruleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        AntlrDatatypeRuleToken lv_target_2 = null;

        EObject lv_params_4 = null;

        EObject lv_params_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8565:6: ( ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8566:1: ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8566:1: ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8566:2: () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8566:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8567:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getConstructorCallExpressionAccess().getCreatorCallAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getCreatorCallAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8577:2: (lv_name_1= 'new' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8579:6: lv_name_1= 'new'
            {
            lv_name_1=(Token)input.LT(1);
            match(input,96,FOLLOW_96_in_ruleConstructorCallExpression19661); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNameNewKeyword_1_0(), "name"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), "new", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8598:2: (lv_target_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8601:6: lv_target_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getTargetQualifiedNameParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression19708);
            lv_target_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "target", lv_target_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,32,FOLLOW_32_in_ruleConstructorCallExpression19721); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8623:1: ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( ((LA141_0>=RULE_ID && LA141_0<=RULE_REGEX)||(LA141_0>=18 && LA141_0<=19)||(LA141_0>=31 && LA141_0<=32)||(LA141_0>=42 && LA141_0<=43)||(LA141_0>=58 && LA141_0<=59)||LA141_0==76||(LA141_0>=91 && LA141_0<=101)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8623:2: (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8623:2: (lv_params_4= ruleParameter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8626:6: lv_params_4= ruleParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_4_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression19756);
                    lv_params_4=ruleParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "params", lv_params_4, "Parameter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8644:2: ( ',' (lv_params_6= ruleParameter ) )*
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==33) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8644:3: ',' (lv_params_6= ruleParameter )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleConstructorCallExpression19770); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getCommaKeyword_4_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8648:1: (lv_params_6= ruleParameter )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8651:6: lv_params_6= ruleParameter
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_4_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression19804);
                    	    lv_params_6=ruleParameter();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "params", lv_params_6, "Parameter", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleConstructorCallExpression19821); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_5(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleConstructorCallExpression


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8680:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8680:49: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8681:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteral_in_entryRuleLiteral19854);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteral19864); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8688:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_ValueLiteral_0 = null;

        EObject this_RegexpLiteral_1 = null;

        EObject this_LiteralArray_2 = null;

        EObject this_LiteralObject_3 = null;

        EObject this_LiteralFunction_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8693:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8694:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8694:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            int alt142=5;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_HEX:
            case RULE_STRING:
            case RULE_REAL:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt142=1;
                }
                break;
            case RULE_REGEX:
                {
                alt142=2;
                }
                break;
            case 31:
                {
                alt142=3;
                }
                break;
            case 42:
                {
                alt142=4;
                }
                break;
            case 76:
                {
                alt142=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8694:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )", 142, 0, input);

                throw nvae;
            }

            switch (alt142) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8695:5: this_ValueLiteral_0= ruleValueLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleValueLiteral_in_ruleLiteral19911);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ValueLiteral_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8705:5: this_RegexpLiteral_1= ruleRegexpLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRegexpLiteral_in_ruleLiteral19938);
                    this_RegexpLiteral_1=ruleRegexpLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RegexpLiteral_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8715:5: this_LiteralArray_2= ruleLiteralArray
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralArrayParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralArray_in_ruleLiteral19965);
                    this_LiteralArray_2=ruleLiteralArray();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralArray_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8725:5: this_LiteralObject_3= ruleLiteralObject
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralObjectParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralObject_in_ruleLiteral19992);
                    this_LiteralObject_3=ruleLiteralObject();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralObject_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8735:5: this_LiteralFunction_4= ruleLiteralFunction
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralFunction_in_ruleLiteral20019);
                    this_LiteralFunction_4=ruleLiteralFunction();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralFunction_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8750:1: entryRuleLiteralArray returns [EObject current=null] : iv_ruleLiteralArray= ruleLiteralArray EOF ;
    public final EObject entryRuleLiteralArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralArray = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8750:54: (iv_ruleLiteralArray= ruleLiteralArray EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8751:2: iv_ruleLiteralArray= ruleLiteralArray EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralArrayRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray20051);
            iv_ruleLiteralArray=ruleLiteralArray();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralArray; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralArray20061); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralArray


    // $ANTLR start ruleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:1: ruleLiteralArray returns [EObject current=null] : ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' ) ;
    public final EObject ruleLiteralArray() throws RecognitionException {
        EObject current = null;

        EObject lv_element_2 = null;

        EObject lv_element_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8763:6: ( ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8764:1: ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8764:1: ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8764:2: () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8764:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8765:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralArrayAccess().getLiteralArrayAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralArrayAccess().getLiteralArrayAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,31,FOLLOW_31_in_ruleLiteralArray20104); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralArrayAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8779:1: ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( ((LA144_0>=RULE_ID && LA144_0<=RULE_REGEX)||(LA144_0>=18 && LA144_0<=19)||(LA144_0>=31 && LA144_0<=32)||(LA144_0>=42 && LA144_0<=43)||(LA144_0>=58 && LA144_0<=59)||LA144_0==76||(LA144_0>=91 && LA144_0<=101)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8779:2: (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8779:2: (lv_element_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8782:6: lv_element_2= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray20139);
                    lv_element_2=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "element", lv_element_2, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8800:2: ( ',' (lv_element_4= ruleExpression ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==33) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8800:3: ',' (lv_element_4= ruleExpression )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleLiteralArray20153); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getLiteralArrayAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8804:1: (lv_element_4= ruleExpression )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8807:6: lv_element_4= ruleExpression
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray20187);
                    	    lv_element_4=ruleExpression();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "element", lv_element_4, "Expression", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,34,FOLLOW_34_in_ruleLiteralArray20204); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralArrayAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralArray


    // $ANTLR start entryRuleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8836:1: entryRuleLiteralObject returns [EObject current=null] : iv_ruleLiteralObject= ruleLiteralObject EOF ;
    public final EObject entryRuleLiteralObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralObject = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8836:55: (iv_ruleLiteralObject= ruleLiteralObject EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8837:2: iv_ruleLiteralObject= ruleLiteralObject EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralObjectRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject20237);
            iv_ruleLiteralObject=ruleLiteralObject();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralObject; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralObject20247); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralObject


    // $ANTLR start ruleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8844:1: ruleLiteralObject returns [EObject current=null] : ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' ) ;
    public final EObject ruleLiteralObject() throws RecognitionException {
        EObject current = null;

        EObject lv_features_2 = null;

        EObject lv_features_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8849:6: ( ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8850:1: ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8850:1: ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8850:2: () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8850:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8851:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralObjectAccess().getLiteralObjectAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralObjectAccess().getLiteralObjectAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,42,FOLLOW_42_in_ruleLiteralObject20290); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralObjectAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8865:1: ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==RULE_ID||(LA146_0>=RULE_PID && LA146_0<=RULE_STRING)) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8865:2: (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8865:2: (lv_features_2= ruleFeature )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8868:6: lv_features_2= ruleFeature
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject20325);
                    lv_features_2=ruleFeature();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "features", lv_features_2, "Feature", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8886:2: ( ',' (lv_features_4= ruleFeature ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==33) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8886:3: ',' (lv_features_4= ruleFeature )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleLiteralObject20339); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getLiteralObjectAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8890:1: (lv_features_4= ruleFeature )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8893:6: lv_features_4= ruleFeature
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject20373);
                    	    lv_features_4=ruleFeature();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "features", lv_features_4, "Feature", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleLiteralObject20390); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralObjectAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralObject


    // $ANTLR start entryRuleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8922:1: entryRuleLiteralFunction returns [EObject current=null] : iv_ruleLiteralFunction= ruleLiteralFunction EOF ;
    public final EObject entryRuleLiteralFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralFunction = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8922:57: (iv_ruleLiteralFunction= ruleLiteralFunction EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8923:2: iv_ruleLiteralFunction= ruleLiteralFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction20423);
            iv_ruleLiteralFunction=ruleLiteralFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralFunction; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralFunction20433); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralFunction


    // $ANTLR start ruleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8930:1: ruleLiteralFunction returns [EObject current=null] : ( () 'function' '(' ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) ;
    public final EObject ruleLiteralFunction() throws RecognitionException {
        EObject current = null;

        Token lv_parameters_3=null;
        Token lv_parameters_5=null;
        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8935:6: ( ( () 'function' '(' ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8936:1: ( () 'function' '(' ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8936:1: ( () 'function' '(' ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8936:2: () 'function' '(' ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8936:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8937:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralFunctionAccess().getLiteralFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralFunctionAccess().getLiteralFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,76,FOLLOW_76_in_ruleLiteralFunction20476); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getFunctionKeyword_1(), null); 
                  
            }
            match(input,32,FOLLOW_32_in_ruleLiteralFunction20485); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8955:1: ( (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8955:2: (lv_parameters_3= RULE_ID ) ( ',' (lv_parameters_5= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8955:2: (lv_parameters_3= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8957:6: lv_parameters_3= RULE_ID
            {
            lv_parameters_3=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction20508); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParametersIDTerminalRuleCall_3_0_0(), "parameters"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		add(current, "parameters", lv_parameters_3, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8975:2: ( ',' (lv_parameters_5= RULE_ID ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==33) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8975:3: ',' (lv_parameters_5= RULE_ID )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleLiteralFunction20526); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getLiteralFunctionAccess().getCommaKeyword_3_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8979:1: (lv_parameters_5= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8981:6: lv_parameters_5= RULE_ID
            	    {
            	    lv_parameters_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction20548); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParametersIDTerminalRuleCall_3_1_1_0(), "parameters"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "parameters", lv_parameters_5, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }

            match(input,35,FOLLOW_35_in_ruleLiteralFunction20568); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightParenthesisKeyword_4(), null); 
                  
            }
            match(input,42,FOLLOW_42_in_ruleLiteralFunction20577); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9007:1: (lv_statements_8= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9010:6: lv_statements_8= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getStatementsStatementsParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleLiteralFunction20611);
            lv_statements_8=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,45,FOLLOW_45_in_ruleLiteralFunction20624); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralFunction


    // $ANTLR start entryRuleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9039:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9039:49: (iv_ruleFeature= ruleFeature EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9040:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFeature_in_entryRuleFeature20657);
            iv_ruleFeature=ruleFeature();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeature20667); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeature


    // $ANTLR start ruleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9047:1: ruleFeature returns [EObject current=null] : ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9052:6: ( ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9053:1: ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9053:1: ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9053:2: () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9053:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9054:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getFeatureAccess().getFeatureAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureAccess().getFeatureAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9064:2: (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9066:6: lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9066:16: ( RULE_ID | RULE_PID | RULE_STRING )
            int alt148=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt148=1;
                }
                break;
            case RULE_PID:
                {
                alt148=2;
                }
                break;
            case RULE_STRING:
                {
                alt148=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9066:16: ( RULE_ID | RULE_PID | RULE_STRING )", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9066:18: RULE_ID
                    {
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFeature20724); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0_0(), "name"); 
                      	
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9071:7: RULE_PID
                    {
                    match(input,RULE_PID,FOLLOW_RULE_PID_in_ruleFeature20736); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNamePIDTerminalRuleCall_1_0_1(), "name"); 
                      	
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9076:7: RULE_STRING
                    {
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleFeature20748); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNameSTRINGTerminalRuleCall_1_0_2(), "name"); 
                      	
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,29,FOLLOW_29_in_ruleFeature20767); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFeatureAccess().getColonKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9099:1: (lv_value_3= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9102:6: lv_value_3= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFeatureAccess().getValueExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleFeature20801);
            lv_value_3=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "value", lv_value_3, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeature


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9127:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9127:54: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9128:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral20838);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValueLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueLiteral20848); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9135:1: ruleValueLiteral returns [EObject current=null] : (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_BooleanLiteral_0 = null;

        EObject this_IntegerLiteral_1 = null;

        EObject this_NullLiteral_2 = null;

        EObject this_UndefinedLiteral_3 = null;

        EObject this_StringLiteral_4 = null;

        EObject this_RealLiteral_5 = null;

        EObject this_QueryLiteral_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9140:6: ( (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9141:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9141:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )
            int alt149=7;
            switch ( input.LA(1) ) {
            case 97:
            case 98:
                {
                alt149=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
                {
                alt149=2;
                }
                break;
            case 99:
                {
                alt149=3;
                }
                break;
            case 100:
                {
                alt149=4;
                }
                break;
            case RULE_STRING:
                {
                alt149=5;
                }
                break;
            case RULE_REAL:
                {
                alt149=6;
                }
                break;
            case 101:
                {
                alt149=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9141:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )", 149, 0, input);

                throw nvae;
            }

            switch (alt149) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9142:5: this_BooleanLiteral_0= ruleBooleanLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral20895);
                    this_BooleanLiteral_0=ruleBooleanLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BooleanLiteral_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9152:5: this_IntegerLiteral_1= ruleIntegerLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral20922);
                    this_IntegerLiteral_1=ruleIntegerLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_IntegerLiteral_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9162:5: this_NullLiteral_2= ruleNullLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNullLiteral_in_ruleValueLiteral20949);
                    this_NullLiteral_2=ruleNullLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NullLiteral_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9172:5: this_UndefinedLiteral_3= ruleUndefinedLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getUndefinedLiteralParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUndefinedLiteral_in_ruleValueLiteral20976);
                    this_UndefinedLiteral_3=ruleUndefinedLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UndefinedLiteral_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9182:5: this_StringLiteral_4= ruleStringLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleStringLiteral_in_ruleValueLiteral21003);
                    this_StringLiteral_4=ruleStringLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_StringLiteral_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9192:5: this_RealLiteral_5= ruleRealLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRealLiteral_in_ruleValueLiteral21030);
                    this_RealLiteral_5=ruleRealLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RealLiteral_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9202:5: this_QueryLiteral_6= ruleQueryLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getQueryLiteralParserRuleCall_6(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQueryLiteral_in_ruleValueLiteral21057);
                    this_QueryLiteral_6=ruleQueryLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_QueryLiteral_6; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9217:1: entryRuleBooleanLiteral returns [EObject current=null] : iv_ruleBooleanLiteral= ruleBooleanLiteral EOF ;
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9217:56: (iv_ruleBooleanLiteral= ruleBooleanLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9218:2: iv_ruleBooleanLiteral= ruleBooleanLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBooleanLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral21089);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBooleanLiteral21099); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBooleanLiteral


    // $ANTLR start ruleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9225:1: ruleBooleanLiteral returns [EObject current=null] : ( () (lv_val_1= ( 'true' | 'false' ) ) ) ;
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9230:6: ( ( () (lv_val_1= ( 'true' | 'false' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9231:1: ( () (lv_val_1= ( 'true' | 'false' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9231:1: ( () (lv_val_1= ( 'true' | 'false' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9231:2: () (lv_val_1= ( 'true' | 'false' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9231:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9232:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9242:2: (lv_val_1= ( 'true' | 'false' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9244:6: lv_val_1= ( 'true' | 'false' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9244:15: ( 'true' | 'false' )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==97) ) {
                alt150=1;
            }
            else if ( (LA150_0==98) ) {
                alt150=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9244:15: ( 'true' | 'false' )", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9244:16: 'true'
                    {
                    match(input,97,FOLLOW_97_in_ruleBooleanLiteral21155); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_1_0_0(), "val"); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9250:6: 'false'
                    {
                    match(input,98,FOLLOW_98_in_ruleBooleanLiteral21171); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0_1(), "val"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBooleanLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBooleanLiteral


    // $ANTLR start entryRuleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9277:1: entryRuleIntegerLiteral returns [EObject current=null] : iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9277:56: (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9278:2: iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIntegerLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral21219);
            iv_ruleIntegerLiteral=ruleIntegerLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIntegerLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIntegerLiteral21229); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIntegerLiteral


    // $ANTLR start ruleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9285:1: ruleIntegerLiteral returns [EObject current=null] : ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_ival_1=null;
        Token lv_sval_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9290:6: ( ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==RULE_INT) ) {
                alt151=1;
            }
            else if ( (LA151_0==RULE_HEX) ) {
                alt151=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9291:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:2: ( () (lv_ival_1= RULE_INT ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:2: ( () (lv_ival_1= RULE_INT ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:3: () (lv_ival_1= RULE_INT )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9291:3: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9292:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getIntegerLiteralAccess().getIntegerLiteralAction_0_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getIntegerLiteralAccess().getIntegerLiteralAction_0_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9302:2: (lv_ival_1= RULE_INT )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9304:6: lv_ival_1= RULE_INT
                    {
                    lv_ival_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleIntegerLiteral21286); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getIntegerLiteralAccess().getIvalINTTerminalRuleCall_0_1_0(), "ival"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "ival", lv_ival_1, "INT", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:6: (lv_sval_2= RULE_HEX )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:6: (lv_sval_2= RULE_HEX )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9325:6: lv_sval_2= RULE_HEX
                    {
                    lv_sval_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleIntegerLiteral21323); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getIntegerLiteralAccess().getSvalHEXTerminalRuleCall_1_0(), "sval"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "sval", lv_sval_2, "HEX", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIntegerLiteral


    // $ANTLR start entryRuleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9350:1: entryRuleNullLiteral returns [EObject current=null] : iv_ruleNullLiteral= ruleNullLiteral EOF ;
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9350:53: (iv_ruleNullLiteral= ruleNullLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9351:2: iv_ruleNullLiteral= ruleNullLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNullLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral21364);
            iv_ruleNullLiteral=ruleNullLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNullLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNullLiteral21374); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNullLiteral


    // $ANTLR start ruleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9358:1: ruleNullLiteral returns [EObject current=null] : ( () (lv_val_1= 'null' ) ) ;
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9363:6: ( ( () (lv_val_1= 'null' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9364:1: ( () (lv_val_1= 'null' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9364:1: ( () (lv_val_1= 'null' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9364:2: () (lv_val_1= 'null' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9364:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9365:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9375:2: (lv_val_1= 'null' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9377:6: lv_val_1= 'null'
            {
            lv_val_1=(Token)input.LT(1);
            match(input,99,FOLLOW_99_in_ruleNullLiteral21429); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getNullLiteralAccess().getValNullKeyword_1_0(), "val"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNullLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), "null", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNullLiteral


    // $ANTLR start entryRuleUndefinedLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9403:1: entryRuleUndefinedLiteral returns [EObject current=null] : iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF ;
    public final EObject entryRuleUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefinedLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9403:58: (iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9404:2: iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUndefinedLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUndefinedLiteral_in_entryRuleUndefinedLiteral21475);
            iv_ruleUndefinedLiteral=ruleUndefinedLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUndefinedLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUndefinedLiteral21485); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUndefinedLiteral


    // $ANTLR start ruleUndefinedLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9411:1: ruleUndefinedLiteral returns [EObject current=null] : ( () (lv_val_1= 'undefined' ) ) ;
    public final EObject ruleUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9416:6: ( ( () (lv_val_1= 'undefined' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9417:1: ( () (lv_val_1= 'undefined' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9417:1: ( () (lv_val_1= 'undefined' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9417:2: () (lv_val_1= 'undefined' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9417:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9418:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUndefinedLiteralAccess().getUndefinedLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUndefinedLiteralAccess().getUndefinedLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9428:2: (lv_val_1= 'undefined' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9430:6: lv_val_1= 'undefined'
            {
            lv_val_1=(Token)input.LT(1);
            match(input,100,FOLLOW_100_in_ruleUndefinedLiteral21540); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUndefinedLiteralAccess().getValUndefinedKeyword_1_0(), "val"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUndefinedLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), "undefined", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUndefinedLiteral


    // $ANTLR start entryRuleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9456:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9456:55: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9457:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral21586);
            iv_ruleStringLiteral=ruleStringLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringLiteral21596); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStringLiteral


    // $ANTLR start ruleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9464:1: ruleStringLiteral returns [EObject current=null] : ( () (lv_val_1= RULE_STRING ) ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9469:6: ( ( () (lv_val_1= RULE_STRING ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9470:1: ( () (lv_val_1= RULE_STRING ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9470:1: ( () (lv_val_1= RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9470:2: () (lv_val_1= RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9470:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9471:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9481:2: (lv_val_1= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9483:6: lv_val_1= RULE_STRING
            {
            lv_val_1=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleStringLiteral21652); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_1_0(), "val"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "STRING", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStringLiteral


    // $ANTLR start entryRuleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9508:1: entryRuleRealLiteral returns [EObject current=null] : iv_ruleRealLiteral= ruleRealLiteral EOF ;
    public final EObject entryRuleRealLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9508:53: (iv_ruleRealLiteral= ruleRealLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9509:2: iv_ruleRealLiteral= ruleRealLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRealLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral21693);
            iv_ruleRealLiteral=ruleRealLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRealLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRealLiteral21703); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRealLiteral


    // $ANTLR start ruleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9516:1: ruleRealLiteral returns [EObject current=null] : ( () (lv_val_1= RULE_REAL ) ) ;
    public final EObject ruleRealLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9521:6: ( ( () (lv_val_1= RULE_REAL ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9522:1: ( () (lv_val_1= RULE_REAL ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9522:1: ( () (lv_val_1= RULE_REAL ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9522:2: () (lv_val_1= RULE_REAL )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9522:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9523:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRealLiteralAccess().getRealLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRealLiteralAccess().getRealLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9533:2: (lv_val_1= RULE_REAL )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9535:6: lv_val_1= RULE_REAL
            {
            lv_val_1=(Token)input.LT(1);
            match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleRealLiteral21759); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_1_0(), "val"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRealLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "REAL", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRealLiteral


    // $ANTLR start entryRuleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9560:1: entryRuleRegexpLiteral returns [EObject current=null] : iv_ruleRegexpLiteral= ruleRegexpLiteral EOF ;
    public final EObject entryRuleRegexpLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegexpLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9560:55: (iv_ruleRegexpLiteral= ruleRegexpLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9561:2: iv_ruleRegexpLiteral= ruleRegexpLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRegexpLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral21800);
            iv_ruleRegexpLiteral=ruleRegexpLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRegexpLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpLiteral21810); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpLiteral


    // $ANTLR start ruleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9568:1: ruleRegexpLiteral returns [EObject current=null] : ( () (lv_val_1= RULE_REGEX ) ) ;
    public final EObject ruleRegexpLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9573:6: ( ( () (lv_val_1= RULE_REGEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9574:1: ( () (lv_val_1= RULE_REGEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9574:1: ( () (lv_val_1= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9574:2: () (lv_val_1= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9574:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9575:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRegexpLiteralAccess().getRegexpLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRegexpLiteralAccess().getRegexpLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9585:2: (lv_val_1= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9587:6: lv_val_1= RULE_REGEX
            {
            lv_val_1=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpLiteral21866); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_1_0(), "val"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRegexpLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "REGEX", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpLiteral


    // $ANTLR start entryRuleQueryLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9612:1: entryRuleQueryLiteral returns [EObject current=null] : iv_ruleQueryLiteral= ruleQueryLiteral EOF ;
    public final EObject entryRuleQueryLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9612:54: (iv_ruleQueryLiteral= ruleQueryLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9613:2: iv_ruleQueryLiteral= ruleQueryLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQueryLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleQueryLiteral_in_entryRuleQueryLiteral21907);
            iv_ruleQueryLiteral=ruleQueryLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQueryLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQueryLiteral21917); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQueryLiteral


    // $ANTLR start ruleQueryLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9620:1: ruleQueryLiteral returns [EObject current=null] : ( () '~{' (lv_val_2= ruleAdvicePath ) '}' ) ;
    public final EObject ruleQueryLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_val_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9625:6: ( ( () '~{' (lv_val_2= ruleAdvicePath ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9626:1: ( () '~{' (lv_val_2= ruleAdvicePath ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9626:1: ( () '~{' (lv_val_2= ruleAdvicePath ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9626:2: () '~{' (lv_val_2= ruleAdvicePath ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9626:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9627:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getQueryLiteralAccess().getQueryLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getQueryLiteralAccess().getQueryLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,101,FOLLOW_101_in_ruleQueryLiteral21960); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getQueryLiteralAccess().getTildeLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9641:1: (lv_val_2= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9644:6: lv_val_2= ruleAdvicePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getQueryLiteralAccess().getValAdvicePathParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleQueryLiteral21994);
            lv_val_2=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getQueryLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_2, "AdvicePath", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,45,FOLLOW_45_in_ruleQueryLiteral22007); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getQueryLiteralAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQueryLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9673:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParanthesizedExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9673:65: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9674:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression22040);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParanthesizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParanthesizedExpression22050); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9681:1: ruleParanthesizedExpression returns [EObject current=null] : ( '(' this_Expression_1= ruleExpression ')' ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9686:6: ( ( '(' this_Expression_1= ruleExpression ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9687:1: ( '(' this_Expression_1= ruleExpression ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9687:1: ( '(' this_Expression_1= ruleExpression ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9687:2: '(' this_Expression_1= ruleExpression ')'
            {
            match(input,32,FOLLOW_32_in_ruleParanthesizedExpression22084); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleParanthesizedExpression22106);
            this_Expression_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_Expression_1; 
                      currentNode = currentNode.getParent();
                  
            }
            match(input,35,FOLLOW_35_in_ruleParanthesizedExpression22114); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start ruleVisibility
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9711:1: ruleVisibility returns [Enumerator current=null] : ( ( 'public' ) | ( 'private' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9715:6: ( ( ( 'public' ) | ( 'private' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9716:1: ( ( 'public' ) | ( 'private' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9716:1: ( ( 'public' ) | ( 'private' ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==102) ) {
                alt152=1;
            }
            else if ( (LA152_0==103) ) {
                alt152=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9716:1: ( ( 'public' ) | ( 'private' ) )", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9716:2: ( 'public' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9716:2: ( 'public' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9716:4: 'public'
                    {
                    match(input,102,FOLLOW_102_in_ruleVisibility22161); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9722:6: ( 'private' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9722:6: ( 'private' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9722:8: 'private'
                    {
                    match(input,103,FOLLOW_103_in_ruleVisibility22176); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVisibility


    // $ANTLR start ruleExecutionMode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9732:1: ruleExecutionMode returns [Enumerator current=null] : ( ( 'parallel' ) | ( 'sequential' ) ) ;
    public final Enumerator ruleExecutionMode() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9736:6: ( ( ( 'parallel' ) | ( 'sequential' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9737:1: ( ( 'parallel' ) | ( 'sequential' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9737:1: ( ( 'parallel' ) | ( 'sequential' ) )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==104) ) {
                alt153=1;
            }
            else if ( (LA153_0==49) ) {
                alt153=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9737:1: ( ( 'parallel' ) | ( 'sequential' ) )", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9737:2: ( 'parallel' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9737:2: ( 'parallel' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9737:4: 'parallel'
                    {
                    match(input,104,FOLLOW_104_in_ruleExecutionMode22219); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9743:6: ( 'sequential' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9743:6: ( 'sequential' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9743:8: 'sequential'
                    {
                    match(input,49,FOLLOW_49_in_ruleExecutionMode22234); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExecutionMode


    // $ANTLR start ruleAssignmentOperator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9753:1: ruleAssignmentOperator returns [Enumerator current=null] : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) ) ;
    public final Enumerator ruleAssignmentOperator() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9757:6: ( ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9758:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9758:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )
            int alt154=12;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt154=1;
                }
                break;
            case 105:
                {
                alt154=2;
                }
                break;
            case 106:
                {
                alt154=3;
                }
                break;
            case 107:
                {
                alt154=4;
                }
                break;
            case 108:
                {
                alt154=5;
                }
                break;
            case 109:
                {
                alt154=6;
                }
                break;
            case 110:
                {
                alt154=7;
                }
                break;
            case 111:
                {
                alt154=8;
                }
                break;
            case 112:
                {
                alt154=9;
                }
                break;
            case 113:
                {
                alt154=10;
                }
                break;
            case 114:
                {
                alt154=11;
                }
                break;
            case 115:
                {
                alt154=12;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9758:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )", 154, 0, input);

                throw nvae;
            }

            switch (alt154) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9758:2: ( '=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9758:2: ( '=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9758:4: '='
                    {
                    match(input,25,FOLLOW_25_in_ruleAssignmentOperator22277); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSETEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9764:6: ( '+=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9764:6: ( '+=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9764:8: '+='
                    {
                    match(input,105,FOLLOW_105_in_ruleAssignmentOperator22292); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_PLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_PLUSEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9770:6: ( '-=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9770:6: ( '-=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9770:8: '-='
                    {
                    match(input,106,FOLLOW_106_in_ruleAssignmentOperator22307); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MINUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MINUSEnumLiteralDeclaration_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9776:6: ( '*=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9776:6: ( '*=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9776:8: '*='
                    {
                    match(input,107,FOLLOW_107_in_ruleAssignmentOperator22322); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MULEnumLiteralDeclaration_3(), null); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9782:6: ( '/=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9782:6: ( '/=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9782:8: '/='
                    {
                    match(input,108,FOLLOW_108_in_ruleAssignmentOperator22337); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_DIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_DIVEnumLiteralDeclaration_4(), null); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9788:6: ( '%=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9788:6: ( '%=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9788:8: '%='
                    {
                    match(input,109,FOLLOW_109_in_ruleAssignmentOperator22352); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MODEnumLiteralDeclaration_5(), null); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9794:6: ( '&=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9794:6: ( '&=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9794:8: '&='
                    {
                    match(input,110,FOLLOW_110_in_ruleAssignmentOperator22367); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_ANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_ANDEnumLiteralDeclaration_6(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9800:6: ( '^=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9800:6: ( '^=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9800:8: '^='
                    {
                    match(input,111,FOLLOW_111_in_ruleAssignmentOperator22382); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_XOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_XOREnumLiteralDeclaration_7(), null); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9806:6: ( '|=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9806:6: ( '|=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9806:8: '|='
                    {
                    match(input,112,FOLLOW_112_in_ruleAssignmentOperator22397); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_OREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_OREnumLiteralDeclaration_8(), null); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9812:6: ( '<<=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9812:6: ( '<<=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9812:8: '<<='
                    {
                    match(input,113,FOLLOW_113_in_ruleAssignmentOperator22412); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_LSHIFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_LSHIFTEnumLiteralDeclaration_9(), null); 
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9818:6: ( '>>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9818:6: ( '>>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9818:8: '>>='
                    {
                    match(input,114,FOLLOW_114_in_ruleAssignmentOperator22427); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFTEnumLiteralDeclaration_10(), null); 
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9824:6: ( '>>>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9824:6: ( '>>>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9824:8: '>>>='
                    {
                    match(input,115,FOLLOW_115_in_ruleAssignmentOperator22442); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFT_0EnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFT_0EnumLiteralDeclaration_11(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentOperator


    // $ANTLR start ruleRelationalOperator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9834:1: ruleRelationalOperator returns [Enumerator current=null] : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) ) ;
    public final Enumerator ruleRelationalOperator() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9838:6: ( ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9839:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9839:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )
            int alt155=10;
            switch ( input.LA(1) ) {
            case 116:
                {
                alt155=1;
                }
                break;
            case 117:
                {
                alt155=2;
                }
                break;
            case 118:
                {
                alt155=3;
                }
                break;
            case 119:
                {
                alt155=4;
                }
                break;
            case 120:
                {
                alt155=5;
                }
                break;
            case 121:
                {
                alt155=6;
                }
                break;
            case 122:
                {
                alt155=7;
                }
                break;
            case 28:
                {
                alt155=8;
                }
                break;
            case 27:
                {
                alt155=9;
                }
                break;
            case 123:
                {
                alt155=10;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9839:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )", 155, 0, input);

                throw nvae;
            }

            switch (alt155) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9839:2: ( '~=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9839:2: ( '~=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9839:4: '~='
                    {
                    match(input,116,FOLLOW_116_in_ruleRelationalOperator22485); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_MATCHESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_MATCHESEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9845:6: ( '==' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9845:6: ( '==' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9845:8: '=='
                    {
                    match(input,117,FOLLOW_117_in_ruleRelationalOperator22500); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9851:6: ( '===' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9851:6: ( '===' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9851:8: '==='
                    {
                    match(input,118,FOLLOW_118_in_ruleRelationalOperator22515); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_IDENTITYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_IDENTITYEnumLiteralDeclaration_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9857:6: ( '!=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9857:6: ( '!=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9857:8: '!='
                    {
                    match(input,119,FOLLOW_119_in_ruleRelationalOperator22530); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_NOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_NOTEnumLiteralDeclaration_3(), null); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9863:6: ( '!==' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9863:6: ( '!==' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9863:8: '!=='
                    {
                    match(input,120,FOLLOW_120_in_ruleRelationalOperator22545); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_NOT_IDENTITYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_NOT_IDENTITYEnumLiteralDeclaration_4(), null); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9869:6: ( '>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9869:6: ( '>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9869:8: '>='
                    {
                    match(input,121,FOLLOW_121_in_ruleRelationalOperator22560); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_GTEQEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_GTEQEnumLiteralDeclaration_5(), null); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9875:6: ( '<=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9875:6: ( '<=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9875:8: '<='
                    {
                    match(input,122,FOLLOW_122_in_ruleRelationalOperator22575); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_LEEQEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_LEEQEnumLiteralDeclaration_6(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9881:6: ( '>' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9881:6: ( '>' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9881:8: '>'
                    {
                    match(input,28,FOLLOW_28_in_ruleRelationalOperator22590); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_GTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_GTEnumLiteralDeclaration_7(), null); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9887:6: ( '<' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9887:6: ( '<' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9887:8: '<'
                    {
                    match(input,27,FOLLOW_27_in_ruleRelationalOperator22605); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_LTEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_LTEnumLiteralDeclaration_8(), null); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9893:6: ( 'instanceof' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9893:6: ( 'instanceof' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9893:8: 'instanceof'
                    {
                    match(input,123,FOLLOW_123_in_ruleRelationalOperator22620); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_INSTANCEOFEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_INSTANCEOFEnumLiteralDeclaration_9(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalOperator

    // $ANTLR start synpred113
    public final void synpred113_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3693:6: ( rulePathGroup )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3693:6: rulePathGroup
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getBodyPathGroupParserRuleCall_3_0(), currentNode); 
          	    
        }
        pushFollow(FOLLOW_rulePathGroup_in_synpred1138687);
        rulePathGroup();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred113

    // $ANTLR start synpred138
    public final void synpred138_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5043:5: ( ruleCompoundStatement )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5043:5: ruleCompoundStatement
        {
        if ( backtracking==0 ) {
           
                  currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_5(), currentNode); 
              
        }
        pushFollow(FOLLOW_ruleCompoundStatement_in_synpred13811938);
        ruleCompoundStatement();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred138

    // $ANTLR start synpred140
    public final void synpred140_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:6: ( ( ( ruleVarExpression )? ';' ) )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:6: ( ( ruleVarExpression )? ';' )
        {
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:6: ( ( ruleVarExpression )? ';' )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:7: ( ruleVarExpression )? ';'
        {
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5052:7: ( ruleVarExpression )?
        int alt168=2;
        int LA168_0 = input.LA(1);

        if ( ((LA168_0>=RULE_ID && LA168_0<=RULE_REGEX)||(LA168_0>=18 && LA168_0<=19)||(LA168_0>=31 && LA168_0<=32)||(LA168_0>=42 && LA168_0<=43)||(LA168_0>=58 && LA168_0<=59)||LA168_0==76||LA168_0==83||(LA168_0>=91 && LA168_0<=101)) ) {
            alt168=1;
        }
        switch (alt168) {
            case 1 :
                // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5053:5: ruleVarExpression
                {
                pushFollow(FOLLOW_ruleVarExpression_in_synpred14011967);
                ruleVarExpression();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,38,FOLLOW_38_in_synpred14011977); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred140

    // $ANTLR start synpred160
    public final void synpred160_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6128:3: ( 'else' ( ruleStatement ) )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6128:3: 'else' ( ruleStatement )
        {
        match(input,78,FOLLOW_78_in_synpred16014369); if (failed) return ;
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6132:1: ( ruleStatement )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6135:6: ruleStatement
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0(), currentNode); 
          	    
        }
        pushFollow(FOLLOW_ruleStatement_in_synpred16014403);
        ruleStatement();
        _fsp--;
        if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred160

    public final boolean synpred140() {
        backtracking++;
        int start = input.mark();
        try {
            synpred140_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred160() {
        backtracking++;
        int start = input.mark();
        try {
            synpred160_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred113() {
        backtracking++;
        int start = input.mark();
        try {
            synpred113_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred138() {
        backtracking++;
        int start = input.mark();
        try {
            synpred138_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


    protected DFA27 dfa27 = new DFA27(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA86 dfa86 = new DFA86(this);
    static final String DFA27_eotS =
        "\35\uffff";
    static final String DFA27_eofS =
        "\35\uffff";
    static final String DFA27_minS =
        "\1\4\1\uffff\2\4\1\56\1\uffff\1\4\6\uffff\1\4\1\uffff\1\21\1\4\3"+
        "\uffff\4\4\1\21\4\4";
    static final String DFA27_maxS =
        "\1\150\1\uffff\2\63\1\56\1\uffff\1\52\6\uffff\1\63\1\uffff\2\100"+
        "\3\uffff\3\100\1\4\5\100";
    static final String DFA27_acceptS =
        "\1\uffff\1\14\3\uffff\1\7\1\uffff\1\12\1\13\1\1\1\2\1\3\1\4\1\uffff"+
        "\1\10\2\uffff\1\5\1\6\1\11\11\uffff";
    static final String DFA27_specialS =
        "\35\uffff}>";
    static final String[] DFA27_transitionS = {
            "\1\7\3\uffff\1\7\43\uffff\1\2\1\1\1\3\1\4\1\5\1\6\1\10\63\uffff"+
            "\3\7",
            "",
            "\1\12\45\uffff\1\11\10\uffff\1\12",
            "\1\14\45\uffff\1\13\10\uffff\1\14",
            "\1\15",
            "",
            "\1\20\3\uffff\1\17\41\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\45\uffff\1\21\10\uffff\1\22",
            "",
            "\1\23\17\uffff\1\23\10\uffff\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "",
            "",
            "",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\31",
            "\1\23\17\uffff\1\23\10\uffff\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\22\uffff\2\7"
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "()* loopback of 1142:4: ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )*";
        }
    }
    static final String DFA39_eotS =
        "\16\uffff";
    static final String DFA39_eofS =
        "\1\uffff\2\4\2\uffff\3\4\1\uffff\5\4";
    static final String DFA39_minS =
        "\1\4\1\21\1\4\2\uffff\4\4\1\21\4\4";
    static final String DFA39_maxS =
        "\1\10\2\46\2\uffff\3\46\1\4\5\46";
    static final String DFA39_acceptS =
        "\3\uffff\1\1\1\2\11\uffff";
    static final String DFA39_specialS =
        "\16\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\2\3\uffff\1\1",
            "\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\12",
            "\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4"
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "2240:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )";
        }
    }
    static final String DFA42_eotS =
        "\33\uffff";
    static final String DFA42_eofS =
        "\33\uffff";
    static final String DFA42_minS =
        "\1\4\1\uffff\1\37\2\4\2\uffff\4\4\1\21\12\4\1\21\4\4";
    static final String DFA42_maxS =
        "\1\63\1\uffff\1\46\1\4\1\46\2\uffff\3\46\1\4\12\46\1\4\5\46";
    static final String DFA42_acceptS =
        "\1\uffff\1\1\3\uffff\1\2\1\3\24\uffff";
    static final String DFA42_specialS =
        "\33\uffff}>";
    static final String[] DFA42_transitionS = {
            "\1\4\3\uffff\1\2\10\uffff\1\3\41\uffff\1\1",
            "",
            "\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\4",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "",
            "",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\15",
            "\1\14\15\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\16\32\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\27",
            "\1\14\15\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6"
    };

    static final short[] DFA42_eot = DFA.unpackEncodedString(DFA42_eotS);
    static final short[] DFA42_eof = DFA.unpackEncodedString(DFA42_eofS);
    static final char[] DFA42_min = DFA.unpackEncodedStringToUnsignedChars(DFA42_minS);
    static final char[] DFA42_max = DFA.unpackEncodedStringToUnsignedChars(DFA42_maxS);
    static final short[] DFA42_accept = DFA.unpackEncodedString(DFA42_acceptS);
    static final short[] DFA42_special = DFA.unpackEncodedString(DFA42_specialS);
    static final short[][] DFA42_transition;

    static {
        int numStates = DFA42_transitionS.length;
        DFA42_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA42_transition[i] = DFA.unpackEncodedString(DFA42_transitionS[i]);
        }
    }

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = DFA42_eot;
            this.eof = DFA42_eof;
            this.min = DFA42_min;
            this.max = DFA42_max;
            this.accept = DFA42_accept;
            this.special = DFA42_special;
            this.transition = DFA42_transition;
        }
        public String getDescription() {
            return "2369:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )";
        }
    }
    static final String DFA43_eotS =
        "\33\uffff";
    static final String DFA43_eofS =
        "\33\uffff";
    static final String DFA43_minS =
        "\1\4\1\37\2\4\3\uffff\4\4\1\21\12\4\1\21\4\4";
    static final String DFA43_maxS =
        "\1\52\1\46\1\4\1\46\3\uffff\3\46\1\4\12\46\1\4\5\46";
    static final String DFA43_acceptS =
        "\4\uffff\1\3\1\1\1\2\24\uffff";
    static final String DFA43_specialS =
        "\33\uffff}>";
    static final String[] DFA43_transitionS = {
            "\1\3\3\uffff\1\1\10\uffff\1\2\30\uffff\1\4",
            "\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\3",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "",
            "",
            "",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\15",
            "\1\14\15\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\16\32\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\24\1\22\1\23\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\27",
            "\1\14\15\uffff\1\5\1\uffff\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6",
            "\1\32\1\30\1\31\10\uffff\1\25\1\26\1\14\15\uffff\1\5\1\uffff"+
            "\1\6\4\uffff\1\6"
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "2446:16: ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )";
        }
    }
    static final String DFA58_eotS =
        "\16\uffff";
    static final String DFA58_eofS =
        "\2\uffff\1\1\1\uffff\3\1\1\uffff\1\1\1\uffff\4\1";
    static final String DFA58_minS =
        "\1\4\1\uffff\1\4\1\uffff\4\4\1\21\1\uffff\4\4";
    static final String DFA58_maxS =
        "\1\52\1\uffff\1\71\1\uffff\3\71\1\4\1\71\1\uffff\4\71";
    static final String DFA58_acceptS =
        "\1\uffff\1\1\1\uffff\1\3\5\uffff\1\2\4\uffff";
    static final String DFA58_specialS =
        "\16\uffff}>";
    static final String[] DFA58_transitionS = {
            "\1\2\3\uffff\1\1\41\uffff\1\3",
            "",
            "\1\6\1\4\1\5\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff\1"+
            "\1",
            "",
            "\1\6\1\4\1\5\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff\1"+
            "\1",
            "\1\6\1\4\1\5\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff\1"+
            "\1",
            "\1\6\1\4\1\5\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff\1"+
            "\1",
            "\1\12",
            "\1\11\24\uffff\1\1\22\uffff\1\1",
            "",
            "\1\15\1\13\1\14\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff"+
            "\1\1",
            "\1\15\1\13\1\14\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff"+
            "\1\1",
            "\1\15\1\13\1\14\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff"+
            "\1\1",
            "\1\15\1\13\1\14\10\uffff\1\7\1\10\1\11\24\uffff\1\1\22\uffff"+
            "\1\1"
    };

    static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
    static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
    static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
    static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
    static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
    static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
    static final short[][] DFA58_transition;

    static {
        int numStates = DFA58_transitionS.length;
        DFA58_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
        }
    }

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = DFA58_eot;
            this.eof = DFA58_eof;
            this.min = DFA58_min;
            this.max = DFA58_max;
            this.accept = DFA58_accept;
            this.special = DFA58_special;
            this.transition = DFA58_transition;
        }
        public String getDescription() {
            return "3016:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )";
        }
    }
    static final String DFA61_eotS =
        "\144\uffff";
    static final String DFA61_eofS =
        "\11\uffff\2\20\6\uffff\3\20\1\uffff\1\20\2\uffff\6\20\5\uffff\25"+
        "\20\1\uffff\2\20\51\uffff";
    static final String DFA61_minS =
        "\6\4\1\21\2\4\1\21\5\4\2\uffff\4\4\1\21\2\4\1\46\5\4\1\41\32\4\2"+
        "\46\22\4\1\42\26\4";
    static final String DFA61_maxS =
        "\1\4\4\21\1\4\1\21\1\10\1\21\2\71\3\21\1\40\2\uffff\3\71\1\4\1\71"+
        "\2\11\6\71\5\43\25\71\1\11\2\71\51\43";
    static final String DFA61_acceptS =
        "\17\uffff\1\1\1\2\123\uffff";
    static final String DFA61_specialS =
        "\144\uffff}>";
    static final String[] DFA61_transitionS = {
            "\1\1",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\10",
            "\1\7",
            "\1\12\3\uffff\1\11",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\16\24\uffff\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\31\1\32\1\33\1\uffff\1\30\1\34\25\uffff\1\26\1\27",
            "",
            "",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\35",
            "\1\16\24\uffff\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\17\uffff"+
            "\1\17\2\uffff\1\20",
            "\1\116\1\117\1\120\1\uffff\1\115\1\121",
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\20\17\uffff\1\17\2\uffff\1\20",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72"
    };

    static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
    static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
    static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
    static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
    static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
    static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
    static final short[][] DFA61_transition;

    static {
        int numStates = DFA61_transitionS.length;
        DFA61_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = DFA61_eot;
            this.eof = DFA61_eof;
            this.min = DFA61_min;
            this.max = DFA61_max;
            this.accept = DFA61_accept;
            this.special = DFA61_special;
            this.transition = DFA61_transition;
        }
        public String getDescription() {
            return "3108:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )";
        }
    }
    static final String DFA86_eotS =
        "\22\uffff";
    static final String DFA86_eofS =
        "\1\uffff\5\14\1\uffff\3\14\1\uffff\1\14\2\uffff\4\14";
    static final String DFA86_minS =
        "\2\4\4\31\1\uffff\4\4\1\31\2\uffff\4\4";
    static final String DFA86_maxS =
        "\1\76\5\163\1\uffff\3\163\1\4\1\163\2\uffff\4\163";
    static final String DFA86_acceptS =
        "\6\uffff\1\3\5\uffff\1\2\1\1\4\uffff";
    static final String DFA86_specialS =
        "\22\uffff}>";
    static final String[] DFA86_transitionS = {
            "\1\1\5\uffff\1\5\4\uffff\1\2\12\uffff\1\3\42\uffff\1\6\1\4",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\14\3\uffff\1\14\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73"+
            "\uffff\13\14",
            "\1\14\3\uffff\1\14\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73"+
            "\uffff\13\14",
            "\1\14\3\uffff\1\14\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73"+
            "\uffff\13\14",
            "\1\14\3\uffff\1\14\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73"+
            "\uffff\13\14",
            "",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\11\1\7\1\10\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\16",
            "\1\14\3\uffff\1\14\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73"+
            "\uffff\13\14",
            "",
            "",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14",
            "\1\21\1\17\1\20\10\uffff\1\12\1\13\10\uffff\1\14\3\uffff\1\14"+
            "\1\uffff\1\15\12\uffff\1\14\2\uffff\1\14\73\uffff\13\14"
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "4299:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )";
        }
    }
 

    public static final BitSet FOLLOW_ruleBeeModel_in_entryRuleBeeModel79 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBeeModel89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_ruleBeeModel148 = new BitSet(new long[]{0x0002009000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_ruleUnit_in_ruleBeeModel187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName225 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName276 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName297 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName323 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName349 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_15_in_ruleQualifiedName370 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName385 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName406 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName432 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName458 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG533 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleHIDDENBUG544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_ruleHIDDENBUG582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyName_in_entryRulePropertyName624 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyName635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyName674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName717 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEscapedQualifiedName728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName845 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterfaceName856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleInterfaceName902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_entryRuleCompoundName945 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundName956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1003 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCompoundName1021 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnitName_in_entryRuleUnitName1087 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnitName1098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_entryRulePartName1187 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartName1198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_rulePartName1244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSeparator_in_entryRuleSeparator1287 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSeparator1298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_ruleSeparator1336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_ruleSeparator1355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleSeparator1374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleSeparator1393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_ruleSeparator1412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleSeparator1431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_ruleSeparator1450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleSeparator1469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleSeparator1488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleSeparator1507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleSeparator1526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_ruleSeparator1545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleSeparator1564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleSeparator1583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1622 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAlfanumSym1633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1674 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1700 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1726 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1752 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleSeparator_in_ruleAlfanumSym1781 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1807 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1833 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1859 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1885 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleVersion_in_entryRuleVersion1930 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersion1940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVersion1987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_ruleVersion2035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersionRange_in_entryRuleVersionRange2072 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersionRange2082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleVersionRange2130 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_32_in_ruleVersionRange2146 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2195 = new BitSet(new long[]{0x0000000E00000000L});
    public static final BitSet FOLLOW_33_in_ruleVersionRange2209 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2243 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_34_in_ruleVersionRange2271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleVersionRange2287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_entryRuleImport2380 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImport2390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleImport2424 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImport2458 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_37_in_ruleImport2472 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleImport2483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit2516 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnit2526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleUnit2585 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleUnit2599 = new BitSet(new long[]{0x0000070000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleUnit2633 = new BitSet(new long[]{0x0000070000000000L});
    public static final BitSet FOLLOW_40_in_ruleUnit2648 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleUnit2682 = new BitSet(new long[]{0x0000060000000000L});
    public static final BitSet FOLLOW_41_in_ruleUnit2698 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2732 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_33_in_ruleUnit2746 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2780 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2797 = new BitSet(new long[]{0x0007F80000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_43_in_ruleUnit2807 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2841 = new BitSet(new long[]{0x0007F80000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_44_in_ruleUnit2858 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2867 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2902 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2915 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit2926 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_44_in_ruleUnit2943 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2977 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2990 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3007 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3016 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3051 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3064 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3075 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3092 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3126 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3139 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_47_in_ruleUnit3156 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3165 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3174 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3209 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3222 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3233 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_47_in_ruleUnit3250 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3259 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3293 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3306 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_48_in_ruleUnit3323 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_ruleUnit3357 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_49_in_ruleUnit3378 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3387 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3421 = new BitSet(new long[]{0x0000200000000110L});
    public static final BitSet FOLLOW_45_in_ruleUnit3435 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_49_in_ruleUnit3452 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3486 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_rulePart_in_ruleUnit3531 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_50_in_ruleUnit3551 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3560 = new BitSet(new long[]{0x1000200000000100L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3594 = new BitSet(new long[]{0x1000200000000100L});
    public static final BitSet FOLLOW_45_in_ruleUnit3608 = new BitSet(new long[]{0x0007F00000000110L,0x000001C000000000L});
    public static final BitSet FOLLOW_45_in_ruleUnit3620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3653 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability3663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleProvidedCapability3698 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleProvidedCapability3732 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3772 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3785 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3819 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3833 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleProvidedCapability3867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3906 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability3916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleRequiredCapability3951 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleRequiredCapability3985 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability4025 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability4038 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability4072 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability4086 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleRequiredCapability4120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4159 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedPropertyStatements4169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4216 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleNamedPropertyStatements4259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_entryRuleCompoundPropertyOperation4296 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundPropertyOperation4306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundPropertyOperation4340 = new BitSet(new long[]{0x0038240000000080L});
    public static final BitSet FOLLOW_rulePropertyOperation_in_ruleCompoundPropertyOperation4374 = new BitSet(new long[]{0x0038240000000080L});
    public static final BitSet FOLLOW_45_in_ruleCompoundPropertyOperation4388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyOperation_in_entryRulePropertyOperation4421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyOperation4431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPropertyOperation_in_rulePropertyOperation4478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_rulePropertyOperation4505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_rulePropertyOperation4532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_rulePropertyOperation4559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPropertyOperation_in_entryRuleFilteredPropertyOperation4591 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilteredPropertyOperation4601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleFilteredPropertyOperation4635 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleFilteredPropertyOperation4669 = new BitSet(new long[]{0x0030040000000080L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_ruleFilteredPropertyOperation4699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_ruleFilteredPropertyOperation4713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleFilteredPropertyOperation4727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_entryRuleSetPropertyOperation4769 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetPropertyOperation4779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_ruleSetPropertyOperation4825 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleSetPropertyOperation4873 = new BitSet(new long[]{0x0000000002000000L,0x000FFE0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleSetPropertyOperation4911 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleSetPropertyOperation4949 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleSetPropertyOperation4962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_entryRuleUnsetPropertyOperation4995 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnsetPropertyOperation5005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_ruleUnsetPropertyOperation5039 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleUnsetPropertyOperation5073 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnsetPropertyOperation5086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronization_in_entryRuleSynchronization5119 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronization5129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5188 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ruleSynchronization5202 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5236 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_38_in_ruleSynchronization5251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5285 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronizedPart5296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5344 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_ruleSynchronizedPart5363 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_entryRulePathGroup5464 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathGroup5474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_rulePathGroup5533 = new BitSet(new long[]{0x0088000000020112L});
    public static final BitSet FOLLOW_55_in_rulePathGroup5548 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_rulePathGroup5582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_entryRulePathVectorElement5621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathVectorElement5631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPathVector_in_rulePathVectorElement5678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_rulePathVectorElement5705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_rulePathVectorElement5732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPathVector_in_entryRuleFilteredPathVector5764 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilteredPathVector5774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleFilteredPathVector5808 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleFilteredPathVector5842 = new BitSet(new long[]{0x0000040000020110L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_ruleFilteredPathVector5872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_ruleFilteredPathVector5886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPathVector_in_ruleFilteredPathVector5900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_entryRuleBasePathVector5942 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBasePathVector5952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector6011 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_ruleBasePathVector6024 = new BitSet(new long[]{0x0000000400020110L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector6059 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_33_in_ruleBasePathVector6073 = new BitSet(new long[]{0x0000000000020110L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector6107 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_34_in_ruleBasePathVector6124 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleBasePathVector6133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_entryRuleUnbasedPathVector6166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnbasedPathVector6176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_ruleUnbasedPathVector6235 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_33_in_ruleUnbasedPathVector6249 = new BitSet(new long[]{0x0000000000020110L});
    public static final BitSet FOLLOW_rulePath_in_ruleUnbasedPathVector6283 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_38_in_ruleUnbasedPathVector6298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPathVector_in_entryRuleCompoundPathVector6331 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundPathVector6341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundPathVector6375 = new BitSet(new long[]{0x0008200000020110L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_ruleCompoundPathVector6409 = new BitSet(new long[]{0x0008200000020110L});
    public static final BitSet FOLLOW_45_in_ruleCompoundPathVector6423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_entryRulePath6457 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePath6468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_rulePath6508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rulePath6534 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath6558 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath6577 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath6599 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath6620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisite_in_entryRulePrerequisite6661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisite6671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rulePrerequisite6718 = new BitSet(new long[]{0x0008040000000110L});
    public static final BitSet FOLLOW_51_in_rulePrerequisite6742 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePrerequisite6776 = new BitSet(new long[]{0x0000040000000110L});
    public static final BitSet FOLLOW_RULE_ID_in_rulePrerequisite6805 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_rulePrerequisite6822 = new BitSet(new long[]{0x0000040000000110L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite6859 = new BitSet(new long[]{0x0200004000000000L});
    public static final BitSet FOLLOW_ruleClosure_in_rulePrerequisite6897 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePrerequisite6913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClosure_in_entryRuleClosure6946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClosure6956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleClosure6990 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleClosure6999 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_43_in_ruleClosure7009 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleClosure7043 = new BitSet(new long[]{0x0001200000000000L});
    public static final BitSet FOLLOW_48_in_ruleClosure7059 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleClosure7093 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleClosure7108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry7141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisiteEntry7151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry7198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry7225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry7252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_entryRulePartInSelf7284 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartInSelf7294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_rulePartInSelf7352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart7388 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCapabilityReferencedPart7398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7458 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7471 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7505 = new BitSet(new long[]{0x0040000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7519 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7553 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_ruleCapabilityReferencedPart7568 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleCapabilityReferencedPart7602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7648 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7661 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7695 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7709 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences7783 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundReferences7793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundReferences7827 = new BitSet(new long[]{0x0108240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleCompoundReferences7861 = new BitSet(new long[]{0x0108240000000110L});
    public static final BitSet FOLLOW_45_in_ruleCompoundReferences7875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePart_in_entryRulePart7908 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePart7918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_rulePart7977 = new BitSet(new long[]{0x0002000000000110L,0x0000010000000000L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_rulePart8016 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_rulePart8030 = new BitSet(new long[]{0x8000140000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_44_in_rulePart8032 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_rulePart8066 = new BitSet(new long[]{0x8000040200000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_33_in_rulePart8080 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_rulePart8114 = new BitSet(new long[]{0x8000040200000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rulePreCondition_in_rulePart8156 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rulePostCondition_in_rulePart8195 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePart8209 = new BitSet(new long[]{0x0E012C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_43_in_rulePart8219 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_rulePart8253 = new BitSet(new long[]{0x0E012C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleAdvice_in_rulePart8293 = new BitSet(new long[]{0x0E002C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleGroup_in_rulePart8332 = new BitSet(new long[]{0x0E002C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleLayout_in_rulePart8371 = new BitSet(new long[]{0x0E002C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_rulePart8410 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_rulePart8424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter8457 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParameter8467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParameter8525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayout_in_entryRuleLayout8561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLayout8571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleLayout8605 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rulePostCondition_in_ruleLayout8639 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleLayout8653 = new BitSet(new long[]{0x0088200000020110L});
    public static final BitSet FOLLOW_rulePathGroup_in_ruleLayout8687 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleLayout8701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroup_in_entryRuleGroup8734 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroup8744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleGroup8778 = new BitSet(new long[]{0x8000040000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rulePreCondition_in_ruleGroup8812 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rulePostCondition_in_ruleGroup8851 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleGroup8865 = new BitSet(new long[]{0x0108240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleGroup8899 = new BitSet(new long[]{0x0108240000000110L});
    public static final BitSet FOLLOW_45_in_ruleGroup8913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration8946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRepositoryConfiguration8956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_ruleRepositoryConfiguration9016 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_60_in_ruleRepositoryConfiguration9036 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration9070 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration9110 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleRepositoryConfiguration9124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_entryRuleURI9158 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleURI9169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleURI9208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice9250 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedAdvice9260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedAdvice9307 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice9350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvice_in_entryRuleAdvice9387 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvice9397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleAdvice9431 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdvice9453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice9485 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundAdvice9495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundAdvice9529 = new BitSet(new long[]{0x6000200024008410L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice9564 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleCompoundAdvice9577 = new BitSet(new long[]{0x6000200024008410L});
    public static final BitSet FOLLOW_45_in_ruleCompoundAdvice9588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement9621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdviceStatement9631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleAdviceStatement9690 = new BitSet(new long[]{0x0000040002000000L,0x000FFE0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAdviceStatement9730 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdviceStatement9768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement9813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath9851 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePath9861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleAdvicePath9907 = new BitSet(new long[]{0x6000000004008410L});
    public static final BitSet FOLLOW_ruleSelector_in_ruleAdvicePath9955 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_ruleAdvicePath9969 = new BitSet(new long[]{0x6000000004008410L});
    public static final BitSet FOLLOW_ruleSelector_in_ruleAdvicePath10003 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_ruleSelector_in_entryRuleSelector10042 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSelector10052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDiscriminatingSelector_in_ruleSelector10099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_ruleSelector10126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeSelector_in_ruleSelector10153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_entryRuleMultiNodeSelector10185 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiNodeSelector10195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNameSelector_in_ruleMultiNodeSelector10242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisSelector_in_ruleMultiNodeSelector10269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChildrenSelector_in_ruleMultiNodeSelector10296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAncestorSelector_in_ruleMultiNodeSelector10323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpSelector_in_ruleMultiNodeSelector10350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDiscriminatingSelector_in_entryRuleDiscriminatingSelector10382 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDiscriminatingSelector10392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_ruleDiscriminatingSelector10451 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_ruleDiscriminatingSelector10464 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleDiscriminatingSelector10498 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleDiscriminatingSelector10511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeSelector_in_entryRuleNodeSelector10544 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNodeSelector10554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParentSelector_in_ruleNodeSelector10600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNameSelector_in_entryRuleNameSelector10631 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNameSelector10641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleNameSelector10699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisSelector_in_entryRuleThisSelector10735 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThisSelector10745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_ruleThisSelector10788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParentSelector_in_entryRuleParentSelector10821 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParentSelector10831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleParentSelector10874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChildrenSelector_in_entryRuleChildrenSelector10907 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChildrenSelector10917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleChildrenSelector10960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAncestorSelector_in_entryRuleAncestorSelector10993 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAncestorSelector11003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleAncestorSelector11046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpSelector_in_entryRuleRegexpSelector11079 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpSelector11089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpSelector11145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilter_in_entryRuleFilter11188 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilter11198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleFilter11232 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFilter11266 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleFilter11279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePreCondition_in_entryRulePreCondition11312 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePreCondition11322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rulePreCondition11356 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePreCondition11365 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePreCondition11399 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rulePreCondition11413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostCondition_in_entryRulePostCondition11446 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostCondition11456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rulePostCondition11490 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePostCondition11499 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePostCondition11533 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rulePostCondition11547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression11580 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssertionExpression11590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleAssertionExpression11624 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAssertionExpression11658 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_33_in_ruleAssertionExpression11672 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleAssertionExpression11694 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAssertionExpression11713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement11746 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement11756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_ruleStatement11803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_ruleStatement11830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_ruleStatement11857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_ruleStatement11884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_ruleStatement11911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleStatement11938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleStatement11967 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleStatement11977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_ruleStatement12006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_ruleStatement12033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_ruleStatement12060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_ruleStatement12087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_ruleStatement12114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_ruleStatement12141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_ruleStatement12168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_ruleStatement12195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement12227 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBreakStatement12237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleBreakStatement12280 = new BitSet(new long[]{0x0000004000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleBreakStatement12302 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleBreakStatement12320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement12353 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleContinueStatement12363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_ruleContinueStatement12406 = new BitSet(new long[]{0x0000004000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleContinueStatement12428 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleContinueStatement12446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12479 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundStatement12489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundStatement12523 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCompoundStatement12557 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleCompoundStatement12570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatements_in_entryRuleStatements12603 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatements12613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleStatements12671 = new BitSet(new long[]{0x0E000C41800C07F2L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12708 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWhileStatement12718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_ruleWhileStatement12752 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleWhileStatement12761 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWhileStatement12795 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleWhileStatement12808 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWhileStatement12842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement12879 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitchStatement12889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_ruleSwitchStatement12923 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleSwitchStatement12932 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8081000L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleSwitchStatement12966 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleSwitchStatement12979 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleSwitchStatement12988 = new BitSet(new long[]{0x0000200000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_ruleCase_in_ruleSwitchStatement13022 = new BitSet(new long[]{0x0000200000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_70_in_ruleSwitchStatement13037 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleSwitchStatement13046 = new BitSet(new long[]{0x0E002C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleSwitchStatement13080 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleSwitchStatement13096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCase_in_entryRuleCase13129 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCase13139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleCase13173 = new BitSet(new long[]{0x0000000000000360L,0x0000003E00000000L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleCase13207 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleCase13220 = new BitSet(new long[]{0x0E000C41800C07F2L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCase13254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_entryRuleForStatement13292 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleForStatement13302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleForStatement13345 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleForStatement13354 = new BitSet(new long[]{0x0C000C41800C07F0L,0x0000003FF8081200L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_ruleForStatement13388 = new BitSet(new long[]{0x0000004000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_38_in_ruleForStatement13416 = new BitSet(new long[]{0x0C000C41800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement13463 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleForStatement13477 = new BitSet(new long[]{0x0C000C09800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpressionList_in_ruleForStatement13511 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_73_in_ruleForStatement13533 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement13567 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleForStatement13582 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleForStatement13616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement13653 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDoWhileStatement13663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_ruleDoWhileStatement13697 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleDoWhileStatement13731 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_ruleDoWhileStatement13744 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleDoWhileStatement13753 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleDoWhileStatement13787 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleDoWhileStatement13800 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleDoWhileStatement13809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13842 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStatement13852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleReturnStatement13886 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleReturnStatement13920 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleReturnStatement13933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement13966 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionStatement13976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleFunctionStatement14010 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement14032 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleFunctionStatement14049 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement14072 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleFunctionStatement14090 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement14112 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleFunctionStatement14132 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleFunctionStatement14141 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleFunctionStatement14175 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleFunctionStatement14188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_entryRuleIfStatement14221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfStatement14231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleIfStatement14265 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleIfStatement14274 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleIfStatement14308 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleIfStatement14321 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement14355 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_ruleIfStatement14369 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement14403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement14442 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabelStatement14452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLabelStatement14499 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleLabelStatement14516 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleLabelStatement14550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement14587 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThrowStatement14597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleThrowStatement14631 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleThrowStatement14665 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleThrowStatement14678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement14711 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTryCatchStatement14721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleTryCatchStatement14755 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement14789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement14829 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock14951 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCatchBlock14961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_ruleCatchBlock14995 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleCatchBlock15004 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleCatchBlock15026 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleCatchBlock15043 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleCatchBlock15077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock15114 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFinallyBlock15124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_ruleFinallyBlock15158 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock15192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_entryRuleWithStatement15229 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWithStatement15239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleWithStatement15273 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleWithStatement15282 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWithStatement15316 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleWithStatement15329 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWithStatement15363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList15400 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpressionList15410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList15469 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleVarExpressionList15483 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8081000L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList15517 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleExpressionList_in_entryRuleExpressionList15556 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpressionList15566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList15625 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleExpressionList15639 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList15673 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_entryRuleVarExpression15712 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpression15722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression15769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_ruleVarExpression15793 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVarExpression15815 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_ruleVarExpression15833 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression15867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression15907 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression15917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleExpression15963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression15994 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression16004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleAssignmentExpression16051 = new BitSet(new long[]{0x0000000002000002L,0x000FFE0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression16094 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression16132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression16171 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainedExpression16181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleChainedExpression16227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_entryRuleIfExpression16258 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfExpression16268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_ruleIfExpression16315 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_ruleIfExpression16333 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression16367 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleIfExpression16380 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression16414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression16453 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression16463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression16510 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleOrExpression16540 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression16587 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression16626 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression16636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16683 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_ruleAndExpression16713 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16760 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression16799 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBitwiseExpression16809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16856 = new BitSet(new long[]{0x0000000000800002L,0x0000000000C00000L});
    public static final BitSet FOLLOW_23_in_ruleBitwiseExpression16887 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_86_in_ruleBitwiseExpression16903 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_87_in_ruleBitwiseExpression16919 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16968 = new BitSet(new long[]{0x0000000000800002L,0x0000000000C00000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression17007 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression17017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_ruleRelationalExpression17064 = new BitSet(new long[]{0x0000000018000002L,0x0FF0000000000000L});
    public static final BitSet FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression17107 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_ruleRelationalExpression17145 = new BitSet(new long[]{0x0000000018000002L,0x0FF0000000000000L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_entryRuleShiftExpression17184 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleShiftExpression17194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression17241 = new BitSet(new long[]{0x0000000000000002L,0x0000000007000000L});
    public static final BitSet FOLLOW_88_in_ruleShiftExpression17272 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_89_in_ruleShiftExpression17288 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_90_in_ruleShiftExpression17304 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression17353 = new BitSet(new long[]{0x0000000000000002L,0x0000000007000000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression17392 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression17402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17449 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_24_in_ruleAdditiveExpression17480 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_18_in_ruleAdditiveExpression17496 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17545 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression17584 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression17594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17641 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_26_in_ruleMultiplicativeExpression17672 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_17_in_ruleMultiplicativeExpression17688 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_22_in_ruleMultiplicativeExpression17704 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17753 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression17792 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression17802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression17849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression17876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression17908 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression17918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleUnaryExpression17974 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_18_in_ruleUnaryExpression17990 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_91_in_ruleUnaryExpression18006 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_92_in_ruleUnaryExpression18022 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_93_in_ruleUnaryExpression18038 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_94_in_ruleUnaryExpression18054 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_95_in_ruleUnaryExpression18070 = new BitSet(new long[]{0x0C000C01800007F0L,0x0000003F00001000L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryExpression18119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression18156 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression18166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression18213 = new BitSet(new long[]{0x0000000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_92_in_rulePostopExpression18244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_rulePostopExpression18260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression18310 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression18320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_ruleInfixExpression18367 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression18386 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression18408 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression18425 = new BitSet(new long[]{0x0C000C09800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18460 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression18474 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18508 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression18525 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_31_in_ruleInfixExpression18551 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression18585 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleInfixExpression18598 = new BitSet(new long[]{0x0000000180008002L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression18608 = new BitSet(new long[]{0x0C000C09800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18643 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression18657 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18691 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression18708 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression18736 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression18758 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_entryRuleCallExpression18802 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCallExpression18812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleCallExpression18859 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_ruleCallExpression18877 = new BitSet(new long[]{0x0C000C09800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression18912 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleCallExpression18926 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression18960 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleCallExpression18977 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression19012 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression19022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression19069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression19096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_rulePrimaryExpression19123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_rulePrimaryExpression19150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression19177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression19204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue19236 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue19246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyValue19302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_entryRuleVariableValue19343 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableValue19353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVariableValue19409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables19450 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleKeywordVariables19460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleKeywordVariables19516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleKeywordVariables19532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleKeywordVariables19548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression19596 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstructorCallExpression19606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleConstructorCallExpression19661 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression19708 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleConstructorCallExpression19721 = new BitSet(new long[]{0x0C000C09800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression19756 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleConstructorCallExpression19770 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression19804 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleConstructorCallExpression19821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral19854 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteral19864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral19911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_ruleLiteral19938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_ruleLiteral19965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_ruleLiteral19992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_ruleLiteral20019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray20051 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralArray20061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleLiteralArray20104 = new BitSet(new long[]{0x0C000C05800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray20139 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralArray20153 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray20187 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_34_in_ruleLiteralArray20204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject20237 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralObject20247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleLiteralObject20290 = new BitSet(new long[]{0x0000200000000190L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject20325 = new BitSet(new long[]{0x0000200200000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralObject20339 = new BitSet(new long[]{0x0000000000000190L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject20373 = new BitSet(new long[]{0x0000200200000000L});
    public static final BitSet FOLLOW_45_in_ruleLiteralObject20390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction20423 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralFunction20433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleLiteralFunction20476 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleLiteralFunction20485 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction20508 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralFunction20526 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction20548 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleLiteralFunction20568 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleLiteralFunction20577 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleLiteralFunction20611 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleLiteralFunction20624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeature_in_entryRuleFeature20657 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeature20667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFeature20724 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_RULE_PID_in_ruleFeature20736 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFeature20748 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleFeature20767 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFeature20801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral20838 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral20848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral20895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral20922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_ruleValueLiteral20949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUndefinedLiteral_in_ruleValueLiteral20976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_ruleValueLiteral21003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_ruleValueLiteral21030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQueryLiteral_in_ruleValueLiteral21057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral21089 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBooleanLiteral21099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_ruleBooleanLiteral21155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_ruleBooleanLiteral21171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral21219 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIntegerLiteral21229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleIntegerLiteral21286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleIntegerLiteral21323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral21364 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNullLiteral21374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_ruleNullLiteral21429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUndefinedLiteral_in_entryRuleUndefinedLiteral21475 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUndefinedLiteral21485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_ruleUndefinedLiteral21540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral21586 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteral21596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringLiteral21652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral21693 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRealLiteral21703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleRealLiteral21759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral21800 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpLiteral21810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpLiteral21866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQueryLiteral_in_entryRuleQueryLiteral21907 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQueryLiteral21917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_ruleQueryLiteral21960 = new BitSet(new long[]{0x6000000024008410L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleQueryLiteral21994 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleQueryLiteral22007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression22040 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression22050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleParanthesizedExpression22084 = new BitSet(new long[]{0x0C000C01800C07F0L,0x0000003FF8001000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression22106 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleParanthesizedExpression22114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_ruleVisibility22161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_ruleVisibility22176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_ruleExecutionMode22219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleExecutionMode22234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleAssignmentOperator22277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_ruleAssignmentOperator22292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_ruleAssignmentOperator22307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_ruleAssignmentOperator22322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_ruleAssignmentOperator22337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_ruleAssignmentOperator22352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_ruleAssignmentOperator22367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_ruleAssignmentOperator22382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_ruleAssignmentOperator22397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_ruleAssignmentOperator22412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_114_in_ruleAssignmentOperator22427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_ruleAssignmentOperator22442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_ruleRelationalOperator22485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_ruleRelationalOperator22500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_ruleRelationalOperator22515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_ruleRelationalOperator22530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_ruleRelationalOperator22545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_ruleRelationalOperator22560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_122_in_ruleRelationalOperator22575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_ruleRelationalOperator22590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleRelationalOperator22605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_ruleRelationalOperator22620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_synpred1138687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_synpred13811938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_synpred14011967 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_synpred14011977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_synpred16014369 = new BitSet(new long[]{0x0E000C41800C07F0L,0x0000003FF809BD3CL});
    public static final BitSet FOLLOW_ruleStatement_in_synpred16014403 = new BitSet(new long[]{0x0000000000000002L});

}