package org.eclipse.b3.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.b3.services.BeeLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

public class InternalBeeLangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_HEX", "RULE_PID", "RULE_STRING", "RULE_REAL", "RULE_REGEX", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'.'", "'~~~~~'", "'/'", "'-'", "'!'", "'@'", "'$'", "'%'", "'&'", "'+'", "'='", "'*'", "'<'", "'>'", "':'", "'?'", "'['", "'('", "','", "']'", "')'", "'import'", "'.*'", "';'", "'unit'", "'version'", "'implements'", "'{'", "'properties'", "'provides'", "'}'", "'requires'", "'meta'", "'advice'", "'sequential'", "'repositories'", "'when'", "'immutable'", "'+='", "'-='", "'*='", "'/='", "'unset'", "'#'", "'annotations'", "'expr'", "'hidden'", "'with'", "'layout'", "'group'", "'resolver'", "'..'", "'precondition'", "'postcondition'", "'assert'", "'break'", "'continue'", "'while'", "'switch'", "'default'", "'case'", "'for'", "'in'", "'do'", "'return'", "'function'", "'if'", "'else'", "'throw'", "'try'", "'catch'", "'finally'", "'var'", "'%='", "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'||'", "'&&'", "'^'", "'|'", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'==.'", "'instanceof'", "'++'", "'--'", "'typeof'", "'delete'", "'~'", "'new'", "'true'", "'false'", "'null'", "'void'", "'public'", "'private'", "'parallel'"
    };
    public static final int RULE_ML_COMMENT=11;
    public static final int RULE_ID=4;
    public static final int RULE_WS=13;
    public static final int RULE_PID=7;
    public static final int EOF=-1;
    public static final int RULE_INT=5;
    public static final int RULE_REGEX=10;
    public static final int RULE_STRING=8;
    public static final int RULE_REAL=9;
    public static final int RULE_ANY_OTHER=14;
    public static final int RULE_HEX=6;
    public static final int RULE_SL_COMMENT=12;

        public InternalBeeLangParser(TokenStream input) {
            super(input);
        }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g"; }


     
     	private BeeLangGrammarAccess grammarAccess;
     	
        public InternalBeeLangParser(TokenStream input, IAstFactory factory, BeeLangGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/b3/parser/antlr/internal/InternalBeeLang.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "BeeModel";	
       	} 



    // $ANTLR start entryRuleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:1: entryRuleBeeModel returns [EObject current=null] : iv_ruleBeeModel= ruleBeeModel EOF ;
    public final EObject entryRuleBeeModel() throws RecognitionException {
        EObject current = null;
        int entryRuleBeeModel_StartIndex = input.index();
        EObject iv_ruleBeeModel = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:50: (iv_ruleBeeModel= ruleBeeModel EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:75:2: iv_ruleBeeModel= ruleBeeModel EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBeeModelRule(), currentNode); 
            pushFollow(FOLLOW_ruleBeeModel_in_entryRuleBeeModel80);
            iv_ruleBeeModel=ruleBeeModel();
            _fsp--;

             current =iv_ruleBeeModel; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBeeModel90); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBeeModel


    // $ANTLR start ruleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:82:1: ruleBeeModel returns [EObject current=null] : ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) ;
    public final EObject ruleBeeModel() throws RecognitionException {
        EObject current = null;
        int ruleBeeModel_StartIndex = input.index();
        EObject lv_imports_0 = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:87:6: ( ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==36) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:91:6: lv_imports_0= ruleImport
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleImport_in_ruleBeeModel149);
            	    lv_imports_0=ruleImport();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "imports", lv_imports_0, "Import", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:109:3: (lv_body_1= ruleUnit )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:112:6: lv_body_1= ruleUnit
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleUnit_in_ruleBeeModel188);
            lv_body_1=ruleUnit();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_1, "Unit", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBeeModel


    // $ANTLR start entryRuleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;
        int entryRuleQualifiedName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:54: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:138:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getQualifiedNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName226);
            iv_ruleQualifiedName=ruleQualifiedName();
            _fsp--;

             current =iv_ruleQualifiedName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName237); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQualifiedName


    // $ANTLR start ruleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:145:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleQualifiedName_StartIndex = input.index();
        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;
        AntlrDatatypeRuleToken this_HIDDENBUG_9 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:153:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName277); 

            		current.merge(this_ID_0);
                
             
                createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop2:
            do {
                int alt2=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt2=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt2=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt2=3;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName298); 

            	    		current.merge(this_INT_1);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0(), null); 
            	        

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:169:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName324); 

            	    		current.merge(this_HEX_2);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1(), null); 
            	        

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:177:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName350); 

            	    		current.merge(this_ID_3);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:184:3: (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==15) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:185:2: kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,15,FOLLOW_15_in_ruleQualifiedName371); 

            	            current.merge(kw);
            	            createLeafNode(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0(), null); 
            	        
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName386); 

            	    		current.merge(this_ID_5);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop3:
            	    do {
            	        int alt3=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt3=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt3=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt3=3;
            	            }
            	            break;

            	        }

            	        switch (alt3) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName407); 

            	    	    		current.merge(this_INT_6);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	        

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:205:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName433); 

            	    	    		current.merge(this_HEX_7);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:213:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName459); 

            	    	    		current.merge(this_ID_8);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

             
                    currentNode=createCompositeNode(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3(), currentNode); 
                
            pushFollow(FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName490);
            this_HIDDENBUG_9=ruleHIDDENBUG();
            _fsp--;


            		current.merge(this_HIDDENBUG_9);
                
             
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQualifiedName


    // $ANTLR start entryRuleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:1: entryRuleHIDDENBUG returns [String current=null] : iv_ruleHIDDENBUG= ruleHIDDENBUG EOF ;
    public final String entryRuleHIDDENBUG() throws RecognitionException {
        String current = null;
        int entryRuleHIDDENBUG_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleHIDDENBUG = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:50: (iv_ruleHIDDENBUG= ruleHIDDENBUG EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:240:2: iv_ruleHIDDENBUG= ruleHIDDENBUG EOF
            {
             currentNode = createCompositeNode(grammarAccess.getHIDDENBUGRule(), currentNode); 
            pushFollow(FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG534);
            iv_ruleHIDDENBUG=ruleHIDDENBUG();
            _fsp--;

             current =iv_ruleHIDDENBUG.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleHIDDENBUG545); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleHIDDENBUG


    // $ANTLR start ruleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:247:1: ruleHIDDENBUG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '~~~~~' )? ;
    public final AntlrDatatypeRuleToken ruleHIDDENBUG() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleHIDDENBUG_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:6: ( (kw= '~~~~~' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==16) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:257:2: kw= '~~~~~'
                    {
                    kw=(Token)input.LT(1);
                    match(input,16,FOLLOW_16_in_ruleHIDDENBUG583); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleHIDDENBUG


    // $ANTLR start entryRulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:1: entryRulePropertyName returns [String current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final String entryRulePropertyName() throws RecognitionException {
        String current = null;
        int entryRulePropertyName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePropertyName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:53: (iv_rulePropertyName= rulePropertyName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:273:2: iv_rulePropertyName= rulePropertyName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyNameRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyName_in_entryRulePropertyName625);
            iv_rulePropertyName=rulePropertyName();
            _fsp--;

             current =iv_rulePropertyName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyName636); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyName


    // $ANTLR start rulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:280:1: rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_PID_0= RULE_PID ;
    public final AntlrDatatypeRuleToken rulePropertyName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePropertyName_StartIndex = input.index();
        Token this_PID_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:286:6: (this_PID_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:287:5: this_PID_0= RULE_PID
            {
            this_PID_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyName675); 

            		current.merge(this_PID_0);
                
             
                createLeafNode(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall(), null); 
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyName


    // $ANTLR start entryRuleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:1: entryRuleEscapedQualifiedName returns [String current=null] : iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF ;
    public final String entryRuleEscapedQualifiedName() throws RecognitionException {
        String current = null;
        int entryRuleEscapedQualifiedName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleEscapedQualifiedName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:61: (iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:303:2: iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getEscapedQualifiedNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName718);
            iv_ruleEscapedQualifiedName=ruleEscapedQualifiedName();
            _fsp--;

             current =iv_ruleEscapedQualifiedName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEscapedQualifiedName729); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleEscapedQualifiedName


    // $ANTLR start ruleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:310:1: ruleEscapedQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleEscapedQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleEscapedQualifiedName_StartIndex = input.index();
        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_QualifiedName_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:316:6: ( (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_STRING) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_ID) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName769); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:326:5: this_QualifiedName_1= ruleQualifiedName
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName802);
                    this_QualifiedName_1=ruleQualifiedName();
                    _fsp--;


                    		current.merge(this_QualifiedName_1);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleEscapedQualifiedName


    // $ANTLR start entryRuleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:1: entryRuleInterfaceName returns [String current=null] : iv_ruleInterfaceName= ruleInterfaceName EOF ;
    public final String entryRuleInterfaceName() throws RecognitionException {
        String current = null;
        int entryRuleInterfaceName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleInterfaceName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:54: (iv_ruleInterfaceName= ruleInterfaceName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:345:2: iv_ruleInterfaceName= ruleInterfaceName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getInterfaceNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName846);
            iv_ruleInterfaceName=ruleInterfaceName();
            _fsp--;

             current =iv_ruleInterfaceName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterfaceName857); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInterfaceName


    // $ANTLR start ruleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:352:1: ruleInterfaceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_QualifiedName_0= ruleQualifiedName ;
    public final AntlrDatatypeRuleToken ruleInterfaceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleInterfaceName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:358:6: (this_QualifiedName_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:360:5: this_QualifiedName_0= ruleQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleInterfaceName903);
            this_QualifiedName_0=ruleQualifiedName();
            _fsp--;


            		current.merge(this_QualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInterfaceName


    // $ANTLR start entryRuleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:1: entryRuleCompoundName returns [String current=null] : iv_ruleCompoundName= ruleCompoundName EOF ;
    public final String entryRuleCompoundName() throws RecognitionException {
        String current = null;
        int entryRuleCompoundName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCompoundName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:53: (iv_ruleCompoundName= ruleCompoundName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:379:2: iv_ruleCompoundName= ruleCompoundName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundName_in_entryRuleCompoundName946);
            iv_ruleCompoundName=ruleCompoundName();
            _fsp--;

             current =iv_ruleCompoundName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundName957); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundName


    // $ANTLR start ruleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:386:1: ruleCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleCompoundName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCompoundName_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;

        AntlrDatatypeRuleToken this_EscapedQualifiedName_2 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:392:6: ( (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:394:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1004);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                
            kw=(Token)input.LT(1);
            match(input,17,FOLLOW_17_in_ruleCompoundName1022); 

                    current.merge(kw);
                    createLeafNode(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1044);
            this_EscapedQualifiedName_2=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_2);
                
             
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundName


    // $ANTLR start entryRuleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:1: entryRuleUnitName returns [String current=null] : iv_ruleUnitName= ruleUnitName EOF ;
    public final String entryRuleUnitName() throws RecognitionException {
        String current = null;
        int entryRuleUnitName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleUnitName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:49: (iv_ruleUnitName= ruleUnitName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:430:2: iv_ruleUnitName= ruleUnitName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnitNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnitName_in_entryRuleUnitName1088);
            iv_ruleUnitName=ruleUnitName();
            _fsp--;

             current =iv_ruleUnitName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnitName1099); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnitName


    // $ANTLR start ruleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:437:1: ruleUnitName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken ruleUnitName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleUnitName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:443:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:445:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1145);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnitName


    // $ANTLR start entryRulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:1: entryRulePartName returns [String current=null] : iv_rulePartName= rulePartName EOF ;
    public final String entryRulePartName() throws RecognitionException {
        String current = null;
        int entryRulePartName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePartName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:49: (iv_rulePartName= rulePartName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:464:2: iv_rulePartName= rulePartName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPartNameRule(), currentNode); 
            pushFollow(FOLLOW_rulePartName_in_entryRulePartName1188);
            iv_rulePartName=rulePartName();
            _fsp--;

             current =iv_rulePartName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePartName1199); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartName


    // $ANTLR start rulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:471:1: rulePartName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken rulePartName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePartName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:477:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:479:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_rulePartName1245);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartName


    // $ANTLR start entryRuleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:1: entryRuleSeparator returns [String current=null] : iv_ruleSeparator= ruleSeparator EOF ;
    public final String entryRuleSeparator() throws RecognitionException {
        String current = null;
        int entryRuleSeparator_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSeparator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:50: (iv_ruleSeparator= ruleSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:498:2: iv_ruleSeparator= ruleSeparator EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSeparatorRule(), currentNode); 
            pushFollow(FOLLOW_ruleSeparator_in_entryRuleSeparator1288);
            iv_ruleSeparator=ruleSeparator();
            _fsp--;

             current =iv_ruleSeparator.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSeparator1299); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSeparator


    // $ANTLR start ruleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:505:1: ruleSeparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) ;
    public final AntlrDatatypeRuleToken ruleSeparator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSeparator_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:6: ( (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            int alt7=14;
            switch ( input.LA(1) ) {
            case 15:
                {
                alt7=1;
                }
                break;
            case 18:
                {
                alt7=2;
                }
                break;
            case 19:
                {
                alt7=3;
                }
                break;
            case 20:
                {
                alt7=4;
                }
                break;
            case 21:
                {
                alt7=5;
                }
                break;
            case 22:
                {
                alt7=6;
                }
                break;
            case 23:
                {
                alt7=7;
                }
                break;
            case 24:
                {
                alt7=8;
                }
                break;
            case 25:
                {
                alt7=9;
                }
                break;
            case 26:
                {
                alt7=10;
                }
                break;
            case 27:
                {
                alt7=11;
                }
                break;
            case 28:
                {
                alt7=12;
                }
                break;
            case 29:
                {
                alt7=13;
                }
                break;
            case 30:
                {
                alt7=14;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:513:2: kw= '.'
                    {
                    kw=(Token)input.LT(1);
                    match(input,15,FOLLOW_15_in_ruleSeparator1337); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getFullStopKeyword_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:520:2: kw= '-'
                    {
                    kw=(Token)input.LT(1);
                    match(input,18,FOLLOW_18_in_ruleSeparator1356); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1(), null); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:527:2: kw= '!'
                    {
                    kw=(Token)input.LT(1);
                    match(input,19,FOLLOW_19_in_ruleSeparator1375); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2(), null); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:534:2: kw= '@'
                    {
                    kw=(Token)input.LT(1);
                    match(input,20,FOLLOW_20_in_ruleSeparator1394); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3(), null); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:541:2: kw= '$'
                    {
                    kw=(Token)input.LT(1);
                    match(input,21,FOLLOW_21_in_ruleSeparator1413); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4(), null); 
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:548:2: kw= '%'
                    {
                    kw=(Token)input.LT(1);
                    match(input,22,FOLLOW_22_in_ruleSeparator1432); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5(), null); 
                        

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:555:2: kw= '&'
                    {
                    kw=(Token)input.LT(1);
                    match(input,23,FOLLOW_23_in_ruleSeparator1451); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6(), null); 
                        

                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:562:2: kw= '+'
                    {
                    kw=(Token)input.LT(1);
                    match(input,24,FOLLOW_24_in_ruleSeparator1470); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7(), null); 
                        

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:569:2: kw= '='
                    {
                    kw=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_ruleSeparator1489); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8(), null); 
                        

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:576:2: kw= '*'
                    {
                    kw=(Token)input.LT(1);
                    match(input,26,FOLLOW_26_in_ruleSeparator1508); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9(), null); 
                        

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:583:2: kw= '<'
                    {
                    kw=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_ruleSeparator1527); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10(), null); 
                        

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:590:2: kw= '>'
                    {
                    kw=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_ruleSeparator1546); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11(), null); 
                        

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:597:2: kw= ':'
                    {
                    kw=(Token)input.LT(1);
                    match(input,29,FOLLOW_29_in_ruleSeparator1565); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getColonKeyword_12(), null); 
                        

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:604:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_ruleSeparator1584); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSeparator


    // $ANTLR start entryRuleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:1: entryRuleAlfanumSym returns [String current=null] : iv_ruleAlfanumSym= ruleAlfanumSym EOF ;
    public final String entryRuleAlfanumSym() throws RecognitionException {
        String current = null;
        int entryRuleAlfanumSym_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleAlfanumSym = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:51: (iv_ruleAlfanumSym= ruleAlfanumSym EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:618:2: iv_ruleAlfanumSym= ruleAlfanumSym EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAlfanumSymRule(), currentNode); 
            pushFollow(FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1623);
            iv_ruleAlfanumSym=ruleAlfanumSym();
            _fsp--;

             current =iv_ruleAlfanumSym.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAlfanumSym1634); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAlfanumSym


    // $ANTLR start ruleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:625:1: ruleAlfanumSym returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) ;
    public final AntlrDatatypeRuleToken ruleAlfanumSym() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleAlfanumSym_StartIndex = input.index();
        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_REAL_3=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_REAL_8=null;
        AntlrDatatypeRuleToken this_Separator_4 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:631:6: ( ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )
            int alt8=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt8=1;
                }
                break;
            case RULE_INT:
                {
                alt8=2;
                }
                break;
            case RULE_HEX:
                {
                alt8=3;
                }
                break;
            case RULE_REAL:
                {
                alt8=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:7: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1675); 

                    		current.merge(this_ID_0);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:640:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1701); 

                    		current.merge(this_INT_1);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1(), null); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:648:10: this_HEX_2= RULE_HEX
                    {
                    this_HEX_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1727); 

                    		current.merge(this_HEX_2);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2(), null); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:656:10: this_REAL_3= RULE_REAL
                    {
                    this_REAL_3=(Token)input.LT(1);
                    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1753); 

                    		current.merge(this_REAL_3);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3(), null); 
                        

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:663:2: (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            loop9:
            do {
                int alt9=6;
                switch ( input.LA(1) ) {
                case 15:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                    {
                    alt9=1;
                    }
                    break;
                case RULE_ID:
                    {
                    alt9=2;
                    }
                    break;
                case RULE_INT:
                    {
                    alt9=3;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt9=4;
                    }
                    break;
                case RULE_REAL:
                    {
                    alt9=5;
                    }
                    break;

                }

                switch (alt9) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:664:5: this_Separator_4= ruleSeparator
            	    {
            	     
            	            currentNode=createCompositeNode(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0(), currentNode); 
            	        
            	    pushFollow(FOLLOW_ruleSeparator_in_ruleAlfanumSym1782);
            	    this_Separator_4=ruleSeparator();
            	    _fsp--;


            	    		current.merge(this_Separator_4);
            	        
            	     
            	            currentNode = currentNode.getParent();
            	        

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:675:10: this_ID_5= RULE_ID
            	    {
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1808); 

            	    		current.merge(this_ID_5);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1(), null); 
            	        

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:683:10: this_INT_6= RULE_INT
            	    {
            	    this_INT_6=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1834); 

            	    		current.merge(this_INT_6);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2(), null); 
            	        

            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:691:10: this_HEX_7= RULE_HEX
            	    {
            	    this_HEX_7=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1860); 

            	    		current.merge(this_HEX_7);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3(), null); 
            	        

            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:699:10: this_REAL_8= RULE_REAL
            	    {
            	    this_REAL_8=(Token)input.LT(1);
            	    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1886); 

            	    		current.merge(this_REAL_8);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAlfanumSym


    // $ANTLR start entryRuleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:1: entryRuleVersion returns [String current=null] : iv_ruleVersion= ruleVersion EOF ;
    public final String entryRuleVersion() throws RecognitionException {
        String current = null;
        int entryRuleVersion_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleVersion = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:48: (iv_ruleVersion= ruleVersion EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:715:2: iv_ruleVersion= ruleVersion EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVersionRule(), currentNode); 
            pushFollow(FOLLOW_ruleVersion_in_entryRuleVersion1932);
            iv_ruleVersion=ruleVersion();
            _fsp--;

             current =iv_ruleVersion.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersion1943); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersion


    // $ANTLR start ruleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:722:1: ruleVersion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym ) ;
    public final AntlrDatatypeRuleToken ruleVersion() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleVersion_StartIndex = input.index();
        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_AlfanumSym_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:6: ( (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=RULE_ID && LA10_0<=RULE_HEX)||LA10_0==RULE_REAL) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVersion1983); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getVersionAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:738:5: this_AlfanumSym_1= ruleAlfanumSym
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVersionAccess().getAlfanumSymParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleAlfanumSym_in_ruleVersion2016);
                    this_AlfanumSym_1=ruleAlfanumSym();
                    _fsp--;


                    		current.merge(this_AlfanumSym_1);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersion


    // $ANTLR start entryRuleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:756:1: entryRuleVersionRange returns [String current=null] : iv_ruleVersionRange= ruleVersionRange EOF ;
    public final String entryRuleVersionRange() throws RecognitionException {
        String current = null;
        int entryRuleVersionRange_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleVersionRange = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:756:53: (iv_ruleVersionRange= ruleVersionRange EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:757:2: iv_ruleVersionRange= ruleVersionRange EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVersionRangeRule(), currentNode); 
            pushFollow(FOLLOW_ruleVersionRange_in_entryRuleVersionRange2060);
            iv_ruleVersionRange=ruleVersionRange();
            _fsp--;

             current =iv_ruleVersionRange.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersionRange2071); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersionRange


    // $ANTLR start ruleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:764:1: ruleVersionRange returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion ) ;
    public final AntlrDatatypeRuleToken ruleVersionRange() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleVersionRange_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_Version_2 = null;

        AntlrDatatypeRuleToken this_Version_4 = null;

        AntlrDatatypeRuleToken this_Version_7 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:770:6: ( ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=31 && LA14_0<=32)) ) {
                alt14=1;
            }
            else if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_HEX)||(LA14_0>=RULE_STRING && LA14_0<=RULE_REAL)) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:2: ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:2: ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:3: (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:3: (kw= '[' | kw= '(' )
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==31) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==32) ) {
                        alt11=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("771:3: (kw= '[' | kw= '(' )", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:772:2: kw= '['
                            {
                            kw=(Token)input.LT(1);
                            match(input,31,FOLLOW_31_in_ruleVersionRange2111); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getLeftSquareBracketKeyword_0_0_0(), null); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:779:2: kw= '('
                            {
                            kw=(Token)input.LT(1);
                            match(input,32,FOLLOW_32_in_ruleVersionRange2130); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getLeftParenthesisKeyword_0_0_1(), null); 
                                

                            }
                            break;

                    }

                     
                            currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2153);
                    this_Version_2=ruleVersion();
                    _fsp--;


                    		current.merge(this_Version_2);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:795:1: (kw= ',' this_Version_4= ruleVersion )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==33) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:796:2: kw= ',' this_Version_4= ruleVersion
                            {
                            kw=(Token)input.LT(1);
                            match(input,33,FOLLOW_33_in_ruleVersionRange2172); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0(), null); 
                                
                             
                                    currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_2_1(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2194);
                            this_Version_4=ruleVersion();
                            _fsp--;


                            		current.merge(this_Version_4);
                                
                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:812:3: (kw= ']' | kw= ')' )
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==34) ) {
                        alt13=1;
                    }
                    else if ( (LA13_0==35) ) {
                        alt13=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("812:3: (kw= ']' | kw= ')' )", 13, 0, input);

                        throw nvae;
                    }
                    switch (alt13) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:813:2: kw= ']'
                            {
                            kw=(Token)input.LT(1);
                            match(input,34,FOLLOW_34_in_ruleVersionRange2215); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getRightSquareBracketKeyword_0_3_0(), null); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:820:2: kw= ')'
                            {
                            kw=(Token)input.LT(1);
                            match(input,35,FOLLOW_35_in_ruleVersionRange2234); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getRightParenthesisKeyword_0_3_1(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:827:5: this_Version_7= ruleVersion
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2264);
                    this_Version_7=ruleVersion();
                    _fsp--;


                    		current.merge(this_Version_7);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersionRange


    // $ANTLR start entryRuleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:845:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;
        int entryRuleImport_StartIndex = input.index();
        EObject iv_ruleImport = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:845:48: (iv_ruleImport= ruleImport EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:846:2: iv_ruleImport= ruleImport EOF
            {
             currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); 
            pushFollow(FOLLOW_ruleImport_in_entryRuleImport2307);
            iv_ruleImport=ruleImport();
            _fsp--;

             current =iv_ruleImport; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleImport2317); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleImport


    // $ANTLR start ruleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:853:1: ruleImport returns [EObject current=null] : ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;
        int ruleImport_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_importClass_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:858:6: ( ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:2: 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';'
            {
            match(input,36,FOLLOW_36_in_ruleImport2351); 

                    createLeafNode(grammarAccess.getImportAccess().getImportKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:863:1: (lv_importClass_1= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:866:6: lv_importClass_1= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getImportAccess().getImportClassQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleImport2385);
            lv_importClass_1=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "importClass", lv_importClass_1, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:884:2: ( '.*' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==37) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:884:3: '.*'
                    {
                    match(input,37,FOLLOW_37_in_ruleImport2399); 

                            createLeafNode(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2(), null); 
                        

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleImport2410); 

                    createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleImport


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:899:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;
        int entryRuleUnit_StartIndex = input.index();
        EObject iv_ruleUnit = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:899:46: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:900:2: iv_ruleUnit= ruleUnit EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnit_in_entryRuleUnit2443);
            iv_ruleUnit=ruleUnit();
            _fsp--;

             current =iv_ruleUnit; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnit2453); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:907:1: ruleUnit returns [EObject current=null] : ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;
        int ruleUnit_StartIndex = input.index();
        Enumerator lv_executionMode_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        AntlrDatatypeRuleToken lv_version_4 = null;

        AntlrDatatypeRuleToken lv_implements_6 = null;

        AntlrDatatypeRuleToken lv_implements_8 = null;

        EObject lv_propertyStatements_11 = null;

        EObject lv_providedCapability_14 = null;

        EObject lv_providedCapability_18 = null;

        EObject lv_requiredCapabilities_22 = null;

        EObject lv_requiredCapabilities_26 = null;

        EObject lv_metaRequiredCapabilities_31 = null;

        EObject lv_metaRequiredCapabilities_36 = null;

        EObject lv_advice_39 = null;

        EObject lv_synchronize_42 = null;

        EObject lv_synchronize_45 = null;

        EObject lv_parts_46 = null;

        EObject lv_repositoryConfig_49 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:914:6: ( ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:2: (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:2: (lv_executionMode_0= ruleExecutionMode )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==49||LA16_0==120) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:918:6: lv_executionMode_0= ruleExecutionMode
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleUnit2512);
                    lv_executionMode_0=ruleExecutionMode();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "executionMode", lv_executionMode_0, "ExecutionMode", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,39,FOLLOW_39_in_ruleUnit2526); 

                    createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:940:1: (lv_name_2= ruleUnitName )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID||LA17_0==RULE_STRING) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:943:6: lv_name_2= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleUnit2560);
                    lv_name_2=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:3: ( 'version' (lv_version_4= ruleVersion ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==40) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:4: 'version' (lv_version_4= ruleVersion )
                    {
                    match(input,40,FOLLOW_40_in_ruleUnit2575); 

                            createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_3_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:965:1: (lv_version_4= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:968:6: lv_version_4= ruleVersion
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersion_in_ruleUnit2609);
                    lv_version_4=ruleVersion();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "version", lv_version_4, "Version", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:986:4: ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==41) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:986:5: 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    {
                    match(input,41,FOLLOW_41_in_ruleUnit2625); 

                            createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:990:1: (lv_implements_6= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:993:6: lv_implements_6= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2659);
                    lv_implements_6=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "implements", lv_implements_6, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1011:2: ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==33) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1011:3: ',' (lv_implements_8= ruleInterfaceName )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleUnit2673); 

                    	            createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1015:1: (lv_implements_8= ruleInterfaceName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1018:6: lv_implements_8= ruleInterfaceName
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2707);
                    	    lv_implements_8=ruleInterfaceName();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "implements", lv_implements_8, "InterfaceName", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleUnit2724); 

                    createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1040:1: ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==43) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1040:2: 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements )
            	    {
            	    match(input,43,FOLLOW_43_in_ruleUnit2734); 

            	            createLeafNode(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1044:1: (lv_propertyStatements_11= ruleNamedPropertyStatements )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1047:6: lv_propertyStatements_11= ruleNamedPropertyStatements
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getPropertyStatementsNamedPropertyStatementsParserRuleCall_6_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2768);
            	    lv_propertyStatements_11=ruleNamedPropertyStatements();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "propertyStatements", lv_propertyStatements_11, "NamedPropertyStatements", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:4: ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )*
            loop27:
            do {
                int alt27=12;
                alt27 = dfa27.predict(input);
                switch (alt27) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:5: ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:5: ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:6: 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2785); 

            	            createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit2794); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:1: ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+
            	    int cnt22=0;
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==RULE_ID||LA22_0==51) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:2: (lv_providedCapability_14= ruleProvidedCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:2: (lv_providedCapability_14= ruleProvidedCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1076:6: lv_providedCapability_14= ruleProvidedCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_0_2_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2829);
            	    	    lv_providedCapability_14=ruleProvidedCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "providedCapability", lv_providedCapability_14, "ProvidedCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit2842); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt22 >= 1 ) break loop22;
            	                EarlyExitException eee =
            	                    new EarlyExitException(22, input);
            	                throw eee;
            	        }
            	        cnt22++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit2853); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:6: ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:6: ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:7: 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2870); 

            	            createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1107:1: (lv_providedCapability_18= ruleProvidedCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1110:6: lv_providedCapability_18= ruleProvidedCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2904);
            	    lv_providedCapability_18=ruleProvidedCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "providedCapability", lv_providedCapability_18, "ProvidedCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit2917); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:7: 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit2934); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit2943); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:1: ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+
            	    int cnt23=0;
            	    loop23:
            	    do {
            	        int alt23=2;
            	        int LA23_0 = input.LA(1);

            	        if ( (LA23_0==RULE_ID||LA23_0==51) ) {
            	            alt23=1;
            	        }


            	        switch (alt23) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:2: (lv_requiredCapabilities_22= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:2: (lv_requiredCapabilities_22= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1144:6: lv_requiredCapabilities_22= ruleRequiredCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit2978);
            	    	    lv_requiredCapabilities_22=ruleRequiredCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "requiredCapabilities", lv_requiredCapabilities_22, "RequiredCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit2991); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt23 >= 1 ) break loop23;
            	                EarlyExitException eee =
            	                    new EarlyExitException(23, input);
            	                throw eee;
            	        }
            	        cnt23++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3002); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:7: 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit3019); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1175:1: (lv_requiredCapabilities_26= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1178:6: lv_requiredCapabilities_26= ruleRequiredCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3053);
            	    lv_requiredCapabilities_26=ruleRequiredCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "requiredCapabilities", lv_requiredCapabilities_26, "RequiredCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3066); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:7: 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3083); 

            	            createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0(), null); 
            	        
            	    match(input,46,FOLLOW_46_in_ruleUnit3092); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3101); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:1: ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+
            	    int cnt24=0;
            	    loop24:
            	    do {
            	        int alt24=2;
            	        int LA24_0 = input.LA(1);

            	        if ( (LA24_0==RULE_ID||LA24_0==51) ) {
            	            alt24=1;
            	        }


            	        switch (alt24) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1216:6: lv_metaRequiredCapabilities_31= ruleRequiredCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3136);
            	    	    lv_metaRequiredCapabilities_31=ruleRequiredCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_31, "RequiredCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit3149); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt24 >= 1 ) break loop24;
            	                EarlyExitException eee =
            	                    new EarlyExitException(24, input);
            	                throw eee;
            	        }
            	        cnt24++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3160); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:7: 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3177); 

            	            createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0(), null); 
            	        
            	    match(input,46,FOLLOW_46_in_ruleUnit3186); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1251:1: (lv_metaRequiredCapabilities_36= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1254:6: lv_metaRequiredCapabilities_36= ruleRequiredCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3220);
            	    lv_metaRequiredCapabilities_36=ruleRequiredCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_36, "RequiredCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3233); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:7: 'advice' (lv_advice_39= ruleNamedAdvice )
            	    {
            	    match(input,48,FOLLOW_48_in_ruleUnit3250); 

            	            createLeafNode(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1281:1: (lv_advice_39= ruleNamedAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1284:6: lv_advice_39= ruleNamedAdvice
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleNamedAdvice_in_ruleUnit3284);
            	    lv_advice_39=ruleNamedAdvice();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_39, "NamedAdvice", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:6: ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:6: ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:7: 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}'
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3305); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3314); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1311:1: (lv_synchronize_42= ruleSynchronization )+
            	    int cnt25=0;
            	    loop25:
            	    do {
            	        int alt25=2;
            	        int LA25_0 = input.LA(1);

            	        if ( (LA25_0==RULE_ID||LA25_0==RULE_STRING) ) {
            	            alt25=1;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1314:6: lv_synchronize_42= ruleSynchronization
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_7_2_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3348);
            	    	    lv_synchronize_42=ruleSynchronization();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "synchronize", lv_synchronize_42, "Synchronization", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt25 >= 1 ) break loop25;
            	                EarlyExitException eee =
            	                    new EarlyExitException(25, input);
            	                throw eee;
            	        }
            	        cnt25++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3362); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:6: ( 'sequential' (lv_synchronize_45= ruleSynchronization ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:6: ( 'sequential' (lv_synchronize_45= ruleSynchronization ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:7: 'sequential' (lv_synchronize_45= ruleSynchronization )
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3379); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1341:1: (lv_synchronize_45= ruleSynchronization )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1344:6: lv_synchronize_45= ruleSynchronization
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_8_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3413);
            	    lv_synchronize_45=ruleSynchronization();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "synchronize", lv_synchronize_45, "Synchronization", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1363:6: (lv_parts_46= rulePart )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1363:6: (lv_parts_46= rulePart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1366:6: lv_parts_46= rulePart
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getPartsPartParserRuleCall_7_9_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePart_in_ruleUnit3458);
            	    lv_parts_46=rulePart();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "parts", lv_parts_46, "Part", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;
            	case 11 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:6: ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:6: ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:7: 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}'
            	    {
            	    match(input,50,FOLLOW_50_in_ruleUnit3478); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3487); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1393:1: (lv_repositoryConfig_49= ruleRepositoryConfiguration )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==RULE_STRING||LA26_0==65) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1396:6: lv_repositoryConfig_49= ruleRepositoryConfiguration
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_7_10_2_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3521);
            	    	    lv_repositoryConfig_49=ruleRepositoryConfiguration();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "repositoryConfig", lv_repositoryConfig_49, "RepositoryConfiguration", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3535); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3(), null); 
            	        

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleUnit3547); 

                    createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1429:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleProvidedCapability_StartIndex = input.index();
        EObject iv_ruleProvidedCapability = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1429:60: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1430:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
             currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            pushFollow(FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3580);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;

             current =iv_ruleProvidedCapability; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProvidedCapability3590); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1437:1: ruleProvidedCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int ruleProvidedCapability_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        AntlrDatatypeRuleToken lv_version_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1442:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==51) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleProvidedCapability3625); 

                            createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1447:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1450:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleProvidedCapability3659);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1468:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1471:6: lv_interface_2= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3699);
            lv_interface_2=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,17,FOLLOW_17_in_ruleProvidedCapability3712); 

                    createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1493:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1496:6: lv_name_4= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3746);
            lv_name_4=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1514:2: ( '/' (lv_version_6= ruleVersion ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==17) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1514:3: '/' (lv_version_6= ruleVersion )
                    {
                    match(input,17,FOLLOW_17_in_ruleProvidedCapability3760); 

                            createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1518:1: (lv_version_6= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1521:6: lv_version_6= ruleVersion
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersion_in_ruleProvidedCapability3794);
                    lv_version_6=ruleVersion();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "version", lv_version_6, "Version", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1546:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleRequiredCapability_StartIndex = input.index();
        EObject iv_ruleRequiredCapability = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1546:60: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1547:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            pushFollow(FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3833);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;

             current =iv_ruleRequiredCapability; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRequiredCapability3843); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1554:1: ruleRequiredCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int ruleRequiredCapability_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        AntlrDatatypeRuleToken lv_range_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1559:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==51) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleRequiredCapability3878); 

                            createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1564:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1567:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleRequiredCapability3912);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1585:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1588:6: lv_interface_2= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3952);
            lv_interface_2=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,17,FOLLOW_17_in_ruleRequiredCapability3965); 

                    createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1610:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1613:6: lv_name_4= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3999);
            lv_name_4=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1631:2: ( '/' (lv_range_6= ruleVersionRange ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==17) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1631:3: '/' (lv_range_6= ruleVersionRange )
                    {
                    match(input,17,FOLLOW_17_in_ruleRequiredCapability4013); 

                            createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1635:1: (lv_range_6= ruleVersionRange )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1638:6: lv_range_6= ruleVersionRange
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersionRange_in_ruleRequiredCapability4047);
                    lv_range_6=ruleVersionRange();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "range", lv_range_6, "VersionRange", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRuleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1663:1: entryRuleNamedPropertyStatements returns [EObject current=null] : iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF ;
    public final EObject entryRuleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;
        int entryRuleNamedPropertyStatements_StartIndex = input.index();
        EObject iv_ruleNamedPropertyStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1663:65: (iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1664:2: iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNamedPropertyStatementsRule(), currentNode); 
            pushFollow(FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4086);
            iv_ruleNamedPropertyStatements=ruleNamedPropertyStatements();
            _fsp--;

             current =iv_ruleNamedPropertyStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedPropertyStatements4096); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedPropertyStatements


    // $ANTLR start ruleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:1: ruleNamedPropertyStatements returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) ) ;
    public final EObject ruleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;
        int ruleNamedPropertyStatements_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1676:6: ( ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:1: ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:1: ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:2: (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:2: (lv_name_0= RULE_ID )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1679:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4143); 

                    		createLeafNode(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1697:3: (lv_statements_1= rulePropertyStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1700:6: lv_statements_1= rulePropertyStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getNamedPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyStatements_in_ruleNamedPropertyStatements4186);
            lv_statements_1=rulePropertyStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_1, "PropertyStatements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedPropertyStatements


    // $ANTLR start entryRulePropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1725:1: entryRulePropertyStatements returns [EObject current=null] : iv_rulePropertyStatements= rulePropertyStatements EOF ;
    public final EObject entryRulePropertyStatements() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyStatements_StartIndex = input.index();
        EObject iv_rulePropertyStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1725:60: (iv_rulePropertyStatements= rulePropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1726:2: iv_rulePropertyStatements= rulePropertyStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyStatementsRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyStatements_in_entryRulePropertyStatements4223);
            iv_rulePropertyStatements=rulePropertyStatements();
            _fsp--;

             current =iv_rulePropertyStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyStatements4233); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyStatements


    // $ANTLR start rulePropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1733:1: rulePropertyStatements returns [EObject current=null] : ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' ) ;
    public final EObject rulePropertyStatements() throws RecognitionException {
        EObject current = null;
        int rulePropertyStatements_StartIndex = input.index();
        EObject lv_filter_2 = null;

        EObject lv_statements_3 = null;

        EObject lv_statements_4 = null;

        EObject lv_statements_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1738:6: ( ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:1: ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:1: ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:2: '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}'
            {
            match(input,42,FOLLOW_42_in_rulePropertyStatements4267); 

                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:1: ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_PID||LA35_0==42||(LA35_0>=51 && LA35_0<=52)||LA35_0==57) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:2: ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:2: ( 'when' (lv_filter_2= ruleFilter ) )?
            	    int alt33=2;
            	    int LA33_0 = input.LA(1);

            	    if ( (LA33_0==51) ) {
            	        alt33=1;
            	    }
            	    switch (alt33) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:3: 'when' (lv_filter_2= ruleFilter )
            	            {
            	            match(input,51,FOLLOW_51_in_rulePropertyStatements4278); 

            	                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getWhenKeyword_1_0_0(), null); 
            	                
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1747:1: (lv_filter_2= ruleFilter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1750:6: lv_filter_2= ruleFilter
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getFilterFilterParserRuleCall_1_0_1_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleFilter_in_rulePropertyStatements4312);
            	            lv_filter_2=ruleFilter();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		set(current, "filter", lv_filter_2, "Filter", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:4: ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )
            	    int alt34=3;
            	    switch ( input.LA(1) ) {
            	    case 57:
            	        {
            	        alt34=1;
            	        }
            	        break;
            	    case RULE_PID:
            	    case 52:
            	        {
            	        alt34=2;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt34=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("1768:4: ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )", 34, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt34) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:5: (lv_statements_3= ruleUnsetPropertyStatement )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:5: (lv_statements_3= ruleUnsetPropertyStatement )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1771:6: lv_statements_3= ruleUnsetPropertyStatement
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsUnsetPropertyStatementParserRuleCall_1_1_0_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleUnsetPropertyStatement_in_rulePropertyStatements4353);
            	            lv_statements_3=ruleUnsetPropertyStatement();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_3, "UnsetPropertyStatement", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1790:6: (lv_statements_4= rulePropertyStatement )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1790:6: (lv_statements_4= rulePropertyStatement )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1793:6: lv_statements_4= rulePropertyStatement
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementParserRuleCall_1_1_1_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_rulePropertyStatement_in_rulePropertyStatements4397);
            	            lv_statements_4=rulePropertyStatement();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_4, "PropertyStatement", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1812:6: (lv_statements_5= rulePropertyStatements )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1812:6: (lv_statements_5= rulePropertyStatements )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:6: lv_statements_5= rulePropertyStatements
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_1_2_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_rulePropertyStatements_in_rulePropertyStatements4441);
            	            lv_statements_5=rulePropertyStatements();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_5, "PropertyStatements", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePropertyStatements4457); 

                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyStatements


    // $ANTLR start entryRulePropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1844:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyStatement_StartIndex = input.index();
        EObject iv_rulePropertyStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1844:59: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1845:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyStatementRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyStatement_in_entryRulePropertyStatement4490);
            iv_rulePropertyStatement=rulePropertyStatement();
            _fsp--;

             current =iv_rulePropertyStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyStatement4500); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyStatement


    // $ANTLR start rulePropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1852:1: rulePropertyStatement returns [EObject current=null] : ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;
        int rulePropertyStatement_StartIndex = input.index();
        Token lv_immutable_0=null;
        Token lv_op_2=null;
        AntlrDatatypeRuleToken lv_key_1 = null;

        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1857:6: ( ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:2: (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:2: (lv_immutable_0= 'immutable' )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==52) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1860:6: lv_immutable_0= 'immutable'
                    {
                    lv_immutable_0=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_rulePropertyStatement4546); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0(), "immutable"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1879:3: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1882:6: lv_key_1= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_rulePropertyStatement4594);
            lv_key_1=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1900:2: (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:6: lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:14: ( '=' | '+=' | '-=' | '*=' | '/=' )
            int alt37=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt37=1;
                }
                break;
            case 53:
                {
                alt37=2;
                }
                break;
            case 54:
                {
                alt37=3;
                }
                break;
            case 55:
                {
                alt37=4;
                }
                break;
            case 56:
                {
                alt37=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("1902:14: ( '=' | '+=' | '-=' | '*=' | '/=' )", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:15: '='
                    {
                    match(input,25,FOLLOW_25_in_rulePropertyStatement4620); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpEqualsSignKeyword_2_0_0(), "op"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1908:6: '+='
                    {
                    match(input,53,FOLLOW_53_in_rulePropertyStatement4636); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpPlusSignEqualsSignKeyword_2_0_1(), "op"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1914:6: '-='
                    {
                    match(input,54,FOLLOW_54_in_rulePropertyStatement4652); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpHyphenMinusEqualsSignKeyword_2_0_2(), "op"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1920:6: '*='
                    {
                    match(input,55,FOLLOW_55_in_rulePropertyStatement4668); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpAsteriskEqualsSignKeyword_2_0_3(), "op"); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1926:6: '/='
                    {
                    match(input,56,FOLLOW_56_in_rulePropertyStatement4684); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpSolidusEqualsSignKeyword_2_0_4(), "op"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "op", /* lv_op_2 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1946:2: (lv_value_3= rulePropertyExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1949:6: lv_value_3= rulePropertyExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementAccess().getValuePropertyExpressionParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyExpression_in_rulePropertyStatement4733);
            lv_value_3=rulePropertyExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_3, "PropertyExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_rulePropertyStatement4746); 

                    createLeafNode(grammarAccess.getPropertyStatementAccess().getSemicolonKeyword_4(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyStatement


    // $ANTLR start entryRuleUnsetPropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1978:1: entryRuleUnsetPropertyStatement returns [EObject current=null] : iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF ;
    public final EObject entryRuleUnsetPropertyStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsetPropertyStatement_StartIndex = input.index();
        EObject iv_ruleUnsetPropertyStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1978:64: (iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1979:2: iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnsetPropertyStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnsetPropertyStatement_in_entryRuleUnsetPropertyStatement4779);
            iv_ruleUnsetPropertyStatement=ruleUnsetPropertyStatement();
            _fsp--;

             current =iv_ruleUnsetPropertyStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnsetPropertyStatement4789); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnsetPropertyStatement


    // $ANTLR start ruleUnsetPropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1986:1: ruleUnsetPropertyStatement returns [EObject current=null] : ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' ) ;
    public final EObject ruleUnsetPropertyStatement() throws RecognitionException {
        EObject current = null;
        int ruleUnsetPropertyStatement_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_unsetProperties_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1991:6: ( ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:1: ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:1: ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:2: 'unset' (lv_unsetProperties_1= rulePropertyName ) ';'
            {
            match(input,57,FOLLOW_57_in_ruleUnsetPropertyStatement4823); 

                    createLeafNode(grammarAccess.getUnsetPropertyStatementAccess().getUnsetKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1996:1: (lv_unsetProperties_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1999:6: lv_unsetProperties_1= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_ruleUnsetPropertyStatement4857);
            lv_unsetProperties_1=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnsetPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "unsetProperties", lv_unsetProperties_1, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleUnsetPropertyStatement4870); 

                    createLeafNode(grammarAccess.getUnsetPropertyStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnsetPropertyStatement


    // $ANTLR start entryRuleAnnotationStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:1: entryRuleAnnotationStatement returns [EObject current=null] : iv_ruleAnnotationStatement= ruleAnnotationStatement EOF ;
    public final EObject entryRuleAnnotationStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotationStatement_StartIndex = input.index();
        EObject iv_ruleAnnotationStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:61: (iv_ruleAnnotationStatement= ruleAnnotationStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2029:2: iv_ruleAnnotationStatement= ruleAnnotationStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAnnotationStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAnnotationStatement_in_entryRuleAnnotationStatement4903);
            iv_ruleAnnotationStatement=ruleAnnotationStatement();
            _fsp--;

             current =iv_ruleAnnotationStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnnotationStatement4913); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAnnotationStatement


    // $ANTLR start ruleAnnotationStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2036:1: ruleAnnotationStatement returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' ) ;
    public final EObject ruleAnnotationStatement() throws RecognitionException {
        EObject current = null;
        int ruleAnnotationStatement_StartIndex = input.index();
        Token lv_immutable_2=null;
        Token lv_op_4=null;
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_key_3 = null;

        EObject lv_value_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2041:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==51) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleAnnotationStatement4948); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2046:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2049:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleAnnotationStatement4982);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2067:4: (lv_immutable_2= 'immutable' )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==52) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2069:6: lv_immutable_2= 'immutable'
                    {
                    lv_immutable_2=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_ruleAnnotationStatement5009); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0(), "immutable"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2088:3: (lv_key_3= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2091:6: lv_key_3= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getKeyPropertyNameParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_ruleAnnotationStatement5057);
            lv_key_3=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "key", lv_key_3, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2109:2: (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:6: lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:14: ( '=' | '+=' | '-=' | '*=' | '/=' )
            int alt40=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt40=1;
                }
                break;
            case 53:
                {
                alt40=2;
                }
                break;
            case 54:
                {
                alt40=3;
                }
                break;
            case 55:
                {
                alt40=4;
                }
                break;
            case 56:
                {
                alt40=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("2111:14: ( '=' | '+=' | '-=' | '*=' | '/=' )", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:15: '='
                    {
                    match(input,25,FOLLOW_25_in_ruleAnnotationStatement5083); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpEqualsSignKeyword_3_0_0(), "op"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2117:6: '+='
                    {
                    match(input,53,FOLLOW_53_in_ruleAnnotationStatement5099); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpPlusSignEqualsSignKeyword_3_0_1(), "op"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2123:6: '-='
                    {
                    match(input,54,FOLLOW_54_in_ruleAnnotationStatement5115); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpHyphenMinusEqualsSignKeyword_3_0_2(), "op"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2129:6: '*='
                    {
                    match(input,55,FOLLOW_55_in_ruleAnnotationStatement5131); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpAsteriskEqualsSignKeyword_3_0_3(), "op"); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2135:6: '/='
                    {
                    match(input,56,FOLLOW_56_in_ruleAnnotationStatement5147); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpSolidusEqualsSignKeyword_3_0_4(), "op"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "op", /* lv_op_4 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2155:2: (lv_value_5= rulePropertyExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2158:6: lv_value_5= rulePropertyExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getValuePropertyExpressionParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyExpression_in_ruleAnnotationStatement5196);
            lv_value_5=rulePropertyExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_5, "PropertyExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleAnnotationStatement5209); 

                    createLeafNode(grammarAccess.getAnnotationStatementAccess().getSemicolonKeyword_5(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAnnotationStatement


    // $ANTLR start entryRulePropertyExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2187:1: entryRulePropertyExpression returns [EObject current=null] : iv_rulePropertyExpression= rulePropertyExpression EOF ;
    public final EObject entryRulePropertyExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyExpression_StartIndex = input.index();
        EObject iv_rulePropertyExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2187:60: (iv_rulePropertyExpression= rulePropertyExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2188:2: iv_rulePropertyExpression= rulePropertyExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyExpression_in_entryRulePropertyExpression5242);
            iv_rulePropertyExpression=rulePropertyExpression();
            _fsp--;

             current =iv_rulePropertyExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyExpression5252); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyExpression


    // $ANTLR start rulePropertyExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2195:1: rulePropertyExpression returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject rulePropertyExpression() throws RecognitionException {
        EObject current = null;
        int rulePropertyExpression_StartIndex = input.index();
        EObject this_Expression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2200:6: (this_Expression_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2202:5: this_Expression_0= ruleExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPropertyExpressionAccess().getExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleExpression_in_rulePropertyExpression5298);
            this_Expression_0=ruleExpression();
            _fsp--;

             
                    current = this_Expression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyExpression


    // $ANTLR start entryRuleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2217:1: entryRuleSynchronization returns [EObject current=null] : iv_ruleSynchronization= ruleSynchronization EOF ;
    public final EObject entryRuleSynchronization() throws RecognitionException {
        EObject current = null;
        int entryRuleSynchronization_StartIndex = input.index();
        EObject iv_ruleSynchronization = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2217:57: (iv_ruleSynchronization= ruleSynchronization EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2218:2: iv_ruleSynchronization= ruleSynchronization EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSynchronizationRule(), currentNode); 
            pushFollow(FOLLOW_ruleSynchronization_in_entryRuleSynchronization5329);
            iv_ruleSynchronization=ruleSynchronization();
            _fsp--;

             current =iv_ruleSynchronization; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronization5339); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronization


    // $ANTLR start ruleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2225:1: ruleSynchronization returns [EObject current=null] : ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) ;
    public final EObject ruleSynchronization() throws RecognitionException {
        EObject current = null;
        int ruleSynchronization_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_partrefs_0 = null;

        AntlrDatatypeRuleToken lv_partrefs_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2230:6: ( ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:2: (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:2: (lv_partrefs_0= ruleSynchronizedPart )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2234:6: lv_partrefs_0= ruleSynchronizedPart
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5398);
            lv_partrefs_0=ruleSynchronizedPart();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "partrefs", lv_partrefs_0, "SynchronizedPart", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2252:2: ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==33) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2252:3: ',' (lv_partrefs_2= ruleSynchronizedPart )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleSynchronization5412); 

            	            createLeafNode(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2256:1: (lv_partrefs_2= ruleSynchronizedPart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2259:6: lv_partrefs_2= ruleSynchronizedPart
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5446);
            	    lv_partrefs_2=ruleSynchronizedPart();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "partrefs", lv_partrefs_2, "SynchronizedPart", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);

            match(input,38,FOLLOW_38_in_ruleSynchronization5461); 

                    createLeafNode(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronization


    // $ANTLR start entryRuleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:1: entryRuleSynchronizedPart returns [String current=null] : iv_ruleSynchronizedPart= ruleSynchronizedPart EOF ;
    public final String entryRuleSynchronizedPart() throws RecognitionException {
        String current = null;
        int entryRuleSynchronizedPart_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSynchronizedPart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:57: (iv_ruleSynchronizedPart= ruleSynchronizedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2289:2: iv_ruleSynchronizedPart= ruleSynchronizedPart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSynchronizedPartRule(), currentNode); 
            pushFollow(FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5495);
            iv_ruleSynchronizedPart=ruleSynchronizedPart();
            _fsp--;

             current =iv_ruleSynchronizedPart.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronizedPart5506); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronizedPart


    // $ANTLR start ruleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2296:1: ruleSynchronizedPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) ;
    public final AntlrDatatypeRuleToken ruleSynchronizedPart() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSynchronizedPart_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_CompoundName_0 = null;

        AntlrDatatypeRuleToken this_PartName_2 = null;

        AntlrDatatypeRuleToken this_PartName_3 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:6: ( ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2304:5: this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )?
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5554);
                    this_CompoundName_0=ruleCompoundName();
                    _fsp--;


                    		current.merge(this_CompoundName_0);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2314:1: (kw= '#' this_PartName_2= rulePartName )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==58) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2315:2: kw= '#' this_PartName_2= rulePartName
                            {
                            kw=(Token)input.LT(1);
                            match(input,58,FOLLOW_58_in_ruleSynchronizedPart5573); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0(), null); 
                                
                             
                                    currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1(), currentNode); 
                                
                            pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5595);
                            this_PartName_2=rulePartName();
                            _fsp--;


                            		current.merge(this_PartName_2);
                                
                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2333:5: this_PartName_3= rulePartName
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5631);
                    this_PartName_3=rulePartName();
                    _fsp--;


                    		current.merge(this_PartName_3);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronizedPart


    // $ANTLR start entryRulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2351:1: entryRulePathGroup returns [EObject current=null] : iv_rulePathGroup= rulePathGroup EOF ;
    public final EObject entryRulePathGroup() throws RecognitionException {
        EObject current = null;
        int entryRulePathGroup_StartIndex = input.index();
        EObject iv_rulePathGroup = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2351:51: (iv_rulePathGroup= rulePathGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2352:2: iv_rulePathGroup= rulePathGroup EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathGroupRule(), currentNode); 
            pushFollow(FOLLOW_rulePathGroup_in_entryRulePathGroup5674);
            iv_rulePathGroup=rulePathGroup();
            _fsp--;

             current =iv_rulePathGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePathGroup5684); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathGroup


    // $ANTLR start rulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2359:1: rulePathGroup returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) ) ;
    public final EObject rulePathGroup() throws RecognitionException {
        EObject current = null;
        int rulePathGroup_StartIndex = input.index();
        Token lv_firstIsBase_5=null;
        EObject lv_filter_1 = null;

        EObject lv_paths_2 = null;

        EObject lv_paths_4 = null;

        EObject lv_paths_6 = null;

        EObject lv_paths_8 = null;

        AntlrDatatypeRuleToken lv_unsetProperties_14 = null;

        EObject lv_setProperties_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2364:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:2: ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==51) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_rulePathGroup5719); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2369:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2372:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_rulePathGroup5753);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:4: ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_ID||LA49_0==RULE_STRING||LA49_0==17||LA49_0==60) ) {
                alt49=1;
            }
            else if ( (LA49_0==59) ) {
                alt49=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2390:4: ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:5: ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:5: ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:6: (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';'
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2390:6: (lv_paths_2= rulePathExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2393:6: lv_paths_2= rulePathExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup5795);
                    lv_paths_2=rulePathExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "paths", lv_paths_2, "PathExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2411:2: ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==33||LA47_0==38) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==31) ) {
                        alt47=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2411:2: ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) )", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2411:3: ( ',' (lv_paths_4= rulePathExpression ) )*
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2411:3: ( ',' (lv_paths_4= rulePathExpression ) )*
                            loop45:
                            do {
                                int alt45=2;
                                int LA45_0 = input.LA(1);

                                if ( (LA45_0==33) ) {
                                    alt45=1;
                                }


                                switch (alt45) {
                            	case 1 :
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2411:4: ',' (lv_paths_4= rulePathExpression )
                            	    {
                            	    match(input,33,FOLLOW_33_in_rulePathGroup5810); 

                            	            createLeafNode(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_0_0(), null); 
                            	        
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2415:1: (lv_paths_4= rulePathExpression )
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2418:6: lv_paths_4= rulePathExpression
                            	    {
                            	     
                            	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_0_1_0(), currentNode); 
                            	    	    
                            	    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup5844);
                            	    lv_paths_4=rulePathExpression();
                            	    _fsp--;


                            	    	        if (current==null) {
                            	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	    	        }
                            	    	        
                            	    	        try {
                            	    	       		add(current, "paths", lv_paths_4, "PathExpression", currentNode);
                            	    	        } catch (ValueConverterException vce) {
                            	    				handleValueConverterException(vce);
                            	    	        }
                            	    	        currentNode = currentNode.getParent();
                            	    	    

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop45;
                                }
                            } while (true);


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2437:6: ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' )
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2437:6: ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2437:7: (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']'
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2437:7: (lv_firstIsBase_5= '[' )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2439:6: lv_firstIsBase_5= '['
                            {
                            lv_firstIsBase_5=(Token)input.LT(1);
                            match(input,31,FOLLOW_31_in_rulePathGroup5878); 

                                    createLeafNode(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0(), "firstIsBase"); 
                                

                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode, current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "firstIsBase", true, "[", lastConsumedNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	    

                            }

                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2458:2: (lv_paths_6= rulePathExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2461:6: lv_paths_6= rulePathExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup5925);
                            lv_paths_6=rulePathExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		add(current, "paths", lv_paths_6, "PathExpression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }

                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2479:2: ( ',' (lv_paths_8= rulePathExpression ) )*
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==33) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2479:3: ',' (lv_paths_8= rulePathExpression )
                            	    {
                            	    match(input,33,FOLLOW_33_in_rulePathGroup5939); 

                            	            createLeafNode(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_1_2_0(), null); 
                            	        
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2483:1: (lv_paths_8= rulePathExpression )
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2486:6: lv_paths_8= rulePathExpression
                            	    {
                            	     
                            	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_2_1_0(), currentNode); 
                            	    	    
                            	    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup5973);
                            	    lv_paths_8=rulePathExpression();
                            	    _fsp--;


                            	    	        if (current==null) {
                            	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	    	        }
                            	    	        
                            	    	        try {
                            	    	       		add(current, "paths", lv_paths_8, "PathExpression", currentNode);
                            	    	        } catch (ValueConverterException vce) {
                            	    				handleValueConverterException(vce);
                            	    	        }
                            	    	        currentNode = currentNode.getParent();
                            	    	    

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);

                            match(input,34,FOLLOW_34_in_rulePathGroup5988); 

                                    createLeafNode(grammarAccess.getPathGroupAccess().getRightSquareBracketKeyword_1_0_1_1_3(), null); 
                                

                            }


                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_rulePathGroup5999); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_0_2(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2513:6: ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2513:6: ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2513:7: 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}'
                    {
                    match(input,59,FOLLOW_59_in_rulePathGroup6016); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_1_0(), null); 
                        
                    match(input,42,FOLLOW_42_in_rulePathGroup6025); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getLeftCurlyBracketKeyword_1_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2521:1: ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+
                    int cnt48=0;
                    loop48:
                    do {
                        int alt48=3;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==57) ) {
                            alt48=1;
                        }
                        else if ( (LA48_0==RULE_PID||(LA48_0>=51 && LA48_0<=52)) ) {
                            alt48=2;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2521:2: ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' )
                    	    {
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2521:2: ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2521:3: 'unset' (lv_unsetProperties_14= rulePropertyName ) ';'
                    	    {
                    	    match(input,57,FOLLOW_57_in_rulePathGroup6036); 

                    	            createLeafNode(grammarAccess.getPathGroupAccess().getUnsetKeyword_1_1_2_0_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2525:1: (lv_unsetProperties_14= rulePropertyName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2528:6: lv_unsetProperties_14= rulePropertyName
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_1_2_0_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_rulePropertyName_in_rulePathGroup6070);
                    	    lv_unsetProperties_14=rulePropertyName();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "unsetProperties", lv_unsetProperties_14, "PropertyName", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }

                    	    match(input,38,FOLLOW_38_in_rulePathGroup6083); 

                    	            createLeafNode(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_1_2_0_2(), null); 
                    	        

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2551:6: (lv_setProperties_16= ruleAnnotationStatement )
                    	    {
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2551:6: (lv_setProperties_16= ruleAnnotationStatement )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2554:6: lv_setProperties_16= ruleAnnotationStatement
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getSetPropertiesAnnotationStatementParserRuleCall_1_1_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleAnnotationStatement_in_rulePathGroup6124);
                    	    lv_setProperties_16=ruleAnnotationStatement();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "setProperties", lv_setProperties_16, "AnnotationStatement", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt48 >= 1 ) break loop48;
                                EarlyExitException eee =
                                    new EarlyExitException(48, input);
                                throw eee;
                        }
                        cnt48++;
                    } while (true);

                    match(input,45,FOLLOW_45_in_rulePathGroup6139); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getRightCurlyBracketKeyword_1_1_3(), null); 
                        

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathGroup


    // $ANTLR start entryRulePathExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2583:1: entryRulePathExpression returns [EObject current=null] : iv_rulePathExpression= rulePathExpression EOF ;
    public final EObject entryRulePathExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePathExpression_StartIndex = input.index();
        EObject iv_rulePathExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2583:56: (iv_rulePathExpression= rulePathExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2584:2: iv_rulePathExpression= rulePathExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePathExpression_in_entryRulePathExpression6174);
            iv_rulePathExpression=rulePathExpression();
            _fsp--;

             current =iv_rulePathExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePathExpression6184); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathExpression


    // $ANTLR start rulePathExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2591:1: rulePathExpression returns [EObject current=null] : ( rulePath | this_ExprStatement_1= ruleExprStatement ) ;
    public final EObject rulePathExpression() throws RecognitionException {
        EObject current = null;
        int rulePathExpression_StartIndex = input.index();
        EObject this_ExprStatement_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2596:6: ( ( rulePath | this_ExprStatement_1= ruleExprStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2597:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2597:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ID||LA50_0==RULE_STRING||LA50_0==17) ) {
                alt50=1;
            }
            else if ( (LA50_0==60) ) {
                alt50=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2597:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2597:2: rulePath
                    {
                    pushFollow(FOLLOW_rulePath_in_rulePathExpression6218);
                    rulePath();
                    _fsp--;


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2599:5: this_ExprStatement_1= ruleExprStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPathExpressionAccess().getExprStatementParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExprStatement_in_rulePathExpression6238);
                    this_ExprStatement_1=ruleExprStatement();
                    _fsp--;

                     
                            current = this_ExprStatement_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathExpression


    // $ANTLR start entryRuleExprStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2614:1: entryRuleExprStatement returns [EObject current=null] : iv_ruleExprStatement= ruleExprStatement EOF ;
    public final EObject entryRuleExprStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleExprStatement_StartIndex = input.index();
        EObject iv_ruleExprStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2614:55: (iv_ruleExprStatement= ruleExprStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2615:2: iv_ruleExprStatement= ruleExprStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExprStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleExprStatement_in_entryRuleExprStatement6270);
            iv_ruleExprStatement=ruleExprStatement();
            _fsp--;

             current =iv_ruleExprStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExprStatement6280); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExprStatement


    // $ANTLR start ruleExprStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2622:1: ruleExprStatement returns [EObject current=null] : ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' ) ;
    public final EObject ruleExprStatement() throws RecognitionException {
        EObject current = null;
        int ruleExprStatement_StartIndex = input.index();
        EObject lv_expression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2627:6: ( ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:1: ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:1: ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:2: 'expr' '(' (lv_expression_2= ruleExpression ) ')'
            {
            match(input,60,FOLLOW_60_in_ruleExprStatement6314); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getExprKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleExprStatement6323); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2636:1: (lv_expression_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2639:6: lv_expression_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getExprStatementAccess().getExpressionExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleExprStatement6357);
            lv_expression_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getExprStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expression", lv_expression_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleExprStatement6370); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getRightParenthesisKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExprStatement


    // $ANTLR start entryRulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2668:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;
        int entryRulePath_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2668:45: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2669:2: iv_rulePath= rulePath EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            pushFollow(FOLLOW_rulePath_in_entryRulePath6404);
            iv_rulePath=rulePath();
            _fsp--;

             current =iv_rulePath.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePath6415); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2676:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePath_StartIndex = input.index();
        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_2 = null;

        AntlrDatatypeRuleToken this_QualifiedName_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2684:6: ( (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2685:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2685:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_STRING) ) {
                alt54=1;
            }
            else if ( (LA54_0==RULE_ID||LA54_0==17) ) {
                alt54=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2685:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2685:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_rulePath6455); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2693:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2693:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2693:7: (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2693:7: (kw= '/' )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==17) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2694:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath6481); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                

                            }
                            break;

                    }

                     
                            currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath6505);
                    this_QualifiedName_2=ruleQualifiedName();
                    _fsp--;


                    		current.merge(this_QualifiedName_2);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2710:1: (kw= '/' this_QualifiedName_4= ruleQualifiedName )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==17) ) {
                            int LA52_1 = input.LA(2);

                            if ( (LA52_1==RULE_ID) ) {
                                alt52=1;
                            }


                        }


                        switch (alt52) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2711:2: kw= '/' this_QualifiedName_4= ruleQualifiedName
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,17,FOLLOW_17_in_rulePath6524); 

                    	            current.merge(kw);
                    	            createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	        
                    	     
                    	            currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1(), currentNode); 
                    	        
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath6546);
                    	    this_QualifiedName_4=ruleQualifiedName();
                    	    _fsp--;


                    	    		current.merge(this_QualifiedName_4);
                    	        
                    	     
                    	            currentNode = currentNode.getParent();
                    	        

                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2727:3: (kw= '/' )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==17) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2728:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath6567); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2741:1: entryRulePrerequisite returns [EObject current=null] : iv_rulePrerequisite= rulePrerequisite EOF ;
    public final EObject entryRulePrerequisite() throws RecognitionException {
        EObject current = null;
        int entryRulePrerequisite_StartIndex = input.index();
        EObject iv_rulePrerequisite = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2741:54: (iv_rulePrerequisite= rulePrerequisite EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2742:2: iv_rulePrerequisite= rulePrerequisite EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrerequisiteRule(), currentNode); 
            pushFollow(FOLLOW_rulePrerequisite_in_entryRulePrerequisite6608);
            iv_rulePrerequisite=rulePrerequisite();
            _fsp--;

             current =iv_rulePrerequisite; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisite6618); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisite


    // $ANTLR start rulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2749:1: rulePrerequisite returns [EObject current=null] : ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) ;
    public final EObject rulePrerequisite() throws RecognitionException {
        EObject current = null;
        int rulePrerequisite_StartIndex = input.index();
        Token lv_surpressed_0=null;
        Token lv_alias_3=null;
        EObject lv_filter_2 = null;

        EObject lv_partReference_5 = null;

        EObject lv_closure_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2754:6: ( ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:3: (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2755:3: (lv_surpressed_0= 'hidden' )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==61) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2757:6: lv_surpressed_0= 'hidden'
                    {
                    lv_surpressed_0=(Token)input.LT(1);
                    match(input,61,FOLLOW_61_in_rulePrerequisite6665); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0(), "surpressed"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "surpressed", true, "hidden", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2776:3: ( 'when' (lv_filter_2= ruleFilter ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==51) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2776:4: 'when' (lv_filter_2= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_rulePrerequisite6689); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2780:1: (lv_filter_2= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2783:6: lv_filter_2= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_rulePrerequisite6723);
                    lv_filter_2=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_2, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2801:4: ( (lv_alias_3= RULE_ID ) '=' )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_ID) ) {
                int LA57_1 = input.LA(2);

                if ( (LA57_1==25) ) {
                    alt57=1;
                }
            }
            switch (alt57) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2801:5: (lv_alias_3= RULE_ID ) '='
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2801:5: (lv_alias_3= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2803:6: lv_alias_3= RULE_ID
                    {
                    lv_alias_3=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rulePrerequisite6752); 

                    		createLeafNode(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_2_0_0(), "alias"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "alias", lv_alias_3, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    match(input,25,FOLLOW_25_in_rulePrerequisite6769); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_2_1(), null); 
                        

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2825:3: ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2825:4: (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2825:4: (lv_partReference_5= rulePrerequisiteEntry )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2828:6: lv_partReference_5= rulePrerequisiteEntry
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_3_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite6806);
            lv_partReference_5=rulePrerequisiteEntry();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "partReference", lv_partReference_5, "PrerequisiteEntry", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2846:2: (lv_closure_6= ruleClosure )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==62) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2849:6: lv_closure_6= ruleClosure
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleClosure_in_rulePrerequisite6844);
                    lv_closure_6=ruleClosure();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "closure", lv_closure_6, "Closure", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }


            }


            }

            match(input,38,FOLLOW_38_in_rulePrerequisite6860); 

                    createLeafNode(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisite


    // $ANTLR start entryRuleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2878:1: entryRuleClosure returns [EObject current=null] : iv_ruleClosure= ruleClosure EOF ;
    public final EObject entryRuleClosure() throws RecognitionException {
        EObject current = null;
        int entryRuleClosure_StartIndex = input.index();
        EObject iv_ruleClosure = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2878:49: (iv_ruleClosure= ruleClosure EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2879:2: iv_ruleClosure= ruleClosure EOF
            {
             currentNode = createCompositeNode(grammarAccess.getClosureRule(), currentNode); 
            pushFollow(FOLLOW_ruleClosure_in_entryRuleClosure6893);
            iv_ruleClosure=ruleClosure();
            _fsp--;

             current =iv_ruleClosure; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClosure6903); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosure


    // $ANTLR start ruleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2886:1: ruleClosure returns [EObject current=null] : ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' ) ;
    public final EObject ruleClosure() throws RecognitionException {
        EObject current = null;
        int ruleClosure_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_unsetProperties_5 = null;

        EObject lv_setProperties_7 = null;

        EObject lv_advice_10 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2891:6: ( ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2892:1: ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2892:1: ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2892:2: 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}'
            {
            match(input,62,FOLLOW_62_in_ruleClosure6937); 

                    createLeafNode(grammarAccess.getClosureAccess().getWithKeyword_0(), null); 
                
            match(input,42,FOLLOW_42_in_ruleClosure6946); 

                    createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2900:1: ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )*
            loop60:
            do {
                int alt60=3;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==43) ) {
                    alt60=1;
                }
                else if ( (LA60_0==48) ) {
                    alt60=2;
                }


                switch (alt60) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2900:2: ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2900:2: ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2900:3: 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}'
            	    {
            	    match(input,43,FOLLOW_43_in_ruleClosure6957); 

            	            createLeafNode(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleClosure6966); 

            	            createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_2_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2908:1: ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+
            	    int cnt59=0;
            	    loop59:
            	    do {
            	        int alt59=3;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==57) ) {
            	            alt59=1;
            	        }
            	        else if ( (LA59_0==RULE_PID||LA59_0==52) ) {
            	            alt59=2;
            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2908:2: ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' )
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2908:2: ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2908:3: 'unset' (lv_unsetProperties_5= rulePropertyName ) ';'
            	    	    {
            	    	    match(input,57,FOLLOW_57_in_ruleClosure6977); 

            	    	            createLeafNode(grammarAccess.getClosureAccess().getUnsetKeyword_2_0_2_0_0(), null); 
            	    	        
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2912:1: (lv_unsetProperties_5= rulePropertyName )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2915:6: lv_unsetProperties_5= rulePropertyName
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getUnsetPropertiesPropertyNameParserRuleCall_2_0_2_0_1_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_rulePropertyName_in_ruleClosure7011);
            	    	    lv_unsetProperties_5=rulePropertyName();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "unsetProperties", lv_unsetProperties_5, "PropertyName", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleClosure7024); 

            	    	            createLeafNode(grammarAccess.getClosureAccess().getSemicolonKeyword_2_0_2_0_2(), null); 
            	    	        

            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2938:6: (lv_setProperties_7= rulePropertyStatement )
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2938:6: (lv_setProperties_7= rulePropertyStatement )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2941:6: lv_setProperties_7= rulePropertyStatement
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getSetPropertiesPropertyStatementParserRuleCall_2_0_2_1_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_rulePropertyStatement_in_ruleClosure7065);
            	    	    lv_setProperties_7=rulePropertyStatement();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "setProperties", lv_setProperties_7, "PropertyStatement", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt59 >= 1 ) break loop59;
            	                EarlyExitException eee =
            	                    new EarlyExitException(59, input);
            	                throw eee;
            	        }
            	        cnt59++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleClosure7080); 

            	            createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_2_0_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2964:6: ( 'advice' (lv_advice_10= ruleCompoundAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2964:6: ( 'advice' (lv_advice_10= ruleCompoundAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2964:7: 'advice' (lv_advice_10= ruleCompoundAdvice )
            	    {
            	    match(input,48,FOLLOW_48_in_ruleClosure7097); 

            	            createLeafNode(grammarAccess.getClosureAccess().getAdviceKeyword_2_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2968:1: (lv_advice_10= ruleCompoundAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2971:6: lv_advice_10= ruleCompoundAdvice
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_2_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleClosure7131);
            	    lv_advice_10=ruleCompoundAdvice();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_10, "CompoundAdvice", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleClosure7147); 

                    createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosure


    // $ANTLR start entryRulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3000:1: entryRulePrerequisiteEntry returns [EObject current=null] : iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF ;
    public final EObject entryRulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;
        int entryRulePrerequisiteEntry_StartIndex = input.index();
        EObject iv_rulePrerequisiteEntry = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3000:59: (iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3001:2: iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrerequisiteEntryRule(), currentNode); 
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry7180);
            iv_rulePrerequisiteEntry=rulePrerequisiteEntry();
            _fsp--;

             current =iv_rulePrerequisiteEntry; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisiteEntry7190); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisiteEntry


    // $ANTLR start rulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3008:1: rulePrerequisiteEntry returns [EObject current=null] : (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement ) ;
    public final EObject rulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;
        int rulePrerequisiteEntry_StartIndex = input.index();
        EObject this_PartInSelf_0 = null;

        EObject this_CapabilityReferencedPart_1 = null;

        EObject this_CompoundReferences_2 = null;

        EObject this_ExprStatement_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3013:6: ( (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3014:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3014:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )
            int alt61=4;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3015:5: this_PartInSelf_0= rulePartInSelf
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry7237);
                    this_PartInSelf_0=rulePartInSelf();
                    _fsp--;

                     
                            current = this_PartInSelf_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3025:5: this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry7264);
                    this_CapabilityReferencedPart_1=ruleCapabilityReferencedPart();
                    _fsp--;

                     
                            current = this_CapabilityReferencedPart_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3035:5: this_CompoundReferences_2= ruleCompoundReferences
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry7291);
                    this_CompoundReferences_2=ruleCompoundReferences();
                    _fsp--;

                     
                            current = this_CompoundReferences_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3045:5: this_ExprStatement_3= ruleExprStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getExprStatementParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExprStatement_in_rulePrerequisiteEntry7318);
                    this_ExprStatement_3=ruleExprStatement();
                    _fsp--;

                     
                            current = this_ExprStatement_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisiteEntry


    // $ANTLR start entryRulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3060:1: entryRulePartInSelf returns [EObject current=null] : iv_rulePartInSelf= rulePartInSelf EOF ;
    public final EObject entryRulePartInSelf() throws RecognitionException {
        EObject current = null;
        int entryRulePartInSelf_StartIndex = input.index();
        EObject iv_rulePartInSelf = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3060:52: (iv_rulePartInSelf= rulePartInSelf EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3061:2: iv_rulePartInSelf= rulePartInSelf EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPartInSelfRule(), currentNode); 
            pushFollow(FOLLOW_rulePartInSelf_in_entryRulePartInSelf7350);
            iv_rulePartInSelf=rulePartInSelf();
            _fsp--;

             current =iv_rulePartInSelf; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePartInSelf7360); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartInSelf


    // $ANTLR start rulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3068:1: rulePartInSelf returns [EObject current=null] : (lv_partName_0= rulePartName ) ;
    public final EObject rulePartInSelf() throws RecognitionException {
        EObject current = null;
        int rulePartInSelf_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_partName_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3073:6: ( (lv_partName_0= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3074:1: (lv_partName_0= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3074:1: (lv_partName_0= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3077:6: lv_partName_0= rulePartName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePartName_in_rulePartInSelf7418);
            lv_partName_0=rulePartName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPartInSelfRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "partName", lv_partName_0, "PartName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartInSelf


    // $ANTLR start entryRuleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3102:1: entryRuleCapabilityReferencedPart returns [EObject current=null] : iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF ;
    public final EObject entryRuleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;
        int entryRuleCapabilityReferencedPart_StartIndex = input.index();
        EObject iv_ruleCapabilityReferencedPart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3102:66: (iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3103:2: iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCapabilityReferencedPartRule(), currentNode); 
            pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart7454);
            iv_ruleCapabilityReferencedPart=ruleCapabilityReferencedPart();
            _fsp--;

             current =iv_ruleCapabilityReferencedPart; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCapabilityReferencedPart7464); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCapabilityReferencedPart


    // $ANTLR start ruleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3110:1: ruleCapabilityReferencedPart returns [EObject current=null] : ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) ;
    public final EObject ruleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;
        int ruleCapabilityReferencedPart_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_interface_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        AntlrDatatypeRuleToken lv_range_4 = null;

        AntlrDatatypeRuleToken lv_partName_6 = null;

        AntlrDatatypeRuleToken lv_interface_7 = null;

        AntlrDatatypeRuleToken lv_name_9 = null;

        AntlrDatatypeRuleToken lv_range_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3115:6: ( ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:3: (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:3: (lv_interface_0= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3119:6: lv_interface_0= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7524);
                    lv_interface_0=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "interface", lv_interface_0, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7537); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3141:1: (lv_name_2= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3144:6: lv_name_2= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7571);
                    lv_name_2=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3162:2: ( '/' (lv_range_4= ruleVersionRange ) )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==17) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3162:3: '/' (lv_range_4= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7585); 

                                    createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3166:1: (lv_range_4= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3169:6: lv_range_4= ruleVersionRange
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7619);
                            lv_range_4=ruleVersionRange();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "range", lv_range_4, "VersionRange", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }


                            }
                            break;

                    }

                    match(input,58,FOLLOW_58_in_ruleCapabilityReferencedPart7634); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3191:1: (lv_partName_6= rulePartName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3194:6: lv_partName_6= rulePartName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePartName_in_ruleCapabilityReferencedPart7668);
                    lv_partName_6=rulePartName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "partName", lv_partName_6, "PartName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3213:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3213:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3213:7: (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3213:7: (lv_interface_7= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3216:6: lv_interface_7= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7714);
                    lv_interface_7=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "interface", lv_interface_7, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7727); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3238:1: (lv_name_9= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3241:6: lv_name_9= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7761);
                    lv_name_9=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_9, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3259:2: ( '/' (lv_range_11= ruleVersionRange ) )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==17) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3259:3: '/' (lv_range_11= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart7775); 

                                    createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3263:1: (lv_range_11= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3266:6: lv_range_11= ruleVersionRange
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7809);
                            lv_range_11=ruleVersionRange();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "range", lv_range_11, "VersionRange", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCapabilityReferencedPart


    // $ANTLR start entryRuleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3291:1: entryRuleCompoundReferences returns [EObject current=null] : iv_ruleCompoundReferences= ruleCompoundReferences EOF ;
    public final EObject entryRuleCompoundReferences() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundReferences_StartIndex = input.index();
        EObject iv_ruleCompoundReferences = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3291:60: (iv_ruleCompoundReferences= ruleCompoundReferences EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3292:2: iv_ruleCompoundReferences= ruleCompoundReferences EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundReferencesRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences7849);
            iv_ruleCompoundReferences=ruleCompoundReferences();
            _fsp--;

             current =iv_ruleCompoundReferences; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundReferences7859); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundReferences


    // $ANTLR start ruleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3299:1: ruleCompoundReferences returns [EObject current=null] : ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) ;
    public final EObject ruleCompoundReferences() throws RecognitionException {
        EObject current = null;
        int ruleCompoundReferences_StartIndex = input.index();
        EObject lv_prerequisites_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3304:6: ( ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3305:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3305:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3305:2: '{' (lv_prerequisites_1= rulePrerequisite )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundReferences7893); 

                    createLeafNode(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3309:1: (lv_prerequisites_1= rulePrerequisite )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_ID||LA65_0==RULE_STRING||LA65_0==42||LA65_0==51||(LA65_0>=60 && LA65_0<=61)) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3312:6: lv_prerequisites_1= rulePrerequisite
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleCompoundReferences7927);
            	    lv_prerequisites_1=rulePrerequisite();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getCompoundReferencesRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "prerequisites", lv_prerequisites_1, "Prerequisite", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundReferences7941); 

                    createLeafNode(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundReferences


    // $ANTLR start entryRulePart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3341:1: entryRulePart returns [EObject current=null] : iv_rulePart= rulePart EOF ;
    public final EObject entryRulePart() throws RecognitionException {
        EObject current = null;
        int entryRulePart_StartIndex = input.index();
        EObject iv_rulePart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3341:46: (iv_rulePart= rulePart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3342:2: iv_rulePart= rulePart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPartRule(), currentNode); 
            pushFollow(FOLLOW_rulePart_in_entryRulePart7974);
            iv_rulePart=rulePart();
            _fsp--;

             current =iv_rulePart; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePart7984); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePart


    // $ANTLR start rulePart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3349:1: rulePart returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePreConditionAssert )? (lv_asserts_8= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_11= rulePropertyStatements ) )? (lv_advice_12= ruleAdvice )? (lv_resultGroup_13= ruleActionInputGroup )? (lv_layout_14= ruleLayout )* (lv_statements_15= ruleStatements ) '}' ) ;
    public final EObject rulePart() throws RecognitionException {
        EObject current = null;
        int rulePart_StartIndex = input.index();
        Enumerator lv_visibility_0 = null;

        Enumerator lv_executionMode_1 = null;

        EObject lv_providedCapabilities_4 = null;

        EObject lv_providedCapabilities_6 = null;

        EObject lv_asserts_7 = null;

        EObject lv_asserts_8 = null;

        EObject lv_properties_11 = null;

        EObject lv_advice_12 = null;

        EObject lv_resultGroup_13 = null;

        EObject lv_layout_14 = null;

        EObject lv_statements_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3354:6: ( ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePreConditionAssert )? (lv_asserts_8= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_11= rulePropertyStatements ) )? (lv_advice_12= ruleAdvice )? (lv_resultGroup_13= ruleActionInputGroup )? (lv_layout_14= ruleLayout )* (lv_statements_15= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3355:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePreConditionAssert )? (lv_asserts_8= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_11= rulePropertyStatements ) )? (lv_advice_12= ruleAdvice )? (lv_resultGroup_13= ruleActionInputGroup )? (lv_layout_14= ruleLayout )* (lv_statements_15= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3355:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePreConditionAssert )? (lv_asserts_8= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_11= rulePropertyStatements ) )? (lv_advice_12= ruleAdvice )? (lv_resultGroup_13= ruleActionInputGroup )? (lv_layout_14= ruleLayout )* (lv_statements_15= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3355:2: (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? rulePartName ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePreConditionAssert )? (lv_asserts_8= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_11= rulePropertyStatements ) )? (lv_advice_12= ruleAdvice )? (lv_resultGroup_13= ruleActionInputGroup )? (lv_layout_14= ruleLayout )* (lv_statements_15= ruleStatements ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3355:2: (lv_visibility_0= ruleVisibility )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=118 && LA66_0<=119)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3358:6: lv_visibility_0= ruleVisibility
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVisibility_in_rulePart8043);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3376:3: (lv_executionMode_1= ruleExecutionMode )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==49||LA67_0==120) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3379:6: lv_executionMode_1= ruleExecutionMode
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getExecutionModeExecutionModeEnumRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExecutionMode_in_rulePart8082);
                    lv_executionMode_1=ruleExecutionMode();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "executionMode", lv_executionMode_1, "ExecutionMode", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            pushFollow(FOLLOW_rulePartName_in_rulePart8096);
            rulePartName();
            _fsp--;

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3397:15: ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==44) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3397:16: 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    {
                    match(input,44,FOLLOW_44_in_rulePart8098); 

                            createLeafNode(grammarAccess.getPartAccess().getProvidesKeyword_3_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3401:1: (lv_providedCapabilities_4= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3404:6: lv_providedCapabilities_4= ruleProvidedCapability
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleProvidedCapability_in_rulePart8132);
                    lv_providedCapabilities_4=ruleProvidedCapability();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "providedCapabilities", lv_providedCapabilities_4, "ProvidedCapability", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3422:2: ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==33) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3422:3: ',' (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    {
                    	    match(input,33,FOLLOW_33_in_rulePart8146); 

                    	            createLeafNode(grammarAccess.getPartAccess().getCommaKeyword_3_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3426:1: (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3429:6: lv_providedCapabilities_6= ruleProvidedCapability
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_rulePart8180);
                    	    lv_providedCapabilities_6=ruleProvidedCapability();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "providedCapabilities", lv_providedCapabilities_6, "ProvidedCapability", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3447:6: (lv_asserts_7= rulePreConditionAssert )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==67) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3450:6: lv_asserts_7= rulePreConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getAssertsPreConditionAssertParserRuleCall_4_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePreConditionAssert_in_rulePart8222);
                    lv_asserts_7=rulePreConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_7, "PreConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3468:3: (lv_asserts_8= rulePostConditionAssert )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==68) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3471:6: lv_asserts_8= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getAssertsPostConditionAssertParserRuleCall_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_rulePart8261);
                    lv_asserts_8=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_8, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_rulePart8275); 

                    createLeafNode(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_6(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3493:1: ( 'properties' (lv_properties_11= rulePropertyStatements ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==43) ) {
                int LA72_1 = input.LA(2);

                if ( (LA72_1==42) ) {
                    alt72=1;
                }
            }
            switch (alt72) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3493:2: 'properties' (lv_properties_11= rulePropertyStatements )
                    {
                    match(input,43,FOLLOW_43_in_rulePart8285); 

                            createLeafNode(grammarAccess.getPartAccess().getPropertiesKeyword_7_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3497:1: (lv_properties_11= rulePropertyStatements )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3500:6: lv_properties_11= rulePropertyStatements
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getPropertiesPropertyStatementsParserRuleCall_7_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePropertyStatements_in_rulePart8319);
                    lv_properties_11=rulePropertyStatements();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "properties", lv_properties_11, "PropertyStatements", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3518:4: (lv_advice_12= ruleAdvice )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==48) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3521:6: lv_advice_12= ruleAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getAdviceAdviceParserRuleCall_8_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleAdvice_in_rulePart8359);
                    lv_advice_12=ruleAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_12, "Advice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3539:3: (lv_resultGroup_13= ruleActionInputGroup )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==64) ) {
                int LA74_1 = input.LA(2);

                if ( (LA74_1==42||(LA74_1>=67 && LA74_1<=68)) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:6: lv_resultGroup_13= ruleActionInputGroup
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getResultGroupActionInputGroupParserRuleCall_9_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleActionInputGroup_in_rulePart8398);
                    lv_resultGroup_13=ruleActionInputGroup();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "resultGroup", lv_resultGroup_13, "ActionInputGroup", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3560:3: (lv_layout_14= ruleLayout )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==63) ) {
                    int LA75_2 = input.LA(2);

                    if ( (LA75_2==RULE_ID||LA75_2==42||LA75_2==68) ) {
                        alt75=1;
                    }


                }
                else if ( (LA75_0==51) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3563:6: lv_layout_14= ruleLayout
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getLayoutLayoutParserRuleCall_10_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleLayout_in_rulePart8437);
            	    lv_layout_14=ruleLayout();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "layout", lv_layout_14, "Layout", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3581:3: (lv_statements_15= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3584:6: lv_statements_15= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPartAccess().getStatementsStatementsParserRuleCall_11_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_rulePart8476);
            lv_statements_15=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPartRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_15, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_rulePart8489); 

                    createLeafNode(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_12(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePart


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3613:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleParameter_StartIndex = input.index();
        EObject iv_ruleParameter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3613:51: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3614:2: iv_ruleParameter= ruleParameter EOF
            {
             currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            pushFollow(FOLLOW_ruleParameter_in_entryRuleParameter8522);
            iv_ruleParameter=ruleParameter();
            _fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParameter8532); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3621:1: ruleParameter returns [EObject current=null] : (lv_val_0= ruleExpression ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;
        int ruleParameter_StartIndex = input.index();
        EObject lv_val_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3626:6: ( (lv_val_0= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3627:1: (lv_val_0= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3627:1: (lv_val_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3630:6: lv_val_0= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleParameter8590);
            lv_val_0=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3655:1: entryRuleLayout returns [EObject current=null] : iv_ruleLayout= ruleLayout EOF ;
    public final EObject entryRuleLayout() throws RecognitionException {
        EObject current = null;
        int entryRuleLayout_StartIndex = input.index();
        EObject iv_ruleLayout = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3655:48: (iv_ruleLayout= ruleLayout EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3656:2: iv_ruleLayout= ruleLayout EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLayoutRule(), currentNode); 
            pushFollow(FOLLOW_ruleLayout_in_entryRuleLayout8626);
            iv_ruleLayout=ruleLayout();
            _fsp--;

             current =iv_ruleLayout; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLayout8636); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLayout


    // $ANTLR start ruleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3663:1: ruleLayout returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' ) ;
    public final EObject ruleLayout() throws RecognitionException {
        EObject current = null;
        int ruleLayout_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_name_3 = null;

        EObject lv_asserts_4 = null;

        EObject lv_paths_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3668:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3669:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3669:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3669:2: ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3669:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==51) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3669:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleLayout8671); 

                            createLeafNode(grammarAccess.getLayoutAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3673:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3676:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleLayout8705);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            match(input,63,FOLLOW_63_in_ruleLayout8720); 

                    createLeafNode(grammarAccess.getLayoutAccess().getLayoutKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3698:1: (lv_name_3= ruleQualifiedName )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_ID) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3701:6: lv_name_3= ruleQualifiedName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getNameQualifiedNameParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleLayout8754);
                    lv_name_3=ruleQualifiedName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_3, "QualifiedName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3719:3: (lv_asserts_4= rulePostConditionAssert )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==68) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3722:6: lv_asserts_4= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getAssertsPostConditionAssertParserRuleCall_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleLayout8793);
                    lv_asserts_4=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_4, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleLayout8807); 

                    createLeafNode(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3744:1: (lv_paths_6= rulePathGroup )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_ID||LA79_0==RULE_STRING||LA79_0==17||LA79_0==51||(LA79_0>=59 && LA79_0<=60)) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3747:6: lv_paths_6= rulePathGroup
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getPathsPathGroupParserRuleCall_5_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePathGroup_in_ruleLayout8841);
            	    lv_paths_6=rulePathGroup();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "paths", lv_paths_6, "PathGroup", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleLayout8855); 

                    createLeafNode(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_6(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLayout


    // $ANTLR start entryRuleActionInputGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3776:1: entryRuleActionInputGroup returns [EObject current=null] : iv_ruleActionInputGroup= ruleActionInputGroup EOF ;
    public final EObject entryRuleActionInputGroup() throws RecognitionException {
        EObject current = null;
        int entryRuleActionInputGroup_StartIndex = input.index();
        EObject iv_ruleActionInputGroup = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3776:58: (iv_ruleActionInputGroup= ruleActionInputGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3777:2: iv_ruleActionInputGroup= ruleActionInputGroup EOF
            {
             currentNode = createCompositeNode(grammarAccess.getActionInputGroupRule(), currentNode); 
            pushFollow(FOLLOW_ruleActionInputGroup_in_entryRuleActionInputGroup8888);
            iv_ruleActionInputGroup=ruleActionInputGroup();
            _fsp--;

             current =iv_ruleActionInputGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleActionInputGroup8898); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleActionInputGroup


    // $ANTLR start ruleActionInputGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3784:1: ruleActionInputGroup returns [EObject current=null] : ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) ;
    public final EObject ruleActionInputGroup() throws RecognitionException {
        EObject current = null;
        int ruleActionInputGroup_StartIndex = input.index();
        EObject lv_asserts_1 = null;

        EObject lv_asserts_2 = null;

        EObject lv_prerequisites_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3789:6: ( ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3790:1: ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3790:1: ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3790:2: 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}'
            {
            match(input,64,FOLLOW_64_in_ruleActionInputGroup8932); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getGroupKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3794:1: (lv_asserts_1= rulePreConditionAssert )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==67) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3797:6: lv_asserts_1= rulePreConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getAssertsPreConditionAssertParserRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePreConditionAssert_in_ruleActionInputGroup8966);
                    lv_asserts_1=rulePreConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_1, "PreConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3815:3: (lv_asserts_2= rulePostConditionAssert )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==68) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3818:6: lv_asserts_2= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getAssertsPostConditionAssertParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleActionInputGroup9005);
                    lv_asserts_2=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_2, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleActionInputGroup9019); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getLeftCurlyBracketKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3840:1: (lv_prerequisites_4= rulePrerequisite )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_ID||LA82_0==RULE_STRING||LA82_0==42||LA82_0==51||(LA82_0>=60 && LA82_0<=61)) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3843:6: lv_prerequisites_4= rulePrerequisite
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleActionInputGroup9053);
            	    lv_prerequisites_4=rulePrerequisite();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "prerequisites", lv_prerequisites_4, "Prerequisite", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleActionInputGroup9067); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getRightCurlyBracketKeyword_5(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleActionInputGroup


    // $ANTLR start entryRuleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3872:1: entryRuleRepositoryConfiguration returns [EObject current=null] : iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF ;
    public final EObject entryRuleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;
        int entryRuleRepositoryConfiguration_StartIndex = input.index();
        EObject iv_ruleRepositoryConfiguration = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3872:65: (iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3873:2: iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRepositoryConfigurationRule(), currentNode); 
            pushFollow(FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration9100);
            iv_ruleRepositoryConfiguration=ruleRepositoryConfiguration();
            _fsp--;

             current =iv_ruleRepositoryConfiguration; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRepositoryConfiguration9110); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRepositoryConfiguration


    // $ANTLR start ruleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3880:1: ruleRepositoryConfiguration returns [EObject current=null] : ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) ;
    public final EObject ruleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;
        int ruleRepositoryConfiguration_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_location_0 = null;

        AntlrDatatypeRuleToken lv_resolverClass_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3885:6: ( ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_STRING) ) {
                alt83=1;
            }
            else if ( (LA83_0==65) ) {
                alt83=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("3886:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:3: (lv_location_0= ruleURI )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3886:3: (lv_location_0= ruleURI )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3889:6: lv_location_0= ruleURI
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleURI_in_ruleRepositoryConfiguration9170);
                    lv_location_0=ruleURI();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "location", lv_location_0, "URI", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3908:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3908:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3908:7: 'resolver' (lv_resolverClass_2= ruleQualifiedName )
                    {
                    match(input,65,FOLLOW_65_in_ruleRepositoryConfiguration9190); 

                            createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3912:1: (lv_resolverClass_2= ruleQualifiedName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3915:6: lv_resolverClass_2= ruleQualifiedName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration9224);
                    lv_resolverClass_2=ruleQualifiedName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "resolverClass", lv_resolverClass_2, "QualifiedName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3933:4: (lv_advice_3= ruleCompoundAdvice )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==42) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3936:6: lv_advice_3= ruleCompoundAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration9264);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleRepositoryConfiguration9278); 

                    createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRepositoryConfiguration


    // $ANTLR start entryRuleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3965:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;
        int entryRuleURI_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3965:44: (iv_ruleURI= ruleURI EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3966:2: iv_ruleURI= ruleURI EOF
            {
             currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); 
            pushFollow(FOLLOW_ruleURI_in_entryRuleURI9312);
            iv_ruleURI=ruleURI();
            _fsp--;

             current =iv_ruleURI.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleURI9323); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleURI


    // $ANTLR start ruleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3973:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleURI_StartIndex = input.index();
        Token this_STRING_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3979:6: (this_STRING_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3980:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleURI9362); 

            		current.merge(this_STRING_0);
                
             
                createLeafNode(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall(), null); 
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleURI


    // $ANTLR start entryRuleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3995:1: entryRuleNamedAdvice returns [EObject current=null] : iv_ruleNamedAdvice= ruleNamedAdvice EOF ;
    public final EObject entryRuleNamedAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleNamedAdvice_StartIndex = input.index();
        EObject iv_ruleNamedAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3995:53: (iv_ruleNamedAdvice= ruleNamedAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3996:2: iv_ruleNamedAdvice= ruleNamedAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNamedAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice9404);
            iv_ruleNamedAdvice=ruleNamedAdvice();
            _fsp--;

             current =iv_ruleNamedAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedAdvice9414); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedAdvice


    // $ANTLR start ruleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4003:1: ruleNamedAdvice returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) ;
    public final EObject ruleNamedAdvice() throws RecognitionException {
        EObject current = null;
        int ruleNamedAdvice_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4008:6: ( ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4009:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4009:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4009:2: (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4009:2: (lv_name_0= RULE_ID )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_ID) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4011:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedAdvice9461); 

                    		createLeafNode(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4029:3: (lv_advice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4032:6: lv_advice_1= ruleCompoundAdvice
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice9504);
            lv_advice_1=ruleCompoundAdvice();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "advice", lv_advice_1, "CompoundAdvice", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedAdvice


    // $ANTLR start entryRuleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4057:1: entryRuleAdvice returns [EObject current=null] : iv_ruleAdvice= ruleAdvice EOF ;
    public final EObject entryRuleAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvice_StartIndex = input.index();
        EObject iv_ruleAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4057:48: (iv_ruleAdvice= ruleAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4058:2: iv_ruleAdvice= ruleAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvice_in_entryRuleAdvice9541);
            iv_ruleAdvice=ruleAdvice();
            _fsp--;

             current =iv_ruleAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvice9551); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvice


    // $ANTLR start ruleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4065:1: ruleAdvice returns [EObject current=null] : ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) ;
    public final EObject ruleAdvice() throws RecognitionException {
        EObject current = null;
        int ruleAdvice_StartIndex = input.index();
        EObject this_CompoundAdvice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4070:6: ( ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4071:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4071:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4071:2: 'advice' this_CompoundAdvice_1= ruleCompoundAdvice
            {
            match(input,48,FOLLOW_48_in_ruleAdvice9585); 

                    createLeafNode(grammarAccess.getAdviceAccess().getAdviceKeyword_0(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1(), currentNode); 
                
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdvice9607);
            this_CompoundAdvice_1=ruleCompoundAdvice();
            _fsp--;

             
                    current = this_CompoundAdvice_1; 
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvice


    // $ANTLR start entryRuleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4091:1: entryRuleCompoundAdvice returns [EObject current=null] : iv_ruleCompoundAdvice= ruleCompoundAdvice EOF ;
    public final EObject entryRuleCompoundAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundAdvice_StartIndex = input.index();
        EObject iv_ruleCompoundAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4091:56: (iv_ruleCompoundAdvice= ruleCompoundAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4092:2: iv_ruleCompoundAdvice= ruleCompoundAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice9639);
            iv_ruleCompoundAdvice=ruleCompoundAdvice();
            _fsp--;

             current =iv_ruleCompoundAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundAdvice9649); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundAdvice


    // $ANTLR start ruleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:1: ruleCompoundAdvice returns [EObject current=null] : ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) ;
    public final EObject ruleCompoundAdvice() throws RecognitionException {
        EObject current = null;
        int ruleCompoundAdvice_StartIndex = input.index();
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4104:6: ( ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4105:2: '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundAdvice9683); 

                    createLeafNode(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4109:1: ( (lv_advice_1= ruleAdviceStatement ) ';' )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==RULE_ID||LA86_0==15||LA86_0==17||LA86_0==30||LA86_0==66) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4109:2: (lv_advice_1= ruleAdviceStatement ) ';'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4109:2: (lv_advice_1= ruleAdviceStatement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4112:6: lv_advice_1= ruleAdviceStatement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice9718);
            	    lv_advice_1=ruleAdviceStatement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getCompoundAdviceRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_1, "AdviceStatement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleCompoundAdvice9731); 

            	            createLeafNode(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundAdvice9742); 

                    createLeafNode(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundAdvice


    // $ANTLR start entryRuleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4145:1: entryRuleAdviceStatement returns [EObject current=null] : iv_ruleAdviceStatement= ruleAdviceStatement EOF ;
    public final EObject entryRuleAdviceStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleAdviceStatement_StartIndex = input.index();
        EObject iv_ruleAdviceStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4145:57: (iv_ruleAdviceStatement= ruleAdviceStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4146:2: iv_ruleAdviceStatement= ruleAdviceStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdviceStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement9775);
            iv_ruleAdviceStatement=ruleAdviceStatement();
            _fsp--;

             current =iv_ruleAdviceStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdviceStatement9785); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdviceStatement


    // $ANTLR start ruleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4153:1: ruleAdviceStatement returns [EObject current=null] : ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) ;
    public final EObject ruleAdviceStatement() throws RecognitionException {
        EObject current = null;
        int ruleAdviceStatement_StartIndex = input.index();
        EObject lv_path_0 = null;

        EObject lv_value_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4158:6: ( ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4159:1: ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4159:1: ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4159:2: (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4159:2: (lv_path_0= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4162:6: lv_path_0= ruleAdvicePath
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleAdviceStatement9844);
            lv_path_0=ruleAdvicePath();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "path", lv_path_0, "AdvicePath", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4180:2: ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==25) ) {
                alt87=1;
            }
            else if ( (LA87_0==42) ) {
                alt87=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("4180:2: ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4180:3: ( '=' (lv_value_2= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4180:3: ( '=' (lv_value_2= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4180:4: '=' (lv_value_2= ruleExpression )
                    {
                    match(input,25,FOLLOW_25_in_ruleAdviceStatement9859); 

                            createLeafNode(grammarAccess.getAdviceStatementAccess().getEqualsSignKeyword_1_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4184:1: (lv_value_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4187:6: lv_value_2= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleAdviceStatement9893);
                    lv_value_2=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "value", lv_value_2, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4206:6: (lv_advice_3= ruleCompoundAdvice )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4206:6: (lv_advice_3= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4209:6: lv_advice_3= ruleCompoundAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement9938);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdviceStatement


    // $ANTLR start entryRuleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4234:1: entryRuleAdvicePath returns [EObject current=null] : iv_ruleAdvicePath= ruleAdvicePath EOF ;
    public final EObject entryRuleAdvicePath() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePath_StartIndex = input.index();
        EObject iv_ruleAdvicePath = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4234:52: (iv_ruleAdvicePath= ruleAdvicePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4235:2: iv_ruleAdvicePath= ruleAdvicePath EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath9976);
            iv_ruleAdvicePath=ruleAdvicePath();
            _fsp--;

             current =iv_ruleAdvicePath; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePath9986); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePath


    // $ANTLR start ruleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4242:1: ruleAdvicePath returns [EObject current=null] : ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* ) ;
    public final EObject ruleAdvicePath() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePath_StartIndex = input.index();
        EObject lv_pathElements_0 = null;

        EObject lv_pathElements_1 = null;

        EObject lv_pathElements_2 = null;

        EObject lv_pathElement_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4247:6: ( ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4248:1: ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4248:1: ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4248:2: (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4248:2: (lv_pathElements_0= ruleAdvicePathSeparator )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==17) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4251:6: lv_pathElements_0= ruleAdvicePathSeparator
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10045);
                    lv_pathElements_0=ruleAdvicePathSeparator();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "pathElements", lv_pathElements_0, "AdvicePathSeparator", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4269:3: (lv_pathElements_1= ruleAdvicePathElement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4272:6: lv_pathElements_1= ruleAdvicePathElement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathElementParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath10084);
            lv_pathElements_1=ruleAdvicePathElement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "pathElements", lv_pathElements_1, "AdvicePathElement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4290:2: ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==17) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4290:3: (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4290:3: (lv_pathElements_2= ruleAdvicePathSeparator )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4293:6: lv_pathElements_2= ruleAdvicePathSeparator
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_2_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10123);
            	    lv_pathElements_2=ruleAdvicePathSeparator();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "pathElements", lv_pathElements_2, "AdvicePathSeparator", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4311:2: (lv_pathElement_3= ruleAdvicePathElement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4314:6: lv_pathElement_3= ruleAdvicePathElement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementAdvicePathElementParserRuleCall_2_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath10161);
            	    lv_pathElement_3=ruleAdvicePathElement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "pathElement", lv_pathElement_3, "AdvicePathElement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePath


    // $ANTLR start entryRuleAdvicePathSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4339:1: entryRuleAdvicePathSeparator returns [EObject current=null] : iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF ;
    public final EObject entryRuleAdvicePathSeparator() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathSeparator_StartIndex = input.index();
        EObject iv_ruleAdvicePathSeparator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4339:61: (iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4340:2: iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathSeparatorRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathSeparator_in_entryRuleAdvicePathSeparator10200);
            iv_ruleAdvicePathSeparator=ruleAdvicePathSeparator();
            _fsp--;

             current =iv_ruleAdvicePathSeparator; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathSeparator10210); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathSeparator


    // $ANTLR start ruleAdvicePathSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4347:1: ruleAdvicePathSeparator returns [EObject current=null] : this_AdvicePathChildren_0= ruleAdvicePathChildren ;
    public final EObject ruleAdvicePathSeparator() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathSeparator_StartIndex = input.index();
        EObject this_AdvicePathChildren_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4352:6: (this_AdvicePathChildren_0= ruleAdvicePathChildren )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4354:5: this_AdvicePathChildren_0= ruleAdvicePathChildren
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAdvicePathSeparatorAccess().getAdvicePathChildrenParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleAdvicePathChildren_in_ruleAdvicePathSeparator10256);
            this_AdvicePathChildren_0=ruleAdvicePathChildren();
            _fsp--;

             
                    current = this_AdvicePathChildren_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathSeparator


    // $ANTLR start entryRuleAdvicePathChildren
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4369:1: entryRuleAdvicePathChildren returns [EObject current=null] : iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF ;
    public final EObject entryRuleAdvicePathChildren() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathChildren_StartIndex = input.index();
        EObject iv_ruleAdvicePathChildren = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4369:60: (iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4370:2: iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathChildrenRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathChildren_in_entryRuleAdvicePathChildren10287);
            iv_ruleAdvicePathChildren=ruleAdvicePathChildren();
            _fsp--;

             current =iv_ruleAdvicePathChildren; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathChildren10297); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathChildren


    // $ANTLR start ruleAdvicePathChildren
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4377:1: ruleAdvicePathChildren returns [EObject current=null] : ( () '/' ) ;
    public final EObject ruleAdvicePathChildren() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathChildren_StartIndex = input.index();
         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4382:6: ( ( () '/' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4383:1: ( () '/' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4383:1: ( () '/' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4383:2: () '/'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4383:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4384:5: 
            {
             
                    temp=factory.create(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,17,FOLLOW_17_in_ruleAdvicePathChildren10340); 

                    createLeafNode(grammarAccess.getAdvicePathChildrenAccess().getSolidusKeyword_1(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathChildren


    // $ANTLR start entryRuleAdvicePathElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4405:1: entryRuleAdvicePathElement returns [EObject current=null] : iv_ruleAdvicePathElement= ruleAdvicePathElement EOF ;
    public final EObject entryRuleAdvicePathElement() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathElement_StartIndex = input.index();
        EObject iv_ruleAdvicePathElement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4405:59: (iv_ruleAdvicePathElement= ruleAdvicePathElement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4406:2: iv_ruleAdvicePathElement= ruleAdvicePathElement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathElementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathElement_in_entryRuleAdvicePathElement10373);
            iv_ruleAdvicePathElement=ruleAdvicePathElement();
            _fsp--;

             current =iv_ruleAdvicePathElement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathElement10383); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathElement


    // $ANTLR start ruleAdvicePathElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4413:1: ruleAdvicePathElement returns [EObject current=null] : ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) ) ;
    public final EObject ruleAdvicePathElement() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathElement_StartIndex = input.index();
        Token lv_node_0=null;
        Token lv_node_4=null;
        EObject lv_predicate_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4418:6: ( ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_ID||LA92_0==15||LA92_0==30) ) {
                alt92=1;
            }
            else if ( (LA92_0==66) ) {
                alt92=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("4419:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:2: ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:2: ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:3: (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4419:3: (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4421:6: lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4421:16: ( ruleQualifiedName | ruleWildcardNode | '.' )
                    int alt90=3;
                    switch ( input.LA(1) ) {
                    case RULE_ID:
                        {
                        alt90=1;
                        }
                        break;
                    case 30:
                        {
                        alt90=2;
                        }
                        break;
                    case 15:
                        {
                        alt90=3;
                        }
                        break;
                    default:
                        NoViableAltException nvae =
                            new NoViableAltException("4421:16: ( ruleQualifiedName | ruleWildcardNode | '.' )", 90, 0, input);

                        throw nvae;
                    }

                    switch (alt90) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4421:18: ruleQualifiedName
                            {
                             
                                    currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getNodeQualifiedNameParserRuleCall_0_0_0_0(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleQualifiedName_in_ruleAdvicePathElement10435);
                            ruleQualifiedName();
                            _fsp--;

                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4428:7: ruleWildcardNode
                            {
                             
                                    currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getNodeWildcardNodeParserRuleCall_0_0_0_1(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleWildcardNode_in_ruleAdvicePathElement10449);
                            ruleWildcardNode();
                            _fsp--;

                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;
                        case 3 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4435:6: '.'
                            {
                            match(input,15,FOLLOW_15_in_ruleAdvicePathElement10459); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getNodeFullStopKeyword_0_0_0_2(), "node"); 
                                

                            }
                            break;

                    }


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "node", /* lv_node_0 */ input.LT(-1), null, lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4455:2: ( '[' (lv_predicate_2= ruleExpression ) ']' )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==31) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4455:3: '[' (lv_predicate_2= ruleExpression ) ']'
                            {
                            match(input,31,FOLLOW_31_in_ruleAdvicePathElement10484); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getLeftSquareBracketKeyword_0_1_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4459:1: (lv_predicate_2= ruleExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4462:6: lv_predicate_2= ruleExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getPredicateExpressionParserRuleCall_0_1_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleExpression_in_ruleAdvicePathElement10518);
                            lv_predicate_2=ruleExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "predicate", lv_predicate_2, "Expression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }

                            match(input,34,FOLLOW_34_in_ruleAdvicePathElement10531); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getRightSquareBracketKeyword_0_1_2(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4485:6: (lv_node_4= '..' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4485:6: (lv_node_4= '..' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4487:6: lv_node_4= '..'
                    {
                    lv_node_4=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_ruleAdvicePathElement10561); 

                            createLeafNode(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0(), "node"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "node", /* lv_node_4 */ input.LT(-1), "..", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathElement


    // $ANTLR start entryRuleWildcardNode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4513:1: entryRuleWildcardNode returns [String current=null] : iv_ruleWildcardNode= ruleWildcardNode EOF ;
    public final String entryRuleWildcardNode() throws RecognitionException {
        String current = null;
        int entryRuleWildcardNode_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleWildcardNode = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4513:53: (iv_ruleWildcardNode= ruleWildcardNode EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4514:2: iv_ruleWildcardNode= ruleWildcardNode EOF
            {
             currentNode = createCompositeNode(grammarAccess.getWildcardNodeRule(), currentNode); 
            pushFollow(FOLLOW_ruleWildcardNode_in_entryRuleWildcardNode10608);
            iv_ruleWildcardNode=ruleWildcardNode();
            _fsp--;

             current =iv_ruleWildcardNode.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardNode10619); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWildcardNode


    // $ANTLR start ruleWildcardNode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4521:1: ruleWildcardNode returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '?' (kw= '?' )? ) ;
    public final AntlrDatatypeRuleToken ruleWildcardNode() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleWildcardNode_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4527:6: ( (kw= '?' (kw= '?' )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4528:1: (kw= '?' (kw= '?' )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4528:1: (kw= '?' (kw= '?' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4529:2: kw= '?' (kw= '?' )?
            {
            kw=(Token)input.LT(1);
            match(input,30,FOLLOW_30_in_ruleWildcardNode10657); 

                    current.merge(kw);
                    createLeafNode(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4534:1: (kw= '?' )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==30) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4535:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_ruleWildcardNode10671); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_1(), null); 
                        

                    }
                    break;

            }


            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWildcardNode


    // $ANTLR start entryRuleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4548:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;
        int entryRuleFilter_StartIndex = input.index();
        EObject iv_ruleFilter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4548:48: (iv_ruleFilter= ruleFilter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4549:2: iv_ruleFilter= ruleFilter EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFilterRule(), currentNode); 
            pushFollow(FOLLOW_ruleFilter_in_entryRuleFilter10711);
            iv_ruleFilter=ruleFilter();
            _fsp--;

             current =iv_ruleFilter; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilter10721); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilter


    // $ANTLR start ruleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4556:1: ruleFilter returns [EObject current=null] : ( '(' (lv_predicate_1= ruleExpression ) ')' ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;
        int ruleFilter_StartIndex = input.index();
        EObject lv_predicate_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4561:6: ( ( '(' (lv_predicate_1= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4562:2: '(' (lv_predicate_1= ruleExpression ) ')'
            {
            match(input,32,FOLLOW_32_in_ruleFilter10755); 

                    createLeafNode(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4566:1: (lv_predicate_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4569:6: lv_predicate_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleFilter10789);
            lv_predicate_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFilterRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "predicate", lv_predicate_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleFilter10802); 

                    createLeafNode(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilter


    // $ANTLR start entryRulePreConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:1: entryRulePreConditionAssert returns [EObject current=null] : iv_rulePreConditionAssert= rulePreConditionAssert EOF ;
    public final EObject entryRulePreConditionAssert() throws RecognitionException {
        EObject current = null;
        int entryRulePreConditionAssert_StartIndex = input.index();
        EObject iv_rulePreConditionAssert = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4598:60: (iv_rulePreConditionAssert= rulePreConditionAssert EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4599:2: iv_rulePreConditionAssert= rulePreConditionAssert EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPreConditionAssertRule(), currentNode); 
            pushFollow(FOLLOW_rulePreConditionAssert_in_entryRulePreConditionAssert10835);
            iv_rulePreConditionAssert=rulePreConditionAssert();
            _fsp--;

             current =iv_rulePreConditionAssert; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePreConditionAssert10845); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePreConditionAssert


    // $ANTLR start rulePreConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4606:1: rulePreConditionAssert returns [EObject current=null] : ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePreConditionAssert() throws RecognitionException {
        EObject current = null;
        int rulePreConditionAssert_StartIndex = input.index();
        Token lv_scope_0=null;
        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4611:6: ( ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4612:1: ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4612:1: ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4612:2: (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4612:2: (lv_scope_0= 'precondition' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4614:6: lv_scope_0= 'precondition'
            {
            lv_scope_0=(Token)input.LT(1);
            match(input,67,FOLLOW_67_in_rulePreConditionAssert10891); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0(), "scope"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPreConditionAssertRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "scope", /* lv_scope_0 */ input.LT(-1), "precondition", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,42,FOLLOW_42_in_rulePreConditionAssert10913); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4637:1: (lv_asserts_2= ruleAssertionExpression )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==69) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4640:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getPreConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePreConditionAssert10947);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getPreConditionAssertRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePreConditionAssert10961); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePreConditionAssert


    // $ANTLR start entryRulePostConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4669:1: entryRulePostConditionAssert returns [EObject current=null] : iv_rulePostConditionAssert= rulePostConditionAssert EOF ;
    public final EObject entryRulePostConditionAssert() throws RecognitionException {
        EObject current = null;
        int entryRulePostConditionAssert_StartIndex = input.index();
        EObject iv_rulePostConditionAssert = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4669:61: (iv_rulePostConditionAssert= rulePostConditionAssert EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4670:2: iv_rulePostConditionAssert= rulePostConditionAssert EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPostConditionAssertRule(), currentNode); 
            pushFollow(FOLLOW_rulePostConditionAssert_in_entryRulePostConditionAssert10994);
            iv_rulePostConditionAssert=rulePostConditionAssert();
            _fsp--;

             current =iv_rulePostConditionAssert; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePostConditionAssert11004); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostConditionAssert


    // $ANTLR start rulePostConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4677:1: rulePostConditionAssert returns [EObject current=null] : ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePostConditionAssert() throws RecognitionException {
        EObject current = null;
        int rulePostConditionAssert_StartIndex = input.index();
        Token lv_scope_0=null;
        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4682:6: ( ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4683:1: ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4683:1: ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4683:2: (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4683:2: (lv_scope_0= 'postcondition' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4685:6: lv_scope_0= 'postcondition'
            {
            lv_scope_0=(Token)input.LT(1);
            match(input,68,FOLLOW_68_in_rulePostConditionAssert11050); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0(), "scope"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPostConditionAssertRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "scope", /* lv_scope_0 */ input.LT(-1), "postcondition", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,42,FOLLOW_42_in_rulePostConditionAssert11072); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4708:1: (lv_asserts_2= ruleAssertionExpression )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==69) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4711:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getPostConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePostConditionAssert11106);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getPostConditionAssertRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePostConditionAssert11120); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostConditionAssert


    // $ANTLR start entryRuleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4740:1: entryRuleAssertionExpression returns [EObject current=null] : iv_ruleAssertionExpression= ruleAssertionExpression EOF ;
    public final EObject entryRuleAssertionExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAssertionExpression_StartIndex = input.index();
        EObject iv_ruleAssertionExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4740:61: (iv_ruleAssertionExpression= ruleAssertionExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4741:2: iv_ruleAssertionExpression= ruleAssertionExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAssertionExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression11153);
            iv_ruleAssertionExpression=ruleAssertionExpression();
            _fsp--;

             current =iv_ruleAssertionExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssertionExpression11163); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssertionExpression


    // $ANTLR start ruleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4748:1: ruleAssertionExpression returns [EObject current=null] : ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) ;
    public final EObject ruleAssertionExpression() throws RecognitionException {
        EObject current = null;
        int ruleAssertionExpression_StartIndex = input.index();
        Token lv_message_3=null;
        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4753:6: ( ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4754:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4754:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4754:2: 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';'
            {
            match(input,69,FOLLOW_69_in_ruleAssertionExpression11197); 

                    createLeafNode(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4758:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4761:6: lv_expr_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleAssertionExpression11231);
            lv_expr_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4779:2: ( ',' (lv_message_3= RULE_STRING ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==33) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4779:3: ',' (lv_message_3= RULE_STRING )
                    {
                    match(input,33,FOLLOW_33_in_ruleAssertionExpression11245); 

                            createLeafNode(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4783:1: (lv_message_3= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4785:6: lv_message_3= RULE_STRING
                    {
                    lv_message_3=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleAssertionExpression11267); 

                    		createLeafNode(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0(), "message"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "message", lv_message_3, "STRING", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleAssertionExpression11286); 

                    createLeafNode(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssertionExpression


    // $ANTLR start entryRuleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4814:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleStatement_StartIndex = input.index();
        EObject iv_ruleStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4814:51: (iv_ruleStatement= ruleStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4815:2: iv_ruleStatement= ruleStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement11319);
            iv_ruleStatement=ruleStatement();
            _fsp--;

             current =iv_ruleStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement11329); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatement


    // $ANTLR start ruleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4822:1: ruleStatement returns [EObject current=null] : (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;
        int ruleStatement_StartIndex = input.index();
        EObject this_IfStatement_0 = null;

        EObject this_SwitchStatement_1 = null;

        EObject this_WhileStatement_2 = null;

        EObject this_ForStatement_3 = null;

        EObject this_DoWhileStatement_4 = null;

        EObject this_CompoundStatement_5 = null;

        EObject this_VarExpression_6 = null;

        EObject this_BreakStatement_8 = null;

        EObject this_ContinueStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_FunctionStatement_11 = null;

        EObject this_LabelStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryCatchStatement_14 = null;

        EObject this_WithStatement_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4827:6: ( (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            int alt98=15;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt98=1;
                }
                break;
            case 73:
                {
                alt98=2;
                }
                break;
            case 72:
                {
                alt98=3;
                }
                break;
            case 76:
                {
                alt98=4;
                }
                break;
            case 78:
                {
                alt98=5;
                }
                break;
            case 42:
                {
                switch ( input.LA(2) ) {
                case RULE_INT:
                case RULE_HEX:
                case RULE_REAL:
                case RULE_REGEX:
                case 18:
                case 19:
                case 20:
                case 31:
                case 32:
                case 38:
                case 42:
                case 43:
                case 62:
                case 63:
                case 64:
                case 70:
                case 71:
                case 72:
                case 73:
                case 76:
                case 78:
                case 79:
                case 80:
                case 81:
                case 83:
                case 84:
                case 87:
                case 108:
                case 109:
                case 110:
                case 111:
                case 112:
                case 113:
                case 114:
                case 115:
                case 116:
                case 117:
                    {
                    alt98=6;
                    }
                    break;
                case RULE_STRING:
                    {
                    int LA98_17 = input.LA(3);

                    if ( (LA98_17==29) ) {
                        alt98=7;
                    }
                    else if ( (LA98_17==15||(LA98_17>=17 && LA98_17<=18)||(LA98_17>=22 && LA98_17<=28)||(LA98_17>=30 && LA98_17<=32)||LA98_17==38||(LA98_17>=53 && LA98_17<=56)||(LA98_17>=88 && LA98_17<=109)) ) {
                        alt98=6;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA98_18 = input.LA(3);

                    if ( (LA98_18==15||(LA98_18>=17 && LA98_18<=18)||(LA98_18>=22 && LA98_18<=28)||(LA98_18>=30 && LA98_18<=32)||LA98_18==38||(LA98_18>=53 && LA98_18<=56)||(LA98_18>=88 && LA98_18<=109)) ) {
                        alt98=6;
                    }
                    else if ( (LA98_18==29) ) {
                        alt98=7;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 18, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_PID:
                    {
                    int LA98_19 = input.LA(3);

                    if ( (LA98_19==29) ) {
                        alt98=7;
                    }
                    else if ( (LA98_19==15||(LA98_19>=17 && LA98_19<=18)||(LA98_19>=22 && LA98_19<=28)||(LA98_19>=30 && LA98_19<=32)||LA98_19==38||(LA98_19>=53 && LA98_19<=56)||(LA98_19>=88 && LA98_19<=109)) ) {
                        alt98=6;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 19, input);

                        throw nvae;
                    }
                    }
                    break;
                case 45:
                    {
                    alt98=7;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 6, input);

                    throw nvae;
                }

                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_HEX:
            case RULE_PID:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 18:
            case 19:
            case 31:
            case 32:
            case 38:
            case 43:
            case 63:
            case 64:
            case 87:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt98=7;
                }
                break;
            case 80:
                {
                int LA98_8 = input.LA(2);

                if ( (LA98_8==RULE_ID) ) {
                    alt98=11;
                }
                else if ( (LA98_8==32) ) {
                    alt98=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 8, input);

                    throw nvae;
                }
                }
                break;
            case 70:
                {
                alt98=8;
                }
                break;
            case 71:
                {
                alt98=9;
                }
                break;
            case 79:
                {
                alt98=10;
                }
                break;
            case 20:
                {
                alt98=12;
                }
                break;
            case 83:
                {
                alt98=13;
                }
                break;
            case 84:
                {
                alt98=14;
                }
                break;
            case 62:
                {
                alt98=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("4828:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 98, 0, input);

                throw nvae;
            }

            switch (alt98) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4829:5: this_IfStatement_0= ruleIfStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleIfStatement_in_ruleStatement11376);
                    this_IfStatement_0=ruleIfStatement();
                    _fsp--;

                     
                            current = this_IfStatement_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4839:5: this_SwitchStatement_1= ruleSwitchStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleSwitchStatement_in_ruleStatement11403);
                    this_SwitchStatement_1=ruleSwitchStatement();
                    _fsp--;

                     
                            current = this_SwitchStatement_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:5: this_WhileStatement_2= ruleWhileStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleWhileStatement_in_ruleStatement11430);
                    this_WhileStatement_2=ruleWhileStatement();
                    _fsp--;

                     
                            current = this_WhileStatement_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4859:5: this_ForStatement_3= ruleForStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleForStatement_in_ruleStatement11457);
                    this_ForStatement_3=ruleForStatement();
                    _fsp--;

                     
                            current = this_ForStatement_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4869:5: this_DoWhileStatement_4= ruleDoWhileStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getDoWhileStatementParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleDoWhileStatement_in_ruleStatement11484);
                    this_DoWhileStatement_4=ruleDoWhileStatement();
                    _fsp--;

                     
                            current = this_DoWhileStatement_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4879:5: this_CompoundStatement_5= ruleCompoundStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_5(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundStatement_in_ruleStatement11511);
                    this_CompoundStatement_5=ruleCompoundStatement();
                    _fsp--;

                     
                            current = this_CompoundStatement_5; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4888:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4888:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4888:7: (this_VarExpression_6= ruleVarExpression )? ';'
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4888:7: (this_VarExpression_6= ruleVarExpression )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( ((LA97_0>=RULE_ID && LA97_0<=RULE_REGEX)||(LA97_0>=18 && LA97_0<=19)||(LA97_0>=31 && LA97_0<=32)||(LA97_0>=42 && LA97_0<=43)||(LA97_0>=63 && LA97_0<=64)||LA97_0==80||LA97_0==87||(LA97_0>=108 && LA97_0<=117)) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4889:5: this_VarExpression_6= ruleVarExpression
                            {
                             
                                    currentNode=createCompositeNode(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_6_0(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleVarExpression_in_ruleStatement11540);
                            this_VarExpression_6=ruleVarExpression();
                            _fsp--;

                             
                                    current = this_VarExpression_6; 
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_ruleStatement11550); 

                            createLeafNode(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1(), null); 
                        

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4903:5: this_BreakStatement_8= ruleBreakStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_7(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleBreakStatement_in_ruleStatement11579);
                    this_BreakStatement_8=ruleBreakStatement();
                    _fsp--;

                     
                            current = this_BreakStatement_8; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4913:5: this_ContinueStatement_9= ruleContinueStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_8(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleContinueStatement_in_ruleStatement11606);
                    this_ContinueStatement_9=ruleContinueStatement();
                    _fsp--;

                     
                            current = this_ContinueStatement_9; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4923:5: this_ReturnStatement_10= ruleReturnStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_9(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleReturnStatement_in_ruleStatement11633);
                    this_ReturnStatement_10=ruleReturnStatement();
                    _fsp--;

                     
                            current = this_ReturnStatement_10; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4933:5: this_FunctionStatement_11= ruleFunctionStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getFunctionStatementParserRuleCall_10(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleFunctionStatement_in_ruleStatement11660);
                    this_FunctionStatement_11=ruleFunctionStatement();
                    _fsp--;

                     
                            current = this_FunctionStatement_11; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4943:5: this_LabelStatement_12= ruleLabelStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getLabelStatementParserRuleCall_11(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLabelStatement_in_ruleStatement11687);
                    this_LabelStatement_12=ruleLabelStatement();
                    _fsp--;

                     
                            current = this_LabelStatement_12; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4953:5: this_ThrowStatement_13= ruleThrowStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_12(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleThrowStatement_in_ruleStatement11714);
                    this_ThrowStatement_13=ruleThrowStatement();
                    _fsp--;

                     
                            current = this_ThrowStatement_13; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4963:5: this_TryCatchStatement_14= ruleTryCatchStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getTryCatchStatementParserRuleCall_13(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleTryCatchStatement_in_ruleStatement11741);
                    this_TryCatchStatement_14=ruleTryCatchStatement();
                    _fsp--;

                     
                            current = this_TryCatchStatement_14; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 15 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4973:5: this_WithStatement_15= ruleWithStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWithStatementParserRuleCall_14(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleWithStatement_in_ruleStatement11768);
                    this_WithStatement_15=ruleWithStatement();
                    _fsp--;

                     
                            current = this_WithStatement_15; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatement


    // $ANTLR start entryRuleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4988:1: entryRuleBreakStatement returns [EObject current=null] : iv_ruleBreakStatement= ruleBreakStatement EOF ;
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleBreakStatement_StartIndex = input.index();
        EObject iv_ruleBreakStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4988:56: (iv_ruleBreakStatement= ruleBreakStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4989:2: iv_ruleBreakStatement= ruleBreakStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBreakStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement11800);
            iv_ruleBreakStatement=ruleBreakStatement();
            _fsp--;

             current =iv_ruleBreakStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBreakStatement11810); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBreakStatement


    // $ANTLR start ruleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4996:1: ruleBreakStatement returns [EObject current=null] : ( () 'break' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;
        int ruleBreakStatement_StartIndex = input.index();
        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5001:6: ( ( () 'break' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5002:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5002:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5002:2: () 'break' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5002:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5003:5: 
            {
             
                    temp=factory.create(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,70,FOLLOW_70_in_ruleBreakStatement11853); 

                    createLeafNode(grammarAccess.getBreakStatementAccess().getBreakKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5017:1: (lv_label_2= RULE_ID )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_ID) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5019:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleBreakStatement11875); 

                    		createLeafNode(grammarAccess.getBreakStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getBreakStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleBreakStatement11893); 

                    createLeafNode(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBreakStatement


    // $ANTLR start entryRuleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5048:1: entryRuleContinueStatement returns [EObject current=null] : iv_ruleContinueStatement= ruleContinueStatement EOF ;
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleContinueStatement_StartIndex = input.index();
        EObject iv_ruleContinueStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5048:59: (iv_ruleContinueStatement= ruleContinueStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5049:2: iv_ruleContinueStatement= ruleContinueStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getContinueStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement11926);
            iv_ruleContinueStatement=ruleContinueStatement();
            _fsp--;

             current =iv_ruleContinueStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleContinueStatement11936); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleContinueStatement


    // $ANTLR start ruleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5056:1: ruleContinueStatement returns [EObject current=null] : ( () 'continue' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;
        int ruleContinueStatement_StartIndex = input.index();
        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5061:6: ( ( () 'continue' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5062:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5062:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5062:2: () 'continue' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5062:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5063:5: 
            {
             
                    temp=factory.create(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,71,FOLLOW_71_in_ruleContinueStatement11979); 

                    createLeafNode(grammarAccess.getContinueStatementAccess().getContinueKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5077:1: (lv_label_2= RULE_ID )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_ID) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5079:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleContinueStatement12001); 

                    		createLeafNode(grammarAccess.getContinueStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getContinueStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleContinueStatement12019); 

                    createLeafNode(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleContinueStatement


    // $ANTLR start entryRuleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5108:1: entryRuleCompoundStatement returns [EObject current=null] : iv_ruleCompoundStatement= ruleCompoundStatement EOF ;
    public final EObject entryRuleCompoundStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundStatement_StartIndex = input.index();
        EObject iv_ruleCompoundStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5108:59: (iv_ruleCompoundStatement= ruleCompoundStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5109:2: iv_ruleCompoundStatement= ruleCompoundStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12052);
            iv_ruleCompoundStatement=ruleCompoundStatement();
            _fsp--;

             current =iv_ruleCompoundStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundStatement12062); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundStatement


    // $ANTLR start ruleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5116:1: ruleCompoundStatement returns [EObject current=null] : ( '{' (lv_statements_1= ruleStatements ) '}' ) ;
    public final EObject ruleCompoundStatement() throws RecognitionException {
        EObject current = null;
        int ruleCompoundStatement_StartIndex = input.index();
        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5121:6: ( ( '{' (lv_statements_1= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5122:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5122:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5122:2: '{' (lv_statements_1= ruleStatements ) '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundStatement12096); 

                    createLeafNode(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5126:1: (lv_statements_1= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5129:6: lv_statements_1= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_ruleCompoundStatement12130);
            lv_statements_1=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCompoundStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_1, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_ruleCompoundStatement12143); 

                    createLeafNode(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundStatement


    // $ANTLR start entryRuleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5158:1: entryRuleStatements returns [EObject current=null] : iv_ruleStatements= ruleStatements EOF ;
    public final EObject entryRuleStatements() throws RecognitionException {
        EObject current = null;
        int entryRuleStatements_StartIndex = input.index();
        EObject iv_ruleStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5158:52: (iv_ruleStatements= ruleStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5159:2: iv_ruleStatements= ruleStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStatementsRule(), currentNode); 
            pushFollow(FOLLOW_ruleStatements_in_entryRuleStatements12176);
            iv_ruleStatements=ruleStatements();
            _fsp--;

             current =iv_ruleStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatements12186); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatements


    // $ANTLR start ruleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5166:1: ruleStatements returns [EObject current=null] : (lv_statements_0= ruleStatement )+ ;
    public final EObject ruleStatements() throws RecognitionException {
        EObject current = null;
        int ruleStatements_StartIndex = input.index();
        EObject lv_statements_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5171:6: ( (lv_statements_0= ruleStatement )+ )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5172:1: (lv_statements_0= ruleStatement )+
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5172:1: (lv_statements_0= ruleStatement )+
            int cnt101=0;
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_REGEX)||(LA101_0>=18 && LA101_0<=20)||(LA101_0>=31 && LA101_0<=32)||LA101_0==38||(LA101_0>=42 && LA101_0<=43)||(LA101_0>=62 && LA101_0<=64)||(LA101_0>=70 && LA101_0<=73)||LA101_0==76||(LA101_0>=78 && LA101_0<=81)||(LA101_0>=83 && LA101_0<=84)||LA101_0==87||(LA101_0>=108 && LA101_0<=117)) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5175:6: lv_statements_0= ruleStatement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleStatement_in_ruleStatements12244);
            	    lv_statements_0=ruleStatement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getStatementsRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "statements", lv_statements_0, "Statement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    if ( cnt101 >= 1 ) break loop101;
                        EarlyExitException eee =
                            new EarlyExitException(101, input);
                        throw eee;
                }
                cnt101++;
            } while (true);


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatements


    // $ANTLR start entryRuleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5200:1: entryRuleWhileStatement returns [EObject current=null] : iv_ruleWhileStatement= ruleWhileStatement EOF ;
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleWhileStatement_StartIndex = input.index();
        EObject iv_ruleWhileStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5200:56: (iv_ruleWhileStatement= ruleWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5201:2: iv_ruleWhileStatement= ruleWhileStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getWhileStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12281);
            iv_ruleWhileStatement=ruleWhileStatement();
            _fsp--;

             current =iv_ruleWhileStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWhileStatement12291); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWhileStatement


    // $ANTLR start ruleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5208:1: ruleWhileStatement returns [EObject current=null] : ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) ;
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;
        int ruleWhileStatement_StartIndex = input.index();
        EObject lv_condition_2 = null;

        EObject lv_body_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5213:6: ( ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5214:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5214:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5214:2: 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement )
            {
            match(input,72,FOLLOW_72_in_ruleWhileStatement12325); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getWhileKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleWhileStatement12334); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5222:1: (lv_condition_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5225:6: lv_condition_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleWhileStatement12368);
            lv_condition_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "condition", lv_condition_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleWhileStatement12381); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5247:1: (lv_body_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5250:6: lv_body_4= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleWhileStatement12415);
            lv_body_4=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_4, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWhileStatement


    // $ANTLR start entryRuleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5275:1: entryRuleSwitchStatement returns [EObject current=null] : iv_ruleSwitchStatement= ruleSwitchStatement EOF ;
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleSwitchStatement_StartIndex = input.index();
        EObject iv_ruleSwitchStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5275:57: (iv_ruleSwitchStatement= ruleSwitchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5276:2: iv_ruleSwitchStatement= ruleSwitchStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSwitchStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement12452);
            iv_ruleSwitchStatement=ruleSwitchStatement();
            _fsp--;

             current =iv_ruleSwitchStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitchStatement12462); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSwitchStatement


    // $ANTLR start ruleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5283:1: ruleSwitchStatement returns [EObject current=null] : ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) ;
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;
        int ruleSwitchStatement_StartIndex = input.index();
        EObject lv_switchExpr_2 = null;

        EObject lv_case_5 = null;

        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5288:6: ( ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5289:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5289:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5289:2: 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}'
            {
            match(input,73,FOLLOW_73_in_ruleSwitchStatement12496); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleSwitchStatement12505); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5297:1: (lv_switchExpr_2= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5300:6: lv_switchExpr_2= ruleVarExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleVarExpression_in_ruleSwitchStatement12539);
            lv_switchExpr_2=ruleVarExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "switchExpr", lv_switchExpr_2, "VarExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleSwitchStatement12552); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            match(input,42,FOLLOW_42_in_ruleSwitchStatement12561); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5326:1: (lv_case_5= ruleCase )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==75) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5329:6: lv_case_5= ruleCase
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleCase_in_ruleSwitchStatement12595);
            	    lv_case_5=ruleCase();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "case", lv_case_5, "Case", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5347:3: ( 'default' ':' (lv_statements_8= ruleStatements )? )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==74) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5347:4: 'default' ':' (lv_statements_8= ruleStatements )?
                    {
                    match(input,74,FOLLOW_74_in_ruleSwitchStatement12610); 

                            createLeafNode(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0(), null); 
                        
                    match(input,29,FOLLOW_29_in_ruleSwitchStatement12619); 

                            createLeafNode(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5355:1: (lv_statements_8= ruleStatements )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( ((LA103_0>=RULE_ID && LA103_0<=RULE_REGEX)||(LA103_0>=18 && LA103_0<=20)||(LA103_0>=31 && LA103_0<=32)||LA103_0==38||(LA103_0>=42 && LA103_0<=43)||(LA103_0>=62 && LA103_0<=64)||(LA103_0>=70 && LA103_0<=73)||LA103_0==76||(LA103_0>=78 && LA103_0<=81)||(LA103_0>=83 && LA103_0<=84)||LA103_0==87||(LA103_0>=108 && LA103_0<=117)) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5358:6: lv_statements_8= ruleStatements
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleStatements_in_ruleSwitchStatement12653);
                            lv_statements_8=ruleStatements();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleSwitchStatement12669); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSwitchStatement


    // $ANTLR start entryRuleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5387:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;
        int entryRuleCase_StartIndex = input.index();
        EObject iv_ruleCase = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5387:46: (iv_ruleCase= ruleCase EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5388:2: iv_ruleCase= ruleCase EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCaseRule(), currentNode); 
            pushFollow(FOLLOW_ruleCase_in_entryRuleCase12702);
            iv_ruleCase=ruleCase();
            _fsp--;

             current =iv_ruleCase; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCase12712); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCase


    // $ANTLR start ruleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5395:1: ruleCase returns [EObject current=null] : ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;
        int ruleCase_StartIndex = input.index();
        EObject lv_condition_1 = null;

        EObject lv_statements_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5400:6: ( ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5401:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5401:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5401:2: 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )?
            {
            match(input,75,FOLLOW_75_in_ruleCase12746); 

                    createLeafNode(grammarAccess.getCaseAccess().getCaseKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5405:1: (lv_condition_1= ruleValueLiteral )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5408:6: lv_condition_1= ruleValueLiteral
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleValueLiteral_in_ruleCase12780);
            lv_condition_1=ruleValueLiteral();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "condition", lv_condition_1, "ValueLiteral", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,29,FOLLOW_29_in_ruleCase12793); 

                    createLeafNode(grammarAccess.getCaseAccess().getColonKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5430:1: (lv_statements_3= ruleStatements )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_ID && LA105_0<=RULE_REGEX)||(LA105_0>=18 && LA105_0<=20)||(LA105_0>=31 && LA105_0<=32)||LA105_0==38||(LA105_0>=42 && LA105_0<=43)||(LA105_0>=62 && LA105_0<=64)||(LA105_0>=70 && LA105_0<=73)||LA105_0==76||(LA105_0>=78 && LA105_0<=81)||(LA105_0>=83 && LA105_0<=84)||LA105_0==87||(LA105_0>=108 && LA105_0<=117)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5433:6: lv_statements_3= ruleStatements
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getStatementsStatementsParserRuleCall_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleStatements_in_ruleCase12827);
                    lv_statements_3=ruleStatements();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "statements", lv_statements_3, "Statements", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCase


    // $ANTLR start entryRuleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5458:1: entryRuleForStatement returns [EObject current=null] : iv_ruleForStatement= ruleForStatement EOF ;
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleForStatement_StartIndex = input.index();
        EObject iv_ruleForStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5458:54: (iv_ruleForStatement= ruleForStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5459:2: iv_ruleForStatement= ruleForStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getForStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleForStatement_in_entryRuleForStatement12865);
            iv_ruleForStatement=ruleForStatement();
            _fsp--;

             current =iv_ruleForStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleForStatement12875); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleForStatement


    // $ANTLR start ruleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5466:1: ruleForStatement returns [EObject current=null] : ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) ;
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;
        int ruleForStatement_StartIndex = input.index();
        Token lv_inLoop_8=null;
        EObject lv_init_3 = null;

        EObject lv_cond_5 = null;

        EObject lv_iterate_7 = null;

        EObject lv_iterate_9 = null;

        EObject lv_body_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5471:6: ( ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5472:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5472:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5472:2: () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5472:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5473:5: 
            {
             
                    temp=factory.create(grammarAccess.getForStatementAccess().getForStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getForStatementAccess().getForStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,76,FOLLOW_76_in_ruleForStatement12918); 

                    createLeafNode(grammarAccess.getForStatementAccess().getForKeyword_1(), null); 
                
            match(input,32,FOLLOW_32_in_ruleForStatement12927); 

                    createLeafNode(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5491:1: (lv_init_3= ruleVarExpressionList )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( ((LA106_0>=RULE_ID && LA106_0<=RULE_REGEX)||(LA106_0>=18 && LA106_0<=19)||(LA106_0>=31 && LA106_0<=32)||(LA106_0>=42 && LA106_0<=43)||(LA106_0>=63 && LA106_0<=64)||LA106_0==80||LA106_0==87||(LA106_0>=108 && LA106_0<=117)) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5494:6: lv_init_3= ruleVarExpressionList
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVarExpressionList_in_ruleForStatement12961);
                    lv_init_3=ruleVarExpressionList();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "init", lv_init_3, "VarExpressionList", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5512:3: ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==38) ) {
                alt109=1;
            }
            else if ( (LA109_0==77) ) {
                alt109=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("5512:3: ( ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) ) )", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5512:4: ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5512:4: ( ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5512:5: ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )?
                    {
                    match(input,38,FOLLOW_38_in_ruleForStatement12977); 

                            createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_4_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5516:1: (lv_cond_5= ruleExpression )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( ((LA107_0>=RULE_ID && LA107_0<=RULE_REGEX)||(LA107_0>=18 && LA107_0<=19)||(LA107_0>=31 && LA107_0<=32)||(LA107_0>=42 && LA107_0<=43)||(LA107_0>=63 && LA107_0<=64)||LA107_0==80||(LA107_0>=108 && LA107_0<=117)) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5519:6: lv_cond_5= ruleExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_4_0_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleExpression_in_ruleForStatement13011);
                            lv_cond_5=ruleExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "cond", lv_cond_5, "Expression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_ruleForStatement13025); 

                            createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_4_0_2(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5541:1: (lv_iterate_7= ruleExpressionList )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( ((LA108_0>=RULE_ID && LA108_0<=RULE_REGEX)||(LA108_0>=18 && LA108_0<=19)||(LA108_0>=31 && LA108_0<=32)||(LA108_0>=42 && LA108_0<=43)||(LA108_0>=63 && LA108_0<=64)||LA108_0==80||(LA108_0>=108 && LA108_0<=117)) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5544:6: lv_iterate_7= ruleExpressionList
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_4_0_3_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleExpressionList_in_ruleForStatement13059);
                            lv_iterate_7=ruleExpressionList();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "iterate", lv_iterate_7, "ExpressionList", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5563:6: ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5563:6: ( (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5563:7: (lv_inLoop_8= 'in' ) (lv_iterate_9= ruleExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5563:7: (lv_inLoop_8= 'in' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5565:6: lv_inLoop_8= 'in'
                    {
                    lv_inLoop_8=(Token)input.LT(1);
                    match(input,77,FOLLOW_77_in_ruleForStatement13093); 

                            createLeafNode(grammarAccess.getForStatementAccess().getInLoopInKeyword_4_1_0_0(), "inLoop"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "inLoop", true, "in", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5584:2: (lv_iterate_9= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5587:6: lv_iterate_9= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionParserRuleCall_4_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleForStatement13140);
                    lv_iterate_9=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "iterate", lv_iterate_9, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleForStatement13155); 

                    createLeafNode(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_5(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5609:1: (lv_body_11= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5612:6: lv_body_11= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_6_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleForStatement13189);
            lv_body_11=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_11, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleForStatement


    // $ANTLR start entryRuleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5637:1: entryRuleDoWhileStatement returns [EObject current=null] : iv_ruleDoWhileStatement= ruleDoWhileStatement EOF ;
    public final EObject entryRuleDoWhileStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleDoWhileStatement_StartIndex = input.index();
        EObject iv_ruleDoWhileStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5637:58: (iv_ruleDoWhileStatement= ruleDoWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5638:2: iv_ruleDoWhileStatement= ruleDoWhileStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getDoWhileStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement13226);
            iv_ruleDoWhileStatement=ruleDoWhileStatement();
            _fsp--;

             current =iv_ruleDoWhileStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleDoWhileStatement13236); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDoWhileStatement


    // $ANTLR start ruleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5645:1: ruleDoWhileStatement returns [EObject current=null] : ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) ;
    public final EObject ruleDoWhileStatement() throws RecognitionException {
        EObject current = null;
        int ruleDoWhileStatement_StartIndex = input.index();
        EObject lv_statement_1 = null;

        EObject lv_condition_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5650:6: ( ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5651:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5651:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5651:2: 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';'
            {
            match(input,78,FOLLOW_78_in_ruleDoWhileStatement13270); 

                    createLeafNode(grammarAccess.getDoWhileStatementAccess().getDoKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5655:1: (lv_statement_1= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5658:6: lv_statement_1= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getStatementStatementParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleDoWhileStatement13304);
            lv_statement_1=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statement", lv_statement_1, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,72,FOLLOW_72_in_ruleDoWhileStatement13317); 

                    createLeafNode(grammarAccess.getDoWhileStatementAccess().getWhileKeyword_2(), null); 
                
            match(input,32,FOLLOW_32_in_ruleDoWhileStatement13326); 

                    createLeafNode(grammarAccess.getDoWhileStatementAccess().getLeftParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5684:1: (lv_condition_4= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5687:6: lv_condition_4= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getConditionExpressionParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleDoWhileStatement13360);
            lv_condition_4=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "condition", lv_condition_4, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleDoWhileStatement13373); 

                    createLeafNode(grammarAccess.getDoWhileStatementAccess().getRightParenthesisKeyword_5(), null); 
                
            match(input,38,FOLLOW_38_in_ruleDoWhileStatement13382); 

                    createLeafNode(grammarAccess.getDoWhileStatementAccess().getSemicolonKeyword_6(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDoWhileStatement


    // $ANTLR start entryRuleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5720:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleReturnStatement_StartIndex = input.index();
        EObject iv_ruleReturnStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5720:57: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5721:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getReturnStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13415);
            iv_ruleReturnStatement=ruleReturnStatement();
            _fsp--;

             current =iv_ruleReturnStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStatement13425); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleReturnStatement


    // $ANTLR start ruleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5728:1: ruleReturnStatement returns [EObject current=null] : ( 'return' (lv_return_1= ruleExpression ) ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;
        int ruleReturnStatement_StartIndex = input.index();
        EObject lv_return_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5733:6: ( ( 'return' (lv_return_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:2: 'return' (lv_return_1= ruleExpression ) ';'
            {
            match(input,79,FOLLOW_79_in_ruleReturnStatement13459); 

                    createLeafNode(grammarAccess.getReturnStatementAccess().getReturnKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5738:1: (lv_return_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5741:6: lv_return_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleReturnStatement13493);
            lv_return_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getReturnStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "return", lv_return_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleReturnStatement13506); 

                    createLeafNode(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleReturnStatement


    // $ANTLR start entryRuleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5770:1: entryRuleFunctionStatement returns [EObject current=null] : iv_ruleFunctionStatement= ruleFunctionStatement EOF ;
    public final EObject entryRuleFunctionStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleFunctionStatement_StartIndex = input.index();
        EObject iv_ruleFunctionStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5770:59: (iv_ruleFunctionStatement= ruleFunctionStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5771:2: iv_ruleFunctionStatement= ruleFunctionStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFunctionStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement13539);
            iv_ruleFunctionStatement=ruleFunctionStatement();
            _fsp--;

             current =iv_ruleFunctionStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFunctionStatement13549); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFunctionStatement


    // $ANTLR start ruleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5778:1: ruleFunctionStatement returns [EObject current=null] : ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) ;
    public final EObject ruleFunctionStatement() throws RecognitionException {
        EObject current = null;
        int ruleFunctionStatement_StartIndex = input.index();
        Token lv_name_1=null;
        Token lv_params_3=null;
        Token lv_params_5=null;
        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5783:6: ( ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5784:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5784:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5784:2: 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}'
            {
            match(input,80,FOLLOW_80_in_ruleFunctionStatement13583); 

                    createLeafNode(grammarAccess.getFunctionStatementAccess().getFunctionKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5788:1: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5790:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement13605); 

            		createLeafNode(grammarAccess.getFunctionStatementAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,32,FOLLOW_32_in_ruleFunctionStatement13622); 

                    createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftParenthesisKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5812:1: ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5812:2: (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5812:2: (lv_params_3= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5814:6: lv_params_3= RULE_ID
            {
            lv_params_3=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement13645); 

            		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_0_0(), "params"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		add(current, "params", lv_params_3, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5832:2: ( ',' (lv_params_5= RULE_ID ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==33) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5832:3: ',' (lv_params_5= RULE_ID )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleFunctionStatement13663); 

            	            createLeafNode(grammarAccess.getFunctionStatementAccess().getCommaKeyword_3_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5836:1: (lv_params_5= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5838:6: lv_params_5= RULE_ID
            	    {
            	    lv_params_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement13685); 

            	    		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_1_1_0(), "params"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_5, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }

            match(input,35,FOLLOW_35_in_ruleFunctionStatement13705); 

                    createLeafNode(grammarAccess.getFunctionStatementAccess().getRightParenthesisKeyword_4(), null); 
                
            match(input,42,FOLLOW_42_in_ruleFunctionStatement13714); 

                    createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftCurlyBracketKeyword_5(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5864:1: (lv_statements_8= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5867:6: lv_statements_8= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getFunctionStatementAccess().getStatementsStatementsParserRuleCall_6_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_ruleFunctionStatement13748);
            lv_statements_8=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_ruleFunctionStatement13761); 

                    createLeafNode(grammarAccess.getFunctionStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFunctionStatement


    // $ANTLR start entryRuleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5896:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleIfStatement_StartIndex = input.index();
        EObject iv_ruleIfStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5896:53: (iv_ruleIfStatement= ruleIfStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5897:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getIfStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleIfStatement_in_entryRuleIfStatement13794);
            iv_ruleIfStatement=ruleIfStatement();
            _fsp--;

             current =iv_ruleIfStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfStatement13804); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfStatement


    // $ANTLR start ruleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5904:1: ruleIfStatement returns [EObject current=null] : ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;
        int ruleIfStatement_StartIndex = input.index();
        EObject lv_cond_2 = null;

        EObject lv_then_4 = null;

        EObject lv_else_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5909:6: ( ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5910:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5910:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5910:2: 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )?
            {
            match(input,81,FOLLOW_81_in_ruleIfStatement13838); 

                    createLeafNode(grammarAccess.getIfStatementAccess().getIfKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleIfStatement13847); 

                    createLeafNode(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5918:1: (lv_cond_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5921:6: lv_cond_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getCondExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleIfStatement13881);
            lv_cond_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "cond", lv_cond_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleIfStatement13894); 

                    createLeafNode(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5943:1: (lv_then_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5946:6: lv_then_4= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement13928);
            lv_then_4=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "then", lv_then_4, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5964:2: ( 'else' (lv_else_6= ruleStatement ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==82) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5964:3: 'else' (lv_else_6= ruleStatement )
                    {
                    match(input,82,FOLLOW_82_in_ruleIfStatement13942); 

                            createLeafNode(grammarAccess.getIfStatementAccess().getElseKeyword_5_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5968:1: (lv_else_6= ruleStatement )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5971:6: lv_else_6= ruleStatement
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement13976);
                    lv_else_6=ruleStatement();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "else", lv_else_6, "Statement", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfStatement


    // $ANTLR start entryRuleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5996:1: entryRuleLabelStatement returns [EObject current=null] : iv_ruleLabelStatement= ruleLabelStatement EOF ;
    public final EObject entryRuleLabelStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleLabelStatement_StartIndex = input.index();
        EObject iv_ruleLabelStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5996:56: (iv_ruleLabelStatement= ruleLabelStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5997:2: iv_ruleLabelStatement= ruleLabelStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLabelStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement14015);
            iv_ruleLabelStatement=ruleLabelStatement();
            _fsp--;

             current =iv_ruleLabelStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabelStatement14025); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLabelStatement


    // $ANTLR start ruleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6004:1: ruleLabelStatement returns [EObject current=null] : ( '@' (lv_name_1= RULE_ID ) ':' (lv_statement_3= ruleStatement ) ) ;
    public final EObject ruleLabelStatement() throws RecognitionException {
        EObject current = null;
        int ruleLabelStatement_StartIndex = input.index();
        Token lv_name_1=null;
        EObject lv_statement_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6009:6: ( ( '@' (lv_name_1= RULE_ID ) ':' (lv_statement_3= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6010:1: ( '@' (lv_name_1= RULE_ID ) ':' (lv_statement_3= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6010:1: ( '@' (lv_name_1= RULE_ID ) ':' (lv_statement_3= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6010:2: '@' (lv_name_1= RULE_ID ) ':' (lv_statement_3= ruleStatement )
            {
            match(input,20,FOLLOW_20_in_ruleLabelStatement14059); 

                    createLeafNode(grammarAccess.getLabelStatementAccess().getCommercialAtKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6014:1: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6016:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLabelStatement14081); 

            		createLeafNode(grammarAccess.getLabelStatementAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,29,FOLLOW_29_in_ruleLabelStatement14098); 

                    createLeafNode(grammarAccess.getLabelStatementAccess().getColonKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6038:1: (lv_statement_3= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6041:6: lv_statement_3= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getLabelStatementAccess().getStatementStatementParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleLabelStatement14132);
            lv_statement_3=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statement", lv_statement_3, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLabelStatement


    // $ANTLR start entryRuleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6066:1: entryRuleThrowStatement returns [EObject current=null] : iv_ruleThrowStatement= ruleThrowStatement EOF ;
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleThrowStatement_StartIndex = input.index();
        EObject iv_ruleThrowStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6066:56: (iv_ruleThrowStatement= ruleThrowStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6067:2: iv_ruleThrowStatement= ruleThrowStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getThrowStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement14169);
            iv_ruleThrowStatement=ruleThrowStatement();
            _fsp--;

             current =iv_ruleThrowStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleThrowStatement14179); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleThrowStatement


    // $ANTLR start ruleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6074:1: ruleThrowStatement returns [EObject current=null] : ( 'throw' (lv_expr_1= ruleExpression ) ';' ) ;
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;
        int ruleThrowStatement_StartIndex = input.index();
        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6079:6: ( ( 'throw' (lv_expr_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6080:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6080:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6080:2: 'throw' (lv_expr_1= ruleExpression ) ';'
            {
            match(input,83,FOLLOW_83_in_ruleThrowStatement14213); 

                    createLeafNode(grammarAccess.getThrowStatementAccess().getThrowKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6084:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6087:6: lv_expr_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getThrowStatementAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleThrowStatement14247);
            lv_expr_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getThrowStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleThrowStatement14260); 

                    createLeafNode(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleThrowStatement


    // $ANTLR start entryRuleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6116:1: entryRuleTryCatchStatement returns [EObject current=null] : iv_ruleTryCatchStatement= ruleTryCatchStatement EOF ;
    public final EObject entryRuleTryCatchStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleTryCatchStatement_StartIndex = input.index();
        EObject iv_ruleTryCatchStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6116:59: (iv_ruleTryCatchStatement= ruleTryCatchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6117:2: iv_ruleTryCatchStatement= ruleTryCatchStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getTryCatchStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement14293);
            iv_ruleTryCatchStatement=ruleTryCatchStatement();
            _fsp--;

             current =iv_ruleTryCatchStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleTryCatchStatement14303); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleTryCatchStatement


    // $ANTLR start ruleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6124:1: ruleTryCatchStatement returns [EObject current=null] : ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) ;
    public final EObject ruleTryCatchStatement() throws RecognitionException {
        EObject current = null;
        int ruleTryCatchStatement_StartIndex = input.index();
        EObject lv_tryBlock_1 = null;

        EObject lv_catchBlock_2 = null;

        EObject lv_finallyBlock_3 = null;

        EObject lv_finally_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6129:6: ( ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6130:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6130:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6130:2: 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            {
            match(input,84,FOLLOW_84_in_ruleTryCatchStatement14337); 

                    createLeafNode(grammarAccess.getTryCatchStatementAccess().getTryKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6134:1: (lv_tryBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6137:6: lv_tryBlock_1= ruleCompoundStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getTryBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement14371);
            lv_tryBlock_1=ruleCompoundStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "tryBlock", lv_tryBlock_1, "CompoundStatement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==85) ) {
                alt113=1;
            }
            else if ( (LA113_0==86) ) {
                alt113=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("6155:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:4: (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:4: (lv_catchBlock_2= ruleCatchBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6158:6: lv_catchBlock_2= ruleCatchBlock
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getCatchBlockCatchBlockParserRuleCall_2_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement14411);
                    lv_catchBlock_2=ruleCatchBlock();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "catchBlock", lv_catchBlock_2, "CatchBlock", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6176:2: (lv_finallyBlock_3= ruleFinallyBlock )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==86) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6179:6: lv_finallyBlock_3= ruleFinallyBlock
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyBlockFinallyBlockParserRuleCall_2_0_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14449);
                            lv_finallyBlock_3=ruleFinallyBlock();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "finallyBlock", lv_finallyBlock_3, "FinallyBlock", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6198:6: (lv_finally_4= ruleFinallyBlock )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6198:6: (lv_finally_4= ruleFinallyBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6201:6: lv_finally_4= ruleFinallyBlock
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14495);
                    lv_finally_4=ruleFinallyBlock();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "finally", lv_finally_4, "FinallyBlock", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleTryCatchStatement


    // $ANTLR start entryRuleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6226:1: entryRuleCatchBlock returns [EObject current=null] : iv_ruleCatchBlock= ruleCatchBlock EOF ;
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;
        int entryRuleCatchBlock_StartIndex = input.index();
        EObject iv_ruleCatchBlock = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6226:52: (iv_ruleCatchBlock= ruleCatchBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6227:2: iv_ruleCatchBlock= ruleCatchBlock EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCatchBlockRule(), currentNode); 
            pushFollow(FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock14533);
            iv_ruleCatchBlock=ruleCatchBlock();
            _fsp--;

             current =iv_ruleCatchBlock; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCatchBlock14543); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCatchBlock


    // $ANTLR start ruleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6234:1: ruleCatchBlock returns [EObject current=null] : ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) ;
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;
        int ruleCatchBlock_StartIndex = input.index();
        Token lv_variable_2=null;
        EObject lv_catchBlock_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6239:6: ( ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:2: 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement )
            {
            match(input,85,FOLLOW_85_in_ruleCatchBlock14577); 

                    createLeafNode(grammarAccess.getCatchBlockAccess().getCatchKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleCatchBlock14586); 

                    createLeafNode(grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6248:1: (lv_variable_2= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6250:6: lv_variable_2= RULE_ID
            {
            lv_variable_2=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleCatchBlock14608); 

            		createLeafNode(grammarAccess.getCatchBlockAccess().getVariableIDTerminalRuleCall_2_0(), "variable"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "variable", lv_variable_2, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,35,FOLLOW_35_in_ruleCatchBlock14625); 

                    createLeafNode(grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6272:1: (lv_catchBlock_4= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6275:6: lv_catchBlock_4= ruleCompoundStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCatchBlockAccess().getCatchBlockCompoundStatementParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleCatchBlock14659);
            lv_catchBlock_4=ruleCompoundStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "catchBlock", lv_catchBlock_4, "CompoundStatement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCatchBlock


    // $ANTLR start entryRuleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6300:1: entryRuleFinallyBlock returns [EObject current=null] : iv_ruleFinallyBlock= ruleFinallyBlock EOF ;
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;
        int entryRuleFinallyBlock_StartIndex = input.index();
        EObject iv_ruleFinallyBlock = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6300:54: (iv_ruleFinallyBlock= ruleFinallyBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6301:2: iv_ruleFinallyBlock= ruleFinallyBlock EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFinallyBlockRule(), currentNode); 
            pushFollow(FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock14696);
            iv_ruleFinallyBlock=ruleFinallyBlock();
            _fsp--;

             current =iv_ruleFinallyBlock; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFinallyBlock14706); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFinallyBlock


    // $ANTLR start ruleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6308:1: ruleFinallyBlock returns [EObject current=null] : ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) ;
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;
        int ruleFinallyBlock_StartIndex = input.index();
        EObject lv_finallyBlock_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6313:6: ( ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6314:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6314:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6314:2: 'finally' (lv_finallyBlock_1= ruleCompoundStatement )
            {
            match(input,86,FOLLOW_86_in_ruleFinallyBlock14740); 

                    createLeafNode(grammarAccess.getFinallyBlockAccess().getFinallyKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6318:1: (lv_finallyBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6321:6: lv_finallyBlock_1= ruleCompoundStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getFinallyBlockAccess().getFinallyBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock14774);
            lv_finallyBlock_1=ruleCompoundStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFinallyBlockRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "finallyBlock", lv_finallyBlock_1, "CompoundStatement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFinallyBlock


    // $ANTLR start entryRuleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6346:1: entryRuleWithStatement returns [EObject current=null] : iv_ruleWithStatement= ruleWithStatement EOF ;
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleWithStatement_StartIndex = input.index();
        EObject iv_ruleWithStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6346:55: (iv_ruleWithStatement= ruleWithStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6347:2: iv_ruleWithStatement= ruleWithStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getWithStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleWithStatement_in_entryRuleWithStatement14811);
            iv_ruleWithStatement=ruleWithStatement();
            _fsp--;

             current =iv_ruleWithStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWithStatement14821); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWithStatement


    // $ANTLR start ruleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6354:1: ruleWithStatement returns [EObject current=null] : ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) ;
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;
        int ruleWithStatement_StartIndex = input.index();
        EObject lv_expr_2 = null;

        EObject lv_statement_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6359:6: ( ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6360:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6360:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6360:2: 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement )
            {
            match(input,62,FOLLOW_62_in_ruleWithStatement14855); 

                    createLeafNode(grammarAccess.getWithStatementAccess().getWithKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleWithStatement14864); 

                    createLeafNode(grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6368:1: (lv_expr_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6371:6: lv_expr_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleWithStatement14898);
            lv_expr_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expr", lv_expr_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleWithStatement14911); 

                    createLeafNode(grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6393:1: (lv_statement_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6396:6: lv_statement_4= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleWithStatement14945);
            lv_statement_4=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statement", lv_statement_4, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWithStatement


    // $ANTLR start entryRuleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6423:1: entryRuleVarExpressionList returns [EObject current=null] : iv_ruleVarExpressionList= ruleVarExpressionList EOF ;
    public final EObject entryRuleVarExpressionList() throws RecognitionException {
        EObject current = null;
        int entryRuleVarExpressionList_StartIndex = input.index();
        EObject iv_ruleVarExpressionList = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6423:59: (iv_ruleVarExpressionList= ruleVarExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6424:2: iv_ruleVarExpressionList= ruleVarExpressionList EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVarExpressionListRule(), currentNode); 
            pushFollow(FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList14984);
            iv_ruleVarExpressionList=ruleVarExpressionList();
            _fsp--;

             current =iv_ruleVarExpressionList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpressionList14994); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpressionList


    // $ANTLR start ruleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6431:1: ruleVarExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) ;
    public final EObject ruleVarExpressionList() throws RecognitionException {
        EObject current = null;
        int ruleVarExpressionList_StartIndex = input.index();
        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6436:6: ( ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6437:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6437:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6437:2: (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6437:2: (lv_expr_0= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6440:6: lv_expr_0= ruleVarExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList15053);
            lv_expr_0=ruleVarExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "expr", lv_expr_0, "VarExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6458:2: ( ',' (lv_expr_2= ruleVarExpression ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==33) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6458:3: ',' (lv_expr_2= ruleVarExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleVarExpressionList15067); 

            	            createLeafNode(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6462:1: (lv_expr_2= ruleVarExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6465:6: lv_expr_2= ruleVarExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList15101);
            	    lv_expr_2=ruleVarExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "expr", lv_expr_2, "VarExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpressionList


    // $ANTLR start entryRuleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6490:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;
        int entryRuleExpressionList_StartIndex = input.index();
        EObject iv_ruleExpressionList = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6490:56: (iv_ruleExpressionList= ruleExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6491:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExpressionListRule(), currentNode); 
            pushFollow(FOLLOW_ruleExpressionList_in_entryRuleExpressionList15140);
            iv_ruleExpressionList=ruleExpressionList();
            _fsp--;

             current =iv_ruleExpressionList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpressionList15150); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpressionList


    // $ANTLR start ruleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6498:1: ruleExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;
        int ruleExpressionList_StartIndex = input.index();
        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6503:6: ( ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6504:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6504:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6504:2: (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6504:2: (lv_expr_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6507:6: lv_expr_0= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList15209);
            lv_expr_0=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "expr", lv_expr_0, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6525:2: ( ',' (lv_expr_2= ruleExpression ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==33) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6525:3: ',' (lv_expr_2= ruleExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleExpressionList15223); 

            	            createLeafNode(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6529:1: (lv_expr_2= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6532:6: lv_expr_2= ruleExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList15257);
            	    lv_expr_2=ruleExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "expr", lv_expr_2, "Expression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpressionList


    // $ANTLR start entryRuleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6557:1: entryRuleVarExpression returns [EObject current=null] : iv_ruleVarExpression= ruleVarExpression EOF ;
    public final EObject entryRuleVarExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleVarExpression_StartIndex = input.index();
        EObject iv_ruleVarExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6557:55: (iv_ruleVarExpression= ruleVarExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6558:2: iv_ruleVarExpression= ruleVarExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVarExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleVarExpression_in_entryRuleVarExpression15296);
            iv_ruleVarExpression=ruleVarExpression();
            _fsp--;

             current =iv_ruleVarExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpression15306); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpression


    // $ANTLR start ruleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6565:1: ruleVarExpression returns [EObject current=null] : (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? ) ) ;
    public final EObject ruleVarExpression() throws RecognitionException {
        EObject current = null;
        int ruleVarExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_Expression_0 = null;

        EObject lv_value_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6570:6: ( (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6571:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6571:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? ) )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=RULE_ID && LA117_0<=RULE_REGEX)||(LA117_0>=18 && LA117_0<=19)||(LA117_0>=31 && LA117_0<=32)||(LA117_0>=42 && LA117_0<=43)||(LA117_0>=63 && LA117_0<=64)||LA117_0==80||(LA117_0>=108 && LA117_0<=117)) ) {
                alt117=1;
            }
            else if ( (LA117_0==87) ) {
                alt117=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("6571:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? ) )", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6572:5: this_Expression_0= ruleExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression15353);
                    this_Expression_0=ruleExpression();
                    _fsp--;

                     
                            current = this_Expression_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:6: ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:6: ( 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:7: 'var' (lv_name_2= RULE_ID ) ( '=' (lv_value_4= ruleExpression ) )?
                    {
                    match(input,87,FOLLOW_87_in_ruleVarExpression15368); 

                            createLeafNode(grammarAccess.getVarExpressionAccess().getVarKeyword_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6585:1: (lv_name_2= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6587:6: lv_name_2= RULE_ID
                    {
                    lv_name_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVarExpression15390); 

                    		createLeafNode(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6605:2: ( '=' (lv_value_4= ruleExpression ) )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==25) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6605:3: '=' (lv_value_4= ruleExpression )
                            {
                            match(input,25,FOLLOW_25_in_ruleVarExpression15408); 

                                    createLeafNode(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_2_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6609:1: (lv_value_4= ruleExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6612:6: lv_value_4= ruleExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_2_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression15442);
                            lv_value_4=ruleExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "value", lv_value_4, "Expression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6637:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleExpression_StartIndex = input.index();
        EObject iv_ruleExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6637:52: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6638:2: iv_ruleExpression= ruleExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression15482);
            iv_ruleExpression=ruleExpression();
            _fsp--;

             current =iv_ruleExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpression15492); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6645:1: ruleExpression returns [EObject current=null] : this_ValueExpression_0= ruleValueExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;
        int ruleExpression_StartIndex = input.index();
        EObject this_ValueExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6650:6: (this_ValueExpression_0= ruleValueExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6652:5: this_ValueExpression_0= ruleValueExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleValueExpression_in_ruleExpression15538);
            this_ValueExpression_0=ruleValueExpression();
            _fsp--;

             
                    current = this_ValueExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleValueExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6667:1: entryRuleValueExpression returns [EObject current=null] : iv_ruleValueExpression= ruleValueExpression EOF ;
    public final EObject entryRuleValueExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleValueExpression_StartIndex = input.index();
        EObject iv_ruleValueExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6667:57: (iv_ruleValueExpression= ruleValueExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6668:2: iv_ruleValueExpression= ruleValueExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getValueExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleValueExpression_in_entryRuleValueExpression15569);
            iv_ruleValueExpression=ruleValueExpression();
            _fsp--;

             current =iv_ruleValueExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueExpression15579); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueExpression


    // $ANTLR start ruleValueExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6675:1: ruleValueExpression returns [EObject current=null] : (lv_value_0= ruleAssignmentExpression ) ;
    public final EObject ruleValueExpression() throws RecognitionException {
        EObject current = null;
        int ruleValueExpression_StartIndex = input.index();
        EObject lv_value_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6680:6: ( (lv_value_0= ruleAssignmentExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6681:1: (lv_value_0= ruleAssignmentExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6681:1: (lv_value_0= ruleAssignmentExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6684:6: lv_value_0= ruleAssignmentExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getValueExpressionAccess().getValueAssignmentExpressionParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleValueExpression15637);
            lv_value_0=ruleAssignmentExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getValueExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_0, "AssignmentExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6709:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAssignmentExpression_StartIndex = input.index();
        EObject iv_ruleAssignmentExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6709:62: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6710:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression15673);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;

             current =iv_ruleAssignmentExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignmentExpression15683); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6717:1: ruleAssignmentExpression returns [EObject current=null] : (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int ruleAssignmentExpression_StartIndex = input.index();
        Token lv_op_2=null;
        EObject this_ChainExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6722:6: ( (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6723:1: (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6723:1: (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6724:5: this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )?
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getChainExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleChainExpression_in_ruleAssignmentExpression15730);
            this_ChainExpression_0=ruleChainExpression();
            _fsp--;

             
                    current = this_ChainExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6732:1: ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==25||(LA119_0>=53 && LA119_0<=56)||(LA119_0>=88 && LA119_0<=94)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6732:2: () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) ) (lv_right_3= ruleAssignmentExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6732:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6733:5: 
                    {
                     
                            temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0().getType().getClassifier());
                            try {
                            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
                            } catch(ValueConverterException vce) {
                            	handleValueConverterException(vce);
                            }
                            current = temp; 
                            temp = null;
                            CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0(), currentNode.getParent());
                        newNode.getChildren().add(currentNode);
                        moveLookaheadInfo(currentNode, newNode);
                        currentNode = newNode; 
                            associateNodeWithAstElement(currentNode, current); 
                        

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6748:2: (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6750:6: lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6750:14: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' )
                    int alt118=12;
                    switch ( input.LA(1) ) {
                    case 25:
                        {
                        alt118=1;
                        }
                        break;
                    case 53:
                        {
                        alt118=2;
                        }
                        break;
                    case 54:
                        {
                        alt118=3;
                        }
                        break;
                    case 55:
                        {
                        alt118=4;
                        }
                        break;
                    case 56:
                        {
                        alt118=5;
                        }
                        break;
                    case 88:
                        {
                        alt118=6;
                        }
                        break;
                    case 89:
                        {
                        alt118=7;
                        }
                        break;
                    case 90:
                        {
                        alt118=8;
                        }
                        break;
                    case 91:
                        {
                        alt118=9;
                        }
                        break;
                    case 92:
                        {
                        alt118=10;
                        }
                        break;
                    case 93:
                        {
                        alt118=11;
                        }
                        break;
                    case 94:
                        {
                        alt118=12;
                        }
                        break;
                    default:
                        NoViableAltException nvae =
                            new NoViableAltException("6750:14: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '>>>=' | '&=' | '^=' | '|=' )", 118, 0, input);

                        throw nvae;
                    }

                    switch (alt118) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6750:15: '='
                            {
                            match(input,25,FOLLOW_25_in_ruleAssignmentExpression15761); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpEqualsSignKeyword_1_1_0_0(), "op"); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6756:6: '+='
                            {
                            match(input,53,FOLLOW_53_in_ruleAssignmentExpression15777); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpPlusSignEqualsSignKeyword_1_1_0_1(), "op"); 
                                

                            }
                            break;
                        case 3 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6762:6: '-='
                            {
                            match(input,54,FOLLOW_54_in_ruleAssignmentExpression15793); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpHyphenMinusEqualsSignKeyword_1_1_0_2(), "op"); 
                                

                            }
                            break;
                        case 4 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6768:6: '*='
                            {
                            match(input,55,FOLLOW_55_in_ruleAssignmentExpression15809); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpAsteriskEqualsSignKeyword_1_1_0_3(), "op"); 
                                

                            }
                            break;
                        case 5 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6774:6: '/='
                            {
                            match(input,56,FOLLOW_56_in_ruleAssignmentExpression15825); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpSolidusEqualsSignKeyword_1_1_0_4(), "op"); 
                                

                            }
                            break;
                        case 6 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6780:6: '%='
                            {
                            match(input,88,FOLLOW_88_in_ruleAssignmentExpression15841); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpPercentSignEqualsSignKeyword_1_1_0_5(), "op"); 
                                

                            }
                            break;
                        case 7 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6786:6: '<<='
                            {
                            match(input,89,FOLLOW_89_in_ruleAssignmentExpression15857); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpLessThanSignLessThanSignEqualsSignKeyword_1_1_0_6(), "op"); 
                                

                            }
                            break;
                        case 8 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6792:6: '>>='
                            {
                            match(input,90,FOLLOW_90_in_ruleAssignmentExpression15873); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpGreaterThanSignGreaterThanSignEqualsSignKeyword_1_1_0_7(), "op"); 
                                

                            }
                            break;
                        case 9 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6798:6: '>>>='
                            {
                            match(input,91,FOLLOW_91_in_ruleAssignmentExpression15889); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_1_1_0_8(), "op"); 
                                

                            }
                            break;
                        case 10 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6804:6: '&='
                            {
                            match(input,92,FOLLOW_92_in_ruleAssignmentExpression15905); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpAmpersandEqualsSignKeyword_1_1_0_9(), "op"); 
                                

                            }
                            break;
                        case 11 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6810:6: '^='
                            {
                            match(input,93,FOLLOW_93_in_ruleAssignmentExpression15921); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpCircumflexAccentEqualsSignKeyword_1_1_0_10(), "op"); 
                                

                            }
                            break;
                        case 12 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6816:6: '|='
                            {
                            match(input,94,FOLLOW_94_in_ruleAssignmentExpression15937); 

                                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpVerticalLineEqualsSignKeyword_1_1_0_11(), "op"); 
                                

                            }
                            break;

                    }


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "op", /* lv_op_2 */ input.LT(-1), null, lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6836:2: (lv_right_3= ruleAssignmentExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6839:6: lv_right_3= ruleAssignmentExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression15986);
                    lv_right_3=ruleAssignmentExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "right", lv_right_3, "AssignmentExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleChainExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6864:1: entryRuleChainExpression returns [EObject current=null] : iv_ruleChainExpression= ruleChainExpression EOF ;
    public final EObject entryRuleChainExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleChainExpression_StartIndex = input.index();
        EObject iv_ruleChainExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6864:57: (iv_ruleChainExpression= ruleChainExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6865:2: iv_ruleChainExpression= ruleChainExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getChainExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleChainExpression_in_entryRuleChainExpression16025);
            iv_ruleChainExpression=ruleChainExpression();
            _fsp--;

             current =iv_ruleChainExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainExpression16035); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainExpression


    // $ANTLR start ruleChainExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6872:1: ruleChainExpression returns [EObject current=null] : this_ChainedExpression_0= ruleChainedExpression ;
    public final EObject ruleChainExpression() throws RecognitionException {
        EObject current = null;
        int ruleChainExpression_StartIndex = input.index();
        EObject this_ChainedExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6877:6: (this_ChainedExpression_0= ruleChainedExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6879:5: this_ChainedExpression_0= ruleChainedExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleChainedExpression_in_ruleChainExpression16081);
            this_ChainedExpression_0=ruleChainedExpression();
            _fsp--;

             
                    current = this_ChainedExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainExpression


    // $ANTLR start entryRuleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6894:1: entryRuleChainedExpression returns [EObject current=null] : iv_ruleChainedExpression= ruleChainedExpression EOF ;
    public final EObject entryRuleChainedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleChainedExpression_StartIndex = input.index();
        EObject iv_ruleChainedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6894:59: (iv_ruleChainedExpression= ruleChainedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6895:2: iv_ruleChainedExpression= ruleChainedExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getChainedExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression16112);
            iv_ruleChainedExpression=ruleChainedExpression();
            _fsp--;

             current =iv_ruleChainedExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainedExpression16122); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainedExpression


    // $ANTLR start ruleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6902:1: ruleChainedExpression returns [EObject current=null] : this_IfExpression_0= ruleIfExpression ;
    public final EObject ruleChainedExpression() throws RecognitionException {
        EObject current = null;
        int ruleChainedExpression_StartIndex = input.index();
        EObject this_IfExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6907:6: (this_IfExpression_0= ruleIfExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6909:5: this_IfExpression_0= ruleIfExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleIfExpression_in_ruleChainedExpression16168);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;

             
                    current = this_IfExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainedExpression


    // $ANTLR start entryRuleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6924:1: entryRuleIfExpression returns [EObject current=null] : iv_ruleIfExpression= ruleIfExpression EOF ;
    public final EObject entryRuleIfExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleIfExpression_StartIndex = input.index();
        EObject iv_ruleIfExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6924:54: (iv_ruleIfExpression= ruleIfExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6925:2: iv_ruleIfExpression= ruleIfExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getIfExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleIfExpression_in_entryRuleIfExpression16199);
            iv_ruleIfExpression=ruleIfExpression();
            _fsp--;

             current =iv_ruleIfExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfExpression16209); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfExpression


    // $ANTLR start ruleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6932:1: ruleIfExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) ;
    public final EObject ruleIfExpression() throws RecognitionException {
        EObject current = null;
        int ruleIfExpression_StartIndex = input.index();
        EObject this_OrExpression_0 = null;

        EObject lv_thenPart_3 = null;

        EObject lv_elsePart_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6937:6: ( (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6938:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6938:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6939:5: this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            {
             
                    currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleOrExpression_in_ruleIfExpression16256);
            this_OrExpression_0=ruleOrExpression();
            _fsp--;

             
                    current = this_OrExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6947:1: ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==30) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6947:2: () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6947:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6948:5: 
                    {
                     
                            temp=factory.create(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0().getType().getClassifier());
                            try {
                            	factory.set(temp, "condition", current, null /*ParserRule*/, currentNode);
                            } catch(ValueConverterException vce) {
                            	handleValueConverterException(vce);
                            }
                            current = temp; 
                            temp = null;
                            CompositeNode newNode = createCompositeNode(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0(), currentNode.getParent());
                        newNode.getChildren().add(currentNode);
                        moveLookaheadInfo(currentNode, newNode);
                        currentNode = newNode; 
                            associateNodeWithAstElement(currentNode, current); 
                        

                    }

                    match(input,30,FOLLOW_30_in_ruleIfExpression16274); 

                            createLeafNode(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6967:1: (lv_thenPart_3= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6970:6: lv_thenPart_3= ruleChainedExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression16308);
                    lv_thenPart_3=ruleChainedExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "thenPart", lv_thenPart_3, "ChainedExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,29,FOLLOW_29_in_ruleIfExpression16321); 

                            createLeafNode(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6992:1: (lv_elsePart_5= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6995:6: lv_elsePart_5= ruleChainedExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression16355);
                    lv_elsePart_5=ruleChainedExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "elsePart", lv_elsePart_5, "ChainedExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7020:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleOrExpression_StartIndex = input.index();
        EObject iv_ruleOrExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7020:54: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7021:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleOrExpression_in_entryRuleOrExpression16394);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;

             current =iv_ruleOrExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrExpression16404); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7028:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;
        int ruleOrExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7033:6: ( (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7034:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7034:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7035:5: this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression16451);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;

             
                    current = this_AndExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7043:1: ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==95) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7043:2: () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7043:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7044:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7059:2: (lv_operator_2= '||' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7061:6: lv_operator_2= '||'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,95,FOLLOW_95_in_ruleOrExpression16481); 

            	            createLeafNode(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0(), "operator"); 
            	        

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "||", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7080:2: (lv_right_3= ruleAndExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7083:6: lv_right_3= ruleAndExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression16528);
            	    lv_right_3=ruleAndExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "AndExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7108:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAndExpression_StartIndex = input.index();
        EObject iv_ruleAndExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7108:55: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7109:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAndExpression_in_entryRuleAndExpression16567);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;

             current =iv_ruleAndExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndExpression16577); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7116:1: ruleAndExpression returns [EObject current=null] : (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;
        int ruleAndExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_BitwiseExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7121:6: ( (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7122:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7122:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7123:5: this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getBitwiseExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16624);
            this_BitwiseExpression_0=ruleBitwiseExpression();
            _fsp--;

             
                    current = this_BitwiseExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7131:1: ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==96) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7131:2: () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7131:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7132:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7147:2: (lv_operator_2= '&&' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7149:6: lv_operator_2= '&&'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,96,FOLLOW_96_in_ruleAndExpression16654); 

            	            createLeafNode(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0(), "operator"); 
            	        

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "&&", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7168:2: (lv_right_3= ruleBitwiseExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7171:6: lv_right_3= ruleBitwiseExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightBitwiseExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16701);
            	    lv_right_3=ruleBitwiseExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "BitwiseExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7196:1: entryRuleBitwiseExpression returns [EObject current=null] : iv_ruleBitwiseExpression= ruleBitwiseExpression EOF ;
    public final EObject entryRuleBitwiseExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleBitwiseExpression_StartIndex = input.index();
        EObject iv_ruleBitwiseExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7196:59: (iv_ruleBitwiseExpression= ruleBitwiseExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7197:2: iv_ruleBitwiseExpression= ruleBitwiseExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBitwiseExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression16740);
            iv_ruleBitwiseExpression=ruleBitwiseExpression();
            _fsp--;

             current =iv_ruleBitwiseExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBitwiseExpression16750); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBitwiseExpression


    // $ANTLR start ruleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7204:1: ruleBitwiseExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )* ) ;
    public final EObject ruleBitwiseExpression() throws RecognitionException {
        EObject current = null;
        int ruleBitwiseExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_RelationalExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7209:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7210:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7210:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7211:5: this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16797);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;

             
                    current = this_RelationalExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7219:1: ( () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==23||(LA124_0>=97 && LA124_0<=98)) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7219:2: () (lv_operator_2= ( '&' | '^' | '|' ) ) (lv_right_3= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7219:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7220:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getBitwiseExpressionAccess().getOperationCallLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getOperationCallLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7235:2: (lv_operator_2= ( '&' | '^' | '|' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7237:6: lv_operator_2= ( '&' | '^' | '|' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7237:20: ( '&' | '^' | '|' )
            	    int alt123=3;
            	    switch ( input.LA(1) ) {
            	    case 23:
            	        {
            	        alt123=1;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt123=2;
            	        }
            	        break;
            	    case 98:
            	        {
            	        alt123=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("7237:20: ( '&' | '^' | '|' )", 123, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt123) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7237:21: '&'
            	            {
            	            match(input,23,FOLLOW_23_in_ruleBitwiseExpression16828); 

            	                    createLeafNode(grammarAccess.getBitwiseExpressionAccess().getOperatorAmpersandKeyword_1_1_0_0(), "operator"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:6: '^'
            	            {
            	            match(input,97,FOLLOW_97_in_ruleBitwiseExpression16844); 

            	                    createLeafNode(grammarAccess.getBitwiseExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0_1(), "operator"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7249:6: '|'
            	            {
            	            match(input,98,FOLLOW_98_in_ruleBitwiseExpression16860); 

            	                    createLeafNode(grammarAccess.getBitwiseExpressionAccess().getOperatorVerticalLineKeyword_1_1_0_2(), "operator"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7269:2: (lv_right_3= ruleRelationalExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7272:6: lv_right_3= ruleRelationalExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16909);
            	    lv_right_3=ruleRelationalExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "RelationalExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBitwiseExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7297:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleRelationalExpression_StartIndex = input.index();
        EObject iv_ruleRelationalExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7297:62: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7298:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression16948);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;

             current =iv_ruleRelationalExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRelationalExpression16958); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7305:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int ruleRelationalExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7310:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7311:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7311:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7312:5: this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression17005);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;

             
                    current = this_AdditiveExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7320:1: ( () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression ) )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( ((LA126_0>=27 && LA126_0<=28)||(LA126_0>=99 && LA126_0<=107)) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7320:2: () (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) ) (lv_right_3= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7320:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7321:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7336:2: (lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:6: lv_operator_2= ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:20: ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' )
            	    int alt125=11;
            	    switch ( input.LA(1) ) {
            	    case 99:
            	        {
            	        alt125=1;
            	        }
            	        break;
            	    case 100:
            	        {
            	        alt125=2;
            	        }
            	        break;
            	    case 101:
            	        {
            	        alt125=3;
            	        }
            	        break;
            	    case 102:
            	        {
            	        alt125=4;
            	        }
            	        break;
            	    case 103:
            	        {
            	        alt125=5;
            	        }
            	        break;
            	    case 104:
            	        {
            	        alt125=6;
            	        }
            	        break;
            	    case 105:
            	        {
            	        alt125=7;
            	        }
            	        break;
            	    case 28:
            	        {
            	        alt125=8;
            	        }
            	        break;
            	    case 27:
            	        {
            	        alt125=9;
            	        }
            	        break;
            	    case 106:
            	        {
            	        alt125=10;
            	        }
            	        break;
            	    case 107:
            	        {
            	        alt125=11;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("7338:20: ( '~=' | '==' | '===' | '!=' | '!==' | '>=' | '<=' | '>' | '<' | '==.' | 'instanceof' )", 125, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt125) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:21: '~='
            	            {
            	            match(input,99,FOLLOW_99_in_ruleRelationalExpression17036); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorTildeEqualsSignKeyword_1_1_0_0(), "operator"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7344:6: '=='
            	            {
            	            match(input,100,FOLLOW_100_in_ruleRelationalExpression17052); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_1(), "operator"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7350:6: '==='
            	            {
            	            match(input,101,FOLLOW_101_in_ruleRelationalExpression17068); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignEqualsSignKeyword_1_1_0_2(), "operator"); 
            	                

            	            }
            	            break;
            	        case 4 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7356:6: '!='
            	            {
            	            match(input,102,FOLLOW_102_in_ruleRelationalExpression17084); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_3(), "operator"); 
            	                

            	            }
            	            break;
            	        case 5 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7362:6: '!=='
            	            {
            	            match(input,103,FOLLOW_103_in_ruleRelationalExpression17100); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignEqualsSignKeyword_1_1_0_4(), "operator"); 
            	                

            	            }
            	            break;
            	        case 6 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7368:6: '>='
            	            {
            	            match(input,104,FOLLOW_104_in_ruleRelationalExpression17116); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5(), "operator"); 
            	                

            	            }
            	            break;
            	        case 7 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7374:6: '<='
            	            {
            	            match(input,105,FOLLOW_105_in_ruleRelationalExpression17132); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_6(), "operator"); 
            	                

            	            }
            	            break;
            	        case 8 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7380:6: '>'
            	            {
            	            match(input,28,FOLLOW_28_in_ruleRelationalExpression17148); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_7(), "operator"); 
            	                

            	            }
            	            break;
            	        case 9 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7386:6: '<'
            	            {
            	            match(input,27,FOLLOW_27_in_ruleRelationalExpression17164); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_8(), "operator"); 
            	                

            	            }
            	            break;
            	        case 10 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7392:6: '==.'
            	            {
            	            match(input,106,FOLLOW_106_in_ruleRelationalExpression17180); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignFullStopKeyword_1_1_0_9(), "operator"); 
            	                

            	            }
            	            break;
            	        case 11 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7398:6: 'instanceof'
            	            {
            	            match(input,107,FOLLOW_107_in_ruleRelationalExpression17196); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorInstanceofKeyword_1_1_0_10(), "operator"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7418:2: (lv_right_3= ruleAdditiveExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7421:6: lv_right_3= ruleAdditiveExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression17245);
            	    lv_right_3=ruleAdditiveExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "AdditiveExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7446:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAdditiveExpression_StartIndex = input.index();
        EObject iv_ruleAdditiveExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7446:60: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7447:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression17284);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;

             current =iv_ruleAdditiveExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdditiveExpression17294); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7454:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int ruleAdditiveExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7459:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7460:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7460:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7461:5: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17341);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;

             
                    current = this_MultiplicativeExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7469:1: ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==18||LA128_0==24) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7469:2: () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7469:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7470:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7485:2: (lv_name_2= ( '+' | '-' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7487:6: lv_name_2= ( '+' | '-' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7487:16: ( '+' | '-' )
            	    int alt127=2;
            	    int LA127_0 = input.LA(1);

            	    if ( (LA127_0==24) ) {
            	        alt127=1;
            	    }
            	    else if ( (LA127_0==18) ) {
            	        alt127=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("7487:16: ( '+' | '-' )", 127, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt127) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7487:17: '+'
            	            {
            	            match(input,24,FOLLOW_24_in_ruleAdditiveExpression17372); 

            	                    createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0(), "name"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7493:6: '-'
            	            {
            	            match(input,18,FOLLOW_18_in_ruleAdditiveExpression17388); 

            	                    createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1(), "name"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7513:2: (lv_params_3= ruleMultiplicativeExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7516:6: lv_params_3= ruleMultiplicativeExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17437);
            	    lv_params_3=ruleMultiplicativeExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_3, "MultiplicativeExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7541:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        EObject iv_ruleMultiplicativeExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7541:66: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7542:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression17476);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;

             current =iv_ruleMultiplicativeExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiplicativeExpression17486); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7549:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int ruleMultiplicativeExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_UnaryOrInfixExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7554:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7555:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7555:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7556:5: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17533);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;

             
                    current = this_UnaryOrInfixExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7564:1: ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==17||LA130_0==22||LA130_0==26) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7564:2: () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7564:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7565:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7580:2: (lv_name_2= ( '*' | '/' | '%' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7582:6: lv_name_2= ( '*' | '/' | '%' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7582:16: ( '*' | '/' | '%' )
            	    int alt129=3;
            	    switch ( input.LA(1) ) {
            	    case 26:
            	        {
            	        alt129=1;
            	        }
            	        break;
            	    case 17:
            	        {
            	        alt129=2;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt129=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("7582:16: ( '*' | '/' | '%' )", 129, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt129) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7582:17: '*'
            	            {
            	            match(input,26,FOLLOW_26_in_ruleMultiplicativeExpression17564); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0(), "name"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7588:6: '/'
            	            {
            	            match(input,17,FOLLOW_17_in_ruleMultiplicativeExpression17580); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1(), "name"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7594:6: '%'
            	            {
            	            match(input,22,FOLLOW_22_in_ruleMultiplicativeExpression17596); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2(), "name"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7614:2: (lv_params_3= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7617:6: lv_params_3= ruleUnaryOrInfixExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17645);
            	    lv_params_3=ruleUnaryOrInfixExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_3, "UnaryOrInfixExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7642:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7642:64: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7643:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression17684);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;

             current =iv_ruleUnaryOrInfixExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression17694); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7650:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryOrInfixExpression_StartIndex = input.index();
        EObject this_UnaryExpression_0 = null;

        EObject this_PostopExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7655:6: ( (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7656:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7656:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=18 && LA131_0<=19)||(LA131_0>=108 && LA131_0<=112)) ) {
                alt131=1;
            }
            else if ( ((LA131_0>=RULE_ID && LA131_0<=RULE_REGEX)||(LA131_0>=31 && LA131_0<=32)||(LA131_0>=42 && LA131_0<=43)||(LA131_0>=63 && LA131_0<=64)||LA131_0==80||(LA131_0>=113 && LA131_0<=117)) ) {
                alt131=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7656:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )", 131, 0, input);

                throw nvae;
            }
            switch (alt131) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7657:5: this_UnaryExpression_0= ruleUnaryExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression17741);
                    this_UnaryExpression_0=ruleUnaryExpression();
                    _fsp--;

                     
                            current = this_UnaryExpression_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7667:5: this_PostopExpression_1= rulePostopExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression17768);
                    this_PostopExpression_1=rulePostopExpression();
                    _fsp--;

                     
                            current = this_PostopExpression_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7682:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryExpression_StartIndex = input.index();
        EObject iv_ruleUnaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7682:57: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7683:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression17800);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;

             current =iv_ruleUnaryExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryExpression17810); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7690:1: ruleUnaryExpression returns [EObject current=null] : ( (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_1= rulePostopExpression ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryExpression_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_params_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7695:6: ( ( (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_1= rulePostopExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7696:1: ( (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_1= rulePostopExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7696:1: ( (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7696:2: (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7696:2: (lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7698:6: lv_name_0= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7698:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            int alt132=7;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt132=1;
                }
                break;
            case 18:
                {
                alt132=2;
                }
                break;
            case 108:
                {
                alt132=3;
                }
                break;
            case 109:
                {
                alt132=4;
                }
                break;
            case 110:
                {
                alt132=5;
                }
                break;
            case 111:
                {
                alt132=6;
                }
                break;
            case 112:
                {
                alt132=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("7698:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )", 132, 0, input);

                throw nvae;
            }

            switch (alt132) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7698:17: '!'
                    {
                    match(input,19,FOLLOW_19_in_ruleUnaryExpression17857); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0(), "name"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7704:6: '-'
                    {
                    match(input,18,FOLLOW_18_in_ruleUnaryExpression17873); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1(), "name"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7710:6: '++'
                    {
                    match(input,108,FOLLOW_108_in_ruleUnaryExpression17889); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_0_0_2(), "name"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7716:6: '--'
                    {
                    match(input,109,FOLLOW_109_in_ruleUnaryExpression17905); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_0_0_3(), "name"); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7722:6: 'typeof'
                    {
                    match(input,110,FOLLOW_110_in_ruleUnaryExpression17921); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTypeofKeyword_0_0_4(), "name"); 
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7728:6: 'delete'
                    {
                    match(input,111,FOLLOW_111_in_ruleUnaryExpression17937); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameDeleteKeyword_0_0_5(), "name"); 
                        

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7734:6: '~'
                    {
                    match(input,112,FOLLOW_112_in_ruleUnaryExpression17953); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTildeKeyword_0_0_6(), "name"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", /* lv_name_0 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7754:2: (lv_params_1= rulePostopExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7757:6: lv_params_1= rulePostopExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryExpression18002);
            lv_params_1=rulePostopExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "params", lv_params_1, "PostopExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7782:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePostopExpression_StartIndex = input.index();
        EObject iv_rulePostopExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 181) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7782:58: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7783:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePostopExpression_in_entryRulePostopExpression18039);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;

             current =iv_rulePostopExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePostopExpression18049); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7790:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;
        int rulePostopExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 182) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7795:6: ( (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7796:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7796:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7797:5: this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )?
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleInfixExpression_in_rulePostopExpression18096);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;

             
                    current = this_InfixExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7805:1: ( () (lv_name_2= ( '--' | '++' ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=108 && LA134_0<=109)) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7805:2: () (lv_name_2= ( '--' | '++' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7805:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7806:5: 
                    {
                     
                            temp=factory.create(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0().getType().getClassifier());
                            try {
                            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
                            } catch(ValueConverterException vce) {
                            	handleValueConverterException(vce);
                            }
                            current = temp; 
                            temp = null;
                            CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0(), currentNode.getParent());
                        newNode.getChildren().add(currentNode);
                        moveLookaheadInfo(currentNode, newNode);
                        currentNode = newNode; 
                            associateNodeWithAstElement(currentNode, current); 
                        

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7821:2: (lv_name_2= ( '--' | '++' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:6: lv_name_2= ( '--' | '++' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:16: ( '--' | '++' )
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==109) ) {
                        alt133=1;
                    }
                    else if ( (LA133_0==108) ) {
                        alt133=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("7823:16: ( '--' | '++' )", 133, 0, input);

                        throw nvae;
                    }
                    switch (alt133) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:17: '--'
                            {
                            match(input,109,FOLLOW_109_in_rulePostopExpression18127); 

                                    createLeafNode(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "name"); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7829:6: '++'
                            {
                            match(input,108,FOLLOW_108_in_rulePostopExpression18143); 

                                    createLeafNode(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1(), "name"); 
                                

                            }
                            break;

                    }


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7856:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleInfixExpression_StartIndex = input.index();
        EObject iv_ruleInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 183) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7856:57: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7857:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression18193);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;

             current =iv_ruleInfixExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInfixExpression18203); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7864:1: ruleInfixExpression returns [EObject current=null] : (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleInfixExpression_StartIndex = input.index();
        Token lv_name_3=null;
        Token lv_type_20=null;
        EObject this_CallExpression_0 = null;

        EObject lv_params_5 = null;

        EObject lv_params_7 = null;

        EObject lv_index_11 = null;

        EObject lv_params_14 = null;

        EObject lv_params_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 184) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7869:6: ( (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7870:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7870:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7871:5: this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleCallExpression_in_ruleInfixExpression18250);
            this_CallExpression_0=ruleCallExpression();
            _fsp--;

             
                    current = this_CallExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:1: ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            loop140:
            do {
                int alt140=4;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==15) ) {
                    int LA140_2 = input.LA(2);

                    if ( (LA140_2==RULE_ID) ) {
                        int LA140_4 = input.LA(3);

                        if ( (LA140_4==32) ) {
                            alt140=1;
                        }
                        else if ( (LA140_4==EOF||LA140_4==15||(LA140_4>=17 && LA140_4<=18)||(LA140_4>=22 && LA140_4<=31)||(LA140_4>=33 && LA140_4<=35)||LA140_4==38||LA140_4==45||(LA140_4>=53 && LA140_4<=56)||LA140_4==77||(LA140_4>=88 && LA140_4<=109)) ) {
                            alt140=3;
                        }


                    }


                }
                else if ( (LA140_0==31) ) {
                    alt140=2;
                }


                switch (alt140) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:3: () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:3: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7880:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression18269); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7899:1: (lv_name_3= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7901:6: lv_name_3= RULE_ID
            	    {
            	    lv_name_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression18291); 

            	    		createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    match(input,32,FOLLOW_32_in_ruleInfixExpression18308); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7923:1: ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )?
            	    int alt136=2;
            	    int LA136_0 = input.LA(1);

            	    if ( ((LA136_0>=RULE_ID && LA136_0<=RULE_REGEX)||(LA136_0>=18 && LA136_0<=19)||(LA136_0>=31 && LA136_0<=32)||(LA136_0>=42 && LA136_0<=43)||(LA136_0>=63 && LA136_0<=64)||LA136_0==80||(LA136_0>=108 && LA136_0<=117)) ) {
            	        alt136=1;
            	    }
            	    switch (alt136) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7923:2: (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7923:2: (lv_params_5= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7926:6: lv_params_5= ruleParameter
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18343);
            	            lv_params_5=ruleParameter();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7944:2: ( ',' (lv_params_7= ruleParameter ) )*
            	            loop135:
            	            do {
            	                int alt135=2;
            	                int LA135_0 = input.LA(1);

            	                if ( (LA135_0==33) ) {
            	                    alt135=1;
            	                }


            	                switch (alt135) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7944:3: ',' (lv_params_7= ruleParameter )
            	            	    {
            	            	    match(input,33,FOLLOW_33_in_ruleInfixExpression18357); 

            	            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0(), null); 
            	            	        
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7948:1: (lv_params_7= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7951:6: lv_params_7= ruleParameter
            	            	    {
            	            	     
            	            	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0(), currentNode); 
            	            	    	    
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18391);
            	            	    lv_params_7=ruleParameter();
            	            	    _fsp--;


            	            	    	        if (current==null) {
            	            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	    	        }
            	            	    	        
            	            	    	        try {
            	            	    	       		add(current, "params", lv_params_7, "Parameter", currentNode);
            	            	    	        } catch (ValueConverterException vce) {
            	            	    				handleValueConverterException(vce);
            	            	    	        }
            	            	    	        currentNode = currentNode.getParent();
            	            	    	    

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop135;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,35,FOLLOW_35_in_ruleInfixExpression18408); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7974:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7974:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7974:7: () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7974:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7975:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,31,FOLLOW_31_in_ruleInfixExpression18434); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7994:1: (lv_index_11= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7997:6: lv_index_11= ruleExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleExpression_in_ruleInfixExpression18468);
            	    lv_index_11=ruleExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "index", lv_index_11, "Expression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,34,FOLLOW_34_in_ruleInfixExpression18481); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8019:1: ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    int alt139=2;
            	    int LA139_0 = input.LA(1);

            	    if ( (LA139_0==32) ) {
            	        alt139=1;
            	    }
            	    switch (alt139) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8019:2: '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')'
            	            {
            	            match(input,32,FOLLOW_32_in_ruleInfixExpression18491); 

            	                    createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0(), null); 
            	                
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8023:1: ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )?
            	            int alt138=2;
            	            int LA138_0 = input.LA(1);

            	            if ( ((LA138_0>=RULE_ID && LA138_0<=RULE_REGEX)||(LA138_0>=18 && LA138_0<=19)||(LA138_0>=31 && LA138_0<=32)||(LA138_0>=42 && LA138_0<=43)||(LA138_0>=63 && LA138_0<=64)||LA138_0==80||(LA138_0>=108 && LA138_0<=117)) ) {
            	                alt138=1;
            	            }
            	            switch (alt138) {
            	                case 1 :
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8023:2: (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )*
            	                    {
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8023:2: (lv_params_14= ruleParameter )
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8026:6: lv_params_14= ruleParameter
            	                    {
            	                     
            	                    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0(), currentNode); 
            	                    	    
            	                    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18526);
            	                    lv_params_14=ruleParameter();
            	                    _fsp--;


            	                    	        if (current==null) {
            	                    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	        }
            	                    	        
            	                    	        try {
            	                    	       		add(current, "params", lv_params_14, "Parameter", currentNode);
            	                    	        } catch (ValueConverterException vce) {
            	                    				handleValueConverterException(vce);
            	                    	        }
            	                    	        currentNode = currentNode.getParent();
            	                    	    

            	                    }

            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8044:2: ( ',' (lv_params_16= ruleParameter ) )*
            	                    loop137:
            	                    do {
            	                        int alt137=2;
            	                        int LA137_0 = input.LA(1);

            	                        if ( (LA137_0==33) ) {
            	                            alt137=1;
            	                        }


            	                        switch (alt137) {
            	                    	case 1 :
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8044:3: ',' (lv_params_16= ruleParameter )
            	                    	    {
            	                    	    match(input,33,FOLLOW_33_in_ruleInfixExpression18540); 

            	                    	            createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0(), null); 
            	                    	        
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8048:1: (lv_params_16= ruleParameter )
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8051:6: lv_params_16= ruleParameter
            	                    	    {
            	                    	     
            	                    	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0(), currentNode); 
            	                    	    	    
            	                    	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression18574);
            	                    	    lv_params_16=ruleParameter();
            	                    	    _fsp--;


            	                    	    	        if (current==null) {
            	                    	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	    	        }
            	                    	    	        
            	                    	    	        try {
            	                    	    	       		add(current, "params", lv_params_16, "Parameter", currentNode);
            	                    	    	        } catch (ValueConverterException vce) {
            	                    	    				handleValueConverterException(vce);
            	                    	    	        }
            	                    	    	        currentNode = currentNode.getParent();
            	                    	    	    

            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop137;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            match(input,35,FOLLOW_35_in_ruleInfixExpression18591); 

            	                    createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2(), null); 
            	                

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8074:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8074:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8074:7: () '.' (lv_type_20= RULE_ID )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8074:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression18619); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8094:1: (lv_type_20= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8096:6: lv_type_20= RULE_ID
            	    {
            	    lv_type_20=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression18641); 

            	    		createLeafNode(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0(), "type"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "type", lv_type_20, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRuleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8121:1: entryRuleCallExpression returns [EObject current=null] : iv_ruleCallExpression= ruleCallExpression EOF ;
    public final EObject entryRuleCallExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleCallExpression_StartIndex = input.index();
        EObject iv_ruleCallExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 185) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8121:56: (iv_ruleCallExpression= ruleCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8122:2: iv_ruleCallExpression= ruleCallExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleCallExpression_in_entryRuleCallExpression18685);
            iv_ruleCallExpression=ruleCallExpression();
            _fsp--;

             current =iv_ruleCallExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCallExpression18695); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCallExpression


    // $ANTLR start ruleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8129:1: ruleCallExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) ;
    public final EObject ruleCallExpression() throws RecognitionException {
        EObject current = null;
        int ruleCallExpression_StartIndex = input.index();
        EObject this_PrimaryExpression_0 = null;

        EObject lv_params_3 = null;

        EObject lv_params_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 186) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8134:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8135:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8135:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8136:5: this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_rulePrimaryExpression_in_ruleCallExpression18742);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;

             
                    current = this_PrimaryExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8144:1: ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==32) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8144:2: () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8144:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8145:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,32,FOLLOW_32_in_ruleCallExpression18760); 

            	            createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8164:1: ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )?
            	    int alt142=2;
            	    int LA142_0 = input.LA(1);

            	    if ( ((LA142_0>=RULE_ID && LA142_0<=RULE_REGEX)||(LA142_0>=18 && LA142_0<=19)||(LA142_0>=31 && LA142_0<=32)||(LA142_0>=42 && LA142_0<=43)||(LA142_0>=63 && LA142_0<=64)||LA142_0==80||(LA142_0>=108 && LA142_0<=117)) ) {
            	        alt142=1;
            	    }
            	    switch (alt142) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8164:2: (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8164:2: (lv_params_3= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8167:6: lv_params_3= ruleParameter
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_0_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression18795);
            	            lv_params_3=ruleParameter();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "params", lv_params_3, "Parameter", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8185:2: ( ',' (lv_params_5= ruleParameter ) )*
            	            loop141:
            	            do {
            	                int alt141=2;
            	                int LA141_0 = input.LA(1);

            	                if ( (LA141_0==33) ) {
            	                    alt141=1;
            	                }


            	                switch (alt141) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8185:3: ',' (lv_params_5= ruleParameter )
            	            	    {
            	            	    match(input,33,FOLLOW_33_in_ruleCallExpression18809); 

            	            	            createLeafNode(grammarAccess.getCallExpressionAccess().getCommaKeyword_1_2_1_0(), null); 
            	            	        
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8189:1: (lv_params_5= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8192:6: lv_params_5= ruleParameter
            	            	    {
            	            	     
            	            	    	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_1_1_0(), currentNode); 
            	            	    	    
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression18843);
            	            	    lv_params_5=ruleParameter();
            	            	    _fsp--;


            	            	    	        if (current==null) {
            	            	    	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	    	        }
            	            	    	        
            	            	    	        try {
            	            	    	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	            	    	        } catch (ValueConverterException vce) {
            	            	    				handleValueConverterException(vce);
            	            	    	        }
            	            	    	        currentNode = currentNode.getParent();
            	            	    	    

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop141;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,35,FOLLOW_35_in_ruleCallExpression18860); 

            	            createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCallExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8221:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePrimaryExpression_StartIndex = input.index();
        EObject iv_rulePrimaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 187) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8221:59: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8222:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression18895);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;

             current =iv_rulePrimaryExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryExpression18905); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8229:1: rulePrimaryExpression returns [EObject current=null] : (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int rulePrimaryExpression_StartIndex = input.index();
        EObject this_Literal_0 = null;

        EObject this_ConstructorCallExpression_1 = null;

        EObject this_VariableValue_2 = null;

        EObject this_PropertyValue_3 = null;

        EObject this_KeywordVariables_4 = null;

        EObject this_ParanthesizedExpression_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 188) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8234:6: ( (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8235:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8235:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            int alt144=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_HEX:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 31:
            case 42:
            case 80:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt144=1;
                }
                break;
            case 113:
                {
                alt144=2;
                }
                break;
            case RULE_ID:
                {
                alt144=3;
                }
                break;
            case RULE_PID:
                {
                alt144=4;
                }
                break;
            case 43:
            case 63:
            case 64:
                {
                alt144=5;
                }
                break;
            case 32:
                {
                alt144=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("8235:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )", 144, 0, input);

                throw nvae;
            }

            switch (alt144) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8236:5: this_Literal_0= ruleLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLiteral_in_rulePrimaryExpression18952);
                    this_Literal_0=ruleLiteral();
                    _fsp--;

                     
                            current = this_Literal_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8246:5: this_ConstructorCallExpression_1= ruleConstructorCallExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression18979);
                    this_ConstructorCallExpression_1=ruleConstructorCallExpression();
                    _fsp--;

                     
                            current = this_ConstructorCallExpression_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8256:5: this_VariableValue_2= ruleVariableValue
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVariableValue_in_rulePrimaryExpression19006);
                    this_VariableValue_2=ruleVariableValue();
                    _fsp--;

                     
                            current = this_VariableValue_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8266:5: this_PropertyValue_3= rulePropertyValue
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePropertyValue_in_rulePrimaryExpression19033);
                    this_PropertyValue_3=rulePropertyValue();
                    _fsp--;

                     
                            current = this_PropertyValue_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8276:5: this_KeywordVariables_4= ruleKeywordVariables
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression19060);
                    this_KeywordVariables_4=ruleKeywordVariables();
                    _fsp--;

                     
                            current = this_KeywordVariables_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8286:5: this_ParanthesizedExpression_5= ruleParanthesizedExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression19087);
                    this_ParanthesizedExpression_5=ruleParanthesizedExpression();
                    _fsp--;

                     
                            current = this_ParanthesizedExpression_5; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8301:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyValue_StartIndex = input.index();
        EObject iv_rulePropertyValue = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 189) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8301:55: (iv_rulePropertyValue= rulePropertyValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8302:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyValueRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyValue_in_entryRulePropertyValue19119);
            iv_rulePropertyValue=rulePropertyValue();
            _fsp--;

             current =iv_rulePropertyValue; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyValue19129); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyValue


    // $ANTLR start rulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8309:1: rulePropertyValue returns [EObject current=null] : (lv_name_0= RULE_PID ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;
        int rulePropertyValue_StartIndex = input.index();
        Token lv_name_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 190) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8314:6: ( (lv_name_0= RULE_PID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8315:1: (lv_name_0= RULE_PID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8315:1: (lv_name_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8317:6: lv_name_0= RULE_PID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyValue19175); 

            		createLeafNode(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyValueRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, "PID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyValue


    // $ANTLR start entryRuleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8342:1: entryRuleVariableValue returns [EObject current=null] : iv_ruleVariableValue= ruleVariableValue EOF ;
    public final EObject entryRuleVariableValue() throws RecognitionException {
        EObject current = null;
        int entryRuleVariableValue_StartIndex = input.index();
        EObject iv_ruleVariableValue = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 191) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8342:55: (iv_ruleVariableValue= ruleVariableValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8343:2: iv_ruleVariableValue= ruleVariableValue EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVariableValueRule(), currentNode); 
            pushFollow(FOLLOW_ruleVariableValue_in_entryRuleVariableValue19215);
            iv_ruleVariableValue=ruleVariableValue();
            _fsp--;

             current =iv_ruleVariableValue; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariableValue19225); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVariableValue


    // $ANTLR start ruleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8350:1: ruleVariableValue returns [EObject current=null] : (lv_name_0= RULE_ID ) ;
    public final EObject ruleVariableValue() throws RecognitionException {
        EObject current = null;
        int ruleVariableValue_StartIndex = input.index();
        Token lv_name_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 192) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8355:6: ( (lv_name_0= RULE_ID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8356:1: (lv_name_0= RULE_ID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8356:1: (lv_name_0= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8358:6: lv_name_0= RULE_ID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVariableValue19271); 

            		createLeafNode(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getVariableValueRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVariableValue


    // $ANTLR start entryRuleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8383:1: entryRuleKeywordVariables returns [EObject current=null] : iv_ruleKeywordVariables= ruleKeywordVariables EOF ;
    public final EObject entryRuleKeywordVariables() throws RecognitionException {
        EObject current = null;
        int entryRuleKeywordVariables_StartIndex = input.index();
        EObject iv_ruleKeywordVariables = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 193) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8383:58: (iv_ruleKeywordVariables= ruleKeywordVariables EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8384:2: iv_ruleKeywordVariables= ruleKeywordVariables EOF
            {
             currentNode = createCompositeNode(grammarAccess.getKeywordVariablesRule(), currentNode); 
            pushFollow(FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables19311);
            iv_ruleKeywordVariables=ruleKeywordVariables();
            _fsp--;

             current =iv_ruleKeywordVariables; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleKeywordVariables19321); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleKeywordVariables


    // $ANTLR start ruleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8391:1: ruleKeywordVariables returns [EObject current=null] : (lv_name_0= ( 'group' | 'layout' | 'properties' ) ) ;
    public final EObject ruleKeywordVariables() throws RecognitionException {
        EObject current = null;
        int ruleKeywordVariables_StartIndex = input.index();
        Token lv_name_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 194) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8396:6: ( (lv_name_0= ( 'group' | 'layout' | 'properties' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8397:1: (lv_name_0= ( 'group' | 'layout' | 'properties' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8397:1: (lv_name_0= ( 'group' | 'layout' | 'properties' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8399:6: lv_name_0= ( 'group' | 'layout' | 'properties' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8399:16: ( 'group' | 'layout' | 'properties' )
            int alt145=3;
            switch ( input.LA(1) ) {
            case 64:
                {
                alt145=1;
                }
                break;
            case 63:
                {
                alt145=2;
                }
                break;
            case 43:
                {
                alt145=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("8399:16: ( 'group' | 'layout' | 'properties' )", 145, 0, input);

                throw nvae;
            }

            switch (alt145) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8399:17: 'group'
                    {
                    match(input,64,FOLLOW_64_in_ruleKeywordVariables19367); 

                            createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameGroupKeyword_0_0(), "name"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8405:6: 'layout'
                    {
                    match(input,63,FOLLOW_63_in_ruleKeywordVariables19383); 

                            createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameLayoutKeyword_0_1(), "name"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8411:6: 'properties'
                    {
                    match(input,43,FOLLOW_43_in_ruleKeywordVariables19399); 

                            createLeafNode(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_0_2(), "name"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", /* lv_name_0 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleKeywordVariables


    // $ANTLR start entryRuleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8438:1: entryRuleConstructorCallExpression returns [EObject current=null] : iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF ;
    public final EObject entryRuleConstructorCallExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        EObject iv_ruleConstructorCallExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 195) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8438:67: (iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8439:2: iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression19446);
            iv_ruleConstructorCallExpression=ruleConstructorCallExpression();
            _fsp--;

             current =iv_ruleConstructorCallExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstructorCallExpression19456); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleConstructorCallExpression


    // $ANTLR start ruleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8446:1: ruleConstructorCallExpression returns [EObject current=null] : ( 'new' (lv_class_1= ruleQualifiedName ) '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' ) ;
    public final EObject ruleConstructorCallExpression() throws RecognitionException {
        EObject current = null;
        int ruleConstructorCallExpression_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_class_1 = null;

        EObject lv_params_3 = null;

        EObject lv_params_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 196) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8451:6: ( ( 'new' (lv_class_1= ruleQualifiedName ) '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8452:1: ( 'new' (lv_class_1= ruleQualifiedName ) '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8452:1: ( 'new' (lv_class_1= ruleQualifiedName ) '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8452:2: 'new' (lv_class_1= ruleQualifiedName ) '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')'
            {
            match(input,113,FOLLOW_113_in_ruleConstructorCallExpression19490); 

                    createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8456:1: (lv_class_1= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8459:6: lv_class_1= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getClassQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression19524);
            lv_class_1=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "class", lv_class_1, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,32,FOLLOW_32_in_ruleConstructorCallExpression19537); 

                    createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8481:1: ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=RULE_ID && LA147_0<=RULE_REGEX)||(LA147_0>=18 && LA147_0<=19)||(LA147_0>=31 && LA147_0<=32)||(LA147_0>=42 && LA147_0<=43)||(LA147_0>=63 && LA147_0<=64)||LA147_0==80||(LA147_0>=108 && LA147_0<=117)) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8481:2: (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8481:2: (lv_params_3= ruleParameter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8484:6: lv_params_3= ruleParameter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_3_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression19572);
                    lv_params_3=ruleParameter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "params", lv_params_3, "Parameter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8502:2: ( ',' (lv_params_5= ruleParameter ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==33) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8502:3: ',' (lv_params_5= ruleParameter )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleConstructorCallExpression19586); 

                    	            createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getCommaKeyword_3_1_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8506:1: (lv_params_5= ruleParameter )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8509:6: lv_params_5= ruleParameter
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_3_1_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression19620);
                    	    lv_params_5=ruleParameter();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "params", lv_params_5, "Parameter", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleConstructorCallExpression19637); 

                    createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_4(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleConstructorCallExpression


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8538:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteral_StartIndex = input.index();
        EObject iv_ruleLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 197) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8538:49: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8539:2: iv_ruleLiteral= ruleLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleLiteral_in_entryRuleLiteral19670);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;

             current =iv_ruleLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteral19680); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8546:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;
        int ruleLiteral_StartIndex = input.index();
        EObject this_ValueLiteral_0 = null;

        EObject this_RegexpLiteral_1 = null;

        EObject this_LiteralArray_2 = null;

        EObject this_LiteralObject_3 = null;

        EObject this_LiteralFunction_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 198) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8551:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8552:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8552:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            int alt148=5;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_HEX:
            case RULE_STRING:
            case RULE_REAL:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt148=1;
                }
                break;
            case RULE_REGEX:
                {
                alt148=2;
                }
                break;
            case 31:
                {
                alt148=3;
                }
                break;
            case 42:
                {
                alt148=4;
                }
                break;
            case 80:
                {
                alt148=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("8552:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8553:5: this_ValueLiteral_0= ruleValueLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleValueLiteral_in_ruleLiteral19727);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;

                     
                            current = this_ValueLiteral_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8563:5: this_RegexpLiteral_1= ruleRegexpLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleRegexpLiteral_in_ruleLiteral19754);
                    this_RegexpLiteral_1=ruleRegexpLiteral();
                    _fsp--;

                     
                            current = this_RegexpLiteral_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8573:5: this_LiteralArray_2= ruleLiteralArray
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralArrayParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLiteralArray_in_ruleLiteral19781);
                    this_LiteralArray_2=ruleLiteralArray();
                    _fsp--;

                     
                            current = this_LiteralArray_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8583:5: this_LiteralObject_3= ruleLiteralObject
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralObjectParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLiteralObject_in_ruleLiteral19808);
                    this_LiteralObject_3=ruleLiteralObject();
                    _fsp--;

                     
                            current = this_LiteralObject_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8593:5: this_LiteralFunction_4= ruleLiteralFunction
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLiteralFunction_in_ruleLiteral19835);
                    this_LiteralFunction_4=ruleLiteralFunction();
                    _fsp--;

                     
                            current = this_LiteralFunction_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8608:1: entryRuleLiteralArray returns [EObject current=null] : iv_ruleLiteralArray= ruleLiteralArray EOF ;
    public final EObject entryRuleLiteralArray() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteralArray_StartIndex = input.index();
        EObject iv_ruleLiteralArray = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 199) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8608:54: (iv_ruleLiteralArray= ruleLiteralArray EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8609:2: iv_ruleLiteralArray= ruleLiteralArray EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLiteralArrayRule(), currentNode); 
            pushFollow(FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray19867);
            iv_ruleLiteralArray=ruleLiteralArray();
            _fsp--;

             current =iv_ruleLiteralArray; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralArray19877); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralArray


    // $ANTLR start ruleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8616:1: ruleLiteralArray returns [EObject current=null] : ( '[' ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )? ']' ) ;
    public final EObject ruleLiteralArray() throws RecognitionException {
        EObject current = null;
        int ruleLiteralArray_StartIndex = input.index();
        EObject lv_element_1 = null;

        EObject lv_element_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 200) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8621:6: ( ( '[' ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )? ']' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8622:1: ( '[' ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )? ']' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8622:1: ( '[' ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )? ']' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8622:2: '[' ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )? ']'
            {
            match(input,31,FOLLOW_31_in_ruleLiteralArray19911); 

                    createLeafNode(grammarAccess.getLiteralArrayAccess().getLeftSquareBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8626:1: ( (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )* )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_REGEX)||(LA150_0>=18 && LA150_0<=19)||(LA150_0>=31 && LA150_0<=32)||(LA150_0>=42 && LA150_0<=43)||(LA150_0>=63 && LA150_0<=64)||LA150_0==80||(LA150_0>=108 && LA150_0<=117)) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8626:2: (lv_element_1= ruleExpression ) ( ',' (lv_element_3= ruleExpression ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8626:2: (lv_element_1= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8629:6: lv_element_1= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_1_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray19946);
                    lv_element_1=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "element", lv_element_1, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8647:2: ( ',' (lv_element_3= ruleExpression ) )*
                    loop149:
                    do {
                        int alt149=2;
                        int LA149_0 = input.LA(1);

                        if ( (LA149_0==33) ) {
                            alt149=1;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8647:3: ',' (lv_element_3= ruleExpression )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleLiteralArray19960); 

                    	            createLeafNode(grammarAccess.getLiteralArrayAccess().getCommaKeyword_1_1_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8651:1: (lv_element_3= ruleExpression )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8654:6: lv_element_3= ruleExpression
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_1_1_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray19994);
                    	    lv_element_3=ruleExpression();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "element", lv_element_3, "Expression", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop149;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,34,FOLLOW_34_in_ruleLiteralArray20011); 

                    createLeafNode(grammarAccess.getLiteralArrayAccess().getRightSquareBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralArray


    // $ANTLR start entryRuleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8683:1: entryRuleLiteralObject returns [EObject current=null] : iv_ruleLiteralObject= ruleLiteralObject EOF ;
    public final EObject entryRuleLiteralObject() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteralObject_StartIndex = input.index();
        EObject iv_ruleLiteralObject = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 201) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8683:55: (iv_ruleLiteralObject= ruleLiteralObject EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8684:2: iv_ruleLiteralObject= ruleLiteralObject EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLiteralObjectRule(), currentNode); 
            pushFollow(FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject20044);
            iv_ruleLiteralObject=ruleLiteralObject();
            _fsp--;

             current =iv_ruleLiteralObject; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralObject20054); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralObject


    // $ANTLR start ruleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8691:1: ruleLiteralObject returns [EObject current=null] : ( '{' ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )? '}' ) ;
    public final EObject ruleLiteralObject() throws RecognitionException {
        EObject current = null;
        int ruleLiteralObject_StartIndex = input.index();
        EObject lv_features_1 = null;

        EObject lv_features_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 202) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8696:6: ( ( '{' ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8697:1: ( '{' ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8697:1: ( '{' ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8697:2: '{' ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )? '}'
            {
            match(input,42,FOLLOW_42_in_ruleLiteralObject20088); 

                    createLeafNode(grammarAccess.getLiteralObjectAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8701:1: ( (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )* )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==RULE_ID||(LA152_0>=RULE_PID && LA152_0<=RULE_STRING)) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8701:2: (lv_features_1= ruleFeature ) ( ',' (lv_features_3= ruleFeature ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8701:2: (lv_features_1= ruleFeature )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8704:6: lv_features_1= ruleFeature
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_1_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject20123);
                    lv_features_1=ruleFeature();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "features", lv_features_1, "Feature", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8722:2: ( ',' (lv_features_3= ruleFeature ) )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==33) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8722:3: ',' (lv_features_3= ruleFeature )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleLiteralObject20137); 

                    	            createLeafNode(grammarAccess.getLiteralObjectAccess().getCommaKeyword_1_1_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8726:1: (lv_features_3= ruleFeature )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8729:6: lv_features_3= ruleFeature
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_1_1_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject20171);
                    	    lv_features_3=ruleFeature();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "features", lv_features_3, "Feature", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleLiteralObject20188); 

                    createLeafNode(grammarAccess.getLiteralObjectAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralObject


    // $ANTLR start entryRuleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:1: entryRuleLiteralFunction returns [EObject current=null] : iv_ruleLiteralFunction= ruleLiteralFunction EOF ;
    public final EObject entryRuleLiteralFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteralFunction_StartIndex = input.index();
        EObject iv_ruleLiteralFunction = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 203) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:57: (iv_ruleLiteralFunction= ruleLiteralFunction EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8759:2: iv_ruleLiteralFunction= ruleLiteralFunction EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); 
            pushFollow(FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction20221);
            iv_ruleLiteralFunction=ruleLiteralFunction();
            _fsp--;

             current =iv_ruleLiteralFunction; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralFunction20231); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralFunction


    // $ANTLR start ruleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8766:1: ruleLiteralFunction returns [EObject current=null] : ( 'function' '(' ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* ) ')' '{' (lv_statements_7= ruleStatements ) '}' ) ;
    public final EObject ruleLiteralFunction() throws RecognitionException {
        EObject current = null;
        int ruleLiteralFunction_StartIndex = input.index();
        Token lv_params_2=null;
        Token lv_params_4=null;
        EObject lv_statements_7 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 204) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8771:6: ( ( 'function' '(' ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* ) ')' '{' (lv_statements_7= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8772:1: ( 'function' '(' ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* ) ')' '{' (lv_statements_7= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8772:1: ( 'function' '(' ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* ) ')' '{' (lv_statements_7= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8772:2: 'function' '(' ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* ) ')' '{' (lv_statements_7= ruleStatements ) '}'
            {
            match(input,80,FOLLOW_80_in_ruleLiteralFunction20265); 

                    createLeafNode(grammarAccess.getLiteralFunctionAccess().getFunctionKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleLiteralFunction20274); 

                    createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8780:1: ( (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8780:2: (lv_params_2= RULE_ID ) ( ',' (lv_params_4= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8780:2: (lv_params_2= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8782:6: lv_params_2= RULE_ID
            {
            lv_params_2=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction20297); 

            		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParamsIDTerminalRuleCall_2_0_0(), "params"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		add(current, "params", lv_params_2, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8800:2: ( ',' (lv_params_4= RULE_ID ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==33) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8800:3: ',' (lv_params_4= RULE_ID )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleLiteralFunction20315); 

            	            createLeafNode(grammarAccess.getLiteralFunctionAccess().getCommaKeyword_2_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8804:1: (lv_params_4= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8806:6: lv_params_4= RULE_ID
            	    {
            	    lv_params_4=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction20337); 

            	    		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParamsIDTerminalRuleCall_2_1_1_0(), "params"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_4, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }

            match(input,35,FOLLOW_35_in_ruleLiteralFunction20357); 

                    createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightParenthesisKeyword_3(), null); 
                
            match(input,42,FOLLOW_42_in_ruleLiteralFunction20366); 

                    createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8832:1: (lv_statements_7= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8835:6: lv_statements_7= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getStatementsStatementsParserRuleCall_5_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_ruleLiteralFunction20400);
            lv_statements_7=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_7, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_ruleLiteralFunction20413); 

                    createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_6(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralFunction


    // $ANTLR start entryRuleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8864:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;
        int entryRuleFeature_StartIndex = input.index();
        EObject iv_ruleFeature = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 205) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8864:49: (iv_ruleFeature= ruleFeature EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8865:2: iv_ruleFeature= ruleFeature EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFeatureRule(), currentNode); 
            pushFollow(FOLLOW_ruleFeature_in_entryRuleFeature20446);
            iv_ruleFeature=ruleFeature();
            _fsp--;

             current =iv_ruleFeature; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeature20456); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeature


    // $ANTLR start ruleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8872:1: ruleFeature returns [EObject current=null] : ( (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_2= ruleExpression ) ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;
        int ruleFeature_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_value_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 206) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8877:6: ( ( (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_2= ruleExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:1: ( (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_2= ruleExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:1: ( (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_2= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:2: (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_2= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:2: (lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8880:6: lv_name_0= ( RULE_ID | RULE_PID | RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8880:16: ( RULE_ID | RULE_PID | RULE_STRING )
            int alt154=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt154=1;
                }
                break;
            case RULE_PID:
                {
                alt154=2;
                }
                break;
            case RULE_STRING:
                {
                alt154=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("8880:16: ( RULE_ID | RULE_PID | RULE_STRING )", 154, 0, input);

                throw nvae;
            }

            switch (alt154) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8880:18: RULE_ID
                    {
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFeature20504); 

                    		createLeafNode(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0_0(), "name"); 
                    	

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8885:7: RULE_PID
                    {
                    match(input,RULE_PID,FOLLOW_RULE_PID_in_ruleFeature20516); 

                    		createLeafNode(grammarAccess.getFeatureAccess().getNamePIDTerminalRuleCall_0_0_1(), "name"); 
                    	

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8890:7: RULE_STRING
                    {
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleFeature20528); 

                    		createLeafNode(grammarAccess.getFeatureAccess().getNameSTRINGTerminalRuleCall_0_0_2(), "name"); 
                    	

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,29,FOLLOW_29_in_ruleFeature20547); 

                    createLeafNode(grammarAccess.getFeatureAccess().getColonKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8913:1: (lv_value_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8916:6: lv_value_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getFeatureAccess().getValueExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleFeature20581);
            lv_value_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeature


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8941:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleValueLiteral_StartIndex = input.index();
        EObject iv_ruleValueLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 207) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8941:54: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8942:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral20618);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;

             current =iv_ruleValueLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueLiteral20628); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8949:1: ruleValueLiteral returns [EObject current=null] : (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_VoidLiteral_3= ruleVoidLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;
        int ruleValueLiteral_StartIndex = input.index();
        EObject this_BooleanLiteral_0 = null;

        EObject this_IntegerLiteral_1 = null;

        EObject this_NullLiteral_2 = null;

        EObject this_VoidLiteral_3 = null;

        EObject this_StringLiteral_4 = null;

        EObject this_RealLiteral_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 208) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8954:6: ( (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_VoidLiteral_3= ruleVoidLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8955:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_VoidLiteral_3= ruleVoidLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8955:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_VoidLiteral_3= ruleVoidLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral )
            int alt155=6;
            switch ( input.LA(1) ) {
            case 114:
            case 115:
                {
                alt155=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
                {
                alt155=2;
                }
                break;
            case 116:
                {
                alt155=3;
                }
                break;
            case 117:
                {
                alt155=4;
                }
                break;
            case RULE_STRING:
                {
                alt155=5;
                }
                break;
            case RULE_REAL:
                {
                alt155=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("8955:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_VoidLiteral_3= ruleVoidLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral )", 155, 0, input);

                throw nvae;
            }

            switch (alt155) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8956:5: this_BooleanLiteral_0= ruleBooleanLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral20675);
                    this_BooleanLiteral_0=ruleBooleanLiteral();
                    _fsp--;

                     
                            current = this_BooleanLiteral_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8966:5: this_IntegerLiteral_1= ruleIntegerLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral20702);
                    this_IntegerLiteral_1=ruleIntegerLiteral();
                    _fsp--;

                     
                            current = this_IntegerLiteral_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8976:5: this_NullLiteral_2= ruleNullLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleNullLiteral_in_ruleValueLiteral20729);
                    this_NullLiteral_2=ruleNullLiteral();
                    _fsp--;

                     
                            current = this_NullLiteral_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8986:5: this_VoidLiteral_3= ruleVoidLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getVoidLiteralParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVoidLiteral_in_ruleValueLiteral20756);
                    this_VoidLiteral_3=ruleVoidLiteral();
                    _fsp--;

                     
                            current = this_VoidLiteral_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8996:5: this_StringLiteral_4= ruleStringLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleStringLiteral_in_ruleValueLiteral20783);
                    this_StringLiteral_4=ruleStringLiteral();
                    _fsp--;

                     
                            current = this_StringLiteral_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9006:5: this_RealLiteral_5= ruleRealLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_5(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleRealLiteral_in_ruleValueLiteral20810);
                    this_RealLiteral_5=ruleRealLiteral();
                    _fsp--;

                     
                            current = this_RealLiteral_5; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9021:1: entryRuleBooleanLiteral returns [EObject current=null] : iv_ruleBooleanLiteral= ruleBooleanLiteral EOF ;
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleBooleanLiteral_StartIndex = input.index();
        EObject iv_ruleBooleanLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 209) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9021:56: (iv_ruleBooleanLiteral= ruleBooleanLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9022:2: iv_ruleBooleanLiteral= ruleBooleanLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBooleanLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral20842);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();
            _fsp--;

             current =iv_ruleBooleanLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBooleanLiteral20852); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBooleanLiteral


    // $ANTLR start ruleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9029:1: ruleBooleanLiteral returns [EObject current=null] : (lv_val_0= ( 'true' | 'false' ) ) ;
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;
        int ruleBooleanLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 210) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9034:6: ( (lv_val_0= ( 'true' | 'false' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9035:1: (lv_val_0= ( 'true' | 'false' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9035:1: (lv_val_0= ( 'true' | 'false' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9037:6: lv_val_0= ( 'true' | 'false' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9037:15: ( 'true' | 'false' )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==114) ) {
                alt156=1;
            }
            else if ( (LA156_0==115) ) {
                alt156=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("9037:15: ( 'true' | 'false' )", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9037:16: 'true'
                    {
                    match(input,114,FOLLOW_114_in_ruleBooleanLiteral20898); 

                            createLeafNode(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0(), "val"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9043:6: 'false'
                    {
                    match(input,115,FOLLOW_115_in_ruleBooleanLiteral20914); 

                            createLeafNode(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1(), "val"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getBooleanLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", /* lv_val_0 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBooleanLiteral


    // $ANTLR start entryRuleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9070:1: entryRuleIntegerLiteral returns [EObject current=null] : iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleIntegerLiteral_StartIndex = input.index();
        EObject iv_ruleIntegerLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 211) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9070:56: (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9071:2: iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getIntegerLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral20961);
            iv_ruleIntegerLiteral=ruleIntegerLiteral();
            _fsp--;

             current =iv_ruleIntegerLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIntegerLiteral20971); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIntegerLiteral


    // $ANTLR start ruleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9078:1: ruleIntegerLiteral returns [EObject current=null] : ( (lv_val_0= RULE_INT ) | RULE_HEX ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;
        int ruleIntegerLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 212) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9083:6: ( ( (lv_val_0= RULE_INT ) | RULE_HEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9084:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9084:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_INT) ) {
                alt157=1;
            }
            else if ( (LA157_0==RULE_HEX) ) {
                alt157=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("9084:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9084:2: (lv_val_0= RULE_INT )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9084:2: (lv_val_0= RULE_INT )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9086:6: lv_val_0= RULE_INT
                    {
                    lv_val_0=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleIntegerLiteral21018); 

                    		createLeafNode(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0_0(), "val"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "val", lv_val_0, "INT", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9105:6: RULE_HEX
                    {
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleIntegerLiteral21041); 
                     
                        createLeafNode(grammarAccess.getIntegerLiteralAccess().getHEXTerminalRuleCall_1(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIntegerLiteral


    // $ANTLR start entryRuleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9116:1: entryRuleNullLiteral returns [EObject current=null] : iv_ruleNullLiteral= ruleNullLiteral EOF ;
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleNullLiteral_StartIndex = input.index();
        EObject iv_ruleNullLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 213) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9116:53: (iv_ruleNullLiteral= ruleNullLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9117:2: iv_ruleNullLiteral= ruleNullLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNullLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral21073);
            iv_ruleNullLiteral=ruleNullLiteral();
            _fsp--;

             current =iv_ruleNullLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNullLiteral21083); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNullLiteral


    // $ANTLR start ruleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9124:1: ruleNullLiteral returns [EObject current=null] : (lv_val_0= 'null' ) ;
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;
        int ruleNullLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 214) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9129:6: ( (lv_val_0= 'null' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9130:1: (lv_val_0= 'null' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9130:1: (lv_val_0= 'null' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9132:6: lv_val_0= 'null'
            {
            lv_val_0=(Token)input.LT(1);
            match(input,116,FOLLOW_116_in_ruleNullLiteral21128); 

                    createLeafNode(grammarAccess.getNullLiteralAccess().getValNullKeyword_0(), "val"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNullLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", /* lv_val_0 */ input.LT(-1), "null", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNullLiteral


    // $ANTLR start entryRuleVoidLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9158:1: entryRuleVoidLiteral returns [EObject current=null] : iv_ruleVoidLiteral= ruleVoidLiteral EOF ;
    public final EObject entryRuleVoidLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleVoidLiteral_StartIndex = input.index();
        EObject iv_ruleVoidLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 215) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9158:53: (iv_ruleVoidLiteral= ruleVoidLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9159:2: iv_ruleVoidLiteral= ruleVoidLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVoidLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleVoidLiteral_in_entryRuleVoidLiteral21173);
            iv_ruleVoidLiteral=ruleVoidLiteral();
            _fsp--;

             current =iv_ruleVoidLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVoidLiteral21183); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVoidLiteral


    // $ANTLR start ruleVoidLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9166:1: ruleVoidLiteral returns [EObject current=null] : (lv_val_0= 'void' ) ;
    public final EObject ruleVoidLiteral() throws RecognitionException {
        EObject current = null;
        int ruleVoidLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 216) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9171:6: ( (lv_val_0= 'void' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9172:1: (lv_val_0= 'void' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9172:1: (lv_val_0= 'void' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9174:6: lv_val_0= 'void'
            {
            lv_val_0=(Token)input.LT(1);
            match(input,117,FOLLOW_117_in_ruleVoidLiteral21228); 

                    createLeafNode(grammarAccess.getVoidLiteralAccess().getValVoidKeyword_0(), "val"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getVoidLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", /* lv_val_0 */ input.LT(-1), "void", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVoidLiteral


    // $ANTLR start entryRuleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9200:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleStringLiteral_StartIndex = input.index();
        EObject iv_ruleStringLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 217) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9200:55: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9201:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral21273);
            iv_ruleStringLiteral=ruleStringLiteral();
            _fsp--;

             current =iv_ruleStringLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringLiteral21283); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStringLiteral


    // $ANTLR start ruleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9208:1: ruleStringLiteral returns [EObject current=null] : (lv_val_0= RULE_STRING ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;
        int ruleStringLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 218) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9213:6: ( (lv_val_0= RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9214:1: (lv_val_0= RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9214:1: (lv_val_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9216:6: lv_val_0= RULE_STRING
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleStringLiteral21329); 

            		createLeafNode(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "STRING", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStringLiteral


    // $ANTLR start entryRuleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9241:1: entryRuleRealLiteral returns [EObject current=null] : iv_ruleRealLiteral= ruleRealLiteral EOF ;
    public final EObject entryRuleRealLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleRealLiteral_StartIndex = input.index();
        EObject iv_ruleRealLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 219) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9241:53: (iv_ruleRealLiteral= ruleRealLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9242:2: iv_ruleRealLiteral= ruleRealLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRealLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral21369);
            iv_ruleRealLiteral=ruleRealLiteral();
            _fsp--;

             current =iv_ruleRealLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRealLiteral21379); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRealLiteral


    // $ANTLR start ruleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9249:1: ruleRealLiteral returns [EObject current=null] : (lv_val_0= RULE_REAL ) ;
    public final EObject ruleRealLiteral() throws RecognitionException {
        EObject current = null;
        int ruleRealLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 220) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9254:6: ( (lv_val_0= RULE_REAL ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9255:1: (lv_val_0= RULE_REAL )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9255:1: (lv_val_0= RULE_REAL )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9257:6: lv_val_0= RULE_REAL
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleRealLiteral21425); 

            		createLeafNode(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRealLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "REAL", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRealLiteral


    // $ANTLR start entryRuleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9282:1: entryRuleRegexpLiteral returns [EObject current=null] : iv_ruleRegexpLiteral= ruleRegexpLiteral EOF ;
    public final EObject entryRuleRegexpLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleRegexpLiteral_StartIndex = input.index();
        EObject iv_ruleRegexpLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 221) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9282:55: (iv_ruleRegexpLiteral= ruleRegexpLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9283:2: iv_ruleRegexpLiteral= ruleRegexpLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRegexpLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral21465);
            iv_ruleRegexpLiteral=ruleRegexpLiteral();
            _fsp--;

             current =iv_ruleRegexpLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpLiteral21475); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpLiteral


    // $ANTLR start ruleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9290:1: ruleRegexpLiteral returns [EObject current=null] : (lv_val_0= RULE_REGEX ) ;
    public final EObject ruleRegexpLiteral() throws RecognitionException {
        EObject current = null;
        int ruleRegexpLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 222) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9295:6: ( (lv_val_0= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9296:1: (lv_val_0= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9296:1: (lv_val_0= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9298:6: lv_val_0= RULE_REGEX
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpLiteral21521); 

            		createLeafNode(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRegexpLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "REGEX", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        EObject iv_ruleParanthesizedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 223) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:65: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9324:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression21561);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;

             current =iv_ruleParanthesizedExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParanthesizedExpression21571); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9331:1: ruleParanthesizedExpression returns [EObject current=null] : ( '(' this_Expression_1= ruleExpression ')' ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int ruleParanthesizedExpression_StartIndex = input.index();
        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 224) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9336:6: ( ( '(' this_Expression_1= ruleExpression ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:1: ( '(' this_Expression_1= ruleExpression ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:1: ( '(' this_Expression_1= ruleExpression ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:2: '(' this_Expression_1= ruleExpression ')'
            {
            match(input,32,FOLLOW_32_in_ruleParanthesizedExpression21605); 

                    createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                
            pushFollow(FOLLOW_ruleExpression_in_ruleParanthesizedExpression21627);
            this_Expression_1=ruleExpression();
            _fsp--;

             
                    current = this_Expression_1; 
                    currentNode = currentNode.getParent();
                
            match(input,35,FOLLOW_35_in_ruleParanthesizedExpression21635); 

                    createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start ruleVisibility
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9361:1: ruleVisibility returns [Enumerator current=null] : ( ( 'public' ) | ( 'private' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;
        int ruleVisibility_StartIndex = input.index();
         setCurrentLookahead(); resetLookahead(); 
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 225) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9365:6: ( ( ( 'public' ) | ( 'private' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9366:1: ( ( 'public' ) | ( 'private' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9366:1: ( ( 'public' ) | ( 'private' ) )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==118) ) {
                alt158=1;
            }
            else if ( (LA158_0==119) ) {
                alt158=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("9366:1: ( ( 'public' ) | ( 'private' ) )", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9366:2: ( 'public' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9366:2: ( 'public' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9366:4: 'public'
                    {
                    match(input,118,FOLLOW_118_in_ruleVisibility21682); 

                            current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9372:6: ( 'private' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9372:6: ( 'private' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9372:8: 'private'
                    {
                    match(input,119,FOLLOW_119_in_ruleVisibility21697); 

                            current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1(), null); 
                        

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVisibility


    // $ANTLR start ruleExecutionMode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9384:1: ruleExecutionMode returns [Enumerator current=null] : ( ( 'parallel' ) | ( 'sequential' ) ) ;
    public final Enumerator ruleExecutionMode() throws RecognitionException {
        Enumerator current = null;
        int ruleExecutionMode_StartIndex = input.index();
         setCurrentLookahead(); resetLookahead(); 
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 226) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9388:6: ( ( ( 'parallel' ) | ( 'sequential' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9389:1: ( ( 'parallel' ) | ( 'sequential' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9389:1: ( ( 'parallel' ) | ( 'sequential' ) )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==120) ) {
                alt159=1;
            }
            else if ( (LA159_0==49) ) {
                alt159=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("9389:1: ( ( 'parallel' ) | ( 'sequential' ) )", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9389:2: ( 'parallel' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9389:2: ( 'parallel' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9389:4: 'parallel'
                    {
                    match(input,120,FOLLOW_120_in_ruleExecutionMode21742); 

                            current = grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9395:6: ( 'sequential' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9395:6: ( 'sequential' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9395:8: 'sequential'
                    {
                    match(input,49,FOLLOW_49_in_ruleExecutionMode21757); 

                            current = grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1(), null); 
                        

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExecutionMode


    protected DFA27 dfa27 = new DFA27(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA64 dfa64 = new DFA64(this);
    static final String DFA27_eotS =
        "\35\uffff";
    static final String DFA27_eofS =
        "\35\uffff";
    static final String DFA27_minS =
        "\1\4\1\uffff\2\4\1\56\1\uffff\1\4\6\uffff\1\4\1\uffff\1\21\1\4\3"+
        "\uffff\4\4\1\21\4\4";
    static final String DFA27_maxS =
        "\1\170\1\uffff\2\63\1\56\1\uffff\1\52\6\uffff\1\63\1\uffff\2\104"+
        "\3\uffff\3\104\1\4\5\104";
    static final String DFA27_acceptS =
        "\1\uffff\1\14\3\uffff\1\7\1\uffff\1\12\1\13\1\1\1\2\1\3\1\4\1\uffff"+
        "\1\10\2\uffff\1\5\1\6\1\11\11\uffff";
    static final String DFA27_specialS =
        "\35\uffff}>";
    static final String[] DFA27_transitionS = {
            "\1\7\3\uffff\1\7\43\uffff\1\2\1\1\1\3\1\4\1\5\1\6\1\10\103\uffff"+
            "\3\7",
            "",
            "\1\12\45\uffff\1\11\10\uffff\1\12",
            "\1\14\45\uffff\1\13\10\uffff\1\14",
            "\1\15",
            "",
            "\1\20\3\uffff\1\17\41\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\45\uffff\1\21\10\uffff\1\22",
            "",
            "\1\23\17\uffff\1\23\10\uffff\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "",
            "",
            "",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\26\1\24\1\25\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\31",
            "\1\23\17\uffff\1\23\10\uffff\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7",
            "\1\34\1\32\1\33\10\uffff\1\27\1\30\1\23\17\uffff\1\23\10\uffff"+
            "\1\7\1\uffff\1\7\26\uffff\2\7"
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "()* loopback of 1065:4: ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= rulePart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )*";
        }
    }
    static final String DFA43_eotS =
        "\16\uffff";
    static final String DFA43_eofS =
        "\1\uffff\2\3\2\uffff\3\3\1\uffff\5\3";
    static final String DFA43_minS =
        "\1\4\1\21\1\4\2\uffff\4\4\1\21\4\4";
    static final String DFA43_maxS =
        "\1\10\2\46\2\uffff\3\46\1\4\5\46";
    static final String DFA43_acceptS =
        "\3\uffff\1\2\1\1\11\uffff";
    static final String DFA43_specialS =
        "\16\uffff}>";
    static final String[] DFA43_transitionS = {
            "\1\2\3\uffff\1\1",
            "\1\4\17\uffff\1\3\4\uffff\1\3",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff\1\3",
            "",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff\1\3",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff\1\3",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff\1\3",
            "\1\12",
            "\1\4\17\uffff\1\3\4\uffff\1\3",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff"+
            "\1\3",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff"+
            "\1\3",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff"+
            "\1\3",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\4\17\uffff\1\3\4\uffff"+
            "\1\3"
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )";
        }
    }
    static final String DFA61_eotS =
        "\17\uffff";
    static final String DFA61_eofS =
        "\2\uffff\1\1\2\uffff\3\1\1\uffff\1\1\1\uffff\4\1";
    static final String DFA61_minS =
        "\1\4\1\uffff\1\4\2\uffff\4\4\1\21\1\uffff\4\4";
    static final String DFA61_maxS =
        "\1\74\1\uffff\1\76\2\uffff\3\76\1\4\1\76\1\uffff\4\76";
    static final String DFA61_acceptS =
        "\1\uffff\1\1\1\uffff\1\3\1\4\5\uffff\1\2\4\uffff";
    static final String DFA61_specialS =
        "\17\uffff}>";
    static final String[] DFA61_transitionS = {
            "\1\2\3\uffff\1\1\41\uffff\1\3\21\uffff\1\4",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff\1"+
            "\1",
            "",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff\1"+
            "\1",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff\1"+
            "\1",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff\1"+
            "\1",
            "\1\13",
            "\1\12\24\uffff\1\1\27\uffff\1\1",
            "",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\27\uffff"+
            "\1\1"
    };

    static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
    static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
    static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
    static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
    static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
    static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
    static final short[][] DFA61_transition;

    static {
        int numStates = DFA61_transitionS.length;
        DFA61_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = DFA61_eot;
            this.eof = DFA61_eof;
            this.min = DFA61_min;
            this.max = DFA61_max;
            this.accept = DFA61_accept;
            this.special = DFA61_special;
            this.transition = DFA61_transition;
        }
        public String getDescription() {
            return "3014:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )";
        }
    }
    static final String DFA64_eotS =
        "\144\uffff";
    static final String DFA64_eofS =
        "\11\uffff\2\17\6\uffff\3\17\1\uffff\1\17\2\uffff\6\17\5\uffff\25"+
        "\17\1\uffff\2\17\51\uffff";
    static final String DFA64_minS =
        "\6\4\1\21\2\4\1\21\5\4\2\uffff\4\4\1\21\2\4\1\46\5\4\1\41\32\4\2"+
        "\46\22\4\1\42\26\4";
    static final String DFA64_maxS =
        "\1\4\4\21\1\4\1\21\1\10\1\21\2\76\3\21\1\40\2\uffff\3\76\1\4\1\76"+
        "\2\11\6\76\5\43\25\76\1\11\2\76\51\43";
    static final String DFA64_acceptS =
        "\17\uffff\1\2\1\1\123\uffff";
    static final String DFA64_specialS =
        "\144\uffff}>";
    static final String[] DFA64_transitionS = {
            "\1\1",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\10",
            "\1\7",
            "\1\12\3\uffff\1\11",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\16\24\uffff\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\31\1\32\1\33\1\uffff\1\30\1\34\25\uffff\1\26\1\27",
            "",
            "",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\35",
            "\1\16\24\uffff\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\17\23\uffff"+
            "\1\20\3\uffff\1\17",
            "\1\116\1\117\1\120\1\uffff\1\115\1\121",
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\17\23\uffff\1\20\3\uffff\1\17",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72"
    };

    static final short[] DFA64_eot = DFA.unpackEncodedString(DFA64_eotS);
    static final short[] DFA64_eof = DFA.unpackEncodedString(DFA64_eofS);
    static final char[] DFA64_min = DFA.unpackEncodedStringToUnsignedChars(DFA64_minS);
    static final char[] DFA64_max = DFA.unpackEncodedStringToUnsignedChars(DFA64_maxS);
    static final short[] DFA64_accept = DFA.unpackEncodedString(DFA64_acceptS);
    static final short[] DFA64_special = DFA.unpackEncodedString(DFA64_specialS);
    static final short[][] DFA64_transition;

    static {
        int numStates = DFA64_transitionS.length;
        DFA64_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA64_transition[i] = DFA.unpackEncodedString(DFA64_transitionS[i]);
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = DFA64_eot;
            this.eof = DFA64_eof;
            this.min = DFA64_min;
            this.max = DFA64_max;
            this.accept = DFA64_accept;
            this.special = DFA64_special;
            this.transition = DFA64_transition;
        }
        public String getDescription() {
            return "3116:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )";
        }
    }
 

    public static final BitSet FOLLOW_ruleBeeModel_in_entryRuleBeeModel80 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBeeModel90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_ruleBeeModel149 = new BitSet(new long[]{0x0002009000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_ruleUnit_in_ruleBeeModel188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName277 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName298 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName324 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName350 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_15_in_ruleQualifiedName371 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName386 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName407 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName433 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName459 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG534 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleHIDDENBUG545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_ruleHIDDENBUG583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyName_in_entryRulePropertyName625 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyName636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyName675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName718 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEscapedQualifiedName729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName846 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterfaceName857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleInterfaceName903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_entryRuleCompoundName946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundName957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1004 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCompoundName1022 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnitName_in_entryRuleUnitName1088 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnitName1099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_entryRulePartName1188 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartName1199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_rulePartName1245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSeparator_in_entryRuleSeparator1288 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSeparator1299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_ruleSeparator1337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_ruleSeparator1356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleSeparator1375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleSeparator1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_ruleSeparator1413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleSeparator1432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_ruleSeparator1451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleSeparator1470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleSeparator1489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleSeparator1508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleSeparator1527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_ruleSeparator1546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleSeparator1565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleSeparator1584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1623 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAlfanumSym1634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1675 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1701 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1727 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1753 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleSeparator_in_ruleAlfanumSym1782 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1808 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1834 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1860 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1886 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleVersion_in_entryRuleVersion1932 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersion1943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVersion1983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_ruleVersion2016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersionRange_in_entryRuleVersionRange2060 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersionRange2071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleVersionRange2111 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_32_in_ruleVersionRange2130 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2153 = new BitSet(new long[]{0x0000000E00000000L});
    public static final BitSet FOLLOW_33_in_ruleVersionRange2172 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2194 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_34_in_ruleVersionRange2215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleVersionRange2234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_entryRuleImport2307 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImport2317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleImport2351 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImport2385 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_37_in_ruleImport2399 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleImport2410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit2443 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnit2453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleUnit2512 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleUnit2526 = new BitSet(new long[]{0x0000070000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleUnit2560 = new BitSet(new long[]{0x0000070000000000L});
    public static final BitSet FOLLOW_40_in_ruleUnit2575 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleUnit2609 = new BitSet(new long[]{0x0000060000000000L});
    public static final BitSet FOLLOW_41_in_ruleUnit2625 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2659 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_33_in_ruleUnit2673 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2707 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2724 = new BitSet(new long[]{0x0007F80000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_43_in_ruleUnit2734 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2768 = new BitSet(new long[]{0x0007F80000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_44_in_ruleUnit2785 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2794 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2829 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2842 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit2853 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_44_in_ruleUnit2870 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2904 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2917 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit2934 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2943 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit2978 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2991 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3002 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3019 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3053 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3066 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_47_in_ruleUnit3083 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3092 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3101 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3136 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3149 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3160 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_47_in_ruleUnit3177 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3186 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3220 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3233 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_48_in_ruleUnit3250 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_ruleUnit3284 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_49_in_ruleUnit3305 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3314 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3348 = new BitSet(new long[]{0x0000200000000110L});
    public static final BitSet FOLLOW_45_in_ruleUnit3362 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_49_in_ruleUnit3379 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3413 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_rulePart_in_ruleUnit3458 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_50_in_ruleUnit3478 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3487 = new BitSet(new long[]{0x0000200000000100L,0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3521 = new BitSet(new long[]{0x0000200000000100L,0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_ruleUnit3535 = new BitSet(new long[]{0x0007F00000000110L,0x01C0000000000000L});
    public static final BitSet FOLLOW_45_in_ruleUnit3547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3580 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability3590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleProvidedCapability3625 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleProvidedCapability3659 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3699 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3712 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3746 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3760 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleProvidedCapability3794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3833 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability3843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleRequiredCapability3878 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleRequiredCapability3912 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3952 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability3965 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3999 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability4013 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleRequiredCapability4047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4086 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedPropertyStatements4096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4143 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_ruleNamedPropertyStatements4186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_entryRulePropertyStatements4223 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyStatements4233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rulePropertyStatements4267 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_51_in_rulePropertyStatements4278 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePropertyStatements4312 = new BitSet(new long[]{0x0210040000000080L});
    public static final BitSet FOLLOW_ruleUnsetPropertyStatement_in_rulePropertyStatements4353 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_rulePropertyStatements4397 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_rulePropertyStatements4441 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_45_in_rulePropertyStatements4457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_entryRulePropertyStatement4490 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyStatement4500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rulePropertyStatement4546 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_rulePropertyStatement4594 = new BitSet(new long[]{0x01E0000002000000L});
    public static final BitSet FOLLOW_25_in_rulePropertyStatement4620 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_53_in_rulePropertyStatement4636 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_54_in_rulePropertyStatement4652 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_55_in_rulePropertyStatement4668 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_56_in_rulePropertyStatement4684 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_rulePropertyStatement4733 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePropertyStatement4746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyStatement_in_entryRuleUnsetPropertyStatement4779 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnsetPropertyStatement4789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleUnsetPropertyStatement4823 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleUnsetPropertyStatement4857 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnsetPropertyStatement4870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnnotationStatement_in_entryRuleAnnotationStatement4903 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationStatement4913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleAnnotationStatement4948 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleAnnotationStatement4982 = new BitSet(new long[]{0x0010000000000080L});
    public static final BitSet FOLLOW_52_in_ruleAnnotationStatement5009 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleAnnotationStatement5057 = new BitSet(new long[]{0x01E0000002000000L});
    public static final BitSet FOLLOW_25_in_ruleAnnotationStatement5083 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_53_in_ruleAnnotationStatement5099 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_54_in_ruleAnnotationStatement5115 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_55_in_ruleAnnotationStatement5131 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_56_in_ruleAnnotationStatement5147 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_ruleAnnotationStatement5196 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAnnotationStatement5209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_entryRulePropertyExpression5242 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyExpression5252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rulePropertyExpression5298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronization_in_entryRuleSynchronization5329 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronization5339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5398 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ruleSynchronization5412 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5446 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_38_in_ruleSynchronization5461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5495 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronizedPart5506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5554 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_58_in_ruleSynchronizedPart5573 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_entryRulePathGroup5674 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathGroup5684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rulePathGroup5719 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePathGroup5753 = new BitSet(new long[]{0x1800000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup5795 = new BitSet(new long[]{0x0000004280000000L});
    public static final BitSet FOLLOW_33_in_rulePathGroup5810 = new BitSet(new long[]{0x1000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup5844 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_31_in_rulePathGroup5878 = new BitSet(new long[]{0x1000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup5925 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_33_in_rulePathGroup5939 = new BitSet(new long[]{0x1000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup5973 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_34_in_rulePathGroup5988 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePathGroup5999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rulePathGroup6016 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePathGroup6025 = new BitSet(new long[]{0x0218000000000080L});
    public static final BitSet FOLLOW_57_in_rulePathGroup6036 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_rulePathGroup6070 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePathGroup6083 = new BitSet(new long[]{0x0218200000000080L});
    public static final BitSet FOLLOW_ruleAnnotationStatement_in_rulePathGroup6124 = new BitSet(new long[]{0x0218200000000080L});
    public static final BitSet FOLLOW_45_in_rulePathGroup6139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathExpression_in_entryRulePathExpression6174 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathExpression6184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_rulePathExpression6218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_rulePathExpression6238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_entryRuleExprStatement6270 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExprStatement6280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_ruleExprStatement6314 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleExprStatement6323 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExprStatement6357 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleExprStatement6370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_entryRulePath6404 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePath6415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_rulePath6455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rulePath6481 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath6505 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath6524 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath6546 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath6567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisite_in_entryRulePrerequisite6608 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisite6618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rulePrerequisite6665 = new BitSet(new long[]{0x1008040000000110L});
    public static final BitSet FOLLOW_51_in_rulePrerequisite6689 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePrerequisite6723 = new BitSet(new long[]{0x1000040000000110L});
    public static final BitSet FOLLOW_RULE_ID_in_rulePrerequisite6752 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_rulePrerequisite6769 = new BitSet(new long[]{0x1000040000000110L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite6806 = new BitSet(new long[]{0x4000004000000000L});
    public static final BitSet FOLLOW_ruleClosure_in_rulePrerequisite6844 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePrerequisite6860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClosure_in_entryRuleClosure6893 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClosure6903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleClosure6937 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleClosure6946 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_43_in_ruleClosure6957 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleClosure6966 = new BitSet(new long[]{0x0210000000000080L});
    public static final BitSet FOLLOW_57_in_ruleClosure6977 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleClosure7011 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleClosure7024 = new BitSet(new long[]{0x0210200000000080L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_ruleClosure7065 = new BitSet(new long[]{0x0210200000000080L});
    public static final BitSet FOLLOW_45_in_ruleClosure7080 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_48_in_ruleClosure7097 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleClosure7131 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_45_in_ruleClosure7147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry7180 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisiteEntry7190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry7237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry7264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry7291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_rulePrerequisiteEntry7318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_entryRulePartInSelf7350 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartInSelf7360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_rulePartInSelf7418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart7454 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCapabilityReferencedPart7464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7524 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7537 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7571 = new BitSet(new long[]{0x0400000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7585 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7619 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_ruleCapabilityReferencedPart7634 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleCapabilityReferencedPart7668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart7714 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7727 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart7761 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart7775 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart7809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences7849 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundReferences7859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundReferences7893 = new BitSet(new long[]{0x3008240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleCompoundReferences7927 = new BitSet(new long[]{0x3008240000000110L});
    public static final BitSet FOLLOW_45_in_ruleCompoundReferences7941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePart_in_entryRulePart7974 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePart7984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_rulePart8043 = new BitSet(new long[]{0x0002000000000110L,0x0100000000000000L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_rulePart8082 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_rulePart8096 = new BitSet(new long[]{0x0000140000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_44_in_rulePart8098 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_rulePart8132 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_33_in_rulePart8146 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_rulePart8180 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_rulePart8222 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_rulePart8261 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePart8275 = new BitSet(new long[]{0xC0090C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_43_in_rulePart8285 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_rulePart8319 = new BitSet(new long[]{0xC0090C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleAdvice_in_rulePart8359 = new BitSet(new long[]{0xC0080C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleActionInputGroup_in_rulePart8398 = new BitSet(new long[]{0xC0080C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleLayout_in_rulePart8437 = new BitSet(new long[]{0xC0080C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_rulePart8476 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_rulePart8489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter8522 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParameter8532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParameter8590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayout_in_entryRuleLayout8626 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLayout8636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleLayout8671 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleLayout8705 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_ruleLayout8720 = new BitSet(new long[]{0x0000040000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleLayout8754 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleLayout8793 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleLayout8807 = new BitSet(new long[]{0x1808200000020110L});
    public static final BitSet FOLLOW_rulePathGroup_in_ruleLayout8841 = new BitSet(new long[]{0x1808200000020110L});
    public static final BitSet FOLLOW_45_in_ruleLayout8855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActionInputGroup_in_entryRuleActionInputGroup8888 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleActionInputGroup8898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleActionInputGroup8932 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_ruleActionInputGroup8966 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleActionInputGroup9005 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleActionInputGroup9019 = new BitSet(new long[]{0x3008240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleActionInputGroup9053 = new BitSet(new long[]{0x3008240000000110L});
    public static final BitSet FOLLOW_45_in_ruleActionInputGroup9067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration9100 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRepositoryConfiguration9110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_ruleRepositoryConfiguration9170 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_65_in_ruleRepositoryConfiguration9190 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration9224 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration9264 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleRepositoryConfiguration9278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_entryRuleURI9312 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleURI9323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleURI9362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice9404 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedAdvice9414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedAdvice9461 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice9504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvice_in_entryRuleAdvice9541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvice9551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleAdvice9585 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdvice9607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice9639 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundAdvice9649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundAdvice9683 = new BitSet(new long[]{0x0000200040028010L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice9718 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleCompoundAdvice9731 = new BitSet(new long[]{0x0000200040028010L,0x0000000000000004L});
    public static final BitSet FOLLOW_45_in_ruleCompoundAdvice9742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement9775 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdviceStatement9785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleAdviceStatement9844 = new BitSet(new long[]{0x0000040002000000L});
    public static final BitSet FOLLOW_25_in_ruleAdviceStatement9859 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdviceStatement9893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement9938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath9976 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePath9986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10045 = new BitSet(new long[]{0x0000000040008010L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath10084 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10123 = new BitSet(new long[]{0x0000000040008010L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath10161 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_entryRuleAdvicePathSeparator10200 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathSeparator10210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathChildren_in_ruleAdvicePathSeparator10256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathChildren_in_entryRuleAdvicePathChildren10287 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathChildren10297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleAdvicePathChildren10340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_entryRuleAdvicePathElement10373 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathElement10383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAdvicePathElement10435 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_ruleWildcardNode_in_ruleAdvicePathElement10449 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_15_in_ruleAdvicePathElement10459 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_31_in_ruleAdvicePathElement10484 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdvicePathElement10518 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleAdvicePathElement10531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleAdvicePathElement10561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNode_in_entryRuleWildcardNode10608 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardNode10619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleWildcardNode10657 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_ruleWildcardNode10671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilter_in_entryRuleFilter10711 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilter10721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleFilter10755 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFilter10789 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleFilter10802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_entryRulePreConditionAssert10835 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePreConditionAssert10845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_rulePreConditionAssert10891 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePreConditionAssert10913 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePreConditionAssert10947 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_45_in_rulePreConditionAssert10961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_entryRulePostConditionAssert10994 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostConditionAssert11004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_rulePostConditionAssert11050 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePostConditionAssert11072 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePostConditionAssert11106 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_45_in_rulePostConditionAssert11120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression11153 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssertionExpression11163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_ruleAssertionExpression11197 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAssertionExpression11231 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_33_in_ruleAssertionExpression11245 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleAssertionExpression11267 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAssertionExpression11286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement11319 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement11329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_ruleStatement11376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_ruleStatement11403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_ruleStatement11430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_ruleStatement11457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_ruleStatement11484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleStatement11511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleStatement11540 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleStatement11550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_ruleStatement11579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_ruleStatement11606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_ruleStatement11633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_ruleStatement11660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_ruleStatement11687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_ruleStatement11714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_ruleStatement11741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_ruleStatement11768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement11800 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBreakStatement11810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleBreakStatement11853 = new BitSet(new long[]{0x0000004000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleBreakStatement11875 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleBreakStatement11893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement11926 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleContinueStatement11936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleContinueStatement11979 = new BitSet(new long[]{0x0000004000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleContinueStatement12001 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleContinueStatement12019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12052 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundStatement12062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundStatement12096 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCompoundStatement12130 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleCompoundStatement12143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatements_in_entryRuleStatements12176 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatements12186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleStatements12244 = new BitSet(new long[]{0xC0000C41801C07F2L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12281 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWhileStatement12291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleWhileStatement12325 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleWhileStatement12334 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWhileStatement12368 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleWhileStatement12381 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWhileStatement12415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement12452 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitchStatement12462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleSwitchStatement12496 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleSwitchStatement12505 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000810001L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleSwitchStatement12539 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleSwitchStatement12552 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleSwitchStatement12561 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_ruleCase_in_ruleSwitchStatement12595 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_74_in_ruleSwitchStatement12610 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleSwitchStatement12619 = new BitSet(new long[]{0xC0002C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleSwitchStatement12653 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleSwitchStatement12669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCase_in_entryRuleCase12702 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCase12712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleCase12746 = new BitSet(new long[]{0x0000000000000360L,0x003C000000000000L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleCase12780 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleCase12793 = new BitSet(new long[]{0xC0000C41801C07F2L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCase12827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_entryRuleForStatement12865 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleForStatement12875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleForStatement12918 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleForStatement12927 = new BitSet(new long[]{0x80000C41800C07F0L,0x003FF00000812001L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_ruleForStatement12961 = new BitSet(new long[]{0x0000004000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_38_in_ruleForStatement12977 = new BitSet(new long[]{0x80000C41800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement13011 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleForStatement13025 = new BitSet(new long[]{0x80000C09800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpressionList_in_ruleForStatement13059 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_77_in_ruleForStatement13093 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement13140 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleForStatement13155 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleForStatement13189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement13226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDoWhileStatement13236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_ruleDoWhileStatement13270 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleDoWhileStatement13304 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_ruleDoWhileStatement13317 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleDoWhileStatement13326 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleDoWhileStatement13360 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleDoWhileStatement13373 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleDoWhileStatement13382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13415 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStatement13425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleReturnStatement13459 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleReturnStatement13493 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleReturnStatement13506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement13539 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionStatement13549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleFunctionStatement13583 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement13605 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleFunctionStatement13622 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement13645 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleFunctionStatement13663 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement13685 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleFunctionStatement13705 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleFunctionStatement13714 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleFunctionStatement13748 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleFunctionStatement13761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_entryRuleIfStatement13794 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfStatement13804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_ruleIfStatement13838 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleIfStatement13847 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleIfStatement13881 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleIfStatement13894 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement13928 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_ruleIfStatement13942 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement13976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement14015 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabelStatement14025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleLabelStatement14059 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLabelStatement14081 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleLabelStatement14098 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleLabelStatement14132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement14169 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThrowStatement14179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_ruleThrowStatement14213 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleThrowStatement14247 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleThrowStatement14260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement14293 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTryCatchStatement14303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_ruleTryCatchStatement14337 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement14371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement14411 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement14495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock14533 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCatchBlock14543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_ruleCatchBlock14577 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleCatchBlock14586 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleCatchBlock14608 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleCatchBlock14625 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleCatchBlock14659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock14696 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFinallyBlock14706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_ruleFinallyBlock14740 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock14774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_entryRuleWithStatement14811 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWithStatement14821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleWithStatement14855 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleWithStatement14864 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWithStatement14898 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleWithStatement14911 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWithStatement14945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList14984 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpressionList14994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList15053 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleVarExpressionList15067 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000810001L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList15101 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleExpressionList_in_entryRuleExpressionList15140 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpressionList15150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList15209 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleExpressionList15223 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList15257 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_entryRuleVarExpression15296 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpression15306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression15353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_ruleVarExpression15368 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVarExpression15390 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_ruleVarExpression15408 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression15442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression15482 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression15492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueExpression_in_ruleExpression15538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueExpression_in_entryRuleValueExpression15569 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueExpression15579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleValueExpression15637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression15673 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression15683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainExpression_in_ruleAssignmentExpression15730 = new BitSet(new long[]{0x01E0000002000002L,0x000000007F000000L});
    public static final BitSet FOLLOW_25_in_ruleAssignmentExpression15761 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_53_in_ruleAssignmentExpression15777 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_54_in_ruleAssignmentExpression15793 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_55_in_ruleAssignmentExpression15809 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_56_in_ruleAssignmentExpression15825 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_88_in_ruleAssignmentExpression15841 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_89_in_ruleAssignmentExpression15857 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_90_in_ruleAssignmentExpression15873 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_91_in_ruleAssignmentExpression15889 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_92_in_ruleAssignmentExpression15905 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_93_in_ruleAssignmentExpression15921 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_94_in_ruleAssignmentExpression15937 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression15986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainExpression_in_entryRuleChainExpression16025 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainExpression16035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleChainExpression16081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression16112 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainedExpression16122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleChainedExpression16168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_entryRuleIfExpression16199 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfExpression16209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_ruleIfExpression16256 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_ruleIfExpression16274 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression16308 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleIfExpression16321 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression16355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression16394 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression16404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression16451 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_ruleOrExpression16481 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression16528 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression16567 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression16577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16624 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_ruleAndExpression16654 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression16701 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression16740 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBitwiseExpression16750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16797 = new BitSet(new long[]{0x0000000000800002L,0x0000000600000000L});
    public static final BitSet FOLLOW_23_in_ruleBitwiseExpression16828 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_97_in_ruleBitwiseExpression16844 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_98_in_ruleBitwiseExpression16860 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression16909 = new BitSet(new long[]{0x0000000000800002L,0x0000000600000000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression16948 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression16958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression17005 = new BitSet(new long[]{0x0000000018000002L,0x00000FF800000000L});
    public static final BitSet FOLLOW_99_in_ruleRelationalExpression17036 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_100_in_ruleRelationalExpression17052 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_101_in_ruleRelationalExpression17068 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_102_in_ruleRelationalExpression17084 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_103_in_ruleRelationalExpression17100 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_104_in_ruleRelationalExpression17116 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_105_in_ruleRelationalExpression17132 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_28_in_ruleRelationalExpression17148 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_27_in_ruleRelationalExpression17164 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_106_in_ruleRelationalExpression17180 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_107_in_ruleRelationalExpression17196 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression17245 = new BitSet(new long[]{0x0000000018000002L,0x00000FF800000000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression17284 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression17294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17341 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_24_in_ruleAdditiveExpression17372 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_18_in_ruleAdditiveExpression17388 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression17437 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression17476 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression17486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17533 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_26_in_ruleMultiplicativeExpression17564 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_17_in_ruleMultiplicativeExpression17580 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_22_in_ruleMultiplicativeExpression17596 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression17645 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression17684 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression17694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression17741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression17768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression17800 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression17810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleUnaryExpression17857 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_18_in_ruleUnaryExpression17873 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_108_in_ruleUnaryExpression17889 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_109_in_ruleUnaryExpression17905 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_110_in_ruleUnaryExpression17921 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_111_in_ruleUnaryExpression17937 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_112_in_ruleUnaryExpression17953 = new BitSet(new long[]{0x80000C01800007F0L,0x003E000000010001L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryExpression18002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression18039 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression18049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression18096 = new BitSet(new long[]{0x0000000000000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_109_in_rulePostopExpression18127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_rulePostopExpression18143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression18193 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression18203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_ruleInfixExpression18250 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression18269 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression18291 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression18308 = new BitSet(new long[]{0x80000C09800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18343 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression18357 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18391 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression18408 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_31_in_ruleInfixExpression18434 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression18468 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleInfixExpression18481 = new BitSet(new long[]{0x0000000180008002L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression18491 = new BitSet(new long[]{0x80000C09800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18526 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression18540 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression18574 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression18591 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression18619 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression18641 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_entryRuleCallExpression18685 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCallExpression18695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleCallExpression18742 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_ruleCallExpression18760 = new BitSet(new long[]{0x80000C09800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression18795 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleCallExpression18809 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression18843 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleCallExpression18860 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression18895 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression18905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression18952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression18979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_rulePrimaryExpression19006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_rulePrimaryExpression19033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression19060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression19087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue19119 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue19129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyValue19175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_entryRuleVariableValue19215 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableValue19225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVariableValue19271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables19311 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleKeywordVariables19321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleKeywordVariables19367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_ruleKeywordVariables19383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleKeywordVariables19399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression19446 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstructorCallExpression19456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_ruleConstructorCallExpression19490 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression19524 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleConstructorCallExpression19537 = new BitSet(new long[]{0x80000C09800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression19572 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleConstructorCallExpression19586 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression19620 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleConstructorCallExpression19637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral19670 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteral19680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral19727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_ruleLiteral19754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_ruleLiteral19781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_ruleLiteral19808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_ruleLiteral19835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray19867 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralArray19877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleLiteralArray19911 = new BitSet(new long[]{0x80000C05800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray19946 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralArray19960 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray19994 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_34_in_ruleLiteralArray20011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject20044 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralObject20054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleLiteralObject20088 = new BitSet(new long[]{0x0000200000000190L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject20123 = new BitSet(new long[]{0x0000200200000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralObject20137 = new BitSet(new long[]{0x0000000000000190L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject20171 = new BitSet(new long[]{0x0000200200000000L});
    public static final BitSet FOLLOW_45_in_ruleLiteralObject20188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction20221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralFunction20231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleLiteralFunction20265 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleLiteralFunction20274 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction20297 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleLiteralFunction20315 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction20337 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleLiteralFunction20357 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleLiteralFunction20366 = new BitSet(new long[]{0xC0000C41801C07F0L,0x003FF000009BD3C1L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleLiteralFunction20400 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleLiteralFunction20413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeature_in_entryRuleFeature20446 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeature20456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFeature20504 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_RULE_PID_in_ruleFeature20516 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFeature20528 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleFeature20547 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFeature20581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral20618 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral20628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral20675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral20702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_ruleValueLiteral20729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVoidLiteral_in_ruleValueLiteral20756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_ruleValueLiteral20783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_ruleValueLiteral20810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral20842 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBooleanLiteral20852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_114_in_ruleBooleanLiteral20898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_ruleBooleanLiteral20914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral20961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIntegerLiteral20971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleIntegerLiteral21018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleIntegerLiteral21041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral21073 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNullLiteral21083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_ruleNullLiteral21128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVoidLiteral_in_entryRuleVoidLiteral21173 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVoidLiteral21183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_ruleVoidLiteral21228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral21273 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteral21283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringLiteral21329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral21369 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRealLiteral21379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleRealLiteral21425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral21465 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpLiteral21475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpLiteral21521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression21561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression21571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleParanthesizedExpression21605 = new BitSet(new long[]{0x80000C01800C07F0L,0x003FF00000010001L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression21627 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleParanthesizedExpression21635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_ruleVisibility21682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_ruleVisibility21697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_ruleExecutionMode21742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleExecutionMode21757 = new BitSet(new long[]{0x0000000000000002L});

}