package org.eclipse.b3.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.b3.services.BeeLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
public class InternalBeeLangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_REGEX", "RULE_PID", "RULE_INT", "RULE_HEX", "RULE_REAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'reexport'", "'import'", "'as'", "';'", "'.*'", "'unit'", "'version'", "'implements'", "','", "'{'", "'properties'", "'provides'", "'}'", "'requires'", "'meta'", "'advice'", "'sequential'", "'repositories'", "'when'", "'/'", "'immutable'", "'unset'", "'#'", "'annotations'", "'['", "']'", "'='", "'with'", "'input'", "'output'", "'resolver'", "':'", "'.'", "'..'", "'*'", "'**'", "'('", "')'", "'precondition'", "'postcondition'", "'assert'", "'break'", "'continue'", "'while'", "'switch'", "'default'", "'case'", "'for'", "'in'", "'do'", "'return'", "'function'", "'if'", "'else'", "'throw'", "'try'", "'catch'", "'finally'", "'var'", "'?'", "'||'", "'&&'", "'&'", "'^'", "'|'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'%'", "'!'", "'++'", "'--'", "'typeof'", "'delete'", "'~'", "'new'", "'fun'", "'true'", "'false'", "'null'", "'undefined'", "'query'", "'~~~~~'", "'@'", "'$'", "'<'", "'>'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'^='", "'|='", "'<<='", "'>>='", "'>>>='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'instanceof'", "'select'", "'collect'", "'reject'", "'exists'", "'notexists'", "'foreach'", "'public'", "'private'", "'parallel'"
    };
    public static final int RULE_ML_COMMENT=11;
    public static final int RULE_ID=4;
    public static final int RULE_WS=13;
    public static final int RULE_PID=7;
    public static final int RULE_INT=8;
    public static final int EOF=-1;
    public static final int RULE_STRING=5;
    public static final int RULE_REGEX=6;
    public static final int RULE_REAL=10;
    public static final int RULE_ANY_OTHER=14;
    public static final int RULE_HEX=9;
    public static final int RULE_SL_COMMENT=12;

        public InternalBeeLangParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[521+1];
         }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g"; }


     
     	private BeeLangGrammarAccess grammarAccess;
     	
        public InternalBeeLangParser(TokenStream input, IAstFactory factory, BeeLangGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/b3/parser/antlr/internal/InternalBeeLang.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "BeeModel";	
       	} 



    // $ANTLR start entryRuleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:1: entryRuleBeeModel returns [EObject current=null] : iv_ruleBeeModel= ruleBeeModel EOF ;
    public final EObject entryRuleBeeModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBeeModel = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:50: (iv_ruleBeeModel= ruleBeeModel EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:75:2: iv_ruleBeeModel= ruleBeeModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBeeModelRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBeeModel_in_entryRuleBeeModel79);
            iv_ruleBeeModel=ruleBeeModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBeeModel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBeeModel89); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBeeModel


    // $ANTLR start ruleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:82:1: ruleBeeModel returns [EObject current=null] : ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) ;
    public final EObject ruleBeeModel() throws RecognitionException {
        EObject current = null;

        EObject lv_imports_0 = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:87:6: ( ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=15 && LA1_0<=16)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:91:6: lv_imports_0= ruleImport
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleImport_in_ruleBeeModel148);
            	    lv_imports_0=ruleImport();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "imports", lv_imports_0, "Import", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:109:3: (lv_body_1= ruleUnit )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:112:6: lv_body_1= ruleUnit
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleUnit_in_ruleBeeModel187);
            lv_body_1=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_1, "Unit", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBeeModel


    // $ANTLR start entryRuleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:48: (iv_ruleImport= ruleImport EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:138:2: iv_ruleImport= ruleImport EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleImport_in_entryRuleImport224);
            iv_ruleImport=ruleImport();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleImport234); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleImport


    // $ANTLR start ruleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:145:1: ruleImport returns [EObject current=null] : ( (lv_reexport_0= 'reexport' )? 'import' (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) ) ( 'as' (lv_nameSpace_4= RULE_ID ) )? ';' ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_reexport_0=null;
        Token lv_importer_2=null;
        Token lv_nameSpace_4=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:150:6: ( ( (lv_reexport_0= 'reexport' )? 'import' (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) ) ( 'as' (lv_nameSpace_4= RULE_ID ) )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:151:1: ( (lv_reexport_0= 'reexport' )? 'import' (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) ) ( 'as' (lv_nameSpace_4= RULE_ID ) )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:151:1: ( (lv_reexport_0= 'reexport' )? 'import' (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) ) ( 'as' (lv_nameSpace_4= RULE_ID ) )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:151:2: (lv_reexport_0= 'reexport' )? 'import' (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) ) ( 'as' (lv_nameSpace_4= RULE_ID ) )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:151:2: (lv_reexport_0= 'reexport' )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==15) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:153:6: lv_reexport_0= 'reexport'
                    {
                    lv_reexport_0=(Token)input.LT(1);
                    match(input,15,FOLLOW_15_in_ruleImport280); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getImportAccess().getReexportReexportKeyword_0_0(), "reexport"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "reexport", true, "reexport", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            match(input,16,FOLLOW_16_in_ruleImport303); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getImportAccess().getImportKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:176:1: (lv_importer_2= ( ruleJavaImporter | ruleNativeImporter ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:178:6: lv_importer_2= ( ruleJavaImporter | ruleNativeImporter )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:178:20: ( ruleJavaImporter | ruleNativeImporter )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_ID) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_STRING) ) {
                alt3=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("178:20: ( ruleJavaImporter | ruleNativeImporter )", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:178:22: ruleJavaImporter
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getImportAccess().getImporterJavaImporterParserRuleCall_2_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleJavaImporter_in_ruleImport329);
                    ruleJavaImporter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:185:7: ruleNativeImporter
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getImportAccess().getImporterNativeImporterParserRuleCall_2_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNativeImporter_in_ruleImport343);
                    ruleNativeImporter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "importer", lv_importer_2, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:206:2: ( 'as' (lv_nameSpace_4= RULE_ID ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:206:3: 'as' (lv_nameSpace_4= RULE_ID )
                    {
                    match(input,17,FOLLOW_17_in_ruleImport362); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getImportAccess().getAsKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:210:1: (lv_nameSpace_4= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:212:6: lv_nameSpace_4= RULE_ID
                    {
                    lv_nameSpace_4=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleImport384); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getImportAccess().getNameSpaceIDTerminalRuleCall_3_1_0(), "nameSpace"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "nameSpace", lv_nameSpace_4, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleImport403); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleImport


    // $ANTLR start entryRuleJavaImporter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:241:1: entryRuleJavaImporter returns [EObject current=null] : iv_ruleJavaImporter= ruleJavaImporter EOF ;
    public final EObject entryRuleJavaImporter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJavaImporter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:241:54: (iv_ruleJavaImporter= ruleJavaImporter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:242:2: iv_ruleJavaImporter= ruleJavaImporter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getJavaImporterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleJavaImporter_in_entryRuleJavaImporter436);
            iv_ruleJavaImporter=ruleJavaImporter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleJavaImporter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJavaImporter446); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleJavaImporter


    // $ANTLR start ruleJavaImporter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:249:1: ruleJavaImporter returns [EObject current=null] : ( (lv_name_0= ruleQualifiedName ) (lv_package_1= '.*' )? ) ;
    public final EObject ruleJavaImporter() throws RecognitionException {
        EObject current = null;

        Token lv_package_1=null;
        AntlrDatatypeRuleToken lv_name_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:254:6: ( ( (lv_name_0= ruleQualifiedName ) (lv_package_1= '.*' )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:1: ( (lv_name_0= ruleQualifiedName ) (lv_package_1= '.*' )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:1: ( (lv_name_0= ruleQualifiedName ) (lv_package_1= '.*' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:2: (lv_name_0= ruleQualifiedName ) (lv_package_1= '.*' )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:2: (lv_name_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:258:6: lv_name_0= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getJavaImporterAccess().getNameQualifiedNameParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleJavaImporter505);
            lv_name_0=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getJavaImporterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_0, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:276:2: (lv_package_1= '.*' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==19) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:278:6: lv_package_1= '.*'
                    {
                    lv_package_1=(Token)input.LT(1);
                    match(input,19,FOLLOW_19_in_ruleJavaImporter530); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getJavaImporterAccess().getPackageFullStopAsteriskKeyword_1_0(), "package"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getJavaImporterRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "package", true, ".*", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleJavaImporter


    // $ANTLR start entryRuleNativeImporter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:304:1: entryRuleNativeImporter returns [EObject current=null] : iv_ruleNativeImporter= ruleNativeImporter EOF ;
    public final EObject entryRuleNativeImporter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNativeImporter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:304:56: (iv_ruleNativeImporter= ruleNativeImporter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:305:2: iv_ruleNativeImporter= ruleNativeImporter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNativeImporterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNativeImporter_in_entryRuleNativeImporter577);
            iv_ruleNativeImporter=ruleNativeImporter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNativeImporter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNativeImporter587); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNativeImporter


    // $ANTLR start ruleNativeImporter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:312:1: ruleNativeImporter returns [EObject current=null] : (lv_uriString_0= RULE_STRING ) ;
    public final EObject ruleNativeImporter() throws RecognitionException {
        EObject current = null;

        Token lv_uriString_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:6: ( (lv_uriString_0= RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:318:1: (lv_uriString_0= RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:318:1: (lv_uriString_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:320:6: lv_uriString_0= RULE_STRING
            {
            lv_uriString_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleNativeImporter633); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getNativeImporterAccess().getUriStringSTRINGTerminalRuleCall_0(), "uriString"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNativeImporterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "uriString", lv_uriString_0, "STRING", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNativeImporter


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:345:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:345:46: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:346:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnit_in_entryRuleUnit673);
            iv_ruleUnit=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnit683); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:353:1: ruleUnit returns [EObject current=null] : ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        Enumerator lv_executionMode_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_version_4 = null;

        AntlrDatatypeRuleToken lv_implements_6 = null;

        AntlrDatatypeRuleToken lv_implements_8 = null;

        EObject lv_CompoundPropertyOperation_11 = null;

        EObject lv_providedCapabilities_14 = null;

        EObject lv_providedCapabilities_18 = null;

        EObject lv_requiredCapabilities_22 = null;

        EObject lv_requiredCapabilities_26 = null;

        EObject lv_metaRequiredCapabilities_31 = null;

        EObject lv_metaRequiredCapabilities_36 = null;

        EObject lv_advice_39 = null;

        EObject lv_synchronizations_42 = null;

        EObject lv_synchronizations_45 = null;

        EObject lv_buildMethods_46 = null;

        EObject lv_repositoryConfigurations_49 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:360:6: ( ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:361:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:361:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:361:2: (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:361:2: (lv_executionMode_0= ruleExecutionMode )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==31||LA6_0==131) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:364:6: lv_executionMode_0= ruleExecutionMode
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleUnit742);
                    lv_executionMode_0=ruleExecutionMode();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "executionMode", lv_executionMode_0, "ExecutionMode", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,20,FOLLOW_20_in_ruleUnit756); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:386:1: (lv_name_2= ruleUnitName )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_ID && LA7_0<=RULE_STRING)) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:389:6: lv_name_2= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleUnit790);
                    lv_name_2=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:407:3: ( 'version' (lv_version_4= ruleVersion ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==21) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:407:4: 'version' (lv_version_4= ruleVersion )
                    {
                    match(input,21,FOLLOW_21_in_ruleUnit805); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:411:1: (lv_version_4= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:414:6: lv_version_4= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleUnit839);
                    lv_version_4=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "version", lv_version_4, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:432:4: ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==22) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:432:5: 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    {
                    match(input,22,FOLLOW_22_in_ruleUnit855); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:436:1: (lv_implements_6= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:439:6: lv_implements_6= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit889);
                    lv_implements_6=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "implements", lv_implements_6, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:457:2: ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==23) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:457:3: ',' (lv_implements_8= ruleInterfaceName )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleUnit903); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:461:1: (lv_implements_8= ruleInterfaceName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:464:6: lv_implements_8= ruleInterfaceName
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit937);
                    	    lv_implements_8=ruleInterfaceName();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "implements", lv_implements_8, "InterfaceName", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,24,FOLLOW_24_in_ruleUnit954); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:486:1: ( 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==25) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:486:2: 'properties' (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements )
            	    {
            	    match(input,25,FOLLOW_25_in_ruleUnit964); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:490:1: (lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:493:6: lv_CompoundPropertyOperation_11= ruleNamedPropertyStatements
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getCompoundPropertyOperationNamedPropertyStatementsParserRuleCall_6_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleNamedPropertyStatements_in_ruleUnit998);
            	    lv_CompoundPropertyOperation_11=ruleNamedPropertyStatements();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "CompoundPropertyOperation", lv_CompoundPropertyOperation_11, "NamedPropertyStatements", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:4: ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )*
            loop17:
            do {
                int alt17=12;
                alt17 = dfa17.predict(input);
                switch (alt17) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:5: ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:5: ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:6: 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}'
            	    {
            	    match(input,26,FOLLOW_26_in_ruleUnit1015); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0(), null); 
            	          
            	    }
            	    match(input,24,FOLLOW_24_in_ruleUnit1024); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:519:1: ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+
            	    int cnt12=0;
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==RULE_ID||LA12_0==33) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:519:2: (lv_providedCapabilities_14= ruleProvidedCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:519:2: (lv_providedCapabilities_14= ruleProvidedCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:522:6: lv_providedCapabilities_14= ruleProvidedCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_0_2_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit1059);
            	    	    lv_providedCapabilities_14=ruleProvidedCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "providedCapabilities", lv_providedCapabilities_14, "ProvidedCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,18,FOLLOW_18_in_ruleUnit1072); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt12 >= 1 ) break loop12;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(12, input);
            	                throw eee;
            	        }
            	        cnt12++;
            	    } while (true);

            	    match(input,27,FOLLOW_27_in_ruleUnit1083); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:549:6: ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:549:6: ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:549:7: 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';'
            	    {
            	    match(input,26,FOLLOW_26_in_ruleUnit1100); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:553:1: (lv_providedCapabilities_18= ruleProvidedCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:556:6: lv_providedCapabilities_18= ruleProvidedCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit1134);
            	    lv_providedCapabilities_18=ruleProvidedCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "providedCapabilities", lv_providedCapabilities_18, "ProvidedCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,18,FOLLOW_18_in_ruleUnit1147); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:579:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:579:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:579:7: 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,28,FOLLOW_28_in_ruleUnit1164); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0(), null); 
            	          
            	    }
            	    match(input,24,FOLLOW_24_in_ruleUnit1173); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:587:1: ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+
            	    int cnt13=0;
            	    loop13:
            	    do {
            	        int alt13=2;
            	        int LA13_0 = input.LA(1);

            	        if ( (LA13_0==RULE_ID||LA13_0==33) ) {
            	            alt13=1;
            	        }


            	        switch (alt13) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:587:2: (lv_requiredCapabilities_22= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:587:2: (lv_requiredCapabilities_22= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:590:6: lv_requiredCapabilities_22= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit1208);
            	    	    lv_requiredCapabilities_22=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "requiredCapabilities", lv_requiredCapabilities_22, "RequiredCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,18,FOLLOW_18_in_ruleUnit1221); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt13 >= 1 ) break loop13;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(13, input);
            	                throw eee;
            	        }
            	        cnt13++;
            	    } while (true);

            	    match(input,27,FOLLOW_27_in_ruleUnit1232); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:7: 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';'
            	    {
            	    match(input,28,FOLLOW_28_in_ruleUnit1249); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:621:1: (lv_requiredCapabilities_26= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:624:6: lv_requiredCapabilities_26= ruleRequiredCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit1283);
            	    lv_requiredCapabilities_26=ruleRequiredCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "requiredCapabilities", lv_requiredCapabilities_26, "RequiredCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,18,FOLLOW_18_in_ruleUnit1296); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:647:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:647:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:647:7: 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,29,FOLLOW_29_in_ruleUnit1313); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0(), null); 
            	          
            	    }
            	    match(input,28,FOLLOW_28_in_ruleUnit1322); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1(), null); 
            	          
            	    }
            	    match(input,24,FOLLOW_24_in_ruleUnit1331); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:659:1: ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+
            	    int cnt14=0;
            	    loop14:
            	    do {
            	        int alt14=2;
            	        int LA14_0 = input.LA(1);

            	        if ( (LA14_0==RULE_ID||LA14_0==33) ) {
            	            alt14=1;
            	        }


            	        switch (alt14) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:659:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:659:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:662:6: lv_metaRequiredCapabilities_31= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit1366);
            	    	    lv_metaRequiredCapabilities_31=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_31, "RequiredCapability", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }

            	    	    match(input,18,FOLLOW_18_in_ruleUnit1379); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt14 >= 1 ) break loop14;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(14, input);
            	                throw eee;
            	        }
            	        cnt14++;
            	    } while (true);

            	    match(input,27,FOLLOW_27_in_ruleUnit1390); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:689:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:689:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:689:7: 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';'
            	    {
            	    match(input,29,FOLLOW_29_in_ruleUnit1407); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0(), null); 
            	          
            	    }
            	    match(input,28,FOLLOW_28_in_ruleUnit1416); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:697:1: (lv_metaRequiredCapabilities_36= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:700:6: lv_metaRequiredCapabilities_36= ruleRequiredCapability
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit1450);
            	    lv_metaRequiredCapabilities_36=ruleRequiredCapability();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_36, "RequiredCapability", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,18,FOLLOW_18_in_ruleUnit1463); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:723:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:723:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:723:7: 'advice' (lv_advice_39= ruleNamedAdvice )
            	    {
            	    match(input,30,FOLLOW_30_in_ruleUnit1480); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:727:1: (lv_advice_39= ruleNamedAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:730:6: lv_advice_39= ruleNamedAdvice
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleNamedAdvice_in_ruleUnit1514);
            	    lv_advice_39=ruleNamedAdvice();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "advice", lv_advice_39, "NamedAdvice", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:749:6: ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:749:6: ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:749:7: 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}'
            	    {
            	    match(input,31,FOLLOW_31_in_ruleUnit1535); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0(), null); 
            	          
            	    }
            	    match(input,24,FOLLOW_24_in_ruleUnit1544); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:757:1: (lv_synchronizations_42= ruleSynchronization )+
            	    int cnt15=0;
            	    loop15:
            	    do {
            	        int alt15=2;
            	        int LA15_0 = input.LA(1);

            	        if ( ((LA15_0>=RULE_ID && LA15_0<=RULE_STRING)) ) {
            	            alt15=1;
            	        }


            	        switch (alt15) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:760:6: lv_synchronizations_42= ruleSynchronization
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_7_7_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit1578);
            	    	    lv_synchronizations_42=ruleSynchronization();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "synchronizations", lv_synchronizations_42, "Synchronization", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt15 >= 1 ) break loop15;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(15, input);
            	                throw eee;
            	        }
            	        cnt15++;
            	    } while (true);

            	    match(input,27,FOLLOW_27_in_ruleUnit1592); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:783:6: ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:783:6: ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:783:7: 'sequential' (lv_synchronizations_45= ruleSynchronization )
            	    {
            	    match(input,31,FOLLOW_31_in_ruleUnit1609); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:787:1: (lv_synchronizations_45= ruleSynchronization )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:790:6: lv_synchronizations_45= ruleSynchronization
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizationsSynchronizationParserRuleCall_7_8_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit1643);
            	    lv_synchronizations_45=ruleSynchronization();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "synchronizations", lv_synchronizations_45, "Synchronization", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:809:6: (lv_buildMethods_46= ruleBuildMethod )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:809:6: (lv_buildMethods_46= ruleBuildMethod )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:812:6: lv_buildMethods_46= ruleBuildMethod
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getBuildMethodsBuildMethodParserRuleCall_7_9_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleBuildMethod_in_ruleUnit1688);
            	    lv_buildMethods_46=ruleBuildMethod();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "buildMethods", lv_buildMethods_46, "BuildMethod", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;
            	case 11 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:831:6: ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:831:6: ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:831:7: 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}'
            	    {
            	    match(input,32,FOLLOW_32_in_ruleUnit1708); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0(), null); 
            	          
            	    }
            	    match(input,24,FOLLOW_24_in_ruleUnit1717); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:839:1: (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )*
            	    loop16:
            	    do {
            	        int alt16=2;
            	        int LA16_0 = input.LA(1);

            	        if ( (LA16_0==RULE_STRING||LA16_0==45) ) {
            	            alt16=1;
            	        }


            	        switch (alt16) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:842:6: lv_repositoryConfigurations_49= ruleRepositoryConfiguration
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRepositoryConfigurationsRepositoryConfigurationParserRuleCall_7_10_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRepositoryConfiguration_in_ruleUnit1751);
            	    	    lv_repositoryConfigurations_49=ruleRepositoryConfiguration();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        
            	    	      	        try {
            	    	      	       		add(current, "repositoryConfigurations", lv_repositoryConfigurations_49, "RepositoryConfiguration", currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop16;
            	        }
            	    } while (true);

            	    match(input,27,FOLLOW_27_in_ruleUnit1765); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleUnit1777); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:875:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProvidedCapability = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:875:60: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:876:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1810);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleProvidedCapability; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleProvidedCapability1820); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:883:1: ruleProvidedCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;

        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        EObject lv_version_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:888:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:889:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:889:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:889:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:889:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==33) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:889:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,33,FOLLOW_33_in_ruleProvidedCapability1855); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:893:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:896:6: lv_filter_1= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_ruleProvidedCapability1889);
                    lv_filter_1=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:914:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:917:6: lv_interface_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability1929);
            lv_interface_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,34,FOLLOW_34_in_ruleProvidedCapability1942); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:939:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:942:6: lv_name_4= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability1976);
            lv_name_4=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:960:2: ( '/' (lv_version_6= ruleVersion ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==34) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:960:3: '/' (lv_version_6= ruleVersion )
                    {
                    match(input,34,FOLLOW_34_in_ruleProvidedCapability1990); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:964:1: (lv_version_6= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:967:6: lv_version_6= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleProvidedCapability2024);
                    lv_version_6=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "version", lv_version_6, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRequiredCapability = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:992:60: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:993:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2063);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRequiredCapability; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRequiredCapability2073); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1000:1: ruleRequiredCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        EObject lv_range_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1005:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1006:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1006:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1006:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1006:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==33) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1006:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,33,FOLLOW_33_in_ruleRequiredCapability2108); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1010:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1013:6: lv_filter_1= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_ruleRequiredCapability2142);
                    lv_filter_1=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1031:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1034:6: lv_interface_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability2182);
            lv_interface_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,34,FOLLOW_34_in_ruleRequiredCapability2195); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1056:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1059:6: lv_name_4= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability2229);
            lv_name_4=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1077:2: ( '/' (lv_range_6= ruleVersionRange ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==34) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1077:3: '/' (lv_range_6= ruleVersionRange )
                    {
                    match(input,34,FOLLOW_34_in_ruleRequiredCapability2243); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1081:1: (lv_range_6= ruleVersionRange )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1084:6: lv_range_6= ruleVersionRange
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersionRange_in_ruleRequiredCapability2277);
                    lv_range_6=ruleVersionRange();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "range", lv_range_6, "VersionRange", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRuleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1109:1: entryRuleNamedPropertyStatements returns [EObject current=null] : iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF ;
    public final EObject entryRuleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedPropertyStatements = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1109:65: (iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1110:2: iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNamedPropertyStatementsRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements2316);
            iv_ruleNamedPropertyStatements=ruleNamedPropertyStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNamedPropertyStatements; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedPropertyStatements2326); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedPropertyStatements


    // $ANTLR start ruleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1117:1: ruleNamedPropertyStatements returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) ) ;
    public final EObject ruleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1122:6: ( ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1123:1: ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1123:1: ( (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1123:2: (lv_name_0= RULE_ID )? (lv_body_1= ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1123:2: (lv_name_0= RULE_ID )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1125:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedPropertyStatements2373); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1143:3: (lv_body_1= ruleCompoundPropertyOperation )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1146:6: lv_body_1= ruleCompoundPropertyOperation
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNamedPropertyStatementsAccess().getBodyCompoundPropertyOperationParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleNamedPropertyStatements2416);
            lv_body_1=ruleCompoundPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_1, "CompoundPropertyOperation", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedPropertyStatements


    // $ANTLR start entryRuleCompoundPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:1: entryRuleCompoundPropertyOperation returns [EObject current=null] : iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF ;
    public final EObject entryRuleCompoundPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:67: (iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1172:2: iv_ruleCompoundPropertyOperation= ruleCompoundPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_entryRuleCompoundPropertyOperation2453);
            iv_ruleCompoundPropertyOperation=ruleCompoundPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundPropertyOperation2463); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundPropertyOperation


    // $ANTLR start ruleCompoundPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1179:1: ruleCompoundPropertyOperation returns [EObject current=null] : ( '{' (lv_operations_1= rulePropertyOperation )* '}' ) ;
    public final EObject ruleCompoundPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operations_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1184:6: ( ( '{' (lv_operations_1= rulePropertyOperation )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1185:1: ( '{' (lv_operations_1= rulePropertyOperation )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1185:1: ( '{' (lv_operations_1= rulePropertyOperation )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1185:2: '{' (lv_operations_1= rulePropertyOperation )* '}'
            {
            match(input,24,FOLLOW_24_in_ruleCompoundPropertyOperation2497); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPropertyOperationAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1189:1: (lv_operations_1= rulePropertyOperation )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==RULE_PID||LA23_0==24||LA23_0==33||(LA23_0>=35 && LA23_0<=36)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1192:6: lv_operations_1= rulePropertyOperation
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundPropertyOperationAccess().getOperationsPropertyOperationParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePropertyOperation_in_ruleCompoundPropertyOperation2531);
            	    lv_operations_1=rulePropertyOperation();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundPropertyOperationRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "operations", lv_operations_1, "PropertyOperation", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleCompoundPropertyOperation2545); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPropertyOperationAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundPropertyOperation


    // $ANTLR start entryRulePropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1221:1: entryRulePropertyOperation returns [EObject current=null] : iv_rulePropertyOperation= rulePropertyOperation EOF ;
    public final EObject entryRulePropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1221:59: (iv_rulePropertyOperation= rulePropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1222:2: iv_rulePropertyOperation= rulePropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyOperation_in_entryRulePropertyOperation2578);
            iv_rulePropertyOperation=rulePropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyOperation2588); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyOperation


    // $ANTLR start rulePropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1229:1: rulePropertyOperation returns [EObject current=null] : (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation ) ;
    public final EObject rulePropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject this_FilteredPropertyOperation_0 = null;

        EObject this_SetPropertyOperation_1 = null;

        EObject this_UnsetPropertyOperation_2 = null;

        EObject this_CompoundPropertyOperation_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1234:6: ( (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1235:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1235:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )
            int alt24=4;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt24=1;
                }
                break;
            case RULE_PID:
            case 35:
                {
                alt24=2;
                }
                break;
            case 36:
                {
                alt24=3;
                }
                break;
            case 24:
                {
                alt24=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1235:1: (this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation | this_SetPropertyOperation_1= ruleSetPropertyOperation | this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation | this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation )", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1236:5: this_FilteredPropertyOperation_0= ruleFilteredPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getFilteredPropertyOperationParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFilteredPropertyOperation_in_rulePropertyOperation2635);
                    this_FilteredPropertyOperation_0=ruleFilteredPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FilteredPropertyOperation_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1246:5: this_SetPropertyOperation_1= ruleSetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getSetPropertyOperationParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSetPropertyOperation_in_rulePropertyOperation2662);
                    this_SetPropertyOperation_1=ruleSetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_SetPropertyOperation_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1256:5: this_UnsetPropertyOperation_2= ruleUnsetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getUnsetPropertyOperationParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_rulePropertyOperation2689);
                    this_UnsetPropertyOperation_2=ruleUnsetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnsetPropertyOperation_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1266:5: this_CompoundPropertyOperation_3= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPropertyOperationAccess().getCompoundPropertyOperationParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_rulePropertyOperation2716);
                    this_CompoundPropertyOperation_3=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundPropertyOperation_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyOperation


    // $ANTLR start entryRuleFilteredPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1281:1: entryRuleFilteredPropertyOperation returns [EObject current=null] : iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF ;
    public final EObject entryRuleFilteredPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilteredPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1281:67: (iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1282:2: iv_ruleFilteredPropertyOperation= ruleFilteredPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilteredPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilteredPropertyOperation_in_entryRuleFilteredPropertyOperation2748);
            iv_ruleFilteredPropertyOperation=ruleFilteredPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilteredPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilteredPropertyOperation2758); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilteredPropertyOperation


    // $ANTLR start ruleFilteredPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1289:1: ruleFilteredPropertyOperation returns [EObject current=null] : ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) ) ;
    public final EObject ruleFilteredPropertyOperation() throws RecognitionException {
        EObject current = null;

        Token lv_body_2=null;
        EObject lv_filter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1294:6: ( ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1295:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1295:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1295:2: 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) )
            {
            match(input,33,FOLLOW_33_in_ruleFilteredPropertyOperation2792); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilteredPropertyOperationAccess().getWhenKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1299:1: (lv_filter_1= ruleFilter )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1302:6: lv_filter_1= ruleFilter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getFilterFilterParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleFilter_in_ruleFilteredPropertyOperation2826);
            lv_filter_1=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1320:2: (lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1322:6: lv_body_2= ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1322:16: ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )
            int alt25=3;
            switch ( input.LA(1) ) {
            case RULE_PID:
            case 35:
                {
                alt25=1;
                }
                break;
            case 36:
                {
                alt25=2;
                }
                break;
            case 24:
                {
                alt25=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1322:16: ( ruleSetPropertyOperation | ruleUnsetPropertyOperation | ruleCompoundPropertyOperation )", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1322:18: ruleSetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodySetPropertyOperationParserRuleCall_2_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSetPropertyOperation_in_ruleFilteredPropertyOperation2856);
                    ruleSetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1329:7: ruleUnsetPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodyUnsetPropertyOperationParserRuleCall_2_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_ruleFilteredPropertyOperation2870);
                    ruleUnsetPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1336:7: ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPropertyOperationAccess().getBodyCompoundPropertyOperationParserRuleCall_2_0_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleFilteredPropertyOperation2884);
                    ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_2, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilteredPropertyOperation


    // $ANTLR start entryRuleSetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1364:1: entryRuleSetPropertyOperation returns [EObject current=null] : iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF ;
    public final EObject entryRuleSetPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1364:62: (iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1365:2: iv_ruleSetPropertyOperation= ruleSetPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSetPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSetPropertyOperation_in_entryRuleSetPropertyOperation2926);
            iv_ruleSetPropertyOperation=ruleSetPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSetPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetPropertyOperation2936); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSetPropertyOperation


    // $ANTLR start ruleSetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1372:1: ruleSetPropertyOperation returns [EObject current=null] : ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' ) ;
    public final EObject ruleSetPropertyOperation() throws RecognitionException {
        EObject current = null;

        Token lv_immutable_0=null;
        AntlrDatatypeRuleToken lv_key_1 = null;

        Enumerator lv_op_2 = null;

        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1377:6: ( ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1378:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1378:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1378:2: (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ruleAssignmentOperator ) (lv_value_3= ruleExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1378:2: (lv_immutable_0= 'immutable' )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==35) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1380:6: lv_immutable_0= 'immutable'
                    {
                    lv_immutable_0=(Token)input.LT(1);
                    match(input,35,FOLLOW_35_in_ruleSetPropertyOperation2982); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSetPropertyOperationAccess().getImmutableImmutableKeyword_0_0(), "immutable"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1399:3: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1402:6: lv_key_1= rulePropertyName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePropertyName_in_ruleSetPropertyOperation3030);
            lv_key_1=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1420:2: (lv_op_2= ruleAssignmentOperator )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1423:6: lv_op_2= ruleAssignmentOperator
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getOpAssignmentOperatorEnumRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleSetPropertyOperation3068);
            lv_op_2=ruleAssignmentOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "op", lv_op_2, "AssignmentOperator", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1441:2: (lv_value_3= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1444:6: lv_value_3= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSetPropertyOperationAccess().getValueExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleSetPropertyOperation3106);
            lv_value_3=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "value", lv_value_3, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,18,FOLLOW_18_in_ruleSetPropertyOperation3119); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSetPropertyOperationAccess().getSemicolonKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSetPropertyOperation


    // $ANTLR start entryRuleUnsetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1473:1: entryRuleUnsetPropertyOperation returns [EObject current=null] : iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF ;
    public final EObject entryRuleUnsetPropertyOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetPropertyOperation = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1473:64: (iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1474:2: iv_ruleUnsetPropertyOperation= ruleUnsetPropertyOperation EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnsetPropertyOperationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnsetPropertyOperation_in_entryRuleUnsetPropertyOperation3152);
            iv_ruleUnsetPropertyOperation=ruleUnsetPropertyOperation();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnsetPropertyOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnsetPropertyOperation3162); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnsetPropertyOperation


    // $ANTLR start ruleUnsetPropertyOperation
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1481:1: ruleUnsetPropertyOperation returns [EObject current=null] : ( 'unset' (lv_key_1= rulePropertyName ) ';' ) ;
    public final EObject ruleUnsetPropertyOperation() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_key_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1486:6: ( ( 'unset' (lv_key_1= rulePropertyName ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1487:1: ( 'unset' (lv_key_1= rulePropertyName ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1487:1: ( 'unset' (lv_key_1= rulePropertyName ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1487:2: 'unset' (lv_key_1= rulePropertyName ) ';'
            {
            match(input,36,FOLLOW_36_in_ruleUnsetPropertyOperation3196); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnsetPropertyOperationAccess().getUnsetKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1491:1: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1494:6: lv_key_1= rulePropertyName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnsetPropertyOperationAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePropertyName_in_ruleUnsetPropertyOperation3230);
            lv_key_1=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnsetPropertyOperationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,18,FOLLOW_18_in_ruleUnsetPropertyOperation3243); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnsetPropertyOperationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnsetPropertyOperation


    // $ANTLR start entryRuleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1523:1: entryRuleSynchronization returns [EObject current=null] : iv_ruleSynchronization= ruleSynchronization EOF ;
    public final EObject entryRuleSynchronization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSynchronization = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1523:57: (iv_ruleSynchronization= ruleSynchronization EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1524:2: iv_ruleSynchronization= ruleSynchronization EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSynchronizationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSynchronization_in_entryRuleSynchronization3276);
            iv_ruleSynchronization=ruleSynchronization();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSynchronization; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronization3286); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronization


    // $ANTLR start ruleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1531:1: ruleSynchronization returns [EObject current=null] : ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) ;
    public final EObject ruleSynchronization() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_partrefs_0 = null;

        AntlrDatatypeRuleToken lv_partrefs_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1536:6: ( ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1537:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1537:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1537:2: (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1537:2: (lv_partrefs_0= ruleSynchronizedPart )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1540:6: lv_partrefs_0= ruleSynchronizedPart
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization3345);
            lv_partrefs_0=ruleSynchronizedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "partrefs", lv_partrefs_0, "SynchronizedPart", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1558:2: ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+
            int cnt27=0;
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==23) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1558:3: ',' (lv_partrefs_2= ruleSynchronizedPart )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleSynchronization3359); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1562:1: (lv_partrefs_2= ruleSynchronizedPart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1565:6: lv_partrefs_2= ruleSynchronizedPart
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization3393);
            	    lv_partrefs_2=ruleSynchronizedPart();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "partrefs", lv_partrefs_2, "SynchronizedPart", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt27 >= 1 ) break loop27;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(27, input);
                        throw eee;
                }
                cnt27++;
            } while (true);

            match(input,18,FOLLOW_18_in_ruleSynchronization3408); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronization


    // $ANTLR start entryRuleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1594:1: entryRuleSynchronizedPart returns [String current=null] : iv_ruleSynchronizedPart= ruleSynchronizedPart EOF ;
    public final String entryRuleSynchronizedPart() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSynchronizedPart = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1594:57: (iv_ruleSynchronizedPart= ruleSynchronizedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1595:2: iv_ruleSynchronizedPart= ruleSynchronizedPart EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSynchronizedPartRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart3442);
            iv_ruleSynchronizedPart=ruleSynchronizedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSynchronizedPart.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronizedPart3453); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronizedPart


    // $ANTLR start ruleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1602:1: ruleSynchronizedPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) ;
    public final AntlrDatatypeRuleToken ruleSynchronizedPart() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_CompoundName_0 = null;

        AntlrDatatypeRuleToken this_PartName_2 = null;

        AntlrDatatypeRuleToken this_PartName_3 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1608:6: ( ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1609:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1609:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            int alt29=2;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1609:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1609:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1610:5: this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )?
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundName_in_ruleSynchronizedPart3501);
                    this_CompoundName_0=ruleCompoundName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_CompoundName_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1620:1: (kw= '#' this_PartName_2= rulePartName )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==37) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1621:2: kw= '#' this_PartName_2= rulePartName
                            {
                            kw=(Token)input.LT(1);
                            match(input,37,FOLLOW_37_in_ruleSynchronizedPart3520); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0(), null); 
                                  
                            }
                            if ( backtracking==0 ) {
                               
                                      currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1(), currentNode); 
                                  
                            }
                            pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart3542);
                            this_PartName_2=rulePartName();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              		current.merge(this_PartName_2);
                                  
                            }
                            if ( backtracking==0 ) {
                               
                                      currentNode = currentNode.getParent();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1639:5: this_PartName_3= rulePartName
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart3578);
                    this_PartName_3=rulePartName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_PartName_3);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronizedPart


    // $ANTLR start entryRulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1657:1: entryRulePathGroup returns [EObject current=null] : iv_rulePathGroup= rulePathGroup EOF ;
    public final EObject entryRulePathGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathGroup = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1657:51: (iv_rulePathGroup= rulePathGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1658:2: iv_rulePathGroup= rulePathGroup EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathGroupRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePathGroup_in_entryRulePathGroup3621);
            iv_rulePathGroup=rulePathGroup();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePathGroup; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePathGroup3631); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathGroup


    // $ANTLR start rulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1665:1: rulePathGroup returns [EObject current=null] : ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? ) ;
    public final EObject rulePathGroup() throws RecognitionException {
        EObject current = null;

        EObject lv_paths_0 = null;

        EObject lv_annotations_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1670:6: ( ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:1: ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:1: ( (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:2: (lv_paths_0= rulePathVectorElement )* ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:2: (lv_paths_0= rulePathVectorElement )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=RULE_ID && LA30_0<=RULE_STRING)||(LA30_0>=33 && LA30_0<=34)) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1674:6: lv_paths_0= rulePathVectorElement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathVectorElementParserRuleCall_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePathVectorElement_in_rulePathGroup3690);
            	    lv_paths_0=rulePathVectorElement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "paths", lv_paths_0, "PathVectorElement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1692:3: ( 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==38) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1692:4: 'annotations' (lv_annotations_2= ruleCompoundPropertyOperation )
                    {
                    match(input,38,FOLLOW_38_in_rulePathGroup3705); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1696:1: (lv_annotations_2= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1699:6: lv_annotations_2= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getAnnotationsCompoundPropertyOperationParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_rulePathGroup3739);
                    lv_annotations_2=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "annotations", lv_annotations_2, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathGroup


    // $ANTLR start entryRulePathVectorElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1724:1: entryRulePathVectorElement returns [EObject current=null] : iv_rulePathVectorElement= rulePathVectorElement EOF ;
    public final EObject entryRulePathVectorElement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathVectorElement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1724:59: (iv_rulePathVectorElement= rulePathVectorElement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1725:2: iv_rulePathVectorElement= rulePathVectorElement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathVectorElementRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePathVectorElement_in_entryRulePathVectorElement3778);
            iv_rulePathVectorElement=rulePathVectorElement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePathVectorElement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePathVectorElement3788); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathVectorElement


    // $ANTLR start rulePathVectorElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1732:1: rulePathVectorElement returns [EObject current=null] : (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector ) ;
    public final EObject rulePathVectorElement() throws RecognitionException {
        EObject current = null;

        EObject this_FilteredPathVector_0 = null;

        EObject this_BasePathVector_1 = null;

        EObject this_UnbasedPathVector_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1737:6: ( (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1738:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1738:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )
            int alt32=3;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:5: this_FilteredPathVector_0= ruleFilteredPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getFilteredPathVectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFilteredPathVector_in_rulePathVectorElement3835);
                    this_FilteredPathVector_0=ruleFilteredPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FilteredPathVector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1749:5: this_BasePathVector_1= ruleBasePathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getBasePathVectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBasePathVector_in_rulePathVectorElement3862);
                    this_BasePathVector_1=ruleBasePathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BasePathVector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1759:5: this_UnbasedPathVector_2= ruleUnbasedPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathVectorElementAccess().getUnbasedPathVectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnbasedPathVector_in_rulePathVectorElement3889);
                    this_UnbasedPathVector_2=ruleUnbasedPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnbasedPathVector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathVectorElement


    // $ANTLR start entryRuleFilteredPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1774:1: entryRuleFilteredPathVector returns [EObject current=null] : iv_ruleFilteredPathVector= ruleFilteredPathVector EOF ;
    public final EObject entryRuleFilteredPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilteredPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1774:60: (iv_ruleFilteredPathVector= ruleFilteredPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1775:2: iv_ruleFilteredPathVector= ruleFilteredPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilteredPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilteredPathVector_in_entryRuleFilteredPathVector3921);
            iv_ruleFilteredPathVector=ruleFilteredPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilteredPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilteredPathVector3931); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilteredPathVector


    // $ANTLR start ruleFilteredPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1782:1: ruleFilteredPathVector returns [EObject current=null] : ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) ) ;
    public final EObject ruleFilteredPathVector() throws RecognitionException {
        EObject current = null;

        Token lv_body_2=null;
        EObject lv_filter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1787:6: ( ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1788:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1788:1: ( 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1788:2: 'when' (lv_filter_1= ruleFilter ) (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) )
            {
            match(input,33,FOLLOW_33_in_ruleFilteredPathVector3965); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilteredPathVectorAccess().getWhenKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1792:1: (lv_filter_1= ruleFilter )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1795:6: lv_filter_1= ruleFilter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getFilterFilterParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleFilter_in_ruleFilteredPathVector3999);
            lv_filter_1=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1813:2: (lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:6: lv_body_2= ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:16: ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )
            int alt33=3;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:18: ruleBasePathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyBasePathVectorParserRuleCall_2_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBasePathVector_in_ruleFilteredPathVector4029);
                    ruleBasePathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1822:7: ruleUnbasedPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyUnbasedPathVectorParserRuleCall_2_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnbasedPathVector_in_ruleFilteredPathVector4043);
                    ruleUnbasedPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1829:7: ruleCompoundPathVector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFilteredPathVectorAccess().getBodyCompoundPathVectorParserRuleCall_2_0_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundPathVector_in_ruleFilteredPathVector4057);
                    ruleCompoundPathVector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilteredPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_2, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilteredPathVector


    // $ANTLR start entryRuleBasePathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1857:1: entryRuleBasePathVector returns [EObject current=null] : iv_ruleBasePathVector= ruleBasePathVector EOF ;
    public final EObject entryRuleBasePathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasePathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1857:56: (iv_ruleBasePathVector= ruleBasePathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:2: iv_ruleBasePathVector= ruleBasePathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBasePathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBasePathVector_in_entryRuleBasePathVector4099);
            iv_ruleBasePathVector=ruleBasePathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBasePathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBasePathVector4109); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBasePathVector


    // $ANTLR start ruleBasePathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1865:1: ruleBasePathVector returns [EObject current=null] : ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' ) ;
    public final EObject ruleBasePathVector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_basePath_0 = null;

        AntlrDatatypeRuleToken lv_paths_2 = null;

        AntlrDatatypeRuleToken lv_paths_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1870:6: ( ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1871:1: ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1871:1: ( (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1871:2: (lv_basePath_0= rulePath ) '[' ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )? ']' ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1871:2: (lv_basePath_0= rulePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1874:6: lv_basePath_0= rulePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getBasePathPathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePath_in_ruleBasePathVector4168);
            lv_basePath_0=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "basePath", lv_basePath_0, "Path", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,39,FOLLOW_39_in_ruleBasePathVector4181); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1896:1: ( (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )* )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_ID && LA35_0<=RULE_STRING)||LA35_0==34) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1896:2: (lv_paths_2= rulePath ) ( ',' (lv_paths_4= rulePath ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1896:2: (lv_paths_2= rulePath )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1899:6: lv_paths_2= rulePath
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePath_in_ruleBasePathVector4216);
                    lv_paths_2=rulePath();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "paths", lv_paths_2, "Path", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1917:2: ( ',' (lv_paths_4= rulePath ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==23) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1917:3: ',' (lv_paths_4= rulePath )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleBasePathVector4230); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getBasePathVectorAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1921:1: (lv_paths_4= rulePath )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1924:6: lv_paths_4= rulePath
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getBasePathVectorAccess().getPathsPathParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_rulePath_in_ruleBasePathVector4264);
                    	    lv_paths_4=rulePath();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getBasePathVectorRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "paths", lv_paths_4, "Path", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,40,FOLLOW_40_in_ruleBasePathVector4281); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }
            match(input,18,FOLLOW_18_in_ruleBasePathVector4290); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBasePathVectorAccess().getSemicolonKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBasePathVector


    // $ANTLR start entryRuleUnbasedPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1957:1: entryRuleUnbasedPathVector returns [EObject current=null] : iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF ;
    public final EObject entryRuleUnbasedPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnbasedPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1957:59: (iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1958:2: iv_ruleUnbasedPathVector= ruleUnbasedPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnbasedPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnbasedPathVector_in_entryRuleUnbasedPathVector4323);
            iv_ruleUnbasedPathVector=ruleUnbasedPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnbasedPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnbasedPathVector4333); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnbasedPathVector


    // $ANTLR start ruleUnbasedPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1965:1: ruleUnbasedPathVector returns [EObject current=null] : ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' ) ;
    public final EObject ruleUnbasedPathVector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_paths_0 = null;

        AntlrDatatypeRuleToken lv_paths_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1970:6: ( ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1971:1: ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1971:1: ( (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1971:2: (lv_paths_0= rulePath ) ( ',' (lv_paths_2= rulePath ) )* ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1971:2: (lv_paths_0= rulePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1974:6: lv_paths_0= rulePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePath_in_ruleUnbasedPathVector4392);
            lv_paths_0=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnbasedPathVectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "paths", lv_paths_0, "Path", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:2: ( ',' (lv_paths_2= rulePath ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==23) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:3: ',' (lv_paths_2= rulePath )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleUnbasedPathVector4406); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnbasedPathVectorAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1996:1: (lv_paths_2= rulePath )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1999:6: lv_paths_2= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnbasedPathVectorAccess().getPathsPathParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePath_in_ruleUnbasedPathVector4440);
            	    lv_paths_2=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnbasedPathVectorRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "paths", lv_paths_2, "Path", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            match(input,18,FOLLOW_18_in_ruleUnbasedPathVector4455); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnbasedPathVectorAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnbasedPathVector


    // $ANTLR start entryRuleCompoundPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:1: entryRuleCompoundPathVector returns [EObject current=null] : iv_ruleCompoundPathVector= ruleCompoundPathVector EOF ;
    public final EObject entryRuleCompoundPathVector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundPathVector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:60: (iv_ruleCompoundPathVector= ruleCompoundPathVector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2029:2: iv_ruleCompoundPathVector= ruleCompoundPathVector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundPathVectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundPathVector_in_entryRuleCompoundPathVector4488);
            iv_ruleCompoundPathVector=ruleCompoundPathVector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundPathVector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundPathVector4498); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundPathVector


    // $ANTLR start ruleCompoundPathVector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2036:1: ruleCompoundPathVector returns [EObject current=null] : ( '{' (lv_body_1= rulePathVectorElement )* '}' ) ;
    public final EObject ruleCompoundPathVector() throws RecognitionException {
        EObject current = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2041:6: ( ( '{' (lv_body_1= rulePathVectorElement )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( '{' (lv_body_1= rulePathVectorElement )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( '{' (lv_body_1= rulePathVectorElement )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:2: '{' (lv_body_1= rulePathVectorElement )* '}'
            {
            match(input,24,FOLLOW_24_in_ruleCompoundPathVector4532); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPathVectorAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2046:1: (lv_body_1= rulePathVectorElement )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=RULE_ID && LA37_0<=RULE_STRING)||(LA37_0>=33 && LA37_0<=34)) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2049:6: lv_body_1= rulePathVectorElement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundPathVectorAccess().getBodyPathVectorElementParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePathVectorElement_in_ruleCompoundPathVector4566);
            	    lv_body_1=rulePathVectorElement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundPathVectorRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "body", lv_body_1, "PathVectorElement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleCompoundPathVector4580); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundPathVectorAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundPathVector


    // $ANTLR start entryRulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2078:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2078:45: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2079:2: iv_rulePath= rulePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePath_in_entryRulePath4614);
            iv_rulePath=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePath4625); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2086:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_2 = null;

        AntlrDatatypeRuleToken this_QualifiedName_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2094:6: ( (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2095:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2095:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_STRING) ) {
                alt41=1;
            }
            else if ( (LA41_0==RULE_ID||LA41_0==34) ) {
                alt41=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2095:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2095:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_rulePath4665); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2103:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2103:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2103:7: (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2103:7: (kw= '/' )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==34) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2104:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,34,FOLLOW_34_in_rulePath4691); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath4715);
                    this_QualifiedName_2=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QualifiedName_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2120:1: (kw= '/' this_QualifiedName_4= ruleQualifiedName )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==34) ) {
                            int LA39_1 = input.LA(2);

                            if ( (LA39_1==RULE_ID) ) {
                                alt39=1;
                            }


                        }


                        switch (alt39) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2121:2: kw= '/' this_QualifiedName_4= ruleQualifiedName
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,34,FOLLOW_34_in_rulePath4734); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              current.merge(kw);
                    	              createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1(), currentNode); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath4756);
                    	    this_QualifiedName_4=ruleQualifiedName();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      		current.merge(this_QualifiedName_4);
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode = currentNode.getParent();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2137:3: (kw= '/' )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==34) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2138:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,34,FOLLOW_34_in_rulePath4777); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2151:1: entryRulePrerequisite returns [EObject current=null] : iv_rulePrerequisite= rulePrerequisite EOF ;
    public final EObject entryRulePrerequisite() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrerequisite = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2151:54: (iv_rulePrerequisite= rulePrerequisite EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2152:2: iv_rulePrerequisite= rulePrerequisite EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrerequisiteRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrerequisite_in_entryRulePrerequisite4818);
            iv_rulePrerequisite=rulePrerequisite();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrerequisite; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisite4828); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisite


    // $ANTLR start rulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2159:1: rulePrerequisite returns [EObject current=null] : ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) ) ';' ) ;
    public final EObject rulePrerequisite() throws RecognitionException {
        EObject current = null;

        Token lv_alias_2=null;
        EObject lv_filter_1 = null;

        EObject lv_partReference_4 = null;

        EObject lv_closure_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2164:6: ( ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:1: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:1: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:2: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:2: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:3: ( 'when' (lv_filter_1= ruleFilter ) )? ( (lv_alias_2= RULE_ID ) '=' )? ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:3: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==33) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2165:4: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,33,FOLLOW_33_in_rulePrerequisite4864); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_0_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2169:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2172:6: lv_filter_1= ruleFilter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFilter_in_rulePrerequisite4898);
                    lv_filter_1=ruleFilter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2190:4: ( (lv_alias_2= RULE_ID ) '=' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_ID) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==41) ) {
                    alt43=1;
                }
            }
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2190:5: (lv_alias_2= RULE_ID ) '='
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2190:5: (lv_alias_2= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2192:6: lv_alias_2= RULE_ID
                    {
                    lv_alias_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rulePrerequisite4927); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_1_0_0(), "alias"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "alias", lv_alias_2, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    match(input,41,FOLLOW_41_in_rulePrerequisite4944); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2214:3: ( (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2214:4: (lv_partReference_4= rulePrerequisiteEntry ) (lv_closure_5= ruleClosure )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2214:4: (lv_partReference_4= rulePrerequisiteEntry )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2217:6: lv_partReference_4= rulePrerequisiteEntry
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_2_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite4981);
            lv_partReference_4=rulePrerequisiteEntry();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "partReference", lv_partReference_4, "PrerequisiteEntry", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2235:2: (lv_closure_5= ruleClosure )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==42) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2238:6: lv_closure_5= ruleClosure
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_2_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleClosure_in_rulePrerequisite5019);
                    lv_closure_5=ruleClosure();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "closure", lv_closure_5, "Closure", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            match(input,18,FOLLOW_18_in_rulePrerequisite5035); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisite


    // $ANTLR start entryRuleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2267:1: entryRuleClosure returns [EObject current=null] : iv_ruleClosure= ruleClosure EOF ;
    public final EObject entryRuleClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClosure = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2267:49: (iv_ruleClosure= ruleClosure EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2268:2: iv_ruleClosure= ruleClosure EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleClosure_in_entryRuleClosure5068);
            iv_ruleClosure=ruleClosure();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleClosure5078); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosure


    // $ANTLR start ruleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2275:1: ruleClosure returns [EObject current=null] : ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' ) ;
    public final EObject ruleClosure() throws RecognitionException {
        EObject current = null;

        EObject lv_properties_3 = null;

        EObject lv_advice_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2280:6: ( ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2281:1: ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2281:1: ( 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2281:2: 'with' '{' ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )? ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )? '}'
            {
            match(input,42,FOLLOW_42_in_ruleClosure5112); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_ruleClosure5121); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2289:1: ( 'properties' (lv_properties_3= ruleCompoundPropertyOperation ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==25) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2289:2: 'properties' (lv_properties_3= ruleCompoundPropertyOperation )
                    {
                    match(input,25,FOLLOW_25_in_ruleClosure5131); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2293:1: (lv_properties_3= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2296:6: lv_properties_3= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getPropertiesCompoundPropertyOperationParserRuleCall_2_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleClosure5165);
                    lv_properties_3=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "properties", lv_properties_3, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2314:4: ( 'advice' (lv_advice_5= ruleCompoundAdvice ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==30) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2314:5: 'advice' (lv_advice_5= ruleCompoundAdvice )
                    {
                    match(input,30,FOLLOW_30_in_ruleClosure5181); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureAccess().getAdviceKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2318:1: (lv_advice_5= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2321:6: lv_advice_5= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleClosure5215);
                    lv_advice_5=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_5, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,27,FOLLOW_27_in_ruleClosure5230); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosure


    // $ANTLR start entryRulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2350:1: entryRulePrerequisiteEntry returns [EObject current=null] : iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF ;
    public final EObject entryRulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrerequisiteEntry = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2350:59: (iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2351:2: iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrerequisiteEntryRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry5263);
            iv_rulePrerequisiteEntry=rulePrerequisiteEntry();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrerequisiteEntry; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisiteEntry5273); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisiteEntry


    // $ANTLR start rulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2358:1: rulePrerequisiteEntry returns [EObject current=null] : (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences ) ;
    public final EObject rulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;

        EObject this_PartInSelf_0 = null;

        EObject this_CapabilityReferencedPart_1 = null;

        EObject this_CompoundReferences_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2363:6: ( (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2364:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2364:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )
            int alt47=3;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:5: this_PartInSelf_0= rulePartInSelf
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry5320);
                    this_PartInSelf_0=rulePartInSelf();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PartInSelf_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2375:5: this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry5347);
                    this_CapabilityReferencedPart_1=ruleCapabilityReferencedPart();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CapabilityReferencedPart_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2385:5: this_CompoundReferences_2= ruleCompoundReferences
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry5374);
                    this_CompoundReferences_2=ruleCompoundReferences();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundReferences_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisiteEntry


    // $ANTLR start entryRulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2400:1: entryRulePartInSelf returns [EObject current=null] : iv_rulePartInSelf= rulePartInSelf EOF ;
    public final EObject entryRulePartInSelf() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePartInSelf = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2400:52: (iv_rulePartInSelf= rulePartInSelf EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2401:2: iv_rulePartInSelf= rulePartInSelf EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPartInSelfRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePartInSelf_in_entryRulePartInSelf5406);
            iv_rulePartInSelf=rulePartInSelf();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePartInSelf; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePartInSelf5416); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartInSelf


    // $ANTLR start rulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2408:1: rulePartInSelf returns [EObject current=null] : (lv_partName_0= rulePartName ) ;
    public final EObject rulePartInSelf() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_partName_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2413:6: ( (lv_partName_0= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2414:1: (lv_partName_0= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2414:1: (lv_partName_0= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2417:6: lv_partName_0= rulePartName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePartName_in_rulePartInSelf5474);
            lv_partName_0=rulePartName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPartInSelfRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "partName", lv_partName_0, "PartName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartInSelf


    // $ANTLR start entryRuleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2442:1: entryRuleCapabilityReferencedPart returns [EObject current=null] : iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF ;
    public final EObject entryRuleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCapabilityReferencedPart = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2442:66: (iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2443:2: iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCapabilityReferencedPartRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart5510);
            iv_ruleCapabilityReferencedPart=ruleCapabilityReferencedPart();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCapabilityReferencedPart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCapabilityReferencedPart5520); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCapabilityReferencedPart


    // $ANTLR start ruleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2450:1: ruleCapabilityReferencedPart returns [EObject current=null] : ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) ;
    public final EObject ruleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_interface_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_range_4 = null;

        AntlrDatatypeRuleToken lv_partName_6 = null;

        AntlrDatatypeRuleToken lv_interface_7 = null;

        AntlrDatatypeRuleToken lv_name_9 = null;

        EObject lv_range_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2455:6: ( ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:3: (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2456:3: (lv_interface_0= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2459:6: lv_interface_0= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart5580);
                    lv_interface_0=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "interface", lv_interface_0, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,34,FOLLOW_34_in_ruleCapabilityReferencedPart5593); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2481:1: (lv_name_2= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2484:6: lv_name_2= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart5627);
                    lv_name_2=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:2: ( '/' (lv_range_4= ruleVersionRange ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==34) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2502:3: '/' (lv_range_4= ruleVersionRange )
                            {
                            match(input,34,FOLLOW_34_in_ruleCapabilityReferencedPart5641); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2506:1: (lv_range_4= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2509:6: lv_range_4= ruleVersionRange
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart5675);
                            lv_range_4=ruleVersionRange();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "range", lv_range_4, "VersionRange", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    match(input,37,FOLLOW_37_in_ruleCapabilityReferencedPart5690); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2531:1: (lv_partName_6= rulePartName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2534:6: lv_partName_6= rulePartName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePartName_in_ruleCapabilityReferencedPart5724);
                    lv_partName_6=rulePartName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "partName", lv_partName_6, "PartName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2553:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2553:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2553:7: (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2553:7: (lv_interface_7= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2556:6: lv_interface_7= ruleInterfaceName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart5770);
                    lv_interface_7=ruleInterfaceName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "interface", lv_interface_7, "InterfaceName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,34,FOLLOW_34_in_ruleCapabilityReferencedPart5783); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2578:1: (lv_name_9= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2581:6: lv_name_9= ruleUnitName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart5817);
                    lv_name_9=ruleUnitName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_9, "UnitName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2599:2: ( '/' (lv_range_11= ruleVersionRange ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==34) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2599:3: '/' (lv_range_11= ruleVersionRange )
                            {
                            match(input,34,FOLLOW_34_in_ruleCapabilityReferencedPart5831); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2603:1: (lv_range_11= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2606:6: lv_range_11= ruleVersionRange
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart5865);
                            lv_range_11=ruleVersionRange();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "range", lv_range_11, "VersionRange", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCapabilityReferencedPart


    // $ANTLR start entryRuleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2631:1: entryRuleCompoundReferences returns [EObject current=null] : iv_ruleCompoundReferences= ruleCompoundReferences EOF ;
    public final EObject entryRuleCompoundReferences() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundReferences = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2631:60: (iv_ruleCompoundReferences= ruleCompoundReferences EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2632:2: iv_ruleCompoundReferences= ruleCompoundReferences EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundReferencesRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences5905);
            iv_ruleCompoundReferences=ruleCompoundReferences();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundReferences; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundReferences5915); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundReferences


    // $ANTLR start ruleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2639:1: ruleCompoundReferences returns [EObject current=null] : ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) ;
    public final EObject ruleCompoundReferences() throws RecognitionException {
        EObject current = null;

        EObject lv_prerequisites_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2644:6: ( ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2645:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2645:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2645:2: '{' (lv_prerequisites_1= rulePrerequisite )* '}'
            {
            match(input,24,FOLLOW_24_in_ruleCompoundReferences5949); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2649:1: (lv_prerequisites_1= rulePrerequisite )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( ((LA51_0>=RULE_ID && LA51_0<=RULE_STRING)||LA51_0==24||LA51_0==33) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2652:6: lv_prerequisites_1= rulePrerequisite
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleCompoundReferences5983);
            	    lv_prerequisites_1=rulePrerequisite();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundReferencesRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "prerequisites", lv_prerequisites_1, "Prerequisite", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleCompoundReferences5997); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundReferences


    // $ANTLR start entryRuleBuildMethod
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2681:1: entryRuleBuildMethod returns [EObject current=null] : iv_ruleBuildMethod= ruleBuildMethod EOF ;
    public final EObject entryRuleBuildMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBuildMethod = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2681:53: (iv_ruleBuildMethod= ruleBuildMethod EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2682:2: iv_ruleBuildMethod= ruleBuildMethod EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBuildMethodRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBuildMethod_in_entryRuleBuildMethod6030);
            iv_ruleBuildMethod=ruleBuildMethod();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBuildMethod; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBuildMethod6040); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBuildMethod


    // $ANTLR start ruleBuildMethod
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2689:1: ruleBuildMethod returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' ) ;
    public final EObject ruleBuildMethod() throws RecognitionException {
        EObject current = null;

        Enumerator lv_visibility_0 = null;

        Enumerator lv_executionMode_1 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_providedCapabilities_4 = null;

        EObject lv_providedCapabilities_6 = null;

        EObject lv_preCondition_7 = null;

        EObject lv_postCondition_8 = null;

        EObject lv_properties_11 = null;

        EObject lv_advice_12 = null;

        EObject lv_group_13 = null;

        EObject lv_layout_14 = null;

        EObject lv_statements_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2694:6: ( ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2695:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2695:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2695:2: (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_preCondition_7= rulePreCondition )? (lv_postCondition_8= rulePostCondition )? '{' ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )? (lv_advice_12= ruleAdvice )? (lv_group_13= ruleGroup )? (lv_layout_14= ruleLayout )? (lv_statements_15= ruleStatements )? '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2695:2: (lv_visibility_0= ruleVisibility )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=129 && LA52_0<=130)) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2698:6: lv_visibility_0= ruleVisibility
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVisibility_in_ruleBuildMethod6099);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2716:3: (lv_executionMode_1= ruleExecutionMode )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==31||LA53_0==131) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2719:6: lv_executionMode_1= ruleExecutionMode
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getExecutionModeExecutionModeEnumRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleBuildMethod6138);
                    lv_executionMode_1=ruleExecutionMode();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "executionMode", lv_executionMode_1, "ExecutionMode", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2737:3: (lv_name_2= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2740:6: lv_name_2= rulePartName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getNamePartNameParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePartName_in_ruleBuildMethod6177);
            lv_name_2=rulePartName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_2, "PartName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2758:2: ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==26) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2758:3: 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    {
                    match(input,26,FOLLOW_26_in_ruleBuildMethod6191); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBuildMethodAccess().getProvidesKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2762:1: (lv_providedCapabilities_4= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2765:6: lv_providedCapabilities_4= ruleProvidedCapability
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleBuildMethod6225);
                    lv_providedCapabilities_4=ruleProvidedCapability();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "providedCapabilities", lv_providedCapabilities_4, "ProvidedCapability", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2783:2: ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==23) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2783:3: ',' (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleBuildMethod6239); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getBuildMethodAccess().getCommaKeyword_3_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2787:1: (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2790:6: lv_providedCapabilities_6= ruleProvidedCapability
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleBuildMethod6273);
                    	    lv_providedCapabilities_6=ruleProvidedCapability();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "providedCapabilities", lv_providedCapabilities_6, "ProvidedCapability", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2808:6: (lv_preCondition_7= rulePreCondition )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==53) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2811:6: lv_preCondition_7= rulePreCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getPreConditionPreConditionParserRuleCall_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePreCondition_in_ruleBuildMethod6315);
                    lv_preCondition_7=rulePreCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "preCondition", lv_preCondition_7, "PreCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2829:3: (lv_postCondition_8= rulePostCondition )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==54) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2832:6: lv_postCondition_8= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getPostConditionPostConditionParserRuleCall_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_ruleBuildMethod6354);
                    lv_postCondition_8=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_8, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,24,FOLLOW_24_in_ruleBuildMethod6368); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBuildMethodAccess().getLeftCurlyBracketKeyword_6(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2854:1: ( 'properties' (lv_properties_11= ruleCompoundPropertyOperation ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==25) ) {
                int LA58_1 = input.LA(2);

                if ( (LA58_1==24) ) {
                    alt58=1;
                }
            }
            switch (alt58) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2854:2: 'properties' (lv_properties_11= ruleCompoundPropertyOperation )
                    {
                    match(input,25,FOLLOW_25_in_ruleBuildMethod6378); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBuildMethodAccess().getPropertiesKeyword_7_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2858:1: (lv_properties_11= ruleCompoundPropertyOperation )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2861:6: lv_properties_11= ruleCompoundPropertyOperation
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getPropertiesCompoundPropertyOperationParserRuleCall_7_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundPropertyOperation_in_ruleBuildMethod6412);
                    lv_properties_11=ruleCompoundPropertyOperation();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "properties", lv_properties_11, "CompoundPropertyOperation", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2879:4: (lv_advice_12= ruleAdvice )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==30) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2882:6: lv_advice_12= ruleAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getAdviceAdviceParserRuleCall_8_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAdvice_in_ruleBuildMethod6452);
                    lv_advice_12=ruleAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_12, "Advice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2900:3: (lv_group_13= ruleGroup )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==43) ) {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==24||(LA60_1>=53 && LA60_1<=54)) ) {
                    alt60=1;
                }
            }
            switch (alt60) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2903:6: lv_group_13= ruleGroup
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getGroupGroupParserRuleCall_9_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleGroup_in_ruleBuildMethod6491);
                    lv_group_13=ruleGroup();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "group", lv_group_13, "Group", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2921:3: (lv_layout_14= ruleLayout )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==44) ) {
                int LA61_1 = input.LA(2);

                if ( (LA61_1==24||LA61_1==54) ) {
                    alt61=1;
                }
            }
            switch (alt61) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2924:6: lv_layout_14= ruleLayout
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getLayoutLayoutParserRuleCall_10_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleLayout_in_ruleBuildMethod6530);
                    lv_layout_14=ruleLayout();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "layout", lv_layout_14, "Layout", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2942:3: (lv_statements_15= ruleStatements )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( ((LA62_0>=RULE_ID && LA62_0<=RULE_REAL)||LA62_0==18||(LA62_0>=24 && LA62_0<=25)||LA62_0==39||(LA62_0>=42 && LA62_0<=44)||LA62_0==51||(LA62_0>=56 && LA62_0<=59)||LA62_0==62||(LA62_0>=64 && LA62_0<=67)||(LA62_0>=69 && LA62_0<=70)||LA62_0==73||LA62_0==84||(LA62_0>=86 && LA62_0<=98)) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2945:6: lv_statements_15= ruleStatements
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getBuildMethodAccess().getStatementsStatementsParserRuleCall_11_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatements_in_ruleBuildMethod6569);
                    lv_statements_15=ruleStatements();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBuildMethodRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "statements", lv_statements_15, "Statements", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,27,FOLLOW_27_in_ruleBuildMethod6583); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBuildMethodAccess().getRightCurlyBracketKeyword_12(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBuildMethod


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2974:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2974:51: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2975:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParameter_in_entryRuleParameter6616);
            iv_ruleParameter=ruleParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParameter6626); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2982:1: ruleParameter returns [EObject current=null] : (lv_val_0= ruleExpression ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_val_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2987:6: ( (lv_val_0= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2988:1: (lv_val_0= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2988:1: (lv_val_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2991:6: lv_val_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleParameter6684);
            lv_val_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_0, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleGroupKeyword
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3016:1: entryRuleGroupKeyword returns [String current=null] : iv_ruleGroupKeyword= ruleGroupKeyword EOF ;
    public final String entryRuleGroupKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGroupKeyword = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3016:53: (iv_ruleGroupKeyword= ruleGroupKeyword EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3017:2: iv_ruleGroupKeyword= ruleGroupKeyword EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getGroupKeywordRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleGroupKeyword_in_entryRuleGroupKeyword6721);
            iv_ruleGroupKeyword=ruleGroupKeyword();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleGroupKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroupKeyword6732); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleGroupKeyword


    // $ANTLR start ruleGroupKeyword
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3024:1: ruleGroupKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'input' ;
    public final AntlrDatatypeRuleToken ruleGroupKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3030:6: (kw= 'input' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3032:2: kw= 'input'
            {
            kw=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_ruleGroupKeyword6769); if (failed) return current;
            if ( backtracking==0 ) {

                      current.merge(kw);
                      createLeafNode(grammarAccess.getGroupKeywordAccess().getInputKeyword(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleGroupKeyword


    // $ANTLR start entryRuleLayoutKeyword
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3045:1: entryRuleLayoutKeyword returns [String current=null] : iv_ruleLayoutKeyword= ruleLayoutKeyword EOF ;
    public final String entryRuleLayoutKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLayoutKeyword = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3045:54: (iv_ruleLayoutKeyword= ruleLayoutKeyword EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3046:2: iv_ruleLayoutKeyword= ruleLayoutKeyword EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLayoutKeywordRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLayoutKeyword_in_entryRuleLayoutKeyword6807);
            iv_ruleLayoutKeyword=ruleLayoutKeyword();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLayoutKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLayoutKeyword6818); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLayoutKeyword


    // $ANTLR start ruleLayoutKeyword
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3053:1: ruleLayoutKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'output' ;
    public final AntlrDatatypeRuleToken ruleLayoutKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3059:6: (kw= 'output' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3061:2: kw= 'output'
            {
            kw=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_ruleLayoutKeyword6855); if (failed) return current;
            if ( backtracking==0 ) {

                      current.merge(kw);
                      createLeafNode(grammarAccess.getLayoutKeywordAccess().getOutputKeyword(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLayoutKeyword


    // $ANTLR start entryRuleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3074:1: entryRuleLayout returns [EObject current=null] : iv_ruleLayout= ruleLayout EOF ;
    public final EObject entryRuleLayout() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLayout = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3074:48: (iv_ruleLayout= ruleLayout EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3075:2: iv_ruleLayout= ruleLayout EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLayoutRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLayout_in_entryRuleLayout6892);
            iv_ruleLayout=ruleLayout();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLayout; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLayout6902); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLayout


    // $ANTLR start ruleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3082:1: ruleLayout returns [EObject current=null] : ( ruleLayoutKeyword (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' ) ;
    public final EObject ruleLayout() throws RecognitionException {
        EObject current = null;

        EObject lv_postCondition_1 = null;

        EObject lv_body_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3087:6: ( ( ruleLayoutKeyword (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3088:1: ( ruleLayoutKeyword (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3088:1: ( ruleLayoutKeyword (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3088:2: ruleLayoutKeyword (lv_postCondition_1= rulePostCondition )? '{' (lv_body_3= rulePathGroup )? '}'
            {
            pushFollow(FOLLOW_ruleLayoutKeyword_in_ruleLayout6936);
            ruleLayoutKeyword();
            _fsp--;
            if (failed) return current;
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3088:19: (lv_postCondition_1= rulePostCondition )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==54) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3091:6: lv_postCondition_1= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getPostConditionPostConditionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_ruleLayout6962);
                    lv_postCondition_1=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_1, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,24,FOLLOW_24_in_ruleLayout6976); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3113:1: (lv_body_3= rulePathGroup )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=RULE_ID && LA64_0<=RULE_STRING)||(LA64_0>=33 && LA64_0<=34)||LA64_0==38) ) {
                alt64=1;
            }
            else if ( (LA64_0==27) ) {
                int LA64_2 = input.LA(2);

                if ( (synpred80()) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:6: lv_body_3= rulePathGroup
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getBodyPathGroupParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePathGroup_in_ruleLayout7010);
                    lv_body_3=rulePathGroup();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "body", lv_body_3, "PathGroup", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,27,FOLLOW_27_in_ruleLayout7024); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLayout


    // $ANTLR start entryRuleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3145:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3145:47: (iv_ruleGroup= ruleGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3146:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getGroupRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleGroup_in_entryRuleGroup7057);
            iv_ruleGroup=ruleGroup();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroup7067); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleGroup


    // $ANTLR start ruleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3153:1: ruleGroup returns [EObject current=null] : ( ruleGroupKeyword (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        EObject lv_preCondition_1 = null;

        EObject lv_postCondition_2 = null;

        EObject lv_prerequisites_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3158:6: ( ( ruleGroupKeyword (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3159:1: ( ruleGroupKeyword (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3159:1: ( ruleGroupKeyword (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3159:2: ruleGroupKeyword (lv_preCondition_1= rulePreCondition )? (lv_postCondition_2= rulePostCondition )? '{' (lv_prerequisites_4= rulePrerequisite )* '}'
            {
            pushFollow(FOLLOW_ruleGroupKeyword_in_ruleGroup7101);
            ruleGroupKeyword();
            _fsp--;
            if (failed) return current;
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3159:18: (lv_preCondition_1= rulePreCondition )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==53) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3162:6: lv_preCondition_1= rulePreCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPreConditionPreConditionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePreCondition_in_ruleGroup7127);
                    lv_preCondition_1=rulePreCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "preCondition", lv_preCondition_1, "PreCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3180:3: (lv_postCondition_2= rulePostCondition )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==54) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3183:6: lv_postCondition_2= rulePostCondition
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPostConditionPostConditionParserRuleCall_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_rulePostCondition_in_ruleGroup7166);
                    lv_postCondition_2=rulePostCondition();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "postCondition", lv_postCondition_2, "PostCondition", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,24,FOLLOW_24_in_ruleGroup7180); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3205:1: (lv_prerequisites_4= rulePrerequisite )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=RULE_ID && LA67_0<=RULE_STRING)||LA67_0==24||LA67_0==33) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3208:6: lv_prerequisites_4= rulePrerequisite
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleGroup7214);
            	    lv_prerequisites_4=rulePrerequisite();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "prerequisites", lv_prerequisites_4, "Prerequisite", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleGroup7228); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleGroup


    // $ANTLR start entryRuleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3237:1: entryRuleRepositoryConfiguration returns [EObject current=null] : iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF ;
    public final EObject entryRuleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepositoryConfiguration = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3237:65: (iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3238:2: iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRepositoryConfigurationRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration7261);
            iv_ruleRepositoryConfiguration=ruleRepositoryConfiguration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRepositoryConfiguration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRepositoryConfiguration7271); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRepositoryConfiguration


    // $ANTLR start ruleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3245:1: ruleRepositoryConfiguration returns [EObject current=null] : ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) ;
    public final EObject ruleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_location_0 = null;

        AntlrDatatypeRuleToken lv_resolverClass_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3250:6: ( ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_STRING) ) {
                alt68=1;
            }
            else if ( (LA68_0==45) ) {
                alt68=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3251:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:3: (lv_location_0= ruleURI )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:3: (lv_location_0= ruleURI )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3254:6: lv_location_0= ruleURI
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleURI_in_ruleRepositoryConfiguration7331);
                    lv_location_0=ruleURI();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "location", lv_location_0, "URI", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3273:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3273:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3273:7: 'resolver' (lv_resolverClass_2= ruleQualifiedName )
                    {
                    match(input,45,FOLLOW_45_in_ruleRepositoryConfiguration7351); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3277:1: (lv_resolverClass_2= ruleQualifiedName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3280:6: lv_resolverClass_2= ruleQualifiedName
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration7385);
                    lv_resolverClass_2=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "resolverClass", lv_resolverClass_2, "QualifiedName", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3298:4: (lv_advice_3= ruleCompoundAdvice )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==24) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3301:6: lv_advice_3= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration7425);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleRepositoryConfiguration7439); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRepositoryConfiguration


    // $ANTLR start entryRuleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3330:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3330:44: (iv_ruleURI= ruleURI EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3331:2: iv_ruleURI= ruleURI EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleURI_in_entryRuleURI7473);
            iv_ruleURI=ruleURI();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleURI.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleURI7484); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleURI


    // $ANTLR start ruleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3338:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3344:6: (this_STRING_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3345:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleURI7523); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleURI


    // $ANTLR start entryRuleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3360:1: entryRuleNamedAdvice returns [EObject current=null] : iv_ruleNamedAdvice= ruleNamedAdvice EOF ;
    public final EObject entryRuleNamedAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3360:53: (iv_ruleNamedAdvice= ruleNamedAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3361:2: iv_ruleNamedAdvice= ruleNamedAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNamedAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice7565);
            iv_ruleNamedAdvice=ruleNamedAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNamedAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedAdvice7575); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedAdvice


    // $ANTLR start ruleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3368:1: ruleNamedAdvice returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) ;
    public final EObject ruleNamedAdvice() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3373:6: ( ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3374:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3374:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3374:2: (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3374:2: (lv_name_0= RULE_ID )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ID) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3376:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedAdvice7622); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3394:3: (lv_advice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3397:6: lv_advice_1= ruleCompoundAdvice
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice7665);
            lv_advice_1=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "advice", lv_advice_1, "CompoundAdvice", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedAdvice


    // $ANTLR start entryRuleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3422:1: entryRuleAdvice returns [EObject current=null] : iv_ruleAdvice= ruleAdvice EOF ;
    public final EObject entryRuleAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3422:48: (iv_ruleAdvice= ruleAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3423:2: iv_ruleAdvice= ruleAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdvice_in_entryRuleAdvice7702);
            iv_ruleAdvice=ruleAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvice7712); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvice


    // $ANTLR start ruleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3430:1: ruleAdvice returns [EObject current=null] : ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) ;
    public final EObject ruleAdvice() throws RecognitionException {
        EObject current = null;

        EObject this_CompoundAdvice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3435:6: ( ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3436:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3436:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3436:2: 'advice' this_CompoundAdvice_1= ruleCompoundAdvice
            {
            match(input,30,FOLLOW_30_in_ruleAdvice7746); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAdviceAccess().getAdviceKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdvice7768);
            this_CompoundAdvice_1=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CompoundAdvice_1; 
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvice


    // $ANTLR start entryRuleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3456:1: entryRuleCompoundAdvice returns [EObject current=null] : iv_ruleCompoundAdvice= ruleCompoundAdvice EOF ;
    public final EObject entryRuleCompoundAdvice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundAdvice = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3456:56: (iv_ruleCompoundAdvice= ruleCompoundAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3457:2: iv_ruleCompoundAdvice= ruleCompoundAdvice EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundAdviceRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice7800);
            iv_ruleCompoundAdvice=ruleCompoundAdvice();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundAdvice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundAdvice7810); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundAdvice


    // $ANTLR start ruleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3464:1: ruleCompoundAdvice returns [EObject current=null] : ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) ;
    public final EObject ruleCompoundAdvice() throws RecognitionException {
        EObject current = null;

        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3469:6: ( ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3470:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3470:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3470:2: '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}'
            {
            match(input,24,FOLLOW_24_in_ruleCompoundAdvice7844); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3474:1: ( (lv_advice_1= ruleAdviceStatement ) ';' )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_ID||LA71_0==RULE_REGEX||(LA71_0>=46 && LA71_0<=50)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3474:2: (lv_advice_1= ruleAdviceStatement ) ';'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3474:2: (lv_advice_1= ruleAdviceStatement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3477:6: lv_advice_1= ruleAdviceStatement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice7879);
            	    lv_advice_1=ruleAdviceStatement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getCompoundAdviceRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "advice", lv_advice_1, "AdviceStatement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,18,FOLLOW_18_in_ruleCompoundAdvice7892); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_ruleCompoundAdvice7903); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundAdvice


    // $ANTLR start entryRuleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3510:1: entryRuleAdviceStatement returns [EObject current=null] : iv_ruleAdviceStatement= ruleAdviceStatement EOF ;
    public final EObject entryRuleAdviceStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdviceStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3510:57: (iv_ruleAdviceStatement= ruleAdviceStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3511:2: iv_ruleAdviceStatement= ruleAdviceStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdviceStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement7936);
            iv_ruleAdviceStatement=ruleAdviceStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdviceStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdviceStatement7946); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdviceStatement


    // $ANTLR start ruleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3518:1: ruleAdviceStatement returns [EObject current=null] : ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) ;
    public final EObject ruleAdviceStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_path_0 = null;

        Enumerator lv_op_1 = null;

        EObject lv_value_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3523:6: ( ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3524:1: ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3524:1: ( (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3524:2: (lv_path_0= ruleAdvicePath ) ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3524:2: (lv_path_0= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3527:6: lv_path_0= ruleAdvicePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleAdviceStatement8005);
            lv_path_0=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "path", lv_path_0, "AdvicePath", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:2: ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==41||(LA72_0>=104 && LA72_0<=114)) ) {
                alt72=1;
            }
            else if ( (LA72_0==24) ) {
                alt72=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3545:2: ( ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:3: ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:3: ( (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:4: (lv_op_1= ruleAssignmentOperator ) (lv_value_2= ruleExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:4: (lv_op_1= ruleAssignmentOperator )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3548:6: lv_op_1= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getOpAssignmentOperatorEnumRuleCall_1_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleAdviceStatement8045);
                    lv_op_1=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "op", lv_op_1, "AssignmentOperator", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3566:2: (lv_value_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3569:6: lv_value_2= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleAdviceStatement8083);
                    lv_value_2=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "value", lv_value_2, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3588:6: (lv_advice_3= ruleCompoundAdvice )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3588:6: (lv_advice_3= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3591:6: lv_advice_3= ruleCompoundAdvice
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement8128);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdviceStatement


    // $ANTLR start entryRuleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3616:1: entryRuleAdvicePath returns [EObject current=null] : iv_ruleAdvicePath= ruleAdvicePath EOF ;
    public final EObject entryRuleAdvicePath() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdvicePath = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3616:52: (iv_ruleAdvicePath= ruleAdvicePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3617:2: iv_ruleAdvicePath= ruleAdvicePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdvicePathRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath8166);
            iv_ruleAdvicePath=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdvicePath; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePath8176); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePath


    // $ANTLR start ruleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3624:1: ruleAdvicePath returns [EObject current=null] : ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* ) ;
    public final EObject ruleAdvicePath() throws RecognitionException {
        EObject current = null;

        Token lv_absolute_0=null;
        EObject lv_selectors_1 = null;

        EObject lv_selectors_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3629:6: ( ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3630:1: ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3630:1: ( (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3630:2: (lv_absolute_0= ':' )? (lv_selectors_1= ruleSelector ) ( ':' (lv_selectors_3= ruleSelector ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3630:2: (lv_absolute_0= ':' )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==46) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3632:6: lv_absolute_0= ':'
                    {
                    lv_absolute_0=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_ruleAdvicePath8222); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAdvicePathAccess().getAbsoluteColonKeyword_0_0(), "absolute"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "absolute", true, ":", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3651:3: (lv_selectors_1= ruleSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3654:6: lv_selectors_1= ruleSelector
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getSelectorsSelectorParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleSelector_in_ruleAdvicePath8270);
            lv_selectors_1=ruleSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "selectors", lv_selectors_1, "Selector", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3672:2: ( ':' (lv_selectors_3= ruleSelector ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==46) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3672:3: ':' (lv_selectors_3= ruleSelector )
            	    {
            	    match(input,46,FOLLOW_46_in_ruleAdvicePath8284); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAdvicePathAccess().getColonKeyword_2_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3676:1: (lv_selectors_3= ruleSelector )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3679:6: lv_selectors_3= ruleSelector
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getSelectorsSelectorParserRuleCall_2_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSelector_in_ruleAdvicePath8318);
            	    lv_selectors_3=ruleSelector();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "selectors", lv_selectors_3, "Selector", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePath


    // $ANTLR start entryRuleSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3704:1: entryRuleSelector returns [EObject current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final EObject entryRuleSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3704:50: (iv_ruleSelector= ruleSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3705:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSelector_in_entryRuleSelector8357);
            iv_ruleSelector=ruleSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSelector8367); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSelector


    // $ANTLR start ruleSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3712:1: ruleSelector returns [EObject current=null] : (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector ) ;
    public final EObject ruleSelector() throws RecognitionException {
        EObject current = null;

        EObject this_DiscriminatingSelector_0 = null;

        EObject this_MultiNodeSelector_1 = null;

        EObject this_NodeSelector_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3717:6: ( (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3718:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3718:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )
            int alt75=3;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3719:5: this_DiscriminatingSelector_0= ruleDiscriminatingSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getDiscriminatingSelectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleDiscriminatingSelector_in_ruleSelector8414);
                    this_DiscriminatingSelector_0=ruleDiscriminatingSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_DiscriminatingSelector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3729:5: this_MultiNodeSelector_1= ruleMultiNodeSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getMultiNodeSelectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleMultiNodeSelector_in_ruleSelector8441);
                    this_MultiNodeSelector_1=ruleMultiNodeSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_MultiNodeSelector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3739:5: this_NodeSelector_2= ruleNodeSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getSelectorAccess().getNodeSelectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNodeSelector_in_ruleSelector8468);
                    this_NodeSelector_2=ruleNodeSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NodeSelector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSelector


    // $ANTLR start entryRuleMultiNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3754:1: entryRuleMultiNodeSelector returns [EObject current=null] : iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF ;
    public final EObject entryRuleMultiNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiNodeSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3754:59: (iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3755:2: iv_ruleMultiNodeSelector= ruleMultiNodeSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiNodeSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleMultiNodeSelector_in_entryRuleMultiNodeSelector8500);
            iv_ruleMultiNodeSelector=ruleMultiNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiNodeSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiNodeSelector8510); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiNodeSelector


    // $ANTLR start ruleMultiNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3762:1: ruleMultiNodeSelector returns [EObject current=null] : (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector ) ;
    public final EObject ruleMultiNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject this_NameSelector_0 = null;

        EObject this_ThisSelector_1 = null;

        EObject this_ChildrenSelector_2 = null;

        EObject this_AncestorSelector_3 = null;

        EObject this_RegexpSelector_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3767:6: ( (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3768:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3768:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )
            int alt76=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt76=1;
                }
                break;
            case 47:
                {
                alt76=2;
                }
                break;
            case 49:
                {
                alt76=3;
                }
                break;
            case 50:
                {
                alt76=4;
                }
                break;
            case RULE_REGEX:
                {
                alt76=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3768:1: (this_NameSelector_0= ruleNameSelector | this_ThisSelector_1= ruleThisSelector | this_ChildrenSelector_2= ruleChildrenSelector | this_AncestorSelector_3= ruleAncestorSelector | this_RegexpSelector_4= ruleRegexpSelector )", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3769:5: this_NameSelector_0= ruleNameSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getNameSelectorParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNameSelector_in_ruleMultiNodeSelector8557);
                    this_NameSelector_0=ruleNameSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NameSelector_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3779:5: this_ThisSelector_1= ruleThisSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getThisSelectorParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleThisSelector_in_ruleMultiNodeSelector8584);
                    this_ThisSelector_1=ruleThisSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ThisSelector_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3789:5: this_ChildrenSelector_2= ruleChildrenSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getChildrenSelectorParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleChildrenSelector_in_ruleMultiNodeSelector8611);
                    this_ChildrenSelector_2=ruleChildrenSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ChildrenSelector_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3799:5: this_AncestorSelector_3= ruleAncestorSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getAncestorSelectorParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleAncestorSelector_in_ruleMultiNodeSelector8638);
                    this_AncestorSelector_3=ruleAncestorSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_AncestorSelector_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3809:5: this_RegexpSelector_4= ruleRegexpSelector
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getMultiNodeSelectorAccess().getRegexpSelectorParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRegexpSelector_in_ruleMultiNodeSelector8665);
                    this_RegexpSelector_4=ruleRegexpSelector();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RegexpSelector_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiNodeSelector


    // $ANTLR start entryRuleDiscriminatingSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3824:1: entryRuleDiscriminatingSelector returns [EObject current=null] : iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF ;
    public final EObject entryRuleDiscriminatingSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiscriminatingSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3824:64: (iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3825:2: iv_ruleDiscriminatingSelector= ruleDiscriminatingSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDiscriminatingSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleDiscriminatingSelector_in_entryRuleDiscriminatingSelector8697);
            iv_ruleDiscriminatingSelector=ruleDiscriminatingSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDiscriminatingSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDiscriminatingSelector8707); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDiscriminatingSelector


    // $ANTLR start ruleDiscriminatingSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3832:1: ruleDiscriminatingSelector returns [EObject current=null] : ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' ) ;
    public final EObject ruleDiscriminatingSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_selector_0 = null;

        EObject lv_predicate_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3837:6: ( ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3838:1: ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3838:1: ( (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3838:2: (lv_selector_0= ruleMultiNodeSelector ) '[' (lv_predicate_2= ruleExpression ) ']'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3838:2: (lv_selector_0= ruleMultiNodeSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3841:6: lv_selector_0= ruleMultiNodeSelector
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDiscriminatingSelectorAccess().getSelectorMultiNodeSelectorParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleMultiNodeSelector_in_ruleDiscriminatingSelector8766);
            lv_selector_0=ruleMultiNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDiscriminatingSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "selector", lv_selector_0, "MultiNodeSelector", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,39,FOLLOW_39_in_ruleDiscriminatingSelector8779); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDiscriminatingSelectorAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3863:1: (lv_predicate_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3866:6: lv_predicate_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDiscriminatingSelectorAccess().getPredicateExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleDiscriminatingSelector8813);
            lv_predicate_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDiscriminatingSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "predicate", lv_predicate_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,40,FOLLOW_40_in_ruleDiscriminatingSelector8826); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDiscriminatingSelectorAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDiscriminatingSelector


    // $ANTLR start entryRuleNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3895:1: entryRuleNodeSelector returns [EObject current=null] : iv_ruleNodeSelector= ruleNodeSelector EOF ;
    public final EObject entryRuleNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3895:54: (iv_ruleNodeSelector= ruleNodeSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3896:2: iv_ruleNodeSelector= ruleNodeSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNodeSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNodeSelector_in_entryRuleNodeSelector8859);
            iv_ruleNodeSelector=ruleNodeSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNodeSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNodeSelector8869); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNodeSelector


    // $ANTLR start ruleNodeSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3903:1: ruleNodeSelector returns [EObject current=null] : this_ParentSelector_0= ruleParentSelector ;
    public final EObject ruleNodeSelector() throws RecognitionException {
        EObject current = null;

        EObject this_ParentSelector_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3908:6: (this_ParentSelector_0= ruleParentSelector )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3910:5: this_ParentSelector_0= ruleParentSelector
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getNodeSelectorAccess().getParentSelectorParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleParentSelector_in_ruleNodeSelector8915);
            this_ParentSelector_0=ruleParentSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_ParentSelector_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNodeSelector


    // $ANTLR start entryRuleNameSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3925:1: entryRuleNameSelector returns [EObject current=null] : iv_ruleNameSelector= ruleNameSelector EOF ;
    public final EObject entryRuleNameSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3925:54: (iv_ruleNameSelector= ruleNameSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3926:2: iv_ruleNameSelector= ruleNameSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNameSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNameSelector_in_entryRuleNameSelector8946);
            iv_ruleNameSelector=ruleNameSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNameSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNameSelector8956); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNameSelector


    // $ANTLR start ruleNameSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3933:1: ruleNameSelector returns [EObject current=null] : (lv_name_0= ruleQualifiedName ) ;
    public final EObject ruleNameSelector() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3938:6: ( (lv_name_0= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3939:1: (lv_name_0= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3939:1: (lv_name_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3942:6: lv_name_0= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getNameSelectorAccess().getNameQualifiedNameParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleNameSelector9014);
            lv_name_0=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNameSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_0, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNameSelector


    // $ANTLR start entryRuleThisSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3967:1: entryRuleThisSelector returns [EObject current=null] : iv_ruleThisSelector= ruleThisSelector EOF ;
    public final EObject entryRuleThisSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3967:54: (iv_ruleThisSelector= ruleThisSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3968:2: iv_ruleThisSelector= ruleThisSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getThisSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleThisSelector_in_entryRuleThisSelector9050);
            iv_ruleThisSelector=ruleThisSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleThisSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleThisSelector9060); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleThisSelector


    // $ANTLR start ruleThisSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3975:1: ruleThisSelector returns [EObject current=null] : ( () '.' ) ;
    public final EObject ruleThisSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3980:6: ( ( () '.' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3981:1: ( () '.' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3981:1: ( () '.' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3981:2: () '.'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3981:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3982:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getThisSelectorAccess().getThisSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getThisSelectorAccess().getThisSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,47,FOLLOW_47_in_ruleThisSelector9103); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThisSelectorAccess().getFullStopKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleThisSelector


    // $ANTLR start entryRuleParentSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4003:1: entryRuleParentSelector returns [EObject current=null] : iv_ruleParentSelector= ruleParentSelector EOF ;
    public final EObject entryRuleParentSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParentSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4003:56: (iv_ruleParentSelector= ruleParentSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4004:2: iv_ruleParentSelector= ruleParentSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParentSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParentSelector_in_entryRuleParentSelector9136);
            iv_ruleParentSelector=ruleParentSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParentSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParentSelector9146); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParentSelector


    // $ANTLR start ruleParentSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4011:1: ruleParentSelector returns [EObject current=null] : ( () '..' ) ;
    public final EObject ruleParentSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4016:6: ( ( () '..' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:1: ( () '..' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:1: ( () '..' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:2: () '..'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4017:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4018:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getParentSelectorAccess().getParentSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getParentSelectorAccess().getParentSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,48,FOLLOW_48_in_ruleParentSelector9189); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParentSelectorAccess().getFullStopFullStopKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParentSelector


    // $ANTLR start entryRuleChildrenSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4039:1: entryRuleChildrenSelector returns [EObject current=null] : iv_ruleChildrenSelector= ruleChildrenSelector EOF ;
    public final EObject entryRuleChildrenSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildrenSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4039:58: (iv_ruleChildrenSelector= ruleChildrenSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4040:2: iv_ruleChildrenSelector= ruleChildrenSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getChildrenSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleChildrenSelector_in_entryRuleChildrenSelector9222);
            iv_ruleChildrenSelector=ruleChildrenSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleChildrenSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleChildrenSelector9232); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChildrenSelector


    // $ANTLR start ruleChildrenSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4047:1: ruleChildrenSelector returns [EObject current=null] : ( () '*' ) ;
    public final EObject ruleChildrenSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4052:6: ( ( () '*' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4053:1: ( () '*' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4053:1: ( () '*' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4053:2: () '*'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4053:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4054:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getChildrenSelectorAccess().getChildrenSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getChildrenSelectorAccess().getChildrenSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,49,FOLLOW_49_in_ruleChildrenSelector9275); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getChildrenSelectorAccess().getAsteriskKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChildrenSelector


    // $ANTLR start entryRuleAncestorSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4075:1: entryRuleAncestorSelector returns [EObject current=null] : iv_ruleAncestorSelector= ruleAncestorSelector EOF ;
    public final EObject entryRuleAncestorSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAncestorSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4075:58: (iv_ruleAncestorSelector= ruleAncestorSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4076:2: iv_ruleAncestorSelector= ruleAncestorSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAncestorSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAncestorSelector_in_entryRuleAncestorSelector9308);
            iv_ruleAncestorSelector=ruleAncestorSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAncestorSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAncestorSelector9318); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAncestorSelector


    // $ANTLR start ruleAncestorSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4083:1: ruleAncestorSelector returns [EObject current=null] : ( () '**' ) ;
    public final EObject ruleAncestorSelector() throws RecognitionException {
        EObject current = null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4088:6: ( ( () '**' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4089:1: ( () '**' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4089:1: ( () '**' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4089:2: () '**'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4089:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4090:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getAncestorSelectorAccess().getAncestorSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getAncestorSelectorAccess().getAncestorSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,50,FOLLOW_50_in_ruleAncestorSelector9361); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAncestorSelectorAccess().getAsteriskAsteriskKeyword_1(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAncestorSelector


    // $ANTLR start entryRuleRegexpSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4111:1: entryRuleRegexpSelector returns [EObject current=null] : iv_ruleRegexpSelector= ruleRegexpSelector EOF ;
    public final EObject entryRuleRegexpSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegexpSelector = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4111:56: (iv_ruleRegexpSelector= ruleRegexpSelector EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4112:2: iv_ruleRegexpSelector= ruleRegexpSelector EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRegexpSelectorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRegexpSelector_in_entryRuleRegexpSelector9394);
            iv_ruleRegexpSelector=ruleRegexpSelector();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRegexpSelector; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpSelector9404); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpSelector


    // $ANTLR start ruleRegexpSelector
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4119:1: ruleRegexpSelector returns [EObject current=null] : ( () (lv_pattern_1= RULE_REGEX ) ) ;
    public final EObject ruleRegexpSelector() throws RecognitionException {
        EObject current = null;

        Token lv_pattern_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4124:6: ( ( () (lv_pattern_1= RULE_REGEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4125:1: ( () (lv_pattern_1= RULE_REGEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4125:1: ( () (lv_pattern_1= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4125:2: () (lv_pattern_1= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4125:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4126:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRegexpSelectorAccess().getRegexpSelectorAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRegexpSelectorAccess().getRegexpSelectorAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4136:2: (lv_pattern_1= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4138:6: lv_pattern_1= RULE_REGEX
            {
            lv_pattern_1=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpSelector9460); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getRegexpSelectorAccess().getPatternREGEXTerminalRuleCall_1_0(), "pattern"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRegexpSelectorRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "pattern", lv_pattern_1, "REGEX", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpSelector


    // $ANTLR start entryRuleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4165:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilter = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4165:48: (iv_ruleFilter= ruleFilter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4166:2: iv_ruleFilter= ruleFilter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFilterRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFilter_in_entryRuleFilter9503);
            iv_ruleFilter=ruleFilter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFilter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilter9513); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilter


    // $ANTLR start ruleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4173:1: ruleFilter returns [EObject current=null] : ( '(' (lv_predicate_1= ruleExpression ) ')' ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;

        EObject lv_predicate_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4178:6: ( ( '(' (lv_predicate_1= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4179:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4179:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4179:2: '(' (lv_predicate_1= ruleExpression ) ')'
            {
            match(input,51,FOLLOW_51_in_ruleFilter9547); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4183:1: (lv_predicate_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4186:6: lv_predicate_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleFilter9581);
            lv_predicate_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFilterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "predicate", lv_predicate_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleFilter9594); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilter


    // $ANTLR start entryRulePreCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4215:1: entryRulePreCondition returns [EObject current=null] : iv_rulePreCondition= rulePreCondition EOF ;
    public final EObject entryRulePreCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreCondition = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4215:54: (iv_rulePreCondition= rulePreCondition EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4216:2: iv_rulePreCondition= rulePreCondition EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPreConditionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePreCondition_in_entryRulePreCondition9627);
            iv_rulePreCondition=rulePreCondition();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePreCondition; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePreCondition9637); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePreCondition


    // $ANTLR start rulePreCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4223:1: rulePreCondition returns [EObject current=null] : ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePreCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4228:6: ( ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4229:1: ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4229:1: ( 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4229:2: 'precondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            match(input,53,FOLLOW_53_in_rulePreCondition9671); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getPreconditionKeyword_0(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_rulePreCondition9680); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4237:1: (lv_asserts_2= ruleAssertionExpression )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==55) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4240:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPreConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePreCondition9714);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPreConditionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_rulePreCondition9728); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPreConditionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePreCondition


    // $ANTLR start entryRulePostCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4269:1: entryRulePostCondition returns [EObject current=null] : iv_rulePostCondition= rulePostCondition EOF ;
    public final EObject entryRulePostCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostCondition = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4269:55: (iv_rulePostCondition= rulePostCondition EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4270:2: iv_rulePostCondition= rulePostCondition EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostConditionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePostCondition_in_entryRulePostCondition9761);
            iv_rulePostCondition=rulePostCondition();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostCondition; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePostCondition9771); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostCondition


    // $ANTLR start rulePostCondition
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4277:1: rulePostCondition returns [EObject current=null] : ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePostCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4282:6: ( ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4283:1: ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4283:1: ( 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4283:2: 'postcondition' '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            match(input,54,FOLLOW_54_in_rulePostCondition9805); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getPostconditionKeyword_0(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_rulePostCondition9814); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4291:1: (lv_asserts_2= ruleAssertionExpression )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==55) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4294:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getPostConditionAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePostCondition9848);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getPostConditionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            match(input,27,FOLLOW_27_in_rulePostCondition9862); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getPostConditionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostCondition


    // $ANTLR start entryRuleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4323:1: entryRuleAssertionExpression returns [EObject current=null] : iv_ruleAssertionExpression= ruleAssertionExpression EOF ;
    public final EObject entryRuleAssertionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertionExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4323:61: (iv_ruleAssertionExpression= ruleAssertionExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4324:2: iv_ruleAssertionExpression= ruleAssertionExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssertionExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression9895);
            iv_ruleAssertionExpression=ruleAssertionExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssertionExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssertionExpression9905); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssertionExpression


    // $ANTLR start ruleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4331:1: ruleAssertionExpression returns [EObject current=null] : ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) ;
    public final EObject ruleAssertionExpression() throws RecognitionException {
        EObject current = null;

        Token lv_message_3=null;
        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4336:6: ( ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4337:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4337:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4337:2: 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';'
            {
            match(input,55,FOLLOW_55_in_ruleAssertionExpression9939); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4341:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4344:6: lv_expr_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleAssertionExpression9973);
            lv_expr_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4362:2: ( ',' (lv_message_3= RULE_STRING ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==23) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4362:3: ',' (lv_message_3= RULE_STRING )
                    {
                    match(input,23,FOLLOW_23_in_ruleAssertionExpression9987); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4366:1: (lv_message_3= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4368:6: lv_message_3= RULE_STRING
                    {
                    lv_message_3=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleAssertionExpression10009); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0(), "message"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "message", lv_message_3, "STRING", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleAssertionExpression10028); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssertionExpression


    // $ANTLR start entryRuleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4397:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4397:51: (iv_ruleStatement= ruleStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4398:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement10061);
            iv_ruleStatement=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement10071); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatement


    // $ANTLR start ruleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4405:1: ruleStatement returns [EObject current=null] : (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_IfStatement_0 = null;

        EObject this_SwitchStatement_1 = null;

        EObject this_WhileStatement_2 = null;

        EObject this_ForStatement_3 = null;

        EObject this_DoWhileStatement_4 = null;

        EObject this_CompoundStatement_5 = null;

        EObject this_VarExpression_6 = null;

        EObject this_BreakStatement_8 = null;

        EObject this_ContinueStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_FunctionStatement_11 = null;

        EObject this_LabelStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryCatchStatement_14 = null;

        EObject this_WithStatement_15 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4410:6: ( (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )
            int alt81=15;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt81=1;
                }
                break;
            case 59:
                {
                alt81=2;
                }
                break;
            case 58:
                {
                alt81=3;
                }
                break;
            case 62:
                {
                alt81=4;
                }
                break;
            case 64:
                {
                alt81=5;
                }
                break;
            case 24:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    int LA81_16 = input.LA(3);

                    if ( (LA81_16==46) ) {
                        int LA81_22 = input.LA(4);

                        if ( (synpred105()) ) {
                            alt81=6;
                        }
                        else if ( (synpred107()) ) {
                            alt81=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 22, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA81_16==18||LA81_16==34||LA81_16==39||LA81_16==41||LA81_16==47||LA81_16==49||LA81_16==51||(LA81_16>=74 && LA81_16<=85)||(LA81_16>=87 && LA81_16<=88)||(LA81_16>=102 && LA81_16<=128)) ) {
                        alt81=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 16, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_PID:
                    {
                    int LA81_17 = input.LA(3);

                    if ( (LA81_17==46) ) {
                        alt81=7;
                    }
                    else if ( (LA81_17==18||LA81_17==34||LA81_17==39||LA81_17==41||LA81_17==47||LA81_17==49||LA81_17==51||(LA81_17>=74 && LA81_17<=85)||(LA81_17>=87 && LA81_17<=88)||(LA81_17>=102 && LA81_17<=128)) ) {
                        alt81=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_STRING:
                    {
                    int LA81_18 = input.LA(3);

                    if ( (LA81_18==18||LA81_18==34||LA81_18==39||LA81_18==41||LA81_18==47||LA81_18==49||LA81_18==51||(LA81_18>=74 && LA81_18<=85)||(LA81_18>=87 && LA81_18<=88)||(LA81_18>=102 && LA81_18<=128)) ) {
                        alt81=6;
                    }
                    else if ( (LA81_18==46) ) {
                        alt81=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 18, input);

                        throw nvae;
                    }
                    }
                    break;
                case 27:
                    {
                    alt81=7;
                    }
                    break;
                case RULE_REGEX:
                case RULE_INT:
                case RULE_HEX:
                case RULE_REAL:
                case 18:
                case 24:
                case 25:
                case 39:
                case 42:
                case 43:
                case 44:
                case 51:
                case 56:
                case 57:
                case 58:
                case 59:
                case 62:
                case 64:
                case 65:
                case 66:
                case 67:
                case 69:
                case 70:
                case 73:
                case 84:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                    {
                    alt81=6;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 6, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
            case RULE_REGEX:
            case RULE_PID:
            case RULE_INT:
            case RULE_HEX:
            case RULE_REAL:
            case 18:
            case 25:
            case 39:
            case 43:
            case 44:
            case 51:
            case 73:
            case 84:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
                {
                alt81=7;
                }
                break;
            case 66:
                {
                int LA81_8 = input.LA(2);

                if ( (LA81_8==RULE_ID) ) {
                    alt81=11;
                }
                else if ( (LA81_8==51) ) {
                    alt81=7;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 8, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA81_9 = input.LA(2);

                if ( (LA81_9==46) ) {
                    alt81=12;
                }
                else if ( (LA81_9==18||LA81_9==34||LA81_9==39||LA81_9==41||LA81_9==47||LA81_9==49||LA81_9==51||(LA81_9>=74 && LA81_9<=85)||(LA81_9>=87 && LA81_9<=88)||(LA81_9>=102 && LA81_9<=128)) ) {
                    alt81=7;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 9, input);

                    throw nvae;
                }
                }
                break;
            case 56:
                {
                alt81=8;
                }
                break;
            case 57:
                {
                alt81=9;
                }
                break;
            case 65:
                {
                alt81=10;
                }
                break;
            case 69:
                {
                alt81=13;
                }
                break;
            case 70:
                {
                alt81=14;
                }
                break;
            case 42:
                {
                alt81=15;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4411:1: (this_IfStatement_0= ruleIfStatement | this_SwitchStatement_1= ruleSwitchStatement | this_WhileStatement_2= ruleWhileStatement | this_ForStatement_3= ruleForStatement | this_DoWhileStatement_4= ruleDoWhileStatement | this_CompoundStatement_5= ruleCompoundStatement | ( (this_VarExpression_6= ruleVarExpression )? ';' ) | this_BreakStatement_8= ruleBreakStatement | this_ContinueStatement_9= ruleContinueStatement | this_ReturnStatement_10= ruleReturnStatement | this_FunctionStatement_11= ruleFunctionStatement | this_LabelStatement_12= ruleLabelStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryCatchStatement_14= ruleTryCatchStatement | this_WithStatement_15= ruleWithStatement )", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4412:5: this_IfStatement_0= ruleIfStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleIfStatement_in_ruleStatement10118);
                    this_IfStatement_0=ruleIfStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_IfStatement_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4422:5: this_SwitchStatement_1= ruleSwitchStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleSwitchStatement_in_ruleStatement10145);
                    this_SwitchStatement_1=ruleSwitchStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_SwitchStatement_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4432:5: this_WhileStatement_2= ruleWhileStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleWhileStatement_in_ruleStatement10172);
                    this_WhileStatement_2=ruleWhileStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WhileStatement_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4442:5: this_ForStatement_3= ruleForStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleForStatement_in_ruleStatement10199);
                    this_ForStatement_3=ruleForStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ForStatement_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4452:5: this_DoWhileStatement_4= ruleDoWhileStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getDoWhileStatementParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleDoWhileStatement_in_ruleStatement10226);
                    this_DoWhileStatement_4=ruleDoWhileStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_DoWhileStatement_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4462:5: this_CompoundStatement_5= ruleCompoundStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleCompoundStatement_in_ruleStatement10253);
                    this_CompoundStatement_5=ruleCompoundStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_CompoundStatement_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:6: ( (this_VarExpression_6= ruleVarExpression )? ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:7: (this_VarExpression_6= ruleVarExpression )? ';'
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:7: (this_VarExpression_6= ruleVarExpression )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( ((LA80_0>=RULE_ID && LA80_0<=RULE_REAL)||(LA80_0>=24 && LA80_0<=25)||LA80_0==39||(LA80_0>=43 && LA80_0<=44)||LA80_0==51||LA80_0==66||LA80_0==73||LA80_0==84||(LA80_0>=86 && LA80_0<=98)) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4472:5: this_VarExpression_6= ruleVarExpression
                            {
                            if ( backtracking==0 ) {
                               
                                      currentNode=createCompositeNode(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_6_0(), currentNode); 
                                  
                            }
                            pushFollow(FOLLOW_ruleVarExpression_in_ruleStatement10282);
                            this_VarExpression_6=ruleVarExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {
                               
                                      current = this_VarExpression_6; 
                                      currentNode = currentNode.getParent();
                                  
                            }

                            }
                            break;

                    }

                    match(input,18,FOLLOW_18_in_ruleStatement10292); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4486:5: this_BreakStatement_8= ruleBreakStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_7(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBreakStatement_in_ruleStatement10321);
                    this_BreakStatement_8=ruleBreakStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BreakStatement_8; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4496:5: this_ContinueStatement_9= ruleContinueStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_8(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleContinueStatement_in_ruleStatement10348);
                    this_ContinueStatement_9=ruleContinueStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ContinueStatement_9; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4506:5: this_ReturnStatement_10= ruleReturnStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_9(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleReturnStatement_in_ruleStatement10375);
                    this_ReturnStatement_10=ruleReturnStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ReturnStatement_10; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4516:5: this_FunctionStatement_11= ruleFunctionStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getFunctionStatementParserRuleCall_10(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleFunctionStatement_in_ruleStatement10402);
                    this_FunctionStatement_11=ruleFunctionStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FunctionStatement_11; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4526:5: this_LabelStatement_12= ruleLabelStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getLabelStatementParserRuleCall_11(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLabelStatement_in_ruleStatement10429);
                    this_LabelStatement_12=ruleLabelStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LabelStatement_12; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4536:5: this_ThrowStatement_13= ruleThrowStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_12(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleThrowStatement_in_ruleStatement10456);
                    this_ThrowStatement_13=ruleThrowStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ThrowStatement_13; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4546:5: this_TryCatchStatement_14= ruleTryCatchStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getTryCatchStatementParserRuleCall_13(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleTryCatchStatement_in_ruleStatement10483);
                    this_TryCatchStatement_14=ruleTryCatchStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_TryCatchStatement_14; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 15 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4556:5: this_WithStatement_15= ruleWithStatement
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWithStatementParserRuleCall_14(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleWithStatement_in_ruleStatement10510);
                    this_WithStatement_15=ruleWithStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WithStatement_15; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatement


    // $ANTLR start entryRuleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4571:1: entryRuleBreakStatement returns [EObject current=null] : iv_ruleBreakStatement= ruleBreakStatement EOF ;
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4571:56: (iv_ruleBreakStatement= ruleBreakStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4572:2: iv_ruleBreakStatement= ruleBreakStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBreakStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement10542);
            iv_ruleBreakStatement=ruleBreakStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBreakStatement10552); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBreakStatement


    // $ANTLR start ruleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4579:1: ruleBreakStatement returns [EObject current=null] : ( () 'break' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4584:6: ( ( () 'break' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4585:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4585:1: ( () 'break' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4585:2: () 'break' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4585:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4586:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,56,FOLLOW_56_in_ruleBreakStatement10595); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBreakStatementAccess().getBreakKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4600:1: (lv_label_2= RULE_ID )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_ID) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4602:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleBreakStatement10617); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getBreakStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getBreakStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleBreakStatement10635); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBreakStatement


    // $ANTLR start entryRuleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4631:1: entryRuleContinueStatement returns [EObject current=null] : iv_ruleContinueStatement= ruleContinueStatement EOF ;
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4631:59: (iv_ruleContinueStatement= ruleContinueStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4632:2: iv_ruleContinueStatement= ruleContinueStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getContinueStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement10668);
            iv_ruleContinueStatement=ruleContinueStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleContinueStatement10678); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleContinueStatement


    // $ANTLR start ruleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4639:1: ruleContinueStatement returns [EObject current=null] : ( () 'continue' (lv_label_2= RULE_ID )? ';' ) ;
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token lv_label_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4644:6: ( ( () 'continue' (lv_label_2= RULE_ID )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4645:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4645:1: ( () 'continue' (lv_label_2= RULE_ID )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4645:2: () 'continue' (lv_label_2= RULE_ID )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4645:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4646:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,57,FOLLOW_57_in_ruleContinueStatement10721); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getContinueStatementAccess().getContinueKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4660:1: (lv_label_2= RULE_ID )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_ID) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4662:6: lv_label_2= RULE_ID
                    {
                    lv_label_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleContinueStatement10743); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getContinueStatementAccess().getLabelIDTerminalRuleCall_2_0(), "label"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getContinueStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "label", lv_label_2, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleContinueStatement10761); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleContinueStatement


    // $ANTLR start entryRuleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4691:1: entryRuleCompoundStatement returns [EObject current=null] : iv_ruleCompoundStatement= ruleCompoundStatement EOF ;
    public final EObject entryRuleCompoundStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4691:59: (iv_ruleCompoundStatement= ruleCompoundStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4692:2: iv_ruleCompoundStatement= ruleCompoundStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement10794);
            iv_ruleCompoundStatement=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundStatement10804); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundStatement


    // $ANTLR start ruleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4699:1: ruleCompoundStatement returns [EObject current=null] : ( '{' (lv_statements_1= ruleStatements ) '}' ) ;
    public final EObject ruleCompoundStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4704:6: ( ( '{' (lv_statements_1= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4705:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4705:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4705:2: '{' (lv_statements_1= ruleStatements ) '}'
            {
            match(input,24,FOLLOW_24_in_ruleCompoundStatement10838); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4709:1: (lv_statements_1= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4712:6: lv_statements_1= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleCompoundStatement10872);
            lv_statements_1=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCompoundStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_1, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,27,FOLLOW_27_in_ruleCompoundStatement10885); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundStatement


    // $ANTLR start entryRuleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4741:1: entryRuleStatements returns [EObject current=null] : iv_ruleStatements= ruleStatements EOF ;
    public final EObject entryRuleStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatements = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4741:52: (iv_ruleStatements= ruleStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4742:2: iv_ruleStatements= ruleStatements EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStatementsRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStatements_in_entryRuleStatements10918);
            iv_ruleStatements=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStatements; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatements10928); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatements


    // $ANTLR start ruleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4749:1: ruleStatements returns [EObject current=null] : (lv_statements_0= ruleStatement )+ ;
    public final EObject ruleStatements() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4754:6: ( (lv_statements_0= ruleStatement )+ )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4755:1: (lv_statements_0= ruleStatement )+
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4755:1: (lv_statements_0= ruleStatement )+
            int cnt84=0;
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( ((LA84_0>=RULE_ID && LA84_0<=RULE_REAL)||LA84_0==18||(LA84_0>=24 && LA84_0<=25)||LA84_0==39||(LA84_0>=42 && LA84_0<=44)||LA84_0==51||(LA84_0>=56 && LA84_0<=59)||LA84_0==62||(LA84_0>=64 && LA84_0<=67)||(LA84_0>=69 && LA84_0<=70)||LA84_0==73||LA84_0==84||(LA84_0>=86 && LA84_0<=98)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4758:6: lv_statements_0= ruleStatement
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleStatement_in_ruleStatements10986);
            	    lv_statements_0=ruleStatement();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getStatementsRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "statements", lv_statements_0, "Statement", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt84 >= 1 ) break loop84;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(84, input);
                        throw eee;
                }
                cnt84++;
            } while (true);


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatements


    // $ANTLR start entryRuleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4783:1: entryRuleWhileStatement returns [EObject current=null] : iv_ruleWhileStatement= ruleWhileStatement EOF ;
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4783:56: (iv_ruleWhileStatement= ruleWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4784:2: iv_ruleWhileStatement= ruleWhileStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWhileStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement11023);
            iv_ruleWhileStatement=ruleWhileStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWhileStatement11033); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWhileStatement


    // $ANTLR start ruleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4791:1: ruleWhileStatement returns [EObject current=null] : ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) ;
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_2 = null;

        EObject lv_body_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4796:6: ( ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4797:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4797:1: ( 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4797:2: 'while' '(' (lv_condition_2= ruleExpression ) ')' (lv_body_4= ruleStatement )
            {
            match(input,58,FOLLOW_58_in_ruleWhileStatement11067); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getWhileKeyword_0(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleWhileStatement11076); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4805:1: (lv_condition_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4808:6: lv_condition_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleWhileStatement11110);
            lv_condition_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleWhileStatement11123); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4830:1: (lv_body_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4833:6: lv_body_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleWhileStatement11157);
            lv_body_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWhileStatement


    // $ANTLR start entryRuleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4858:1: entryRuleSwitchStatement returns [EObject current=null] : iv_ruleSwitchStatement= ruleSwitchStatement EOF ;
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4858:57: (iv_ruleSwitchStatement= ruleSwitchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4859:2: iv_ruleSwitchStatement= ruleSwitchStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSwitchStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement11194);
            iv_ruleSwitchStatement=ruleSwitchStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSwitchStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitchStatement11204); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSwitchStatement


    // $ANTLR start ruleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4866:1: ruleSwitchStatement returns [EObject current=null] : ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) ;
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_switchExpr_2 = null;

        EObject lv_case_5 = null;

        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4871:6: ( ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4872:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4872:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4872:2: 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements )? )? '}'
            {
            match(input,59,FOLLOW_59_in_ruleSwitchStatement11238); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleSwitchStatement11247); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4880:1: (lv_switchExpr_2= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4883:6: lv_switchExpr_2= ruleVarExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleVarExpression_in_ruleSwitchStatement11281);
            lv_switchExpr_2=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "switchExpr", lv_switchExpr_2, "VarExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleSwitchStatement11294); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_ruleSwitchStatement11303); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4909:1: (lv_case_5= ruleCase )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==61) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4912:6: lv_case_5= ruleCase
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleCase_in_ruleSwitchStatement11337);
            	    lv_case_5=ruleCase();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "case", lv_case_5, "Case", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4930:3: ( 'default' ':' (lv_statements_8= ruleStatements )? )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==60) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4930:4: 'default' ':' (lv_statements_8= ruleStatements )?
                    {
                    match(input,60,FOLLOW_60_in_ruleSwitchStatement11352); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0(), null); 
                          
                    }
                    match(input,46,FOLLOW_46_in_ruleSwitchStatement11361); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4938:1: (lv_statements_8= ruleStatements )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( ((LA86_0>=RULE_ID && LA86_0<=RULE_REAL)||LA86_0==18||(LA86_0>=24 && LA86_0<=25)||LA86_0==39||(LA86_0>=42 && LA86_0<=44)||LA86_0==51||(LA86_0>=56 && LA86_0<=59)||LA86_0==62||(LA86_0>=64 && LA86_0<=67)||(LA86_0>=69 && LA86_0<=70)||LA86_0==73||LA86_0==84||(LA86_0>=86 && LA86_0<=98)) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4941:6: lv_statements_8= ruleStatements
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleStatements_in_ruleSwitchStatement11395);
                            lv_statements_8=ruleStatements();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,27,FOLLOW_27_in_ruleSwitchStatement11411); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSwitchStatement


    // $ANTLR start entryRuleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4970:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCase = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4970:46: (iv_ruleCase= ruleCase EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4971:2: iv_ruleCase= ruleCase EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCaseRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCase_in_entryRuleCase11444);
            iv_ruleCase=ruleCase();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCase; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCase11454); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCase


    // $ANTLR start ruleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4978:1: ruleCase returns [EObject current=null] : ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_1 = null;

        EObject lv_statements_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4983:6: ( ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4984:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4984:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4984:2: 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatements )?
            {
            match(input,61,FOLLOW_61_in_ruleCase11488); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCaseAccess().getCaseKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4988:1: (lv_condition_1= ruleValueLiteral )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4991:6: lv_condition_1= ruleValueLiteral
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleValueLiteral_in_ruleCase11522);
            lv_condition_1=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_1, "ValueLiteral", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,46,FOLLOW_46_in_ruleCase11535); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCaseAccess().getColonKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5013:1: (lv_statements_3= ruleStatements )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_ID && LA88_0<=RULE_REAL)||LA88_0==18||(LA88_0>=24 && LA88_0<=25)||LA88_0==39||(LA88_0>=42 && LA88_0<=44)||LA88_0==51||(LA88_0>=56 && LA88_0<=59)||LA88_0==62||(LA88_0>=64 && LA88_0<=67)||(LA88_0>=69 && LA88_0<=70)||LA88_0==73||LA88_0==84||(LA88_0>=86 && LA88_0<=98)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5016:6: lv_statements_3= ruleStatements
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getStatementsStatementsParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatements_in_ruleCase11569);
                    lv_statements_3=ruleStatements();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "statements", lv_statements_3, "Statements", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCase


    // $ANTLR start entryRuleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5041:1: entryRuleForStatement returns [EObject current=null] : iv_ruleForStatement= ruleForStatement EOF ;
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5041:54: (iv_ruleForStatement= ruleForStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5042:2: iv_ruleForStatement= ruleForStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getForStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleForStatement_in_entryRuleForStatement11607);
            iv_ruleForStatement=ruleForStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleForStatement11617); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleForStatement


    // $ANTLR start ruleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5049:1: ruleForStatement returns [EObject current=null] : ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) ;
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token lv_regular_4=null;
        EObject lv_init_3 = null;

        EObject lv_cond_5 = null;

        EObject lv_iterate_7 = null;

        EObject lv_iterate_9 = null;

        EObject lv_body_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5054:6: ( ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5055:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5055:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5055:2: () 'for' '(' (lv_init_3= ruleVarExpressionList )? ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) ) ')' (lv_body_11= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5055:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5056:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getForStatementAccess().getForStatementAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getForStatementAccess().getForStatementAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,62,FOLLOW_62_in_ruleForStatement11660); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getForKeyword_1(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleForStatement11669); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5074:1: (lv_init_3= ruleVarExpressionList )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=RULE_ID && LA89_0<=RULE_REAL)||(LA89_0>=24 && LA89_0<=25)||LA89_0==39||(LA89_0>=43 && LA89_0<=44)||LA89_0==51||LA89_0==66||LA89_0==73||LA89_0==84||(LA89_0>=86 && LA89_0<=98)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5077:6: lv_init_3= ruleVarExpressionList
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVarExpressionList_in_ruleForStatement11703);
                    lv_init_3=ruleVarExpressionList();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "init", lv_init_3, "VarExpressionList", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5095:3: ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==18) ) {
                alt92=1;
            }
            else if ( (LA92_0==63) ) {
                alt92=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5095:3: ( ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ) | ( 'in' (lv_iterate_9= ruleExpression ) ) )", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5095:4: ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5095:4: ( (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5095:5: (lv_regular_4= ';' ) (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5095:5: (lv_regular_4= ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5097:6: lv_regular_4= ';'
                    {
                    lv_regular_4=(Token)input.LT(1);
                    match(input,18,FOLLOW_18_in_ruleForStatement11731); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getRegularSemicolonKeyword_4_0_0_0(), "regular"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "regular", true, ";", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5116:2: (lv_cond_5= ruleExpression )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( ((LA90_0>=RULE_ID && LA90_0<=RULE_REAL)||(LA90_0>=24 && LA90_0<=25)||LA90_0==39||(LA90_0>=43 && LA90_0<=44)||LA90_0==51||LA90_0==66||LA90_0==84||(LA90_0>=86 && LA90_0<=98)) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5119:6: lv_cond_5= ruleExpression
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_4_0_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleForStatement11778);
                            lv_cond_5=ruleExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "cond", lv_cond_5, "Expression", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }

                    match(input,18,FOLLOW_18_in_ruleForStatement11792); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_4_0_2(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5141:1: (lv_iterate_7= ruleExpressionList )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=RULE_ID && LA91_0<=RULE_REAL)||(LA91_0>=24 && LA91_0<=25)||LA91_0==39||(LA91_0>=43 && LA91_0<=44)||LA91_0==51||LA91_0==66||LA91_0==84||(LA91_0>=86 && LA91_0<=98)) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5144:6: lv_iterate_7= ruleExpressionList
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_4_0_3_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpressionList_in_ruleForStatement11826);
                            lv_iterate_7=ruleExpressionList();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "iterate", lv_iterate_7, "ExpressionList", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5163:6: ( 'in' (lv_iterate_9= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5163:6: ( 'in' (lv_iterate_9= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5163:7: 'in' (lv_iterate_9= ruleExpression )
                    {
                    match(input,63,FOLLOW_63_in_ruleForStatement11848); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getForStatementAccess().getInKeyword_4_1_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5167:1: (lv_iterate_9= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5170:6: lv_iterate_9= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionParserRuleCall_4_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleForStatement11882);
                    lv_iterate_9=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "iterate", lv_iterate_9, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            match(input,52,FOLLOW_52_in_ruleForStatement11897); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5192:1: (lv_body_11= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5195:6: lv_body_11= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleForStatement11931);
            lv_body_11=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "body", lv_body_11, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleForStatement


    // $ANTLR start entryRuleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5220:1: entryRuleDoWhileStatement returns [EObject current=null] : iv_ruleDoWhileStatement= ruleDoWhileStatement EOF ;
    public final EObject entryRuleDoWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoWhileStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5220:58: (iv_ruleDoWhileStatement= ruleDoWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5221:2: iv_ruleDoWhileStatement= ruleDoWhileStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDoWhileStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement11968);
            iv_ruleDoWhileStatement=ruleDoWhileStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDoWhileStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDoWhileStatement11978); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDoWhileStatement


    // $ANTLR start ruleDoWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5228:1: ruleDoWhileStatement returns [EObject current=null] : ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) ;
    public final EObject ruleDoWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_statement_1 = null;

        EObject lv_condition_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5233:6: ( ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5234:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5234:1: ( 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5234:2: 'do' (lv_statement_1= ruleStatement ) 'while' '(' (lv_condition_4= ruleExpression ) ')' ';'
            {
            match(input,64,FOLLOW_64_in_ruleDoWhileStatement12012); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getDoKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5238:1: (lv_statement_1= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5241:6: lv_statement_1= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getStatementStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleDoWhileStatement12046);
            lv_statement_1=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_1, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,58,FOLLOW_58_in_ruleDoWhileStatement12059); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getWhileKeyword_2(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleDoWhileStatement12068); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getLeftParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5267:1: (lv_condition_4= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5270:6: lv_condition_4= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getDoWhileStatementAccess().getConditionExpressionParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleDoWhileStatement12102);
            lv_condition_4=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getDoWhileStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "condition", lv_condition_4, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleDoWhileStatement12115); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getRightParenthesisKeyword_5(), null); 
                  
            }
            match(input,18,FOLLOW_18_in_ruleDoWhileStatement12124); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getDoWhileStatementAccess().getSemicolonKeyword_6(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDoWhileStatement


    // $ANTLR start entryRuleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5303:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5303:57: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5304:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getReturnStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement12157);
            iv_ruleReturnStatement=ruleReturnStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStatement12167); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleReturnStatement


    // $ANTLR start ruleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5311:1: ruleReturnStatement returns [EObject current=null] : ( 'return' (lv_return_1= ruleExpression )? ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_return_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5316:6: ( ( 'return' (lv_return_1= ruleExpression )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5317:1: ( 'return' (lv_return_1= ruleExpression )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5317:1: ( 'return' (lv_return_1= ruleExpression )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5317:2: 'return' (lv_return_1= ruleExpression )? ';'
            {
            match(input,65,FOLLOW_65_in_ruleReturnStatement12201); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getReturnStatementAccess().getReturnKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5321:1: (lv_return_1= ruleExpression )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( ((LA93_0>=RULE_ID && LA93_0<=RULE_REAL)||(LA93_0>=24 && LA93_0<=25)||LA93_0==39||(LA93_0>=43 && LA93_0<=44)||LA93_0==51||LA93_0==66||LA93_0==84||(LA93_0>=86 && LA93_0<=98)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5324:6: lv_return_1= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleReturnStatement12235);
                    lv_return_1=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getReturnStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "return", lv_return_1, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }
                    break;

            }

            match(input,18,FOLLOW_18_in_ruleReturnStatement12249); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleReturnStatement


    // $ANTLR start entryRuleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5353:1: entryRuleFunctionStatement returns [EObject current=null] : iv_ruleFunctionStatement= ruleFunctionStatement EOF ;
    public final EObject entryRuleFunctionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5353:59: (iv_ruleFunctionStatement= ruleFunctionStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5354:2: iv_ruleFunctionStatement= ruleFunctionStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFunctionStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement12282);
            iv_ruleFunctionStatement=ruleFunctionStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFunctionStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFunctionStatement12292); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFunctionStatement


    // $ANTLR start ruleFunctionStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5361:1: ruleFunctionStatement returns [EObject current=null] : ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) ;
    public final EObject ruleFunctionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        Token lv_params_3=null;
        Token lv_params_5=null;
        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5366:6: ( ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5367:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5367:1: ( 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5367:2: 'function' (lv_name_1= RULE_ID ) '(' ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* ) ')' '{' (lv_statements_8= ruleStatements ) '}'
            {
            match(input,66,FOLLOW_66_in_ruleFunctionStatement12326); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getFunctionKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5371:1: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5373:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement12348); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getFunctionStatementAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,51,FOLLOW_51_in_ruleFunctionStatement12365); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5395:1: ( (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5395:2: (lv_params_3= RULE_ID ) ( ',' (lv_params_5= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5395:2: (lv_params_3= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5397:6: lv_params_3= RULE_ID
            {
            lv_params_3=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement12388); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_0_0(), "params"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		add(current, "params", lv_params_3, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5415:2: ( ',' (lv_params_5= RULE_ID ) )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==23) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5415:3: ',' (lv_params_5= RULE_ID )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleFunctionStatement12406); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getFunctionStatementAccess().getCommaKeyword_3_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5419:1: (lv_params_5= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5421:6: lv_params_5= RULE_ID
            	    {
            	    lv_params_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFunctionStatement12428); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getFunctionStatementAccess().getParamsIDTerminalRuleCall_3_1_1_0(), "params"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_5, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);


            }

            match(input,52,FOLLOW_52_in_ruleFunctionStatement12448); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getRightParenthesisKeyword_4(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_ruleFunctionStatement12457); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5447:1: (lv_statements_8= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5450:6: lv_statements_8= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFunctionStatementAccess().getStatementsStatementsParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleFunctionStatement12491);
            lv_statements_8=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,27,FOLLOW_27_in_ruleFunctionStatement12504); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFunctionStatement


    // $ANTLR start entryRuleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5479:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5479:53: (iv_ruleIfStatement= ruleIfStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5480:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIfStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIfStatement_in_entryRuleIfStatement12537);
            iv_ruleIfStatement=ruleIfStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfStatement12547); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfStatement


    // $ANTLR start ruleIfStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5487:1: ruleIfStatement returns [EObject current=null] : ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_2 = null;

        EObject lv_then_4 = null;

        EObject lv_else_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5492:6: ( ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5493:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5493:1: ( 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5493:2: 'if' '(' (lv_cond_2= ruleExpression ) ')' (lv_then_4= ruleStatement ) ( 'else' (lv_else_6= ruleStatement ) )?
            {
            match(input,67,FOLLOW_67_in_ruleIfStatement12581); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getIfKeyword_0(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleIfStatement12590); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5501:1: (lv_cond_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5504:6: lv_cond_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getCondExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleIfStatement12624);
            lv_cond_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "cond", lv_cond_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleIfStatement12637); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5526:1: (lv_then_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5529:6: lv_then_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement12671);
            lv_then_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "then", lv_then_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5547:2: ( 'else' (lv_else_6= ruleStatement ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==68) ) {
                int LA95_1 = input.LA(2);

                if ( (synpred128()) ) {
                    alt95=1;
                }
            }
            switch (alt95) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5547:3: 'else' (lv_else_6= ruleStatement )
                    {
                    match(input,68,FOLLOW_68_in_ruleIfStatement12685); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfStatementAccess().getElseKeyword_5_0(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5551:1: (lv_else_6= ruleStatement )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5554:6: lv_else_6= ruleStatement
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatement_in_ruleIfStatement12719);
                    lv_else_6=ruleStatement();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "else", lv_else_6, "Statement", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfStatement


    // $ANTLR start entryRuleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5579:1: entryRuleLabelStatement returns [EObject current=null] : iv_ruleLabelStatement= ruleLabelStatement EOF ;
    public final EObject entryRuleLabelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5579:56: (iv_ruleLabelStatement= ruleLabelStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5580:2: iv_ruleLabelStatement= ruleLabelStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLabelStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement12758);
            iv_ruleLabelStatement=ruleLabelStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLabelStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabelStatement12768); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLabelStatement


    // $ANTLR start ruleLabelStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5587:1: ruleLabelStatement returns [EObject current=null] : ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) ) ;
    public final EObject ruleLabelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_0=null;
        EObject lv_statement_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5592:6: ( ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5593:1: ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5593:1: ( (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5593:2: (lv_name_0= RULE_ID ) ':' (lv_statement_2= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5593:2: (lv_name_0= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5595:6: lv_name_0= RULE_ID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLabelStatement12815); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getLabelStatementAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,46,FOLLOW_46_in_ruleLabelStatement12832); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLabelStatementAccess().getColonKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5617:1: (lv_statement_2= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5620:6: lv_statement_2= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getLabelStatementAccess().getStatementStatementParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleLabelStatement12866);
            lv_statement_2=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLabelStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_2, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLabelStatement


    // $ANTLR start entryRuleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5645:1: entryRuleThrowStatement returns [EObject current=null] : iv_ruleThrowStatement= ruleThrowStatement EOF ;
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5645:56: (iv_ruleThrowStatement= ruleThrowStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5646:2: iv_ruleThrowStatement= ruleThrowStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getThrowStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement12903);
            iv_ruleThrowStatement=ruleThrowStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleThrowStatement12913); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleThrowStatement


    // $ANTLR start ruleThrowStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5653:1: ruleThrowStatement returns [EObject current=null] : ( 'throw' (lv_expr_1= ruleExpression ) ';' ) ;
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5658:6: ( ( 'throw' (lv_expr_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5659:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5659:1: ( 'throw' (lv_expr_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5659:2: 'throw' (lv_expr_1= ruleExpression ) ';'
            {
            match(input,69,FOLLOW_69_in_ruleThrowStatement12947); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThrowStatementAccess().getThrowKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5663:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5666:6: lv_expr_1= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getThrowStatementAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleThrowStatement12981);
            lv_expr_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getThrowStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,18,FOLLOW_18_in_ruleThrowStatement12994); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleThrowStatement


    // $ANTLR start entryRuleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5695:1: entryRuleTryCatchStatement returns [EObject current=null] : iv_ruleTryCatchStatement= ruleTryCatchStatement EOF ;
    public final EObject entryRuleTryCatchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryCatchStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5695:59: (iv_ruleTryCatchStatement= ruleTryCatchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5696:2: iv_ruleTryCatchStatement= ruleTryCatchStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTryCatchStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement13027);
            iv_ruleTryCatchStatement=ruleTryCatchStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTryCatchStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleTryCatchStatement13037); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleTryCatchStatement


    // $ANTLR start ruleTryCatchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5703:1: ruleTryCatchStatement returns [EObject current=null] : ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) ;
    public final EObject ruleTryCatchStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_tryBlock_1 = null;

        EObject lv_catchBlock_2 = null;

        EObject lv_finallyBlock_3 = null;

        EObject lv_finally_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5708:6: ( ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5709:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5709:1: ( 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5709:2: 'try' (lv_tryBlock_1= ruleCompoundStatement ) ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            {
            match(input,70,FOLLOW_70_in_ruleTryCatchStatement13071); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getTryCatchStatementAccess().getTryKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5713:1: (lv_tryBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5716:6: lv_tryBlock_1= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getTryBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement13105);
            lv_tryBlock_1=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "tryBlock", lv_tryBlock_1, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==71) ) {
                alt97=1;
            }
            else if ( (LA97_0==72) ) {
                alt97=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5734:2: ( ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? ) | (lv_finally_4= ruleFinallyBlock ) )", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:3: ( (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:4: (lv_catchBlock_2= ruleCatchBlock ) (lv_finallyBlock_3= ruleFinallyBlock )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5734:4: (lv_catchBlock_2= ruleCatchBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5737:6: lv_catchBlock_2= ruleCatchBlock
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getCatchBlockCatchBlockParserRuleCall_2_0_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement13145);
                    lv_catchBlock_2=ruleCatchBlock();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "catchBlock", lv_catchBlock_2, "CatchBlock", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5755:2: (lv_finallyBlock_3= ruleFinallyBlock )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==72) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5758:6: lv_finallyBlock_3= ruleFinallyBlock
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyBlockFinallyBlockParserRuleCall_2_0_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement13183);
                            lv_finallyBlock_3=ruleFinallyBlock();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "finallyBlock", lv_finallyBlock_3, "FinallyBlock", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5777:6: (lv_finally_4= ruleFinallyBlock )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5777:6: (lv_finally_4= ruleFinallyBlock )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5780:6: lv_finally_4= ruleFinallyBlock
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getTryCatchStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement13229);
                    lv_finally_4=ruleFinallyBlock();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getTryCatchStatementRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "finally", lv_finally_4, "FinallyBlock", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleTryCatchStatement


    // $ANTLR start entryRuleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5805:1: entryRuleCatchBlock returns [EObject current=null] : iv_ruleCatchBlock= ruleCatchBlock EOF ;
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchBlock = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5805:52: (iv_ruleCatchBlock= ruleCatchBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5806:2: iv_ruleCatchBlock= ruleCatchBlock EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCatchBlockRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock13267);
            iv_ruleCatchBlock=ruleCatchBlock();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCatchBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCatchBlock13277); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCatchBlock


    // $ANTLR start ruleCatchBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5813:1: ruleCatchBlock returns [EObject current=null] : ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) ;
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;

        Token lv_variable_2=null;
        EObject lv_catchBlock_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5818:6: ( ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5819:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5819:1: ( 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5819:2: 'catch' '(' (lv_variable_2= RULE_ID ) ')' (lv_catchBlock_4= ruleCompoundStatement )
            {
            match(input,71,FOLLOW_71_in_ruleCatchBlock13311); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getCatchKeyword_0(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleCatchBlock13320); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5827:1: (lv_variable_2= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5829:6: lv_variable_2= RULE_ID
            {
            lv_variable_2=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleCatchBlock13342); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getCatchBlockAccess().getVariableIDTerminalRuleCall_2_0(), "variable"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "variable", lv_variable_2, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleCatchBlock13359); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5851:1: (lv_catchBlock_4= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5854:6: lv_catchBlock_4= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getCatchBlockAccess().getCatchBlockCompoundStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleCatchBlock13393);
            lv_catchBlock_4=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getCatchBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "catchBlock", lv_catchBlock_4, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCatchBlock


    // $ANTLR start entryRuleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5879:1: entryRuleFinallyBlock returns [EObject current=null] : iv_ruleFinallyBlock= ruleFinallyBlock EOF ;
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFinallyBlock = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5879:54: (iv_ruleFinallyBlock= ruleFinallyBlock EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5880:2: iv_ruleFinallyBlock= ruleFinallyBlock EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFinallyBlockRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock13430);
            iv_ruleFinallyBlock=ruleFinallyBlock();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFinallyBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFinallyBlock13440); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFinallyBlock


    // $ANTLR start ruleFinallyBlock
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5887:1: ruleFinallyBlock returns [EObject current=null] : ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) ;
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_finallyBlock_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5892:6: ( ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5893:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5893:1: ( 'finally' (lv_finallyBlock_1= ruleCompoundStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5893:2: 'finally' (lv_finallyBlock_1= ruleCompoundStatement )
            {
            match(input,72,FOLLOW_72_in_ruleFinallyBlock13474); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFinallyBlockAccess().getFinallyKeyword_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5897:1: (lv_finallyBlock_1= ruleCompoundStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5900:6: lv_finallyBlock_1= ruleCompoundStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFinallyBlockAccess().getFinallyBlockCompoundStatementParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock13508);
            lv_finallyBlock_1=ruleCompoundStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFinallyBlockRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "finallyBlock", lv_finallyBlock_1, "CompoundStatement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFinallyBlock


    // $ANTLR start entryRuleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5925:1: entryRuleWithStatement returns [EObject current=null] : iv_ruleWithStatement= ruleWithStatement EOF ;
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithStatement = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5925:55: (iv_ruleWithStatement= ruleWithStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5926:2: iv_ruleWithStatement= ruleWithStatement EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithStatementRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleWithStatement_in_entryRuleWithStatement13545);
            iv_ruleWithStatement=ruleWithStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWithStatement13555); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWithStatement


    // $ANTLR start ruleWithStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5933:1: ruleWithStatement returns [EObject current=null] : ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) ;
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_2 = null;

        EObject lv_statement_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5938:6: ( ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5939:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5939:1: ( 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5939:2: 'with' '(' (lv_expr_2= ruleExpression ) ')' (lv_statement_4= ruleStatement )
            {
            match(input,42,FOLLOW_42_in_ruleWithStatement13589); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,51,FOLLOW_51_in_ruleWithStatement13598); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5947:1: (lv_expr_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5950:6: lv_expr_2= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleWithStatement13632);
            lv_expr_2=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "expr", lv_expr_2, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,52,FOLLOW_52_in_ruleWithStatement13645); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5972:1: (lv_statement_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5975:6: lv_statement_4= ruleStatement
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatement_in_ruleWithStatement13679);
            lv_statement_4=ruleStatement();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithStatementRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statement", lv_statement_4, "Statement", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWithStatement


    // $ANTLR start entryRuleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6000:1: entryRuleVarExpressionList returns [EObject current=null] : iv_ruleVarExpressionList= ruleVarExpressionList EOF ;
    public final EObject entryRuleVarExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarExpressionList = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6000:59: (iv_ruleVarExpressionList= ruleVarExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6001:2: iv_ruleVarExpressionList= ruleVarExpressionList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarExpressionListRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList13716);
            iv_ruleVarExpressionList=ruleVarExpressionList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarExpressionList; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpressionList13726); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpressionList


    // $ANTLR start ruleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6008:1: ruleVarExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) ;
    public final EObject ruleVarExpressionList() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6013:6: ( ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6014:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6014:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6014:2: (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6014:2: (lv_expr_0= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6017:6: lv_expr_0= ruleVarExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList13785);
            lv_expr_0=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "expr", lv_expr_0, "VarExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6035:2: ( ',' (lv_expr_2= ruleVarExpression ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==23) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6035:3: ',' (lv_expr_2= ruleVarExpression )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleVarExpressionList13799); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6039:1: (lv_expr_2= ruleVarExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6042:6: lv_expr_2= ruleVarExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList13833);
            	    lv_expr_2=ruleVarExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "expr", lv_expr_2, "VarExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpressionList


    // $ANTLR start entryRuleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6067:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6067:56: (iv_ruleExpressionList= ruleExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6068:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionListRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleExpressionList_in_entryRuleExpressionList13872);
            iv_ruleExpressionList=ruleExpressionList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpressionList13882); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpressionList


    // $ANTLR start ruleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6075:1: ruleExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6080:6: ( ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6081:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6081:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6081:2: (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6081:2: (lv_expr_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6084:6: lv_expr_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList13941);
            lv_expr_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "expr", lv_expr_0, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6102:2: ( ',' (lv_expr_2= ruleExpression ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==23) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6102:3: ',' (lv_expr_2= ruleExpression )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleExpressionList13955); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6106:1: (lv_expr_2= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6109:6: lv_expr_2= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList13989);
            	    lv_expr_2=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "expr", lv_expr_2, "Expression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpressionList


    // $ANTLR start entryRuleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6134:1: entryRuleVarExpression returns [EObject current=null] : iv_ruleVarExpression= ruleVarExpression EOF ;
    public final EObject entryRuleVarExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6134:55: (iv_ruleVarExpression= ruleVarExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6135:2: iv_ruleVarExpression= ruleVarExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVarExpression_in_entryRuleVarExpression14028);
            iv_ruleVarExpression=ruleVarExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpression14038); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpression


    // $ANTLR start ruleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6142:1: ruleVarExpression returns [EObject current=null] : (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) ) ;
    public final EObject ruleVarExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_3=null;
        EObject this_Expression_0 = null;

        EObject lv_value_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6147:6: ( (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6148:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6148:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_REAL)||(LA101_0>=24 && LA101_0<=25)||LA101_0==39||(LA101_0>=43 && LA101_0<=44)||LA101_0==51||LA101_0==66||LA101_0==84||(LA101_0>=86 && LA101_0<=98)) ) {
                alt101=1;
            }
            else if ( (LA101_0==73) ) {
                alt101=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6148:1: (this_Expression_0= ruleExpression | ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? ) )", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6149:5: this_Expression_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression14085);
                    this_Expression_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Expression_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6158:6: ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6158:6: ( () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6158:7: () 'var' (lv_name_3= RULE_ID ) ( '=' (lv_value_5= ruleExpression ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6158:7: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6159:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getVarExpressionAccess().getVarExpressionAction_1_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getVarExpressionAccess().getVarExpressionAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,73,FOLLOW_73_in_ruleVarExpression14109); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarExpressionAccess().getVarKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6173:1: (lv_name_3= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6175:6: lv_name_3= RULE_ID
                    {
                    lv_name_3=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVarExpression14131); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_2_0(), "name"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6193:2: ( '=' (lv_value_5= ruleExpression ) )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==41) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6193:3: '=' (lv_value_5= ruleExpression )
                            {
                            match(input,41,FOLLOW_41_in_ruleVarExpression14149); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_3_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6197:1: (lv_value_5= ruleExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6200:6: lv_value_5= ruleExpression
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression14183);
                            lv_value_5=ruleExpression();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "value", lv_value_5, "Expression", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6225:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6225:52: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6226:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression14223);
            iv_ruleExpression=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpression14233); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6233:1: ruleExpression returns [EObject current=null] : this_AssignmentExpression_0= ruleAssignmentExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AssignmentExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6238:6: (this_AssignmentExpression_0= ruleAssignmentExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6240:5: this_AssignmentExpression_0= ruleAssignmentExpression
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleExpression14279);
            this_AssignmentExpression_0=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AssignmentExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6255:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6255:62: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6256:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression14310);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignmentExpression14320); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6263:1: ruleAssignmentExpression returns [EObject current=null] : (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IfExpression_0 = null;

        Enumerator lv_op_2 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6268:6: ( (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6269:1: (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6269:1: (this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6270:5: this_IfExpression_0= ruleIfExpression ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getIfExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleIfExpression_in_ruleAssignmentExpression14367);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_IfExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6278:1: ( () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==41||(LA102_0>=104 && LA102_0<=114)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6278:2: () (lv_op_2= ruleAssignmentOperator ) (lv_right_3= ruleAssignmentExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6278:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6279:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6294:2: (lv_op_2= ruleAssignmentOperator )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6297:6: lv_op_2= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorEnumRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression14410);
                    lv_op_2=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "op", lv_op_2, "AssignmentOperator", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6315:2: (lv_right_3= ruleAssignmentExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6318:6: lv_right_3= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression14448);
                    lv_right_3=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "right", lv_right_3, "AssignmentExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6343:1: entryRuleChainedExpression returns [EObject current=null] : iv_ruleChainedExpression= ruleChainedExpression EOF ;
    public final EObject entryRuleChainedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChainedExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6343:59: (iv_ruleChainedExpression= ruleChainedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6344:2: iv_ruleChainedExpression= ruleChainedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getChainedExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression14487);
            iv_ruleChainedExpression=ruleChainedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleChainedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainedExpression14497); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainedExpression


    // $ANTLR start ruleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6351:1: ruleChainedExpression returns [EObject current=null] : this_IfExpression_0= ruleIfExpression ;
    public final EObject ruleChainedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IfExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6356:6: (this_IfExpression_0= ruleIfExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6358:5: this_IfExpression_0= ruleIfExpression
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleIfExpression_in_ruleChainedExpression14543);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_IfExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainedExpression


    // $ANTLR start entryRuleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6373:1: entryRuleIfExpression returns [EObject current=null] : iv_ruleIfExpression= ruleIfExpression EOF ;
    public final EObject entryRuleIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6373:54: (iv_ruleIfExpression= ruleIfExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6374:2: iv_ruleIfExpression= ruleIfExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIfExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIfExpression_in_entryRuleIfExpression14574);
            iv_ruleIfExpression=ruleIfExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfExpression14584); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfExpression


    // $ANTLR start ruleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6381:1: ruleIfExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) ;
    public final EObject ruleIfExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        EObject lv_thenPart_3 = null;

        EObject lv_elsePart_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6386:6: ( (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6387:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6387:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6388:5: this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleOrExpression_in_ruleIfExpression14631);
            this_OrExpression_0=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_OrExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6396:1: ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==74) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6396:2: () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6396:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6397:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "condition", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,74,FOLLOW_74_in_ruleIfExpression14649); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6416:1: (lv_thenPart_3= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6419:6: lv_thenPart_3= ruleChainedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression14683);
                    lv_thenPart_3=ruleChainedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "thenPart", lv_thenPart_3, "ChainedExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    match(input,46,FOLLOW_46_in_ruleIfExpression14696); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3(), null); 
                          
                    }
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6441:1: (lv_elsePart_5= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6444:6: lv_elsePart_5= ruleChainedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression14730);
                    lv_elsePart_5=ruleChainedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "elsePart", lv_elsePart_5, "ChainedExpression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6469:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6469:54: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6470:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleOrExpression_in_entryRuleOrExpression14769);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrExpression14779); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6477:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6482:6: ( (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6483:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6483:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6484:5: this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression14826);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AndExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6492:1: ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==75) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6492:2: () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6492:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6493:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6508:2: (lv_operator_2= '||' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6510:6: lv_operator_2= '||'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,75,FOLLOW_75_in_ruleOrExpression14856); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0(), "operator"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "||", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6529:2: (lv_right_3= ruleAndExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6532:6: lv_right_3= ruleAndExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression14903);
            	    lv_right_3=ruleAndExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "AndExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6557:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6557:55: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6558:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAndExpression_in_entryRuleAndExpression14942);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndExpression14952); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6565:1: ruleAndExpression returns [EObject current=null] : (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2=null;
        EObject this_BitwiseExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6570:6: ( (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6571:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6571:1: (this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6572:5: this_BitwiseExpression_0= ruleBitwiseExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getBitwiseExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression14999);
            this_BitwiseExpression_0=ruleBitwiseExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_BitwiseExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6580:1: ( () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==76) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6580:2: () (lv_operator_2= '&&' ) (lv_right_3= ruleBitwiseExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6580:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6581:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6596:2: (lv_operator_2= '&&' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6598:6: lv_operator_2= '&&'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,76,FOLLOW_76_in_ruleAndExpression15029); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0(), "operator"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "&&", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6617:2: (lv_right_3= ruleBitwiseExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6620:6: lv_right_3= ruleBitwiseExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightBitwiseExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleBitwiseExpression_in_ruleAndExpression15076);
            	    lv_right_3=ruleBitwiseExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "BitwiseExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6645:1: entryRuleBitwiseExpression returns [EObject current=null] : iv_ruleBitwiseExpression= ruleBitwiseExpression EOF ;
    public final EObject entryRuleBitwiseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6645:59: (iv_ruleBitwiseExpression= ruleBitwiseExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6646:2: iv_ruleBitwiseExpression= ruleBitwiseExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBitwiseExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression15115);
            iv_ruleBitwiseExpression=ruleBitwiseExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBitwiseExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBitwiseExpression15125); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBitwiseExpression


    // $ANTLR start ruleBitwiseExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6653:1: ruleBitwiseExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* ) ;
    public final EObject ruleBitwiseExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_RelationalExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6658:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6659:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6659:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6660:5: this_RelationalExpression_0= ruleRelationalExpression ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression15172);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_RelationalExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6668:1: ( () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( ((LA107_0>=77 && LA107_0<=79)) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6668:2: () (lv_name_2= ( '&' | '^' | '|' ) ) (lv_params_3= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6668:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6669:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getBitwiseExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6684:2: (lv_name_2= ( '&' | '^' | '|' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6686:6: lv_name_2= ( '&' | '^' | '|' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6686:16: ( '&' | '^' | '|' )
            	    int alt106=3;
            	    switch ( input.LA(1) ) {
            	    case 77:
            	        {
            	        alt106=1;
            	        }
            	        break;
            	    case 78:
            	        {
            	        alt106=2;
            	        }
            	        break;
            	    case 79:
            	        {
            	        alt106=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("6686:16: ( '&' | '^' | '|' )", 106, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt106) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6686:17: '&'
            	            {
            	            match(input,77,FOLLOW_77_in_ruleBitwiseExpression15203); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameAmpersandKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6692:6: '^'
            	            {
            	            match(input,78,FOLLOW_78_in_ruleBitwiseExpression15219); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameCircumflexAccentKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6698:6: '|'
            	            {
            	            match(input,79,FOLLOW_79_in_ruleBitwiseExpression15235); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getBitwiseExpressionAccess().getNameVerticalLineKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6718:2: (lv_params_3= ruleRelationalExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6721:6: lv_params_3= ruleRelationalExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBitwiseExpressionAccess().getParamsRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression15284);
            	    lv_params_3=ruleRelationalExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBitwiseExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "RelationalExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBitwiseExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6746:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6746:62: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6747:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression15323);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRelationalExpression15333); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6754:1: ruleRelationalExpression returns [EObject current=null] : (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        Enumerator lv_operator_2 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6759:6: ( (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6760:1: (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6760:1: (this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6761:5: this_ShiftExpression_0= ruleShiftExpression ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleShiftExpression_in_ruleRelationalExpression15380);
            this_ShiftExpression_0=ruleShiftExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_ShiftExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6769:1: ( () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression ) )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( ((LA108_0>=102 && LA108_0<=103)||(LA108_0>=115 && LA108_0<=122)) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6769:2: () (lv_operator_2= ruleRelationalOperator ) (lv_right_3= ruleShiftExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6769:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6770:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getRelationalExpressionAccess().getRelationalOperationLeftAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRelationalOperationLeftAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6785:2: (lv_operator_2= ruleRelationalOperator )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6788:6: lv_operator_2= ruleRelationalOperator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression15423);
            	    lv_operator_2=ruleRelationalOperator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "operator", lv_operator_2, "RelationalOperator", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6806:2: (lv_right_3= ruleShiftExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6809:6: lv_right_3= ruleShiftExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleShiftExpression_in_ruleRelationalExpression15461);
            	    lv_right_3=ruleShiftExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "right", lv_right_3, "ShiftExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleShiftExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6834:1: entryRuleShiftExpression returns [EObject current=null] : iv_ruleShiftExpression= ruleShiftExpression EOF ;
    public final EObject entryRuleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6834:57: (iv_ruleShiftExpression= ruleShiftExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6835:2: iv_ruleShiftExpression= ruleShiftExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getShiftExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleShiftExpression_in_entryRuleShiftExpression15500);
            iv_ruleShiftExpression=ruleShiftExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleShiftExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleShiftExpression15510); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleShiftExpression


    // $ANTLR start ruleShiftExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6842:1: ruleShiftExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* ) ;
    public final EObject ruleShiftExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6847:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6848:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6848:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6849:5: this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression15557);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AdditiveExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6857:1: ( () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=80 && LA110_0<=82)) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6857:2: () (lv_name_2= ( '<<' | '>>' | '>>>' ) ) (lv_params_3= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6857:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6858:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getShiftExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getShiftExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6873:2: (lv_name_2= ( '<<' | '>>' | '>>>' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6875:6: lv_name_2= ( '<<' | '>>' | '>>>' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6875:16: ( '<<' | '>>' | '>>>' )
            	    int alt109=3;
            	    switch ( input.LA(1) ) {
            	    case 80:
            	        {
            	        alt109=1;
            	        }
            	        break;
            	    case 81:
            	        {
            	        alt109=2;
            	        }
            	        break;
            	    case 82:
            	        {
            	        alt109=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("6875:16: ( '<<' | '>>' | '>>>' )", 109, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt109) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6875:17: '<<'
            	            {
            	            match(input,80,FOLLOW_80_in_ruleShiftExpression15588); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameLessThanSignLessThanSignKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6881:6: '>>'
            	            {
            	            match(input,81,FOLLOW_81_in_ruleShiftExpression15604); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameGreaterThanSignGreaterThanSignKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6887:6: '>>>'
            	            {
            	            match(input,82,FOLLOW_82_in_ruleShiftExpression15620); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getShiftExpressionAccess().getNameGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getShiftExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6907:2: (lv_params_3= ruleAdditiveExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6910:6: lv_params_3= ruleAdditiveExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getShiftExpressionAccess().getParamsAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression15669);
            	    lv_params_3=ruleAdditiveExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getShiftExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "AdditiveExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleShiftExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6935:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6935:60: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6936:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression15708);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdditiveExpression15718); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6943:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6948:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6949:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6949:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6950:5: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15765);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_MultiplicativeExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6958:1: ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( ((LA112_0>=83 && LA112_0<=84)) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6958:2: () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6958:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6959:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6974:2: (lv_name_2= ( '+' | '-' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6976:6: lv_name_2= ( '+' | '-' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6976:16: ( '+' | '-' )
            	    int alt111=2;
            	    int LA111_0 = input.LA(1);

            	    if ( (LA111_0==83) ) {
            	        alt111=1;
            	    }
            	    else if ( (LA111_0==84) ) {
            	        alt111=2;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("6976:16: ( '+' | '-' )", 111, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt111) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6976:17: '+'
            	            {
            	            match(input,83,FOLLOW_83_in_ruleAdditiveExpression15796); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6982:6: '-'
            	            {
            	            match(input,84,FOLLOW_84_in_ruleAdditiveExpression15812); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7002:2: (lv_params_3= ruleMultiplicativeExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7005:6: lv_params_3= ruleMultiplicativeExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15861);
            	    lv_params_3=ruleMultiplicativeExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "MultiplicativeExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7030:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7030:66: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7031:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression15900);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiplicativeExpression15910); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7038:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_SetExpression_0= ruleSetExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_SetExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7043:6: ( (this_SetExpression_0= ruleSetExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7044:1: (this_SetExpression_0= ruleSetExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7044:1: (this_SetExpression_0= ruleSetExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7045:5: this_SetExpression_0= ruleSetExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression15957);
            this_SetExpression_0=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_SetExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7053:1: ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==34||LA114_0==49||LA114_0==85) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7053:2: () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleSetExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7053:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7054:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7069:2: (lv_name_2= ( '*' | '/' | '%' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7071:6: lv_name_2= ( '*' | '/' | '%' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7071:16: ( '*' | '/' | '%' )
            	    int alt113=3;
            	    switch ( input.LA(1) ) {
            	    case 49:
            	        {
            	        alt113=1;
            	        }
            	        break;
            	    case 34:
            	        {
            	        alt113=2;
            	        }
            	        break;
            	    case 85:
            	        {
            	        alt113=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("7071:16: ( '*' | '/' | '%' )", 113, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt113) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7071:17: '*'
            	            {
            	            match(input,49,FOLLOW_49_in_ruleMultiplicativeExpression15988); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7077:6: '/'
            	            {
            	            match(input,34,FOLLOW_34_in_ruleMultiplicativeExpression16004); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1(), "name"); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7083:6: '%'
            	            {
            	            match(input,85,FOLLOW_85_in_ruleMultiplicativeExpression16020); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2(), "name"); 
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7103:2: (lv_params_3= ruleSetExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7106:6: lv_params_3= ruleSetExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParamsSetExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression16069);
            	    lv_params_3=ruleSetExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "SetExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleSetExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7131:1: entryRuleSetExpression returns [EObject current=null] : iv_ruleSetExpression= ruleSetExpression EOF ;
    public final EObject entryRuleSetExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7131:55: (iv_ruleSetExpression= ruleSetExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7132:2: iv_ruleSetExpression= ruleSetExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSetExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSetExpression_in_entryRuleSetExpression16108);
            iv_ruleSetExpression=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSetExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetExpression16118); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSetExpression


    // $ANTLR start ruleSetExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7139:1: ruleSetExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) ;
    public final EObject ruleSetExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryOrInfixExpression_0 = null;

        Enumerator lv_op_2 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7144:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7145:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7145:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7146:5: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression16165);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_UnaryOrInfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7154:1: ( () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( ((LA115_0>=123 && LA115_0<=128)) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7154:2: () (lv_op_2= ruleSetOperator ) (lv_params_3= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7154:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7155:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getSetExpressionAccess().getSetOperationCallParamsAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getSetExpressionAccess().getSetOperationCallParamsAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7170:2: (lv_op_2= ruleSetOperator )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7173:6: lv_op_2= ruleSetOperator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getOpSetOperatorEnumRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleSetOperator_in_ruleSetExpression16208);
            	    lv_op_2=ruleSetOperator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "op", lv_op_2, "SetOperator", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7191:2: (lv_params_3= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7194:6: lv_params_3= ruleUnaryOrInfixExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression16246);
            	    lv_params_3=ruleUnaryOrInfixExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "params", lv_params_3, "UnaryOrInfixExpression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSetExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7219:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7219:64: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7220:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression16285);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryOrInfixExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression16295); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7227:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        EObject this_PostopExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7232:6: ( (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7233:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7233:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==84||(LA116_0>=86 && LA116_0<=91)) ) {
                alt116=1;
            }
            else if ( ((LA116_0>=RULE_ID && LA116_0<=RULE_REAL)||(LA116_0>=24 && LA116_0<=25)||LA116_0==39||(LA116_0>=43 && LA116_0<=44)||LA116_0==51||LA116_0==66||(LA116_0>=92 && LA116_0<=98)) ) {
                alt116=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("7233:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7234:5: this_UnaryExpression_0= ruleUnaryExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression16342);
                    this_UnaryExpression_0=ruleUnaryExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnaryExpression_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7244:5: this_PostopExpression_1= rulePostopExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression16369);
                    this_PostopExpression_1=rulePostopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PostopExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7259:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7259:57: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7260:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression16401);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryExpression16411); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7267:1: ruleUnaryExpression returns [EObject current=null] : ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        EObject lv_params_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7272:6: ( ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7273:1: ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7273:1: ( () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7273:2: () (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) ) (lv_params_2= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7273:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7274:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnaryExpressionAccess().getUnaryOperationAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOperationAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7284:2: (lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7286:6: lv_name_1= ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7286:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )
            int alt117=7;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt117=1;
                }
                break;
            case 84:
                {
                alt117=2;
                }
                break;
            case 87:
                {
                alt117=3;
                }
                break;
            case 88:
                {
                alt117=4;
                }
                break;
            case 89:
                {
                alt117=5;
                }
                break;
            case 90:
                {
                alt117=6;
                }
                break;
            case 91:
                {
                alt117=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("7286:16: ( '!' | '-' | '++' | '--' | 'typeof' | 'delete' | '~' )", 117, 0, input);

                throw nvae;
            }

            switch (alt117) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7286:17: '!'
                    {
                    match(input,86,FOLLOW_86_in_ruleUnaryExpression16467); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_1_0_0(), "name"); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7292:6: '-'
                    {
                    match(input,84,FOLLOW_84_in_ruleUnaryExpression16483); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_1_0_1(), "name"); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7298:6: '++'
                    {
                    match(input,87,FOLLOW_87_in_ruleUnaryExpression16499); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_1_0_2(), "name"); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7304:6: '--'
                    {
                    match(input,88,FOLLOW_88_in_ruleUnaryExpression16515); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_0_3(), "name"); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7310:6: 'typeof'
                    {
                    match(input,89,FOLLOW_89_in_ruleUnaryExpression16531); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTypeofKeyword_1_0_4(), "name"); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7316:6: 'delete'
                    {
                    match(input,90,FOLLOW_90_in_ruleUnaryExpression16547); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameDeleteKeyword_1_0_5(), "name"); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7322:6: '~'
                    {
                    match(input,91,FOLLOW_91_in_ruleUnaryExpression16563); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameTildeKeyword_1_0_6(), "name"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7342:2: (lv_params_2= rulePostopExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7345:6: lv_params_2= rulePostopExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryExpression16612);
            lv_params_2=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		add(current, "params", lv_params_2, "PostopExpression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7370:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostopExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7370:58: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7371:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePostopExpression_in_entryRulePostopExpression16649);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePostopExpression16659); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7378:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7383:6: ( (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7384:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7384:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7385:5: this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )?
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleInfixExpression_in_rulePostopExpression16706);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_InfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7393:1: ( () (lv_name_2= ( '--' | '++' ) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=87 && LA119_0<=88)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7393:2: () (lv_name_2= ( '--' | '++' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7393:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7394:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getPostopExpressionAccess().getOperationCallPostTargetAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "postTarget", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getOperationCallPostTargetAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7409:2: (lv_name_2= ( '--' | '++' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7411:6: lv_name_2= ( '--' | '++' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7411:16: ( '--' | '++' )
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==88) ) {
                        alt118=1;
                    }
                    else if ( (LA118_0==87) ) {
                        alt118=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("7411:16: ( '--' | '++' )", 118, 0, input);

                        throw nvae;
                    }
                    switch (alt118) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7411:17: '--'
                            {
                            match(input,88,FOLLOW_88_in_rulePostopExpression16737); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "name"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7417:6: '++'
                            {
                            match(input,87,FOLLOW_87_in_rulePostopExpression16753); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1(), "name"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7444:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInfixExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7444:57: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7445:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression16803);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInfixExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInfixExpression16813); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7452:1: ruleInfixExpression returns [EObject current=null] : (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_3=null;
        Token lv_type_20=null;
        EObject this_CallExpression_0 = null;

        EObject lv_params_5 = null;

        EObject lv_params_7 = null;

        EObject lv_index_11 = null;

        EObject lv_params_14 = null;

        EObject lv_params_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7457:6: ( (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7458:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7458:1: (this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7459:5: this_CallExpression_0= ruleCallExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleCallExpression_in_ruleInfixExpression16860);
            this_CallExpression_0=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CallExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7467:1: ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            loop125:
            do {
                int alt125=4;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==47) ) {
                    int LA125_2 = input.LA(2);

                    if ( (LA125_2==RULE_ID) ) {
                        int LA125_4 = input.LA(3);

                        if ( (LA125_4==51) ) {
                            alt125=1;
                        }
                        else if ( (LA125_4==EOF||LA125_4==18||LA125_4==23||LA125_4==27||LA125_4==34||(LA125_4>=39 && LA125_4<=41)||(LA125_4>=46 && LA125_4<=47)||LA125_4==49||LA125_4==52||LA125_4==63||(LA125_4>=74 && LA125_4<=85)||(LA125_4>=87 && LA125_4<=88)||(LA125_4>=102 && LA125_4<=128)) ) {
                            alt125=3;
                        }


                    }


                }
                else if ( (LA125_0==39) ) {
                    alt125=2;
                }


                switch (alt125) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7467:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7467:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7467:3: () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7467:3: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7468:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,47,FOLLOW_47_in_ruleInfixExpression16879); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7487:1: (lv_name_3= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7489:6: lv_name_3= RULE_ID
            	    {
            	    lv_name_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression16901); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }

            	    match(input,51,FOLLOW_51_in_ruleInfixExpression16918); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7511:1: ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )?
            	    int alt121=2;
            	    int LA121_0 = input.LA(1);

            	    if ( ((LA121_0>=RULE_ID && LA121_0<=RULE_REAL)||(LA121_0>=24 && LA121_0<=25)||LA121_0==39||(LA121_0>=43 && LA121_0<=44)||LA121_0==51||LA121_0==66||LA121_0==84||(LA121_0>=86 && LA121_0<=98)) ) {
            	        alt121=1;
            	    }
            	    switch (alt121) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7511:2: (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7511:2: (lv_params_5= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7514:6: lv_params_5= ruleParameter
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression16953);
            	            lv_params_5=ruleParameter();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7532:2: ( ',' (lv_params_7= ruleParameter ) )*
            	            loop120:
            	            do {
            	                int alt120=2;
            	                int LA120_0 = input.LA(1);

            	                if ( (LA120_0==23) ) {
            	                    alt120=1;
            	                }


            	                switch (alt120) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7532:3: ',' (lv_params_7= ruleParameter )
            	            	    {
            	            	    match(input,23,FOLLOW_23_in_ruleInfixExpression16967); if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0(), null); 
            	            	          
            	            	    }
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7536:1: (lv_params_7= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7539:6: lv_params_7= ruleParameter
            	            	    {
            	            	    if ( backtracking==0 ) {
            	            	       
            	            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0(), currentNode); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression17001);
            	            	    lv_params_7=ruleParameter();
            	            	    _fsp--;
            	            	    if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	      	        }
            	            	      	        
            	            	      	        try {
            	            	      	       		add(current, "params", lv_params_7, "Parameter", currentNode);
            	            	      	        } catch (ValueConverterException vce) {
            	            	      				handleValueConverterException(vce);
            	            	      	        }
            	            	      	        currentNode = currentNode.getParent();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop120;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,52,FOLLOW_52_in_ruleInfixExpression17018); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7562:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7562:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7562:7: () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7562:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7563:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,39,FOLLOW_39_in_ruleInfixExpression17044); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7582:1: (lv_index_11= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7585:6: lv_index_11= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleExpression_in_ruleInfixExpression17078);
            	    lv_index_11=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "index", lv_index_11, "Expression", currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }

            	    match(input,40,FOLLOW_40_in_ruleInfixExpression17091); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7607:1: ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    int alt124=2;
            	    int LA124_0 = input.LA(1);

            	    if ( (LA124_0==51) ) {
            	        alt124=1;
            	    }
            	    switch (alt124) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7607:2: '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')'
            	            {
            	            match(input,51,FOLLOW_51_in_ruleInfixExpression17101); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0(), null); 
            	                  
            	            }
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7611:1: ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )?
            	            int alt123=2;
            	            int LA123_0 = input.LA(1);

            	            if ( ((LA123_0>=RULE_ID && LA123_0<=RULE_REAL)||(LA123_0>=24 && LA123_0<=25)||LA123_0==39||(LA123_0>=43 && LA123_0<=44)||LA123_0==51||LA123_0==66||LA123_0==84||(LA123_0>=86 && LA123_0<=98)) ) {
            	                alt123=1;
            	            }
            	            switch (alt123) {
            	                case 1 :
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7611:2: (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )*
            	                    {
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7611:2: (lv_params_14= ruleParameter )
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7614:6: lv_params_14= ruleParameter
            	                    {
            	                    if ( backtracking==0 ) {
            	                       
            	                      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0(), currentNode); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression17136);
            	                    lv_params_14=ruleParameter();
            	                    _fsp--;
            	                    if (failed) return current;
            	                    if ( backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                      	        }
            	                      	        
            	                      	        try {
            	                      	       		add(current, "params", lv_params_14, "Parameter", currentNode);
            	                      	        } catch (ValueConverterException vce) {
            	                      				handleValueConverterException(vce);
            	                      	        }
            	                      	        currentNode = currentNode.getParent();
            	                      	    
            	                    }

            	                    }

            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7632:2: ( ',' (lv_params_16= ruleParameter ) )*
            	                    loop122:
            	                    do {
            	                        int alt122=2;
            	                        int LA122_0 = input.LA(1);

            	                        if ( (LA122_0==23) ) {
            	                            alt122=1;
            	                        }


            	                        switch (alt122) {
            	                    	case 1 :
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7632:3: ',' (lv_params_16= ruleParameter )
            	                    	    {
            	                    	    match(input,23,FOLLOW_23_in_ruleInfixExpression17150); if (failed) return current;
            	                    	    if ( backtracking==0 ) {

            	                    	              createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0(), null); 
            	                    	          
            	                    	    }
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7636:1: (lv_params_16= ruleParameter )
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7639:6: lv_params_16= ruleParameter
            	                    	    {
            	                    	    if ( backtracking==0 ) {
            	                    	       
            	                    	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0(), currentNode); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression17184);
            	                    	    lv_params_16=ruleParameter();
            	                    	    _fsp--;
            	                    	    if (failed) return current;
            	                    	    if ( backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	      	        }
            	                    	      	        
            	                    	      	        try {
            	                    	      	       		add(current, "params", lv_params_16, "Parameter", currentNode);
            	                    	      	        } catch (ValueConverterException vce) {
            	                    	      				handleValueConverterException(vce);
            	                    	      	        }
            	                    	      	        currentNode = currentNode.getParent();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop122;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            match(input,52,FOLLOW_52_in_ruleInfixExpression17201); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2(), null); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7662:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7662:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7662:7: () '.' (lv_type_20= RULE_ID )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7662:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7663:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,47,FOLLOW_47_in_ruleInfixExpression17229); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7682:1: (lv_type_20= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7684:6: lv_type_20= RULE_ID
            	    {
            	    lv_type_20=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression17251); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0(), "type"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "type", lv_type_20, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRuleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7709:1: entryRuleCallExpression returns [EObject current=null] : iv_ruleCallExpression= ruleCallExpression EOF ;
    public final EObject entryRuleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCallExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7709:56: (iv_ruleCallExpression= ruleCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7710:2: iv_ruleCallExpression= ruleCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCallExpression_in_entryRuleCallExpression17295);
            iv_ruleCallExpression=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCallExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCallExpression17305); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCallExpression


    // $ANTLR start ruleCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7717:1: ruleCallExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) ;
    public final EObject ruleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PrimaryExpression_0 = null;

        EObject lv_params_3 = null;

        EObject lv_params_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7722:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7723:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7723:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7724:5: this_PrimaryExpression_0= rulePrimaryExpression ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_rulePrimaryExpression_in_ruleCallExpression17352);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_PrimaryExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7732:1: ( () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')' )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==51) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7732:2: () '(' ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7732:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7733:5: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getOperationCallTargetAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,51,FOLLOW_51_in_ruleCallExpression17370); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7752:1: ( (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )* )?
            	    int alt127=2;
            	    int LA127_0 = input.LA(1);

            	    if ( ((LA127_0>=RULE_ID && LA127_0<=RULE_REAL)||(LA127_0>=24 && LA127_0<=25)||LA127_0==39||(LA127_0>=43 && LA127_0<=44)||LA127_0==51||LA127_0==66||LA127_0==84||(LA127_0>=86 && LA127_0<=98)) ) {
            	        alt127=1;
            	    }
            	    switch (alt127) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7752:2: (lv_params_3= ruleParameter ) ( ',' (lv_params_5= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7752:2: (lv_params_3= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7755:6: lv_params_3= ruleParameter
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_0_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression17405);
            	            lv_params_3=ruleParameter();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		add(current, "params", lv_params_3, "Parameter", currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7773:2: ( ',' (lv_params_5= ruleParameter ) )*
            	            loop126:
            	            do {
            	                int alt126=2;
            	                int LA126_0 = input.LA(1);

            	                if ( (LA126_0==23) ) {
            	                    alt126=1;
            	                }


            	                switch (alt126) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7773:3: ',' (lv_params_5= ruleParameter )
            	            	    {
            	            	    match(input,23,FOLLOW_23_in_ruleCallExpression17419); if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	              createLeafNode(grammarAccess.getCallExpressionAccess().getCommaKeyword_1_2_1_0(), null); 
            	            	          
            	            	    }
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7777:1: (lv_params_5= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7780:6: lv_params_5= ruleParameter
            	            	    {
            	            	    if ( backtracking==0 ) {
            	            	       
            	            	      	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParamsParameterParserRuleCall_1_2_1_1_0(), currentNode); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleCallExpression17453);
            	            	    lv_params_5=ruleParameter();
            	            	    _fsp--;
            	            	    if (failed) return current;
            	            	    if ( backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	      	        }
            	            	      	        
            	            	      	        try {
            	            	      	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	            	      	        } catch (ValueConverterException vce) {
            	            	      				handleValueConverterException(vce);
            	            	      	        }
            	            	      	        currentNode = currentNode.getParent();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop126;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,52,FOLLOW_52_in_ruleCallExpression17470); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCallExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7809:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7809:59: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7810:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression17505);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryExpression17515); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7817:1: rulePrimaryExpression returns [EObject current=null] : (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Literal_0 = null;

        EObject this_ConstructorCallExpression_1 = null;

        EObject this_VariableValue_2 = null;

        EObject this_PropertyValue_3 = null;

        EObject this_KeywordVariables_4 = null;

        EObject this_ParanthesizedExpression_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7822:6: ( (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )
            int alt129=6;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_REGEX:
            case RULE_INT:
            case RULE_HEX:
            case RULE_REAL:
            case 24:
            case 39:
            case 66:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
                {
                alt129=1;
                }
                break;
            case 92:
                {
                alt129=2;
                }
                break;
            case RULE_ID:
                {
                alt129=3;
                }
                break;
            case RULE_PID:
                {
                alt129=4;
                }
                break;
            case 25:
            case 43:
            case 44:
                {
                alt129=5;
                }
                break;
            case 51:
                {
                alt129=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("7823:1: (this_Literal_0= ruleLiteral | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression )", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7824:5: this_Literal_0= ruleLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteral_in_rulePrimaryExpression17562);
                    this_Literal_0=ruleLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Literal_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7834:5: this_ConstructorCallExpression_1= ruleConstructorCallExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression17589);
                    this_ConstructorCallExpression_1=ruleConstructorCallExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ConstructorCallExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7844:5: this_VariableValue_2= ruleVariableValue
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleVariableValue_in_rulePrimaryExpression17616);
                    this_VariableValue_2=ruleVariableValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_VariableValue_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7854:5: this_PropertyValue_3= rulePropertyValue
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_rulePropertyValue_in_rulePrimaryExpression17643);
                    this_PropertyValue_3=rulePropertyValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PropertyValue_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7864:5: this_KeywordVariables_4= ruleKeywordVariables
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression17670);
                    this_KeywordVariables_4=ruleKeywordVariables();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_KeywordVariables_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7874:5: this_ParanthesizedExpression_5= ruleParanthesizedExpression
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression17697);
                    this_ParanthesizedExpression_5=ruleParanthesizedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ParanthesizedExpression_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7889:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyValue = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7889:55: (iv_rulePropertyValue= rulePropertyValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7890:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyValueRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyValue_in_entryRulePropertyValue17729);
            iv_rulePropertyValue=rulePropertyValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyValue17739); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyValue


    // $ANTLR start rulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7897:1: rulePropertyValue returns [EObject current=null] : ( () (lv_name_1= RULE_PID ) ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7902:6: ( ( () (lv_name_1= RULE_PID ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7903:1: ( () (lv_name_1= RULE_PID ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7903:1: ( () (lv_name_1= RULE_PID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7903:2: () (lv_name_1= RULE_PID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7903:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7904:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getPropertyValueAccess().getPropertyValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getPropertyValueAccess().getPropertyValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7914:2: (lv_name_1= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7916:6: lv_name_1= RULE_PID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyValue17795); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPropertyValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "PID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyValue


    // $ANTLR start entryRuleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:1: entryRuleVariableValue returns [EObject current=null] : iv_ruleVariableValue= ruleVariableValue EOF ;
    public final EObject entryRuleVariableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableValue = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:55: (iv_ruleVariableValue= ruleVariableValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7942:2: iv_ruleVariableValue= ruleVariableValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVariableValueRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVariableValue_in_entryRuleVariableValue17836);
            iv_ruleVariableValue=ruleVariableValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVariableValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariableValue17846); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVariableValue


    // $ANTLR start ruleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7949:1: ruleVariableValue returns [EObject current=null] : ( () (lv_name_1= RULE_ID ) ) ;
    public final EObject ruleVariableValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7954:6: ( ( () (lv_name_1= RULE_ID ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7955:1: ( () (lv_name_1= RULE_ID ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7955:1: ( () (lv_name_1= RULE_ID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7955:2: () (lv_name_1= RULE_ID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7955:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7956:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getVariableValueAccess().getVariableValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getVariableValueAccess().getVariableValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7966:2: (lv_name_1= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7968:6: lv_name_1= RULE_ID
            {
            lv_name_1=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVariableValue17902); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVariableValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVariableValue


    // $ANTLR start entryRuleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7993:1: entryRuleKeywordVariables returns [EObject current=null] : iv_ruleKeywordVariables= ruleKeywordVariables EOF ;
    public final EObject entryRuleKeywordVariables() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordVariables = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7993:58: (iv_ruleKeywordVariables= ruleKeywordVariables EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7994:2: iv_ruleKeywordVariables= ruleKeywordVariables EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getKeywordVariablesRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables17943);
            iv_ruleKeywordVariables=ruleKeywordVariables();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleKeywordVariables; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleKeywordVariables17953); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleKeywordVariables


    // $ANTLR start ruleKeywordVariables
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8001:1: ruleKeywordVariables returns [EObject current=null] : ( () (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) ) ) ;
    public final EObject ruleKeywordVariables() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8006:6: ( ( () (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8007:1: ( () (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8007:1: ( () (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8007:2: () (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8007:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8008:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getKeywordVariablesAccess().getKeywordVariableAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getKeywordVariablesAccess().getKeywordVariableAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8018:2: (lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8020:6: lv_name_1= ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8020:16: ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' )
            int alt130=3;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt130=1;
                }
                break;
            case 44:
                {
                alt130=2;
                }
                break;
            case 25:
                {
                alt130=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8020:16: ( ruleGroupKeyword | ruleLayoutKeyword | 'properties' )", 130, 0, input);

                throw nvae;
            }

            switch (alt130) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8020:18: ruleGroupKeyword
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getKeywordVariablesAccess().getNameGroupKeywordParserRuleCall_1_0_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleGroupKeyword_in_ruleKeywordVariables18013);
                    ruleGroupKeyword();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8027:7: ruleLayoutKeyword
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getKeywordVariablesAccess().getNameLayoutKeywordParserRuleCall_1_0_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLayoutKeyword_in_ruleKeywordVariables18027);
                    ruleLayoutKeyword();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8034:6: 'properties'
                    {
                    match(input,25,FOLLOW_25_in_ruleKeywordVariables18037); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_2(), "name"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleKeywordVariables


    // $ANTLR start entryRuleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8061:1: entryRuleConstructorCallExpression returns [EObject current=null] : iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF ;
    public final EObject entryRuleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructorCallExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8061:67: (iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8062:2: iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression18085);
            iv_ruleConstructorCallExpression=ruleConstructorCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleConstructorCallExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstructorCallExpression18095); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleConstructorCallExpression


    // $ANTLR start ruleConstructorCallExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8069:1: ruleConstructorCallExpression returns [EObject current=null] : ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' ) ;
    public final EObject ruleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        AntlrDatatypeRuleToken lv_target_2 = null;

        EObject lv_params_4 = null;

        EObject lv_params_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8074:6: ( ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:1: ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:1: ( () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:2: () (lv_name_1= 'new' ) (lv_target_2= ruleQualifiedName ) '(' ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )? ')'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8075:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8076:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getConstructorCallExpressionAccess().getCreatorCallAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getCreatorCallAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8086:2: (lv_name_1= 'new' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8088:6: lv_name_1= 'new'
            {
            lv_name_1=(Token)input.LT(1);
            match(input,92,FOLLOW_92_in_ruleConstructorCallExpression18150); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNameNewKeyword_1_0(), "name"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", /* lv_name_1 */ input.LT(-1), "new", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8107:2: (lv_target_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8110:6: lv_target_2= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getTargetQualifiedNameParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression18197);
            lv_target_2=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "target", lv_target_2, "QualifiedName", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,51,FOLLOW_51_in_ruleConstructorCallExpression18210); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8132:1: ( (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )* )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_REAL)||(LA132_0>=24 && LA132_0<=25)||LA132_0==39||(LA132_0>=43 && LA132_0<=44)||LA132_0==51||LA132_0==66||LA132_0==84||(LA132_0>=86 && LA132_0<=98)) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8132:2: (lv_params_4= ruleParameter ) ( ',' (lv_params_6= ruleParameter ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8132:2: (lv_params_4= ruleParameter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8135:6: lv_params_4= ruleParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_4_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression18245);
                    lv_params_4=ruleParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "params", lv_params_4, "Parameter", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8153:2: ( ',' (lv_params_6= ruleParameter ) )*
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==23) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8153:3: ',' (lv_params_6= ruleParameter )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleConstructorCallExpression18259); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getCommaKeyword_4_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8157:1: (lv_params_6= ruleParameter )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8160:6: lv_params_6= ruleParameter
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParamsParameterParserRuleCall_4_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleParameter_in_ruleConstructorCallExpression18293);
                    	    lv_params_6=ruleParameter();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "params", lv_params_6, "Parameter", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,52,FOLLOW_52_in_ruleConstructorCallExpression18310); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_5(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleConstructorCallExpression


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8189:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8189:49: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8190:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteral_in_entryRuleLiteral18343);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteral18353); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8197:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_ValueLiteral_0 = null;

        EObject this_RegexpLiteral_1 = null;

        EObject this_LiteralArray_2 = null;

        EObject this_LiteralObject_3 = null;

        EObject this_LiteralFunction_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8202:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8203:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8203:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )
            int alt133=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_INT:
            case RULE_HEX:
            case RULE_REAL:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
                {
                alt133=1;
                }
                break;
            case RULE_REGEX:
                {
                alt133=2;
                }
                break;
            case 39:
                {
                alt133=3;
                }
                break;
            case 24:
                {
                alt133=4;
                }
                break;
            case 66:
            case 93:
                {
                alt133=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8203:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral | this_LiteralArray_2= ruleLiteralArray | this_LiteralObject_3= ruleLiteralObject | this_LiteralFunction_4= ruleLiteralFunction )", 133, 0, input);

                throw nvae;
            }

            switch (alt133) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:5: this_ValueLiteral_0= ruleValueLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleValueLiteral_in_ruleLiteral18400);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ValueLiteral_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8214:5: this_RegexpLiteral_1= ruleRegexpLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRegexpLiteral_in_ruleLiteral18427);
                    this_RegexpLiteral_1=ruleRegexpLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RegexpLiteral_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8224:5: this_LiteralArray_2= ruleLiteralArray
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralArrayParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralArray_in_ruleLiteral18454);
                    this_LiteralArray_2=ruleLiteralArray();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralArray_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8234:5: this_LiteralObject_3= ruleLiteralObject
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralObjectParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralObject_in_ruleLiteral18481);
                    this_LiteralObject_3=ruleLiteralObject();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralObject_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8244:5: this_LiteralFunction_4= ruleLiteralFunction
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleLiteralFunction_in_ruleLiteral18508);
                    this_LiteralFunction_4=ruleLiteralFunction();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralFunction_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8259:1: entryRuleLiteralArray returns [EObject current=null] : iv_ruleLiteralArray= ruleLiteralArray EOF ;
    public final EObject entryRuleLiteralArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralArray = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8259:54: (iv_ruleLiteralArray= ruleLiteralArray EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8260:2: iv_ruleLiteralArray= ruleLiteralArray EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralArrayRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray18540);
            iv_ruleLiteralArray=ruleLiteralArray();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralArray; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralArray18550); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralArray


    // $ANTLR start ruleLiteralArray
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8267:1: ruleLiteralArray returns [EObject current=null] : ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' ) ;
    public final EObject ruleLiteralArray() throws RecognitionException {
        EObject current = null;

        EObject lv_element_2 = null;

        EObject lv_element_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8272:6: ( ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8273:1: ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8273:1: ( () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8273:2: () '[' ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )? ']'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8273:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8274:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralArrayAccess().getLiteralArrayAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralArrayAccess().getLiteralArrayAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,39,FOLLOW_39_in_ruleLiteralArray18593); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralArrayAccess().getLeftSquareBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8288:1: ( (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )* )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=RULE_ID && LA135_0<=RULE_REAL)||(LA135_0>=24 && LA135_0<=25)||LA135_0==39||(LA135_0>=43 && LA135_0<=44)||LA135_0==51||LA135_0==66||LA135_0==84||(LA135_0>=86 && LA135_0<=98)) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8288:2: (lv_element_2= ruleExpression ) ( ',' (lv_element_4= ruleExpression ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8288:2: (lv_element_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8291:6: lv_element_2= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray18628);
                    lv_element_2=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "element", lv_element_2, "Expression", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8309:2: ( ',' (lv_element_4= ruleExpression ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==23) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8309:3: ',' (lv_element_4= ruleExpression )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleLiteralArray18642); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getLiteralArrayAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8313:1: (lv_element_4= ruleExpression )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8316:6: lv_element_4= ruleExpression
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getLiteralArrayAccess().getElementExpressionParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleExpression_in_ruleLiteralArray18676);
                    	    lv_element_4=ruleExpression();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getLiteralArrayRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "element", lv_element_4, "Expression", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,40,FOLLOW_40_in_ruleLiteralArray18693); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralArrayAccess().getRightSquareBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralArray


    // $ANTLR start entryRuleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8345:1: entryRuleLiteralObject returns [EObject current=null] : iv_ruleLiteralObject= ruleLiteralObject EOF ;
    public final EObject entryRuleLiteralObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralObject = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8345:55: (iv_ruleLiteralObject= ruleLiteralObject EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8346:2: iv_ruleLiteralObject= ruleLiteralObject EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralObjectRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject18726);
            iv_ruleLiteralObject=ruleLiteralObject();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralObject; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralObject18736); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralObject


    // $ANTLR start ruleLiteralObject
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8353:1: ruleLiteralObject returns [EObject current=null] : ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' ) ;
    public final EObject ruleLiteralObject() throws RecognitionException {
        EObject current = null;

        EObject lv_features_2 = null;

        EObject lv_features_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8358:6: ( ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8359:1: ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8359:1: ( () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8359:2: () '{' ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )? '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8359:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8360:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralObjectAccess().getLiteralObjectAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralObjectAccess().getLiteralObjectAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,24,FOLLOW_24_in_ruleLiteralObject18779); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralObjectAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8374:1: ( (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )* )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( ((LA137_0>=RULE_ID && LA137_0<=RULE_STRING)||LA137_0==RULE_PID) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8374:2: (lv_features_2= ruleFeature ) ( ',' (lv_features_4= ruleFeature ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8374:2: (lv_features_2= ruleFeature )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8377:6: lv_features_2= ruleFeature
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_2_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject18814);
                    lv_features_2=ruleFeature();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		add(current, "features", lv_features_2, "Feature", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8395:2: ( ',' (lv_features_4= ruleFeature ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==23) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8395:3: ',' (lv_features_4= ruleFeature )
                    	    {
                    	    match(input,23,FOLLOW_23_in_ruleLiteralObject18828); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getLiteralObjectAccess().getCommaKeyword_2_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8399:1: (lv_features_4= ruleFeature )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8402:6: lv_features_4= ruleFeature
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getLiteralObjectAccess().getFeaturesFeatureParserRuleCall_2_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleFeature_in_ruleLiteralObject18862);
                    	    lv_features_4=ruleFeature();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getLiteralObjectRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        
                    	      	        try {
                    	      	       		add(current, "features", lv_features_4, "Feature", currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,27,FOLLOW_27_in_ruleLiteralObject18879); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralObjectAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralObject


    // $ANTLR start entryRuleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8431:1: entryRuleLiteralFunction returns [EObject current=null] : iv_ruleLiteralFunction= ruleLiteralFunction EOF ;
    public final EObject entryRuleLiteralFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralFunction = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8431:57: (iv_ruleLiteralFunction= ruleLiteralFunction EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8432:2: iv_ruleLiteralFunction= ruleLiteralFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction18912);
            iv_ruleLiteralFunction=ruleLiteralFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralFunction; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteralFunction18922); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralFunction


    // $ANTLR start ruleLiteralFunction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8439:1: ruleLiteralFunction returns [EObject current=null] : ( () ( 'function' | 'fun' ) '(' ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* ) ')' '{' (lv_statements_9= ruleStatements ) '}' ) ;
    public final EObject ruleLiteralFunction() throws RecognitionException {
        EObject current = null;

        Token lv_parameters_4=null;
        Token lv_parameters_6=null;
        EObject lv_statements_9 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8444:6: ( ( () ( 'function' | 'fun' ) '(' ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* ) ')' '{' (lv_statements_9= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8445:1: ( () ( 'function' | 'fun' ) '(' ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* ) ')' '{' (lv_statements_9= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8445:1: ( () ( 'function' | 'fun' ) '(' ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* ) ')' '{' (lv_statements_9= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8445:2: () ( 'function' | 'fun' ) '(' ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* ) ')' '{' (lv_statements_9= ruleStatements ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8445:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8446:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getLiteralFunctionAccess().getLiteralFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralFunctionAccess().getLiteralFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8456:2: ( 'function' | 'fun' )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==66) ) {
                alt138=1;
            }
            else if ( (LA138_0==93) ) {
                alt138=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8456:2: ( 'function' | 'fun' )", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8456:3: 'function'
                    {
                    match(input,66,FOLLOW_66_in_ruleLiteralFunction18966); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getLiteralFunctionAccess().getFunctionKeyword_1_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8461:6: 'fun'
                    {
                    match(input,93,FOLLOW_93_in_ruleLiteralFunction18981); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getLiteralFunctionAccess().getFunKeyword_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            match(input,51,FOLLOW_51_in_ruleLiteralFunction18991); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8469:1: ( (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8469:2: (lv_parameters_4= RULE_ID ) ( ',' (lv_parameters_6= RULE_ID ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8469:2: (lv_parameters_4= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8471:6: lv_parameters_4= RULE_ID
            {
            lv_parameters_4=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction19014); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParametersIDTerminalRuleCall_3_0_0(), "parameters"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		add(current, "parameters", lv_parameters_4, "ID", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8489:2: ( ',' (lv_parameters_6= RULE_ID ) )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==23) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8489:3: ',' (lv_parameters_6= RULE_ID )
            	    {
            	    match(input,23,FOLLOW_23_in_ruleLiteralFunction19032); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getLiteralFunctionAccess().getCommaKeyword_3_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8493:1: (lv_parameters_6= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8495:6: lv_parameters_6= RULE_ID
            	    {
            	    lv_parameters_6=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLiteralFunction19054); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		createLeafNode(grammarAccess.getLiteralFunctionAccess().getParametersIDTerminalRuleCall_3_1_1_0(), "parameters"); 
            	      	
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		add(current, "parameters", lv_parameters_6, "ID", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }

            match(input,52,FOLLOW_52_in_ruleLiteralFunction19074); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightParenthesisKeyword_4(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_ruleLiteralFunction19083); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_5(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8521:1: (lv_statements_9= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8524:6: lv_statements_9= ruleStatements
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getStatementsStatementsParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleStatements_in_ruleLiteralFunction19117);
            lv_statements_9=ruleStatements();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getLiteralFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "statements", lv_statements_9, "Statements", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,27,FOLLOW_27_in_ruleLiteralFunction19130); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_7(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralFunction


    // $ANTLR start entryRuleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8553:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8553:49: (iv_ruleFeature= ruleFeature EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8554:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleFeature_in_entryRuleFeature19163);
            iv_ruleFeature=ruleFeature();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeature19173); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeature


    // $ANTLR start ruleFeature
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8561:1: ruleFeature returns [EObject current=null] : ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token lv_name_1=null;
        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8566:6: ( ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8567:1: ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8567:1: ( () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8567:2: () (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) ) ':' (lv_value_3= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8567:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8568:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getFeatureAccess().getFeatureAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureAccess().getFeatureAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8578:2: (lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8580:6: lv_name_1= ( RULE_ID | RULE_PID | RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8580:16: ( RULE_ID | RULE_PID | RULE_STRING )
            int alt140=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt140=1;
                }
                break;
            case RULE_PID:
                {
                alt140=2;
                }
                break;
            case RULE_STRING:
                {
                alt140=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8580:16: ( RULE_ID | RULE_PID | RULE_STRING )", 140, 0, input);

                throw nvae;
            }

            switch (alt140) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8580:18: RULE_ID
                    {
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFeature19230); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0_0(), "name"); 
                      	
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8585:7: RULE_PID
                    {
                    match(input,RULE_PID,FOLLOW_RULE_PID_in_ruleFeature19242); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNamePIDTerminalRuleCall_1_0_1(), "name"); 
                      	
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8590:7: RULE_STRING
                    {
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleFeature19254); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getFeatureAccess().getNameSTRINGTerminalRuleCall_1_0_2(), "name"); 
                      	
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "name", lv_name_1, null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }

            match(input,46,FOLLOW_46_in_ruleFeature19273); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFeatureAccess().getColonKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8613:1: (lv_value_3= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8616:6: lv_value_3= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getFeatureAccess().getValueExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleFeature19307);
            lv_value_3=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "value", lv_value_3, "Expression", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeature


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8641:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8641:54: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8642:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral19344);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValueLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueLiteral19354); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8649:1: ruleValueLiteral returns [EObject current=null] : (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_BooleanLiteral_0 = null;

        EObject this_IntegerLiteral_1 = null;

        EObject this_NullLiteral_2 = null;

        EObject this_UndefinedLiteral_3 = null;

        EObject this_StringLiteral_4 = null;

        EObject this_RealLiteral_5 = null;

        EObject this_QueryLiteral_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8654:6: ( (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8655:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8655:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )
            int alt141=7;
            switch ( input.LA(1) ) {
            case 94:
            case 95:
                {
                alt141=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
                {
                alt141=2;
                }
                break;
            case 96:
                {
                alt141=3;
                }
                break;
            case 97:
                {
                alt141=4;
                }
                break;
            case RULE_STRING:
                {
                alt141=5;
                }
                break;
            case RULE_REAL:
                {
                alt141=6;
                }
                break;
            case 98:
                {
                alt141=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8655:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_UndefinedLiteral_3= ruleUndefinedLiteral | this_StringLiteral_4= ruleStringLiteral | this_RealLiteral_5= ruleRealLiteral | this_QueryLiteral_6= ruleQueryLiteral )", 141, 0, input);

                throw nvae;
            }

            switch (alt141) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8656:5: this_BooleanLiteral_0= ruleBooleanLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral19401);
                    this_BooleanLiteral_0=ruleBooleanLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BooleanLiteral_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8666:5: this_IntegerLiteral_1= ruleIntegerLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral19428);
                    this_IntegerLiteral_1=ruleIntegerLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_IntegerLiteral_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8676:5: this_NullLiteral_2= ruleNullLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleNullLiteral_in_ruleValueLiteral19455);
                    this_NullLiteral_2=ruleNullLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_NullLiteral_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8686:5: this_UndefinedLiteral_3= ruleUndefinedLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getUndefinedLiteralParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleUndefinedLiteral_in_ruleValueLiteral19482);
                    this_UndefinedLiteral_3=ruleUndefinedLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UndefinedLiteral_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8696:5: this_StringLiteral_4= ruleStringLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleStringLiteral_in_ruleValueLiteral19509);
                    this_StringLiteral_4=ruleStringLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_StringLiteral_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8706:5: this_RealLiteral_5= ruleRealLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleRealLiteral_in_ruleValueLiteral19536);
                    this_RealLiteral_5=ruleRealLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_RealLiteral_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8716:5: this_QueryLiteral_6= ruleQueryLiteral
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getQueryLiteralParserRuleCall_6(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQueryLiteral_in_ruleValueLiteral19563);
                    this_QueryLiteral_6=ruleQueryLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_QueryLiteral_6; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8731:1: entryRuleBooleanLiteral returns [EObject current=null] : iv_ruleBooleanLiteral= ruleBooleanLiteral EOF ;
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8731:56: (iv_ruleBooleanLiteral= ruleBooleanLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8732:2: iv_ruleBooleanLiteral= ruleBooleanLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBooleanLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral19595);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBooleanLiteral19605); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBooleanLiteral


    // $ANTLR start ruleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8739:1: ruleBooleanLiteral returns [EObject current=null] : ( () (lv_val_1= ( 'true' | 'false' ) ) ) ;
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8744:6: ( ( () (lv_val_1= ( 'true' | 'false' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8745:1: ( () (lv_val_1= ( 'true' | 'false' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8745:1: ( () (lv_val_1= ( 'true' | 'false' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8745:2: () (lv_val_1= ( 'true' | 'false' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8745:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8746:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8756:2: (lv_val_1= ( 'true' | 'false' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:6: lv_val_1= ( 'true' | 'false' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:15: ( 'true' | 'false' )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==94) ) {
                alt142=1;
            }
            else if ( (LA142_0==95) ) {
                alt142=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8758:15: ( 'true' | 'false' )", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8758:16: 'true'
                    {
                    match(input,94,FOLLOW_94_in_ruleBooleanLiteral19661); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_1_0_0(), "val"); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8764:6: 'false'
                    {
                    match(input,95,FOLLOW_95_in_ruleBooleanLiteral19677); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0_1(), "val"); 
                          
                    }

                    }
                    break;

            }

            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getBooleanLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), null, lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBooleanLiteral


    // $ANTLR start entryRuleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8791:1: entryRuleIntegerLiteral returns [EObject current=null] : iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8791:56: (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8792:2: iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getIntegerLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral19725);
            iv_ruleIntegerLiteral=ruleIntegerLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleIntegerLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIntegerLiteral19735); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIntegerLiteral


    // $ANTLR start ruleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8799:1: ruleIntegerLiteral returns [EObject current=null] : ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_ival_1=null;
        Token lv_sval_2=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8804:6: ( ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==RULE_INT) ) {
                alt143=1;
            }
            else if ( (LA143_0==RULE_HEX) ) {
                alt143=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("8805:1: ( ( () (lv_ival_1= RULE_INT ) ) | (lv_sval_2= RULE_HEX ) )", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:2: ( () (lv_ival_1= RULE_INT ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:2: ( () (lv_ival_1= RULE_INT ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:3: () (lv_ival_1= RULE_INT )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8805:3: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8806:5: 
                    {
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getIntegerLiteralAccess().getIntegerLiteralAction_0_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getIntegerLiteralAccess().getIntegerLiteralAction_0_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8816:2: (lv_ival_1= RULE_INT )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8818:6: lv_ival_1= RULE_INT
                    {
                    lv_ival_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleIntegerLiteral19792); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getIntegerLiteralAccess().getIvalINTTerminalRuleCall_0_1_0(), "ival"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "ival", lv_ival_1, "INT", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8837:6: (lv_sval_2= RULE_HEX )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8837:6: (lv_sval_2= RULE_HEX )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8839:6: lv_sval_2= RULE_HEX
                    {
                    lv_sval_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleIntegerLiteral19829); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getIntegerLiteralAccess().getSvalHEXTerminalRuleCall_1_0(), "sval"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "sval", lv_sval_2, "HEX", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIntegerLiteral


    // $ANTLR start entryRuleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8864:1: entryRuleNullLiteral returns [EObject current=null] : iv_ruleNullLiteral= ruleNullLiteral EOF ;
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8864:53: (iv_ruleNullLiteral= ruleNullLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8865:2: iv_ruleNullLiteral= ruleNullLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getNullLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral19870);
            iv_ruleNullLiteral=ruleNullLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleNullLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNullLiteral19880); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNullLiteral


    // $ANTLR start ruleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8872:1: ruleNullLiteral returns [EObject current=null] : ( () (lv_val_1= 'null' ) ) ;
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8877:6: ( ( () (lv_val_1= 'null' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:1: ( () (lv_val_1= 'null' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:1: ( () (lv_val_1= 'null' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:2: () (lv_val_1= 'null' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8878:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8879:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8889:2: (lv_val_1= 'null' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8891:6: lv_val_1= 'null'
            {
            lv_val_1=(Token)input.LT(1);
            match(input,96,FOLLOW_96_in_ruleNullLiteral19935); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getNullLiteralAccess().getValNullKeyword_1_0(), "val"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getNullLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), "null", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNullLiteral


    // $ANTLR start entryRuleUndefinedLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8917:1: entryRuleUndefinedLiteral returns [EObject current=null] : iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF ;
    public final EObject entryRuleUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefinedLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8917:58: (iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8918:2: iv_ruleUndefinedLiteral= ruleUndefinedLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUndefinedLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUndefinedLiteral_in_entryRuleUndefinedLiteral19981);
            iv_ruleUndefinedLiteral=ruleUndefinedLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUndefinedLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUndefinedLiteral19991); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUndefinedLiteral


    // $ANTLR start ruleUndefinedLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8925:1: ruleUndefinedLiteral returns [EObject current=null] : ( () (lv_val_1= 'undefined' ) ) ;
    public final EObject ruleUndefinedLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8930:6: ( ( () (lv_val_1= 'undefined' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8931:1: ( () (lv_val_1= 'undefined' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8931:1: ( () (lv_val_1= 'undefined' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8931:2: () (lv_val_1= 'undefined' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8931:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8932:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUndefinedLiteralAccess().getUndefinedLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUndefinedLiteralAccess().getUndefinedLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8942:2: (lv_val_1= 'undefined' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8944:6: lv_val_1= 'undefined'
            {
            lv_val_1=(Token)input.LT(1);
            match(input,97,FOLLOW_97_in_ruleUndefinedLiteral20046); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUndefinedLiteralAccess().getValUndefinedKeyword_1_0(), "val"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUndefinedLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", /* lv_val_1 */ input.LT(-1), "undefined", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUndefinedLiteral


    // $ANTLR start entryRuleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8970:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8970:55: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8971:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral20092);
            iv_ruleStringLiteral=ruleStringLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringLiteral20102); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStringLiteral


    // $ANTLR start ruleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8978:1: ruleStringLiteral returns [EObject current=null] : ( () (lv_val_1= RULE_STRING ) ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8983:6: ( ( () (lv_val_1= RULE_STRING ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8984:1: ( () (lv_val_1= RULE_STRING ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8984:1: ( () (lv_val_1= RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8984:2: () (lv_val_1= RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8984:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8985:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8995:2: (lv_val_1= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8997:6: lv_val_1= RULE_STRING
            {
            lv_val_1=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleStringLiteral20158); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_1_0(), "val"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "STRING", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStringLiteral


    // $ANTLR start entryRuleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9022:1: entryRuleRealLiteral returns [EObject current=null] : iv_ruleRealLiteral= ruleRealLiteral EOF ;
    public final EObject entryRuleRealLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9022:53: (iv_ruleRealLiteral= ruleRealLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9023:2: iv_ruleRealLiteral= ruleRealLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRealLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral20199);
            iv_ruleRealLiteral=ruleRealLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRealLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRealLiteral20209); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRealLiteral


    // $ANTLR start ruleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9030:1: ruleRealLiteral returns [EObject current=null] : ( () (lv_val_1= ruleRealValue ) ) ;
    public final EObject ruleRealLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_val_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9035:6: ( ( () (lv_val_1= ruleRealValue ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9036:1: ( () (lv_val_1= ruleRealValue ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9036:1: ( () (lv_val_1= ruleRealValue ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9036:2: () (lv_val_1= ruleRealValue )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9036:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9037:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRealLiteralAccess().getRealLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRealLiteralAccess().getRealLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9047:2: (lv_val_1= ruleRealValue )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9050:6: lv_val_1= ruleRealValue
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getRealLiteralAccess().getValRealValueParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleRealValue_in_ruleRealLiteral20277);
            lv_val_1=ruleRealValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRealLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "RealValue", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRealLiteral


    // $ANTLR start entryRuleRealValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9075:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9075:50: (iv_ruleRealValue= ruleRealValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9076:2: iv_ruleRealValue= ruleRealValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRealValueRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRealValue_in_entryRuleRealValue20315);
            iv_ruleRealValue=ruleRealValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRealValue20326); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRealValue


    // $ANTLR start ruleRealValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9083:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_REAL_0= RULE_REAL ;
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REAL_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9089:6: (this_REAL_0= RULE_REAL )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9090:5: this_REAL_0= RULE_REAL
            {
            this_REAL_0=(Token)input.LT(1);
            match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleRealValue20365); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_REAL_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getRealValueAccess().getREALTerminalRuleCall(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRealValue


    // $ANTLR start entryRuleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9105:1: entryRuleRegexpLiteral returns [EObject current=null] : iv_ruleRegexpLiteral= ruleRegexpLiteral EOF ;
    public final EObject entryRuleRegexpLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegexpLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9105:55: (iv_ruleRegexpLiteral= ruleRegexpLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9106:2: iv_ruleRegexpLiteral= ruleRegexpLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRegexpLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral20407);
            iv_ruleRegexpLiteral=ruleRegexpLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRegexpLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpLiteral20417); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpLiteral


    // $ANTLR start ruleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9113:1: ruleRegexpLiteral returns [EObject current=null] : ( () (lv_val_1= RULE_REGEX ) ) ;
    public final EObject ruleRegexpLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_val_1=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9118:6: ( ( () (lv_val_1= RULE_REGEX ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9119:1: ( () (lv_val_1= RULE_REGEX ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9119:1: ( () (lv_val_1= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9119:2: () (lv_val_1= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9119:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9120:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRegexpLiteralAccess().getRegexpLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRegexpLiteralAccess().getRegexpLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9130:2: (lv_val_1= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9132:6: lv_val_1= RULE_REGEX
            {
            lv_val_1=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpLiteral20473); if (failed) return current;
            if ( backtracking==0 ) {

              		createLeafNode(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_1_0(), "val"); 
              	
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRegexpLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_1, "REGEX", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpLiteral


    // $ANTLR start entryRuleQueryLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9157:1: entryRuleQueryLiteral returns [EObject current=null] : iv_ruleQueryLiteral= ruleQueryLiteral EOF ;
    public final EObject entryRuleQueryLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryLiteral = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9157:54: (iv_ruleQueryLiteral= ruleQueryLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9158:2: iv_ruleQueryLiteral= ruleQueryLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQueryLiteralRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleQueryLiteral_in_entryRuleQueryLiteral20514);
            iv_ruleQueryLiteral=ruleQueryLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQueryLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQueryLiteral20524); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQueryLiteral


    // $ANTLR start ruleQueryLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9165:1: ruleQueryLiteral returns [EObject current=null] : ( () 'query' '{' (lv_val_3= ruleAdvicePath ) '}' ) ;
    public final EObject ruleQueryLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_val_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9170:6: ( ( () 'query' '{' (lv_val_3= ruleAdvicePath ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9171:1: ( () 'query' '{' (lv_val_3= ruleAdvicePath ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9171:1: ( () 'query' '{' (lv_val_3= ruleAdvicePath ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9171:2: () 'query' '{' (lv_val_3= ruleAdvicePath ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9171:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9172:5: 
            {
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getQueryLiteralAccess().getQueryLiteralAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getQueryLiteralAccess().getQueryLiteralAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,98,FOLLOW_98_in_ruleQueryLiteral20567); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getQueryLiteralAccess().getQueryKeyword_1(), null); 
                  
            }
            match(input,24,FOLLOW_24_in_ruleQueryLiteral20576); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getQueryLiteralAccess().getLeftCurlyBracketKeyword_2(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9190:1: (lv_val_3= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9193:6: lv_val_3= ruleAdvicePath
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getQueryLiteralAccess().getValAdvicePathParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleQueryLiteral20610);
            lv_val_3=ruleAdvicePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getQueryLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        
              	        try {
              	       		set(current, "val", lv_val_3, "AdvicePath", currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }

            match(input,27,FOLLOW_27_in_ruleQueryLiteral20623); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getQueryLiteralAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQueryLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9222:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParanthesizedExpression = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9222:65: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9223:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression20656);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParanthesizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParanthesizedExpression20666); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9230:1: ruleParanthesizedExpression returns [EObject current=null] : ( '(' this_Expression_1= ruleExpression ')' ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9235:6: ( ( '(' this_Expression_1= ruleExpression ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9236:1: ( '(' this_Expression_1= ruleExpression ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9236:1: ( '(' this_Expression_1= ruleExpression ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9236:2: '(' this_Expression_1= ruleExpression ')'
            {
            match(input,51,FOLLOW_51_in_ruleParanthesizedExpression20700); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleExpression_in_ruleParanthesizedExpression20722);
            this_Expression_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_Expression_1; 
                      currentNode = currentNode.getParent();
                  
            }
            match(input,52,FOLLOW_52_in_ruleParanthesizedExpression20730); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start entryRuleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9260:1: entryRuleVersion returns [EObject current=null] : iv_ruleVersion= ruleVersion EOF ;
    public final EObject entryRuleVersion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVersion = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9260:49: (iv_ruleVersion= ruleVersion EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9261:2: iv_ruleVersion= ruleVersion EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVersionRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVersion_in_entryRuleVersion20763);
            iv_ruleVersion=ruleVersion();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVersion; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersion20773); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersion


    // $ANTLR start ruleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9268:1: ruleVersion returns [EObject current=null] : ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) ) ;
    public final EObject ruleVersion() throws RecognitionException {
        EObject current = null;

        Token lv_original_0=null;
        AntlrDatatypeRuleToken lv_original_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9273:6: ( ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9274:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9274:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_STRING) ) {
                alt144=1;
            }
            else if ( (LA144_0==RULE_ID||(LA144_0>=RULE_INT && LA144_0<=RULE_REAL)) ) {
                alt144=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9274:1: ( (lv_original_0= RULE_STRING ) | (lv_original_1= ruleAlfanumSym ) )", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9274:2: (lv_original_0= RULE_STRING )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9274:2: (lv_original_0= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9276:6: lv_original_0= RULE_STRING
                    {
                    lv_original_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVersion20820); if (failed) return current;
                    if ( backtracking==0 ) {

                      		createLeafNode(grammarAccess.getVersionAccess().getOriginalSTRINGTerminalRuleCall_0_0(), "original"); 
                      	
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "original", lv_original_0, "STRING", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9295:6: (lv_original_1= ruleAlfanumSym )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9295:6: (lv_original_1= ruleAlfanumSym )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9298:6: lv_original_1= ruleAlfanumSym
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionAccess().getOriginalAlfanumSymParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleAlfanumSym_in_ruleVersion20868);
                    lv_original_1=ruleAlfanumSym();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "original", lv_original_1, "AlfanumSym", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersion


    // $ANTLR start entryRuleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:1: entryRuleVersionRange returns [EObject current=null] : iv_ruleVersionRange= ruleVersionRange EOF ;
    public final EObject entryRuleVersionRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVersionRange = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9323:54: (iv_ruleVersionRange= ruleVersionRange EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9324:2: iv_ruleVersionRange= ruleVersionRange EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVersionRangeRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleVersionRange_in_entryRuleVersionRange20905);
            iv_ruleVersionRange=ruleVersionRange();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVersionRange; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersionRange20915); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersionRange


    // $ANTLR start ruleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9331:1: ruleVersionRange returns [EObject current=null] : ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) ) ;
    public final EObject ruleVersionRange() throws RecognitionException {
        EObject current = null;

        Token lv_minLimit_0=null;
        Token lv_maxLimit_4=null;
        EObject lv_min_1 = null;

        EObject lv_max_3 = null;

        EObject lv_min_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9336:6: ( ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==39||LA148_0==51) ) {
                alt148=1;
            }
            else if ( ((LA148_0>=RULE_ID && LA148_0<=RULE_STRING)||(LA148_0>=RULE_INT && LA148_0<=RULE_REAL)) ) {
                alt148=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9337:1: ( ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) ) | (lv_min_5= ruleVersion ) )", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:2: ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:2: ( (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:3: (lv_minLimit_0= ( '[' | '(' ) ) (lv_min_1= ruleVersion ) ( ',' (lv_max_3= ruleVersion ) )? (lv_maxLimit_4= ( ']' | ')' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9337:3: (lv_minLimit_0= ( '[' | '(' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9339:6: lv_minLimit_0= ( '[' | '(' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9339:20: ( '[' | '(' )
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==39) ) {
                        alt145=1;
                    }
                    else if ( (LA145_0==51) ) {
                        alt145=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("9339:20: ( '[' | '(' )", 145, 0, input);

                        throw nvae;
                    }
                    switch (alt145) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9339:21: '['
                            {
                            match(input,39,FOLLOW_39_in_ruleVersionRange20963); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMinLimitLeftSquareBracketKeyword_0_0_0_0(), "minLimit"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9345:6: '('
                            {
                            match(input,51,FOLLOW_51_in_ruleVersionRange20979); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMinLimitLeftParenthesisKeyword_0_0_0_1(), "minLimit"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "minLimit", /* lv_minLimit_0 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9365:2: (lv_min_1= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9368:6: lv_min_1= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMinVersionParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange21028);
                    lv_min_1=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "min", lv_min_1, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9386:2: ( ',' (lv_max_3= ruleVersion ) )?
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==23) ) {
                        alt146=1;
                    }
                    switch (alt146) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9386:3: ',' (lv_max_3= ruleVersion )
                            {
                            match(input,23,FOLLOW_23_in_ruleVersionRange21042); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9390:1: (lv_max_3= ruleVersion )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9393:6: lv_max_3= ruleVersion
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMaxVersionParserRuleCall_0_2_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange21076);
                            lv_max_3=ruleVersion();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "max", lv_max_3, "Version", currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9411:4: (lv_maxLimit_4= ( ']' | ')' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9413:6: lv_maxLimit_4= ( ']' | ')' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9413:20: ( ']' | ')' )
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==40) ) {
                        alt147=1;
                    }
                    else if ( (LA147_0==52) ) {
                        alt147=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("9413:20: ( ']' | ')' )", 147, 0, input);

                        throw nvae;
                    }
                    switch (alt147) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9413:21: ']'
                            {
                            match(input,40,FOLLOW_40_in_ruleVersionRange21104); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMaxLimitRightSquareBracketKeyword_0_3_0_0(), "maxLimit"); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9419:6: ')'
                            {
                            match(input,52,FOLLOW_52_in_ruleVersionRange21120); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getVersionRangeAccess().getMaxLimitRightParenthesisKeyword_0_3_0_1(), "maxLimit"); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "maxLimit", /* lv_maxLimit_4 */ input.LT(-1), null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9440:6: (lv_min_5= ruleVersion )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9440:6: (lv_min_5= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9443:6: lv_min_5= ruleVersion
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getMinVersionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange21176);
                    lv_min_5=ruleVersion();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVersionRangeRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "min", lv_min_5, "Version", currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersionRange


    // $ANTLR start entryRuleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9468:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9468:54: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9469:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQualifiedNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName21214);
            iv_ruleQualifiedName=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName21225); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQualifiedName


    // $ANTLR start ruleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9476:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;
        AntlrDatatypeRuleToken this_HIDDENBUG_9 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9484:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9485:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9485:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9485:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName21265); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
                  
            }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9492:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop149:
            do {
                int alt149=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt149=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt149=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt149=3;
                    }
                    break;

                }

                switch (alt149) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9492:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName21286); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_1);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9500:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName21312); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_2);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9508:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName21338); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9515:3: (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==47) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9516:2: kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,47,FOLLOW_47_in_ruleQualifiedName21359); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              current.merge(kw);
            	              createLeafNode(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0(), null); 
            	          
            	    }
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName21374); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9528:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop150:
            	    do {
            	        int alt150=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt150=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt150=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt150=3;
            	            }
            	            break;

            	        }

            	        switch (alt150) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9528:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName21395); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_INT_6);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9536:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName21421); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_HEX_7);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9544:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName21447); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_ID_8);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop150;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName21478);
            this_HIDDENBUG_9=ruleHIDDENBUG();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_HIDDENBUG_9);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQualifiedName


    // $ANTLR start entryRuleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9570:1: entryRuleHIDDENBUG returns [String current=null] : iv_ruleHIDDENBUG= ruleHIDDENBUG EOF ;
    public final String entryRuleHIDDENBUG() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleHIDDENBUG = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9570:50: (iv_ruleHIDDENBUG= ruleHIDDENBUG EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9571:2: iv_ruleHIDDENBUG= ruleHIDDENBUG EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getHIDDENBUGRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG21522);
            iv_ruleHIDDENBUG=ruleHIDDENBUG();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleHIDDENBUG.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleHIDDENBUG21533); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleHIDDENBUG


    // $ANTLR start ruleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9578:1: ruleHIDDENBUG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '~~~~~' )? ;
    public final AntlrDatatypeRuleToken ruleHIDDENBUG() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9586:6: ( (kw= '~~~~~' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9587:1: (kw= '~~~~~' )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9587:1: (kw= '~~~~~' )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==99) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9588:2: kw= '~~~~~'
                    {
                    kw=(Token)input.LT(1);
                    match(input,99,FOLLOW_99_in_ruleHIDDENBUG21571); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
              		myHiddenTokenState.restore();
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleHIDDENBUG


    // $ANTLR start entryRulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9603:1: entryRulePropertyName returns [String current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final String entryRulePropertyName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9603:53: (iv_rulePropertyName= rulePropertyName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9604:2: iv_rulePropertyName= rulePropertyName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPropertyNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePropertyName_in_entryRulePropertyName21613);
            iv_rulePropertyName=rulePropertyName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePropertyName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyName21624); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyName


    // $ANTLR start rulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9611:1: rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_PID_0= RULE_PID ;
    public final AntlrDatatypeRuleToken rulePropertyName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_PID_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9617:6: (this_PID_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9618:5: this_PID_0= RULE_PID
            {
            this_PID_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyName21663); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_PID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall(), null); 
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyName


    // $ANTLR start entryRuleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9633:1: entryRuleEscapedQualifiedName returns [String current=null] : iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF ;
    public final String entryRuleEscapedQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEscapedQualifiedName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9633:61: (iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9634:2: iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getEscapedQualifiedNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName21706);
            iv_ruleEscapedQualifiedName=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleEscapedQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEscapedQualifiedName21717); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleEscapedQualifiedName


    // $ANTLR start ruleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9641:1: ruleEscapedQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleEscapedQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_QualifiedName_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9647:6: ( (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9648:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9648:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==RULE_STRING) ) {
                alt153=1;
            }
            else if ( (LA153_0==RULE_ID) ) {
                alt153=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9648:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9648:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName21757); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9657:5: this_QualifiedName_1= ruleQualifiedName
                    {
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName21790);
                    this_QualifiedName_1=ruleQualifiedName();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QualifiedName_1);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleEscapedQualifiedName


    // $ANTLR start entryRuleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9675:1: entryRuleInterfaceName returns [String current=null] : iv_ruleInterfaceName= ruleInterfaceName EOF ;
    public final String entryRuleInterfaceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInterfaceName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9675:54: (iv_ruleInterfaceName= ruleInterfaceName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9676:2: iv_ruleInterfaceName= ruleInterfaceName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInterfaceNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName21834);
            iv_ruleInterfaceName=ruleInterfaceName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInterfaceName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterfaceName21845); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInterfaceName


    // $ANTLR start ruleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9683:1: ruleInterfaceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_QualifiedName_0= ruleQualifiedName ;
    public final AntlrDatatypeRuleToken ruleInterfaceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9689:6: (this_QualifiedName_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9691:5: this_QualifiedName_0= ruleQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleInterfaceName21891);
            this_QualifiedName_0=ruleQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInterfaceName


    // $ANTLR start entryRuleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9709:1: entryRuleCompoundName returns [String current=null] : iv_ruleCompoundName= ruleCompoundName EOF ;
    public final String entryRuleCompoundName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCompoundName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9709:53: (iv_ruleCompoundName= ruleCompoundName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9710:2: iv_ruleCompoundName= ruleCompoundName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCompoundNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleCompoundName_in_entryRuleCompoundName21934);
            iv_ruleCompoundName=ruleCompoundName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCompoundName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundName21945); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundName


    // $ANTLR start ruleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9717:1: ruleCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleCompoundName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;

        AntlrDatatypeRuleToken this_EscapedQualifiedName_2 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9723:6: ( (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9724:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9724:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9725:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName21992);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }
            kw=(Token)input.LT(1);
            match(input,34,FOLLOW_34_in_ruleCompoundName22010); if (failed) return current;
            if ( backtracking==0 ) {

                      current.merge(kw);
                      createLeafNode(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1(), null); 
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName22032);
            this_EscapedQualifiedName_2=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_2);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundName


    // $ANTLR start entryRuleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9760:1: entryRuleUnitName returns [String current=null] : iv_ruleUnitName= ruleUnitName EOF ;
    public final String entryRuleUnitName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnitName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9760:49: (iv_ruleUnitName= ruleUnitName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9761:2: iv_ruleUnitName= ruleUnitName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleUnitName_in_entryRuleUnitName22076);
            iv_ruleUnitName=ruleUnitName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnitName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnitName22087); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnitName


    // $ANTLR start ruleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9768:1: ruleUnitName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken ruleUnitName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9774:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9776:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName22133);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnitName


    // $ANTLR start entryRulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9794:1: entryRulePartName returns [String current=null] : iv_rulePartName= rulePartName EOF ;
    public final String entryRulePartName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePartName = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9794:49: (iv_rulePartName= rulePartName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9795:2: iv_rulePartName= rulePartName EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPartNameRule(), currentNode); 
            }
            pushFollow(FOLLOW_rulePartName_in_entryRulePartName22176);
            iv_rulePartName=rulePartName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePartName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePartName22187); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartName


    // $ANTLR start rulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9802:1: rulePartName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken rulePartName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9808:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9810:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_rulePartName22233);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_EscapedQualifiedName_0);
                  
            }
            if ( backtracking==0 ) {
               
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartName


    // $ANTLR start entryRuleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9828:1: entryRuleSeparator returns [String current=null] : iv_ruleSeparator= ruleSeparator EOF ;
    public final String entryRuleSeparator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSeparator = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9828:50: (iv_ruleSeparator= ruleSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9829:2: iv_ruleSeparator= ruleSeparator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSeparatorRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleSeparator_in_entryRuleSeparator22276);
            iv_ruleSeparator=ruleSeparator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSeparator.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSeparator22287); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSeparator


    // $ANTLR start ruleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9836:1: ruleSeparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) ;
    public final AntlrDatatypeRuleToken ruleSeparator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9842:6: ( (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9843:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9843:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            int alt154=14;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt154=1;
                }
                break;
            case 84:
                {
                alt154=2;
                }
                break;
            case 86:
                {
                alt154=3;
                }
                break;
            case 100:
                {
                alt154=4;
                }
                break;
            case 101:
                {
                alt154=5;
                }
                break;
            case 85:
                {
                alt154=6;
                }
                break;
            case 77:
                {
                alt154=7;
                }
                break;
            case 83:
                {
                alt154=8;
                }
                break;
            case 41:
                {
                alt154=9;
                }
                break;
            case 49:
                {
                alt154=10;
                }
                break;
            case 102:
                {
                alt154=11;
                }
                break;
            case 103:
                {
                alt154=12;
                }
                break;
            case 46:
                {
                alt154=13;
                }
                break;
            case 74:
                {
                alt154=14;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9843:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )", 154, 0, input);

                throw nvae;
            }

            switch (alt154) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9844:2: kw= '.'
                    {
                    kw=(Token)input.LT(1);
                    match(input,47,FOLLOW_47_in_ruleSeparator22325); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getFullStopKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9851:2: kw= '-'
                    {
                    kw=(Token)input.LT(1);
                    match(input,84,FOLLOW_84_in_ruleSeparator22344); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9858:2: kw= '!'
                    {
                    kw=(Token)input.LT(1);
                    match(input,86,FOLLOW_86_in_ruleSeparator22363); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9865:2: kw= '@'
                    {
                    kw=(Token)input.LT(1);
                    match(input,100,FOLLOW_100_in_ruleSeparator22382); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9872:2: kw= '$'
                    {
                    kw=(Token)input.LT(1);
                    match(input,101,FOLLOW_101_in_ruleSeparator22401); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9879:2: kw= '%'
                    {
                    kw=(Token)input.LT(1);
                    match(input,85,FOLLOW_85_in_ruleSeparator22420); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5(), null); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9886:2: kw= '&'
                    {
                    kw=(Token)input.LT(1);
                    match(input,77,FOLLOW_77_in_ruleSeparator22439); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6(), null); 
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9893:2: kw= '+'
                    {
                    kw=(Token)input.LT(1);
                    match(input,83,FOLLOW_83_in_ruleSeparator22458); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7(), null); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9900:2: kw= '='
                    {
                    kw=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_ruleSeparator22477); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8(), null); 
                          
                    }

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9907:2: kw= '*'
                    {
                    kw=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_ruleSeparator22496); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9(), null); 
                          
                    }

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9914:2: kw= '<'
                    {
                    kw=(Token)input.LT(1);
                    match(input,102,FOLLOW_102_in_ruleSeparator22515); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10(), null); 
                          
                    }

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9921:2: kw= '>'
                    {
                    kw=(Token)input.LT(1);
                    match(input,103,FOLLOW_103_in_ruleSeparator22534); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11(), null); 
                          
                    }

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9928:2: kw= ':'
                    {
                    kw=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_ruleSeparator22553); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getColonKeyword_12(), null); 
                          
                    }

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9935:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_ruleSeparator22572); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSeparator


    // $ANTLR start entryRuleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9948:1: entryRuleAlfanumSym returns [String current=null] : iv_ruleAlfanumSym= ruleAlfanumSym EOF ;
    public final String entryRuleAlfanumSym() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAlfanumSym = null;


        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9948:51: (iv_ruleAlfanumSym= ruleAlfanumSym EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9949:2: iv_ruleAlfanumSym= ruleAlfanumSym EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAlfanumSymRule(), currentNode); 
            }
            pushFollow(FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym22611);
            iv_ruleAlfanumSym=ruleAlfanumSym();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAlfanumSym.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAlfanumSym22622); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAlfanumSym


    // $ANTLR start ruleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9956:1: ruleAlfanumSym returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) ;
    public final AntlrDatatypeRuleToken ruleAlfanumSym() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_REAL_3=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_REAL_8=null;
        AntlrDatatypeRuleToken this_Separator_4 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9962:6: ( ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9963:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9963:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9963:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9963:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )
            int alt155=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt155=1;
                }
                break;
            case RULE_INT:
                {
                alt155=2;
                }
                break;
            case RULE_HEX:
                {
                alt155=3;
                }
                break;
            case RULE_REAL:
                {
                alt155=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("9963:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )", 155, 0, input);

                throw nvae;
            }

            switch (alt155) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9963:7: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym22663); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_ID_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9971:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym22689); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9979:10: this_HEX_2= RULE_HEX
                    {
                    this_HEX_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym22715); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_HEX_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9987:10: this_REAL_3= RULE_REAL
                    {
                    this_REAL_3=(Token)input.LT(1);
                    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym22741); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_REAL_3);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9994:2: (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            loop156:
            do {
                int alt156=6;
                switch ( input.LA(1) ) {
                case 41:
                case 46:
                case 47:
                case 49:
                case 74:
                case 77:
                case 83:
                case 84:
                case 85:
                case 86:
                case 100:
                case 101:
                case 102:
                case 103:
                    {
                    alt156=1;
                    }
                    break;
                case RULE_ID:
                    {
                    alt156=2;
                    }
                    break;
                case RULE_INT:
                    {
                    alt156=3;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt156=4;
                    }
                    break;
                case RULE_REAL:
                    {
                    alt156=5;
                    }
                    break;

                }

                switch (alt156) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:9995:5: this_Separator_4= ruleSeparator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	              currentNode=createCompositeNode(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0(), currentNode); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleSeparator_in_ruleAlfanumSym22770);
            	    this_Separator_4=ruleSeparator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_Separator_4);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              currentNode = currentNode.getParent();
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10006:10: this_ID_5= RULE_ID
            	    {
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym22796); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10014:10: this_INT_6= RULE_INT
            	    {
            	    this_INT_6=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym22822); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_6);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10022:10: this_HEX_7= RULE_HEX
            	    {
            	    this_HEX_7=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym22848); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_7);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10030:10: this_REAL_8= RULE_REAL
            	    {
            	    this_REAL_8=(Token)input.LT(1);
            	    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym22874); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_REAL_8);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
              	    lastConsumedDatatypeToken = current;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAlfanumSym


    // $ANTLR start ruleAssignmentOperator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10045:1: ruleAssignmentOperator returns [Enumerator current=null] : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) ) ;
    public final Enumerator ruleAssignmentOperator() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10049:6: ( ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10050:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10050:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )
            int alt157=12;
            switch ( input.LA(1) ) {
            case 41:
                {
                alt157=1;
                }
                break;
            case 104:
                {
                alt157=2;
                }
                break;
            case 105:
                {
                alt157=3;
                }
                break;
            case 106:
                {
                alt157=4;
                }
                break;
            case 107:
                {
                alt157=5;
                }
                break;
            case 108:
                {
                alt157=6;
                }
                break;
            case 109:
                {
                alt157=7;
                }
                break;
            case 110:
                {
                alt157=8;
                }
                break;
            case 111:
                {
                alt157=9;
                }
                break;
            case 112:
                {
                alt157=10;
                }
                break;
            case 113:
                {
                alt157=11;
                }
                break;
            case 114:
                {
                alt157=12;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("10050:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) | ( '&=' ) | ( '^=' ) | ( '|=' ) | ( '<<=' ) | ( '>>=' ) | ( '>>>=' ) )", 157, 0, input);

                throw nvae;
            }

            switch (alt157) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10050:2: ( '=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10050:2: ( '=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10050:4: '='
                    {
                    match(input,41,FOLLOW_41_in_ruleAssignmentOperator22933); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSETEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10056:6: ( '+=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10056:6: ( '+=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10056:8: '+='
                    {
                    match(input,104,FOLLOW_104_in_ruleAssignmentOperator22948); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_PLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_PLUSEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10062:6: ( '-=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10062:6: ( '-=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10062:8: '-='
                    {
                    match(input,105,FOLLOW_105_in_ruleAssignmentOperator22963); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MINUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MINUSEnumLiteralDeclaration_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10068:6: ( '*=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10068:6: ( '*=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10068:8: '*='
                    {
                    match(input,106,FOLLOW_106_in_ruleAssignmentOperator22978); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MULEnumLiteralDeclaration_3(), null); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10074:6: ( '/=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10074:6: ( '/=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10074:8: '/='
                    {
                    match(input,107,FOLLOW_107_in_ruleAssignmentOperator22993); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_DIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_DIVEnumLiteralDeclaration_4(), null); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10080:6: ( '%=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10080:6: ( '%=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10080:8: '%='
                    {
                    match(input,108,FOLLOW_108_in_ruleAssignmentOperator23008); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_MODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_MODEnumLiteralDeclaration_5(), null); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10086:6: ( '&=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10086:6: ( '&=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10086:8: '&='
                    {
                    match(input,109,FOLLOW_109_in_ruleAssignmentOperator23023); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_ANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_ANDEnumLiteralDeclaration_6(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10092:6: ( '^=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10092:6: ( '^=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10092:8: '^='
                    {
                    match(input,110,FOLLOW_110_in_ruleAssignmentOperator23038); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_XOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_XOREnumLiteralDeclaration_7(), null); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10098:6: ( '|=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10098:6: ( '|=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10098:8: '|='
                    {
                    match(input,111,FOLLOW_111_in_ruleAssignmentOperator23053); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_OREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_OREnumLiteralDeclaration_8(), null); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10104:6: ( '<<=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10104:6: ( '<<=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10104:8: '<<='
                    {
                    match(input,112,FOLLOW_112_in_ruleAssignmentOperator23068); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_LSHIFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_LSHIFTEnumLiteralDeclaration_9(), null); 
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10110:6: ( '>>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10110:6: ( '>>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10110:8: '>>='
                    {
                    match(input,113,FOLLOW_113_in_ruleAssignmentOperator23083); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFTEnumLiteralDeclaration_10(), null); 
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10116:6: ( '>>>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10116:6: ( '>>>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10116:8: '>>>='
                    {
                    match(input,114,FOLLOW_114_in_ruleAssignmentOperator23098); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFT_0EnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSET_RSHIFT_0EnumLiteralDeclaration_11(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentOperator


    // $ANTLR start ruleRelationalOperator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10126:1: ruleRelationalOperator returns [Enumerator current=null] : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) ) ;
    public final Enumerator ruleRelationalOperator() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10130:6: ( ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10131:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10131:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )
            int alt158=10;
            switch ( input.LA(1) ) {
            case 115:
                {
                alt158=1;
                }
                break;
            case 116:
                {
                alt158=2;
                }
                break;
            case 117:
                {
                alt158=3;
                }
                break;
            case 118:
                {
                alt158=4;
                }
                break;
            case 119:
                {
                alt158=5;
                }
                break;
            case 120:
                {
                alt158=6;
                }
                break;
            case 121:
                {
                alt158=7;
                }
                break;
            case 103:
                {
                alt158=8;
                }
                break;
            case 102:
                {
                alt158=9;
                }
                break;
            case 122:
                {
                alt158=10;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("10131:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'instanceof' ) )", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10131:2: ( '~=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10131:2: ( '~=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10131:4: '~='
                    {
                    match(input,115,FOLLOW_115_in_ruleRelationalOperator23141); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_MATCHESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_MATCHESEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10137:6: ( '==' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10137:6: ( '==' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10137:8: '=='
                    {
                    match(input,116,FOLLOW_116_in_ruleRelationalOperator23156); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10143:6: ( '===' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10143:6: ( '===' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10143:8: '==='
                    {
                    match(input,117,FOLLOW_117_in_ruleRelationalOperator23171); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_IDENTITYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_IDENTITYEnumLiteralDeclaration_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10149:6: ( '!=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10149:6: ( '!=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10149:8: '!='
                    {
                    match(input,118,FOLLOW_118_in_ruleRelationalOperator23186); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_NOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_NOTEnumLiteralDeclaration_3(), null); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10155:6: ( '!==' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10155:6: ( '!==' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10155:8: '!=='
                    {
                    match(input,119,FOLLOW_119_in_ruleRelationalOperator23201); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_NOT_IDENTITYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_NOT_IDENTITYEnumLiteralDeclaration_4(), null); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10161:6: ( '>=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10161:6: ( '>=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10161:8: '>='
                    {
                    match(input,120,FOLLOW_120_in_ruleRelationalOperator23216); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_GTEQEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_GTEQEnumLiteralDeclaration_5(), null); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10167:6: ( '<=' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10167:6: ( '<=' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10167:8: '<='
                    {
                    match(input,121,FOLLOW_121_in_ruleRelationalOperator23231); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_LEEQEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_LEEQEnumLiteralDeclaration_6(), null); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10173:6: ( '>' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10173:6: ( '>' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10173:8: '>'
                    {
                    match(input,103,FOLLOW_103_in_ruleRelationalOperator23246); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_GTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_GTEnumLiteralDeclaration_7(), null); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10179:6: ( '<' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10179:6: ( '<' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10179:8: '<'
                    {
                    match(input,102,FOLLOW_102_in_ruleRelationalOperator23261); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_LTEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_LTEnumLiteralDeclaration_8(), null); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10185:6: ( 'instanceof' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10185:6: ( 'instanceof' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10185:8: 'instanceof'
                    {
                    match(input,122,FOLLOW_122_in_ruleRelationalOperator23276); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getRelationalOperatorAccess().getEQ_INSTANCEOFEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEQ_INSTANCEOFEnumLiteralDeclaration_9(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalOperator


    // $ANTLR start ruleSetOperator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10195:1: ruleSetOperator returns [Enumerator current=null] : ( ( 'select' ) | ( 'collect' ) | ( 'reject' ) | ( 'exists' ) | ( 'notexists' ) | ( 'foreach' ) ) ;
    public final Enumerator ruleSetOperator() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10199:6: ( ( ( 'select' ) | ( 'collect' ) | ( 'reject' ) | ( 'exists' ) | ( 'notexists' ) | ( 'foreach' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10200:1: ( ( 'select' ) | ( 'collect' ) | ( 'reject' ) | ( 'exists' ) | ( 'notexists' ) | ( 'foreach' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10200:1: ( ( 'select' ) | ( 'collect' ) | ( 'reject' ) | ( 'exists' ) | ( 'notexists' ) | ( 'foreach' ) )
            int alt159=6;
            switch ( input.LA(1) ) {
            case 123:
                {
                alt159=1;
                }
                break;
            case 124:
                {
                alt159=2;
                }
                break;
            case 125:
                {
                alt159=3;
                }
                break;
            case 126:
                {
                alt159=4;
                }
                break;
            case 127:
                {
                alt159=5;
                }
                break;
            case 128:
                {
                alt159=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("10200:1: ( ( 'select' ) | ( 'collect' ) | ( 'reject' ) | ( 'exists' ) | ( 'notexists' ) | ( 'foreach' ) )", 159, 0, input);

                throw nvae;
            }

            switch (alt159) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10200:2: ( 'select' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10200:2: ( 'select' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10200:4: 'select'
                    {
                    match(input,123,FOLLOW_123_in_ruleSetOperator23319); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getSelectEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getSelectEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10206:6: ( 'collect' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10206:6: ( 'collect' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10206:8: 'collect'
                    {
                    match(input,124,FOLLOW_124_in_ruleSetOperator23334); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getCollectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getCollectEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10212:6: ( 'reject' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10212:6: ( 'reject' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10212:8: 'reject'
                    {
                    match(input,125,FOLLOW_125_in_ruleSetOperator23349); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getRejectEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getRejectEnumLiteralDeclaration_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10218:6: ( 'exists' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10218:6: ( 'exists' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10218:8: 'exists'
                    {
                    match(input,126,FOLLOW_126_in_ruleSetOperator23364); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getExistsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getExistsEnumLiteralDeclaration_3(), null); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10224:6: ( 'notexists' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10224:6: ( 'notexists' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10224:8: 'notexists'
                    {
                    match(input,127,FOLLOW_127_in_ruleSetOperator23379); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getNotexistsEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getNotexistsEnumLiteralDeclaration_4(), null); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10230:6: ( 'foreach' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10230:6: ( 'foreach' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10230:8: 'foreach'
                    {
                    match(input,128,FOLLOW_128_in_ruleSetOperator23394); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getSetOperatorAccess().getForeachEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getSetOperatorAccess().getForeachEnumLiteralDeclaration_5(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSetOperator


    // $ANTLR start ruleVisibility
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10240:1: ruleVisibility returns [Enumerator current=null] : ( ( 'public' ) | ( 'private' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10244:6: ( ( ( 'public' ) | ( 'private' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10245:1: ( ( 'public' ) | ( 'private' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10245:1: ( ( 'public' ) | ( 'private' ) )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==129) ) {
                alt160=1;
            }
            else if ( (LA160_0==130) ) {
                alt160=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("10245:1: ( ( 'public' ) | ( 'private' ) )", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10245:2: ( 'public' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10245:2: ( 'public' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10245:4: 'public'
                    {
                    match(input,129,FOLLOW_129_in_ruleVisibility23437); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10251:6: ( 'private' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10251:6: ( 'private' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10251:8: 'private'
                    {
                    match(input,130,FOLLOW_130_in_ruleVisibility23452); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVisibility


    // $ANTLR start ruleExecutionMode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10261:1: ruleExecutionMode returns [Enumerator current=null] : ( ( 'parallel' ) | ( 'sequential' ) ) ;
    public final Enumerator ruleExecutionMode() throws RecognitionException {
        Enumerator current = null;

         setCurrentLookahead(); resetLookahead(); 
        try {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10265:6: ( ( ( 'parallel' ) | ( 'sequential' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10266:1: ( ( 'parallel' ) | ( 'sequential' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10266:1: ( ( 'parallel' ) | ( 'sequential' ) )
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==131) ) {
                alt161=1;
            }
            else if ( (LA161_0==31) ) {
                alt161=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("10266:1: ( ( 'parallel' ) | ( 'sequential' ) )", 161, 0, input);

                throw nvae;
            }
            switch (alt161) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10266:2: ( 'parallel' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10266:2: ( 'parallel' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10266:4: 'parallel'
                    {
                    match(input,131,FOLLOW_131_in_ruleExecutionMode23495); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10272:6: ( 'sequential' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10272:6: ( 'sequential' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:10272:8: 'sequential'
                    {
                    match(input,31,FOLLOW_31_in_ruleExecutionMode23510); if (failed) return current;
                    if ( backtracking==0 ) {

                              current = grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              createLeafNode(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExecutionMode

    // $ANTLR start synpred80
    public final void synpred80_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:6: ( rulePathGroup )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3116:6: rulePathGroup
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getBodyPathGroupParserRuleCall_3_0(), currentNode); 
          	    
        }
        pushFollow(FOLLOW_rulePathGroup_in_synpred807010);
        rulePathGroup();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred80

    // $ANTLR start synpred105
    public final void synpred105_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4462:5: ( ruleCompoundStatement )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4462:5: ruleCompoundStatement
        {
        if ( backtracking==0 ) {
           
                  currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_5(), currentNode); 
              
        }
        pushFollow(FOLLOW_ruleCompoundStatement_in_synpred10510253);
        ruleCompoundStatement();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred105

    // $ANTLR start synpred107
    public final void synpred107_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:6: ( ( ( ruleVarExpression )? ';' ) )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:6: ( ( ruleVarExpression )? ';' )
        {
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:6: ( ( ruleVarExpression )? ';' )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:7: ( ruleVarExpression )? ';'
        {
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4471:7: ( ruleVarExpression )?
        int alt172=2;
        int LA172_0 = input.LA(1);

        if ( ((LA172_0>=RULE_ID && LA172_0<=RULE_REAL)||(LA172_0>=24 && LA172_0<=25)||LA172_0==39||(LA172_0>=43 && LA172_0<=44)||LA172_0==51||LA172_0==66||LA172_0==73||LA172_0==84||(LA172_0>=86 && LA172_0<=98)) ) {
            alt172=1;
        }
        switch (alt172) {
            case 1 :
                // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4472:5: ruleVarExpression
                {
                pushFollow(FOLLOW_ruleVarExpression_in_synpred10710282);
                ruleVarExpression();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,18,FOLLOW_18_in_synpred10710292); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred107

    // $ANTLR start synpred128
    public final void synpred128_fragment() throws RecognitionException {   
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5547:3: ( 'else' ( ruleStatement ) )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5547:3: 'else' ( ruleStatement )
        {
        match(input,68,FOLLOW_68_in_synpred12812685); if (failed) return ;
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5551:1: ( ruleStatement )
        // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5554:6: ruleStatement
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0(), currentNode); 
          	    
        }
        pushFollow(FOLLOW_ruleStatement_in_synpred12812719);
        ruleStatement();
        _fsp--;
        if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred128

    public final boolean synpred107() {
        backtracking++;
        int start = input.mark();
        try {
            synpred107_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred105() {
        backtracking++;
        int start = input.mark();
        try {
            synpred105_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred80() {
        backtracking++;
        int start = input.mark();
        try {
            synpred80_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred128() {
        backtracking++;
        int start = input.mark();
        try {
            synpred128_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


    protected DFA17 dfa17 = new DFA17(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA75 dfa75 = new DFA75(this);
    static final String DFA17_eotS =
        "\35\uffff";
    static final String DFA17_eofS =
        "\35\uffff";
    static final String DFA17_minS =
        "\1\4\1\uffff\2\4\1\34\1\uffff\1\4\6\uffff\1\4\1\uffff\1\27\1\4\3"+
        "\uffff\4\4\1\27\4\4";
    static final String DFA17_maxS =
        "\1\u0083\1\uffff\2\41\1\34\1\uffff\1\30\6\uffff\1\41\1\uffff\1\66"+
        "\1\143\3\uffff\3\143\1\4\1\66\4\143";
    static final String DFA17_acceptS =
        "\1\uffff\1\14\3\uffff\1\7\1\uffff\1\12\1\13\1\1\1\2\1\3\1\4\1\uffff"+
        "\1\10\2\uffff\1\5\1\6\1\11\11\uffff";
    static final String DFA17_specialS =
        "\35\uffff}>";
    static final String[] DFA17_transitionS = {
            "\2\7\24\uffff\1\2\1\1\1\3\1\4\1\5\1\6\1\10\140\uffff\3\7",
            "",
            "\1\12\23\uffff\1\11\10\uffff\1\12",
            "\1\14\23\uffff\1\13\10\uffff\1\14",
            "\1\15",
            "",
            "\1\20\1\17\22\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\23\uffff\1\21\10\uffff\1\22",
            "",
            "\1\23\1\7\1\uffff\1\7\7\uffff\1\23\22\uffff\2\7",
            "\1\26\3\uffff\1\24\1\25\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "",
            "",
            "",
            "\1\26\3\uffff\1\24\1\25\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\26\3\uffff\1\24\1\25\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\26\3\uffff\1\24\1\25\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\31",
            "\1\23\1\7\1\uffff\1\7\7\uffff\1\23\22\uffff\2\7",
            "\1\34\3\uffff\1\32\1\33\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\34\3\uffff\1\32\1\33\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\34\3\uffff\1\32\1\33\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30",
            "\1\34\3\uffff\1\32\1\33\15\uffff\1\23\1\7\1\uffff\1\7\7\uffff"+
            "\1\23\14\uffff\1\27\5\uffff\2\7\54\uffff\1\30"
    };

    static final short[] DFA17_eot = DFA.unpackEncodedString(DFA17_eotS);
    static final short[] DFA17_eof = DFA.unpackEncodedString(DFA17_eofS);
    static final char[] DFA17_min = DFA.unpackEncodedStringToUnsignedChars(DFA17_minS);
    static final char[] DFA17_max = DFA.unpackEncodedStringToUnsignedChars(DFA17_maxS);
    static final short[] DFA17_accept = DFA.unpackEncodedString(DFA17_acceptS);
    static final short[] DFA17_special = DFA.unpackEncodedString(DFA17_specialS);
    static final short[][] DFA17_transition;

    static {
        int numStates = DFA17_transitionS.length;
        DFA17_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA17_transition[i] = DFA.unpackEncodedString(DFA17_transitionS[i]);
        }
    }

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = DFA17_eot;
            this.eof = DFA17_eof;
            this.min = DFA17_min;
            this.max = DFA17_max;
            this.accept = DFA17_accept;
            this.special = DFA17_special;
            this.transition = DFA17_transition;
        }
        public String getDescription() {
            return "()* loopback of 511:4: ( ( 'provides' '{' ( (lv_providedCapabilities_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapabilities_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronizations_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronizations_45= ruleSynchronization ) ) | (lv_buildMethods_46= ruleBuildMethod ) | ( 'repositories' '{' (lv_repositoryConfigurations_49= ruleRepositoryConfiguration )* '}' ) )*";
        }
    }
    static final String DFA29_eotS =
        "\16\uffff";
    static final String DFA29_eofS =
        "\1\uffff\2\4\2\uffff\3\4\1\uffff\5\4";
    static final String DFA29_minS =
        "\1\4\1\22\1\4\2\uffff\4\4\1\22\4\4";
    static final String DFA29_maxS =
        "\1\5\1\42\1\143\2\uffff\3\143\1\4\1\42\4\143";
    static final String DFA29_acceptS =
        "\3\uffff\1\1\1\2\11\uffff";
    static final String DFA29_specialS =
        "\16\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\2\1\1",
            "\1\4\4\uffff\1\4\12\uffff\1\3",
            "\1\7\3\uffff\1\5\1\6\10\uffff\1\4\4\uffff\1\4\12\uffff\1\3\14"+
            "\uffff\1\10\63\uffff\1\11",
            "",
            "",
            "\1\7\3\uffff\1\5\1\6\10\uffff\1\4\4\uffff\1\4\12\uffff\1\3\14"+
            "\uffff\1\10\63\uffff\1\11",
            "\1\7\3\uffff\1\5\1\6\10\uffff\1\4\4\uffff\1\4\12\uffff\1\3\14"+
            "\uffff\1\10\63\uffff\1\11",
            "\1\7\3\uffff\1\5\1\6\10\uffff\1\4\4\uffff\1\4\12\uffff\1\3\14"+
            "\uffff\1\10\63\uffff\1\11",
            "\1\12",
            "\1\4\4\uffff\1\4\12\uffff\1\3",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\4\4\uffff\1\4\12\uffff\1"+
            "\3\14\uffff\1\10\63\uffff\1\11",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\4\4\uffff\1\4\12\uffff\1"+
            "\3\14\uffff\1\10\63\uffff\1\11",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\4\4\uffff\1\4\12\uffff\1"+
            "\3\14\uffff\1\10\63\uffff\1\11",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\4\4\uffff\1\4\12\uffff\1"+
            "\3\14\uffff\1\10\63\uffff\1\11"
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "1609:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )";
        }
    }
    static final String DFA32_eotS =
        "\33\uffff";
    static final String DFA32_eofS =
        "\33\uffff";
    static final String DFA32_minS =
        "\1\4\1\uffff\1\22\2\4\2\uffff\4\4\1\22\12\4\1\22\4\4";
    static final String DFA32_maxS =
        "\1\42\1\uffff\1\47\1\4\1\143\2\uffff\3\143\1\4\2\47\10\143\1\4\1"+
        "\47\4\143";
    static final String DFA32_acceptS =
        "\1\uffff\1\1\3\uffff\1\2\1\3\24\uffff";
    static final String DFA32_specialS =
        "\33\uffff}>";
    static final String[] DFA32_transitionS = {
            "\1\4\1\2\33\uffff\1\1\1\3",
            "",
            "\1\6\4\uffff\1\6\17\uffff\1\5",
            "\1\4",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\6\4\uffff\1\6\12\uffff\1\14"+
            "\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "",
            "",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\6\4\uffff\1\6\12\uffff\1\14"+
            "\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\6\4\uffff\1\6\12\uffff\1\14"+
            "\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\6\4\uffff\1\6\12\uffff\1\14"+
            "\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\15",
            "\1\6\4\uffff\1\6\12\uffff\1\14\4\uffff\1\5",
            "\1\16\15\uffff\1\6\4\uffff\1\6\17\uffff\1\5",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\12\63\uffff\1\13",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\27",
            "\1\6\4\uffff\1\6\12\uffff\1\14\4\uffff\1\5",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\6\4\uffff\1\6\12\uffff\1"+
            "\14\4\uffff\1\5\7\uffff\1\25\63\uffff\1\26"
    };

    static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
    static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
    static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
    static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
    static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
    static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
    static final short[][] DFA32_transition;

    static {
        int numStates = DFA32_transitionS.length;
        DFA32_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
        }
    }

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = DFA32_eot;
            this.eof = DFA32_eof;
            this.min = DFA32_min;
            this.max = DFA32_max;
            this.accept = DFA32_accept;
            this.special = DFA32_special;
            this.transition = DFA32_transition;
        }
        public String getDescription() {
            return "1738:1: (this_FilteredPathVector_0= ruleFilteredPathVector | this_BasePathVector_1= ruleBasePathVector | this_UnbasedPathVector_2= ruleUnbasedPathVector )";
        }
    }
    static final String DFA33_eotS =
        "\33\uffff";
    static final String DFA33_eofS =
        "\33\uffff";
    static final String DFA33_minS =
        "\1\4\1\22\2\4\3\uffff\4\4\1\22\12\4\1\22\4\4";
    static final String DFA33_maxS =
        "\1\42\1\47\1\4\1\143\3\uffff\3\143\1\4\2\47\10\143\1\4\1\47\4\143";
    static final String DFA33_acceptS =
        "\4\uffff\1\3\1\2\1\1\24\uffff";
    static final String DFA33_specialS =
        "\33\uffff}>";
    static final String[] DFA33_transitionS = {
            "\1\3\1\1\22\uffff\1\4\11\uffff\1\2",
            "\1\5\4\uffff\1\5\17\uffff\1\6",
            "\1\3",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\5\4\uffff\1\5\12\uffff\1\14"+
            "\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "",
            "",
            "",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\5\4\uffff\1\5\12\uffff\1\14"+
            "\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\5\4\uffff\1\5\12\uffff\1\14"+
            "\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\11\3\uffff\1\7\1\10\10\uffff\1\5\4\uffff\1\5\12\uffff\1\14"+
            "\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\15",
            "\1\5\4\uffff\1\5\12\uffff\1\14\4\uffff\1\6",
            "\1\16\15\uffff\1\5\4\uffff\1\5\17\uffff\1\6",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\21\3\uffff\1\17\1\20\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\12\63\uffff\1\13",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\24\3\uffff\1\22\1\23\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\27",
            "\1\5\4\uffff\1\5\12\uffff\1\14\4\uffff\1\6",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26",
            "\1\32\3\uffff\1\30\1\31\10\uffff\1\5\4\uffff\1\5\12\uffff\1"+
            "\14\4\uffff\1\6\7\uffff\1\25\63\uffff\1\26"
    };

    static final short[] DFA33_eot = DFA.unpackEncodedString(DFA33_eotS);
    static final short[] DFA33_eof = DFA.unpackEncodedString(DFA33_eofS);
    static final char[] DFA33_min = DFA.unpackEncodedStringToUnsignedChars(DFA33_minS);
    static final char[] DFA33_max = DFA.unpackEncodedStringToUnsignedChars(DFA33_maxS);
    static final short[] DFA33_accept = DFA.unpackEncodedString(DFA33_acceptS);
    static final short[] DFA33_special = DFA.unpackEncodedString(DFA33_specialS);
    static final short[][] DFA33_transition;

    static {
        int numStates = DFA33_transitionS.length;
        DFA33_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA33_transition[i] = DFA.unpackEncodedString(DFA33_transitionS[i]);
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = DFA33_eot;
            this.eof = DFA33_eof;
            this.min = DFA33_min;
            this.max = DFA33_max;
            this.accept = DFA33_accept;
            this.special = DFA33_special;
            this.transition = DFA33_transition;
        }
        public String getDescription() {
            return "1815:16: ( ruleBasePathVector | ruleUnbasedPathVector | ruleCompoundPathVector )";
        }
    }
    static final String DFA47_eotS =
        "\16\uffff";
    static final String DFA47_eofS =
        "\2\uffff\1\1\1\uffff\3\1\1\uffff\1\1\1\uffff\4\1";
    static final String DFA47_minS =
        "\1\4\1\uffff\1\4\1\uffff\4\4\1\22\1\uffff\4\4";
    static final String DFA47_maxS =
        "\1\30\1\uffff\1\143\1\uffff\3\143\1\4\1\52\1\uffff\4\143";
    static final String DFA47_acceptS =
        "\1\uffff\1\1\1\uffff\1\3\5\uffff\1\2\4\uffff";
    static final String DFA47_specialS =
        "\16\uffff}>";
    static final String[] DFA47_transitionS = {
            "\1\2\1\1\22\uffff\1\3",
            "",
            "\1\6\3\uffff\1\4\1\5\10\uffff\1\1\17\uffff\1\11\7\uffff\1\1"+
            "\4\uffff\1\7\63\uffff\1\10",
            "",
            "\1\6\3\uffff\1\4\1\5\10\uffff\1\1\17\uffff\1\11\7\uffff\1\1"+
            "\4\uffff\1\7\63\uffff\1\10",
            "\1\6\3\uffff\1\4\1\5\10\uffff\1\1\17\uffff\1\11\7\uffff\1\1"+
            "\4\uffff\1\7\63\uffff\1\10",
            "\1\6\3\uffff\1\4\1\5\10\uffff\1\1\17\uffff\1\11\7\uffff\1\1"+
            "\4\uffff\1\7\63\uffff\1\10",
            "\1\12",
            "\1\1\17\uffff\1\11\7\uffff\1\1",
            "",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\1\17\uffff\1\11\7\uffff\1"+
            "\1\4\uffff\1\7\63\uffff\1\10",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\1\17\uffff\1\11\7\uffff\1"+
            "\1\4\uffff\1\7\63\uffff\1\10",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\1\17\uffff\1\11\7\uffff\1"+
            "\1\4\uffff\1\7\63\uffff\1\10",
            "\1\15\3\uffff\1\13\1\14\10\uffff\1\1\17\uffff\1\11\7\uffff\1"+
            "\1\4\uffff\1\7\63\uffff\1\10"
    };

    static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
    static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
    static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
    static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
    static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
    static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
    static final short[][] DFA47_transition;

    static {
        int numStates = DFA47_transitionS.length;
        DFA47_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "2364:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences )";
        }
    }
    static final String DFA50_eotS =
        "\144\uffff";
    static final String DFA50_eofS =
        "\11\uffff\2\20\6\uffff\3\20\1\uffff\1\20\2\uffff\6\20\5\uffff\25"+
        "\20\1\uffff\2\20\51\uffff";
    static final String DFA50_minS =
        "\6\4\1\42\2\4\1\22\5\4\2\uffff\4\4\1\22\2\4\1\22\5\4\1\27\32\4\2"+
        "\22\22\4\1\50\26\4";
    static final String DFA50_maxS =
        "\1\4\4\143\1\4\1\42\1\5\1\143\1\52\4\143\1\63\2\uffff\3\143\1\4"+
        "\1\52\2\12\1\52\4\147\1\143\1\64\26\147\3\143\1\12\2\52\22\147\1"+
        "\64\26\147";
    static final String DFA50_acceptS =
        "\17\uffff\1\1\1\2\123\uffff";
    static final String DFA50_specialS =
        "\144\uffff}>";
    static final String[] DFA50_transitionS = {
            "\1\1",
            "\1\4\3\uffff\1\2\1\3\30\uffff\1\7\14\uffff\1\5\63\uffff\1\6",
            "\1\4\3\uffff\1\2\1\3\30\uffff\1\7\14\uffff\1\5\63\uffff\1\6",
            "\1\4\3\uffff\1\2\1\3\30\uffff\1\7\14\uffff\1\5\63\uffff\1\6",
            "\1\4\3\uffff\1\2\1\3\30\uffff\1\7\14\uffff\1\5\63\uffff\1\6",
            "\1\10",
            "\1\7",
            "\1\12\1\11",
            "\1\15\3\uffff\1\13\1\14\30\uffff\1\7\14\uffff\1\5\63\uffff\1"+
            "\6",
            "\1\20\17\uffff\1\16\2\uffff\1\17\4\uffff\1\20",
            "\1\23\3\uffff\1\21\1\22\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\15\3\uffff\1\13\1\14\30\uffff\1\7\14\uffff\1\5\63\uffff\1"+
            "\6",
            "\1\15\3\uffff\1\13\1\14\30\uffff\1\7\14\uffff\1\5\63\uffff\1"+
            "\6",
            "\1\15\3\uffff\1\13\1\14\30\uffff\1\7\14\uffff\1\5\63\uffff\1"+
            "\6",
            "\1\31\1\30\2\uffff\1\32\1\33\1\34\34\uffff\1\26\13\uffff\1\27",
            "",
            "",
            "\1\23\3\uffff\1\21\1\22\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\23\3\uffff\1\21\1\22\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\23\3\uffff\1\21\1\22\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\35",
            "\1\20\17\uffff\1\16\2\uffff\1\17\4\uffff\1\20",
            "\1\37\1\36\2\uffff\1\40\1\41\1\42",
            "\1\37\1\36\2\uffff\1\40\1\41\1\42",
            "\1\20\22\uffff\1\17\4\uffff\1\20",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\67\3\uffff\1\65\1\66\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\70\20\uffff\1\71\13\uffff\1\72",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\61\3\uffff\1\62\1\63\1\64\7\uffff\1\20\22\uffff\1\17\3\uffff"+
            "\1\53\1\20\3\uffff\1\57\1\43\1\uffff\1\54\30\uffff\1\60\2\uffff"+
            "\1\51\5\uffff\1\52\1\44\1\50\1\45\15\uffff\1\46\1\47\1\55\1"+
            "\56",
            "\1\67\3\uffff\1\65\1\66\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\67\3\uffff\1\65\1\66\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\67\3\uffff\1\65\1\66\10\uffff\1\20\17\uffff\1\16\2\uffff"+
            "\1\17\4\uffff\1\20\4\uffff\1\24\63\uffff\1\25",
            "\1\116\1\115\2\uffff\1\117\1\120\1\121",
            "\1\20\22\uffff\1\17\4\uffff\1\20",
            "\1\20\22\uffff\1\17\4\uffff\1\20",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\111\3\uffff\1\112\1\113\1\114\14\uffff\1\70\20\uffff\1\71"+
            "\1\103\4\uffff\1\107\1\73\1\uffff\1\104\2\uffff\1\72\25\uffff"+
            "\1\110\2\uffff\1\101\5\uffff\1\102\1\74\1\100\1\75\15\uffff"+
            "\1\76\1\77\1\105\1\106",
            "\1\71\13\uffff\1\72",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135",
            "\1\140\3\uffff\1\141\1\142\1\143\35\uffff\1\71\1\132\4\uffff"+
            "\1\136\1\122\1\uffff\1\133\2\uffff\1\72\25\uffff\1\137\2\uffff"+
            "\1\130\5\uffff\1\131\1\123\1\127\1\124\15\uffff\1\125\1\126"+
            "\1\134\1\135"
    };

    static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
    static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
    static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
    static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
    static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
    static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
    static final short[][] DFA50_transition;

    static {
        int numStates = DFA50_transitionS.length;
        DFA50_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
        }
    }

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;
        }
        public String getDescription() {
            return "2456:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )";
        }
    }
    static final String DFA75_eotS =
        "\22\uffff";
    static final String DFA75_eofS =
        "\1\uffff\5\14\1\uffff\3\14\1\uffff\1\14\2\uffff\4\14";
    static final String DFA75_minS =
        "\2\4\4\30\1\uffff\4\4\1\30\2\uffff\4\4";
    static final String DFA75_maxS =
        "\1\62\5\162\1\uffff\3\162\1\4\1\162\2\uffff\4\162";
    static final String DFA75_acceptS =
        "\6\uffff\1\3\5\uffff\1\2\1\1\4\uffff";
    static final String DFA75_specialS =
        "\22\uffff}>";
    static final String[] DFA75_transitionS = {
            "\1\1\1\uffff\1\5\50\uffff\1\2\1\6\1\3\1\4",
            "\1\11\3\uffff\1\7\1\10\16\uffff\1\14\2\uffff\1\14\13\uffff\1"+
            "\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\14\2\uffff\1\14\13\uffff\1\15\1\uffff\1\14\4\uffff\1\14\71"+
            "\uffff\13\14",
            "\1\14\2\uffff\1\14\13\uffff\1\15\1\uffff\1\14\4\uffff\1\14\71"+
            "\uffff\13\14",
            "\1\14\2\uffff\1\14\13\uffff\1\15\1\uffff\1\14\4\uffff\1\14\71"+
            "\uffff\13\14",
            "\1\14\2\uffff\1\14\13\uffff\1\15\1\uffff\1\14\4\uffff\1\14\71"+
            "\uffff\13\14",
            "",
            "\1\11\3\uffff\1\7\1\10\16\uffff\1\14\2\uffff\1\14\13\uffff\1"+
            "\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\11\3\uffff\1\7\1\10\16\uffff\1\14\2\uffff\1\14\13\uffff\1"+
            "\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\11\3\uffff\1\7\1\10\16\uffff\1\14\2\uffff\1\14\13\uffff\1"+
            "\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\16",
            "\1\14\2\uffff\1\14\13\uffff\1\15\1\uffff\1\14\4\uffff\1\14\71"+
            "\uffff\13\14",
            "",
            "",
            "\1\21\3\uffff\1\17\1\20\16\uffff\1\14\2\uffff\1\14\13\uffff"+
            "\1\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\21\3\uffff\1\17\1\20\16\uffff\1\14\2\uffff\1\14\13\uffff"+
            "\1\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\21\3\uffff\1\17\1\20\16\uffff\1\14\2\uffff\1\14\13\uffff"+
            "\1\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14",
            "\1\21\3\uffff\1\17\1\20\16\uffff\1\14\2\uffff\1\14\13\uffff"+
            "\1\15\1\uffff\1\14\4\uffff\1\14\1\12\63\uffff\1\13\4\uffff\13"+
            "\14"
    };

    static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
    static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
    static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
    static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
    static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
    static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
    static final short[][] DFA75_transition;

    static {
        int numStates = DFA75_transitionS.length;
        DFA75_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = DFA75_eot;
            this.eof = DFA75_eof;
            this.min = DFA75_min;
            this.max = DFA75_max;
            this.accept = DFA75_accept;
            this.special = DFA75_special;
            this.transition = DFA75_transition;
        }
        public String getDescription() {
            return "3718:1: (this_DiscriminatingSelector_0= ruleDiscriminatingSelector | this_MultiNodeSelector_1= ruleMultiNodeSelector | this_NodeSelector_2= ruleNodeSelector )";
        }
    }
 

    public static final BitSet FOLLOW_ruleBeeModel_in_entryRuleBeeModel79 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBeeModel89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_ruleBeeModel148 = new BitSet(new long[]{0x0000000080118000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_ruleUnit_in_ruleBeeModel187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_entryRuleImport224 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImport234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_ruleImport280 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_ruleImport303 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleJavaImporter_in_ruleImport329 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_ruleNativeImporter_in_ruleImport343 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_17_in_ruleImport362 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleImport384 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleImport403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJavaImporter_in_entryRuleJavaImporter436 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJavaImporter446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleJavaImporter505 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_19_in_ruleJavaImporter530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNativeImporter_in_entryRuleNativeImporter577 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNativeImporter587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleNativeImporter633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit673 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnit683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleUnit742 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleUnit756 = new BitSet(new long[]{0x0000000001600030L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleUnit790 = new BitSet(new long[]{0x0000000001600000L});
    public static final BitSet FOLLOW_21_in_ruleUnit805 = new BitSet(new long[]{0x0000000000000730L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleUnit839 = new BitSet(new long[]{0x0000000001400000L});
    public static final BitSet FOLLOW_22_in_ruleUnit855 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit889 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_23_in_ruleUnit903 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit937 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_24_in_ruleUnit954 = new BitSet(new long[]{0x00000001FE000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_25_in_ruleUnit964 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_ruleUnit998 = new BitSet(new long[]{0x00000001FE000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_26_in_ruleUnit1015 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleUnit1024 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit1059 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1072 = new BitSet(new long[]{0x0000000208000010L});
    public static final BitSet FOLLOW_27_in_ruleUnit1083 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_26_in_ruleUnit1100 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit1134 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1147 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_28_in_ruleUnit1164 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleUnit1173 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1208 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1221 = new BitSet(new long[]{0x0000000208000010L});
    public static final BitSet FOLLOW_27_in_ruleUnit1232 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_28_in_ruleUnit1249 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1283 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1296 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_29_in_ruleUnit1313 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleUnit1322 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleUnit1331 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1366 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1379 = new BitSet(new long[]{0x0000000208000010L});
    public static final BitSet FOLLOW_27_in_ruleUnit1390 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_29_in_ruleUnit1407 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleUnit1416 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1450 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnit1463 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_30_in_ruleUnit1480 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_ruleUnit1514 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_31_in_ruleUnit1535 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleUnit1544 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit1578 = new BitSet(new long[]{0x0000000008000030L});
    public static final BitSet FOLLOW_27_in_ruleUnit1592 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_31_in_ruleUnit1609 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit1643 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_ruleBuildMethod_in_ruleUnit1688 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_32_in_ruleUnit1708 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleUnit1717 = new BitSet(new long[]{0x0000200008000020L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_ruleUnit1751 = new BitSet(new long[]{0x0000200008000020L});
    public static final BitSet FOLLOW_27_in_ruleUnit1765 = new BitSet(new long[]{0x00000001FC000030L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_27_in_ruleUnit1777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1810 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability1820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleProvidedCapability1855 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleProvidedCapability1889 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability1929 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleProvidedCapability1942 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability1976 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_ruleProvidedCapability1990 = new BitSet(new long[]{0x0000000000000730L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleProvidedCapability2024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2063 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability2073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleRequiredCapability2108 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleRequiredCapability2142 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability2182 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleRequiredCapability2195 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability2229 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_ruleRequiredCapability2243 = new BitSet(new long[]{0x0008008000000730L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleRequiredCapability2277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements2316 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedPropertyStatements2326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedPropertyStatements2373 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleNamedPropertyStatements2416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_entryRuleCompoundPropertyOperation2453 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundPropertyOperation2463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleCompoundPropertyOperation2497 = new BitSet(new long[]{0x0000001A09000080L});
    public static final BitSet FOLLOW_rulePropertyOperation_in_ruleCompoundPropertyOperation2531 = new BitSet(new long[]{0x0000001A09000080L});
    public static final BitSet FOLLOW_27_in_ruleCompoundPropertyOperation2545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyOperation_in_entryRulePropertyOperation2578 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyOperation2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPropertyOperation_in_rulePropertyOperation2635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_rulePropertyOperation2662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_rulePropertyOperation2689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_rulePropertyOperation2716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPropertyOperation_in_entryRuleFilteredPropertyOperation2748 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilteredPropertyOperation2758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleFilteredPropertyOperation2792 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleFilteredPropertyOperation2826 = new BitSet(new long[]{0x0000001801000080L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_ruleFilteredPropertyOperation2856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_ruleFilteredPropertyOperation2870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleFilteredPropertyOperation2884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetPropertyOperation_in_entryRuleSetPropertyOperation2926 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetPropertyOperation2936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleSetPropertyOperation2982 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleSetPropertyOperation3030 = new BitSet(new long[]{0x0000020000000000L,0x0007FF0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleSetPropertyOperation3068 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleSetPropertyOperation3106 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleSetPropertyOperation3119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyOperation_in_entryRuleUnsetPropertyOperation3152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnsetPropertyOperation3162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleUnsetPropertyOperation3196 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleUnsetPropertyOperation3230 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleUnsetPropertyOperation3243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronization_in_entryRuleSynchronization3276 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronization3286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization3345 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleSynchronization3359 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization3393 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_18_in_ruleSynchronization3408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart3442 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronizedPart3453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_ruleSynchronizedPart3501 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_ruleSynchronizedPart3520 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart3542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart3578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_entryRulePathGroup3621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathGroup3631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_rulePathGroup3690 = new BitSet(new long[]{0x0000004600000032L});
    public static final BitSet FOLLOW_38_in_rulePathGroup3705 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_rulePathGroup3739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_entryRulePathVectorElement3778 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathVectorElement3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPathVector_in_rulePathVectorElement3835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_rulePathVectorElement3862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_rulePathVectorElement3889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilteredPathVector_in_entryRuleFilteredPathVector3921 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilteredPathVector3931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleFilteredPathVector3965 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleFilteredPathVector3999 = new BitSet(new long[]{0x0000000401000030L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_ruleFilteredPathVector4029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_ruleFilteredPathVector4043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPathVector_in_ruleFilteredPathVector4057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBasePathVector_in_entryRuleBasePathVector4099 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBasePathVector4109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector4168 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleBasePathVector4181 = new BitSet(new long[]{0x0000010400000030L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector4216 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleBasePathVector4230 = new BitSet(new long[]{0x0000000400000030L});
    public static final BitSet FOLLOW_rulePath_in_ruleBasePathVector4264 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleBasePathVector4281 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleBasePathVector4290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnbasedPathVector_in_entryRuleUnbasedPathVector4323 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnbasedPathVector4333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_ruleUnbasedPathVector4392 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_23_in_ruleUnbasedPathVector4406 = new BitSet(new long[]{0x0000000400000030L});
    public static final BitSet FOLLOW_rulePath_in_ruleUnbasedPathVector4440 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_18_in_ruleUnbasedPathVector4455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundPathVector_in_entryRuleCompoundPathVector4488 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundPathVector4498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleCompoundPathVector4532 = new BitSet(new long[]{0x0000000608000030L});
    public static final BitSet FOLLOW_rulePathVectorElement_in_ruleCompoundPathVector4566 = new BitSet(new long[]{0x0000000608000030L});
    public static final BitSet FOLLOW_27_in_ruleCompoundPathVector4580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_entryRulePath4614 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePath4625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_rulePath4665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rulePath4691 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath4715 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_rulePath4734 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath4756 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_rulePath4777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisite_in_entryRulePrerequisite4818 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisite4828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rulePrerequisite4864 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePrerequisite4898 = new BitSet(new long[]{0x0000000001000030L});
    public static final BitSet FOLLOW_RULE_ID_in_rulePrerequisite4927 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_rulePrerequisite4944 = new BitSet(new long[]{0x0000000001000030L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite4981 = new BitSet(new long[]{0x0000040000040000L});
    public static final BitSet FOLLOW_ruleClosure_in_rulePrerequisite5019 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_rulePrerequisite5035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClosure_in_entryRuleClosure5068 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClosure5078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleClosure5112 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleClosure5121 = new BitSet(new long[]{0x000000004A000000L});
    public static final BitSet FOLLOW_25_in_ruleClosure5131 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleClosure5165 = new BitSet(new long[]{0x0000000048000000L});
    public static final BitSet FOLLOW_30_in_ruleClosure5181 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleClosure5215 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleClosure5230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry5263 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisiteEntry5273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry5320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry5347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry5374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_entryRulePartInSelf5406 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartInSelf5416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_rulePartInSelf5474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart5510 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCapabilityReferencedPart5520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart5580 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleCapabilityReferencedPart5593 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart5627 = new BitSet(new long[]{0x0000002400000000L});
    public static final BitSet FOLLOW_34_in_ruleCapabilityReferencedPart5641 = new BitSet(new long[]{0x0008008000000730L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart5675 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleCapabilityReferencedPart5690 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rulePartName_in_ruleCapabilityReferencedPart5724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart5770 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleCapabilityReferencedPart5783 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart5817 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_ruleCapabilityReferencedPart5831 = new BitSet(new long[]{0x0008008000000730L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart5865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences5905 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundReferences5915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleCompoundReferences5949 = new BitSet(new long[]{0x0000000209000030L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleCompoundReferences5983 = new BitSet(new long[]{0x0000000209000030L});
    public static final BitSet FOLLOW_27_in_ruleCompoundReferences5997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBuildMethod_in_entryRuleBuildMethod6030 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBuildMethod6040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleBuildMethod6099 = new BitSet(new long[]{0x0000000080000030L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleBuildMethod6138 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rulePartName_in_ruleBuildMethod6177 = new BitSet(new long[]{0x0060000005000000L});
    public static final BitSet FOLLOW_26_in_ruleBuildMethod6191 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleBuildMethod6225 = new BitSet(new long[]{0x0060000001800000L});
    public static final BitSet FOLLOW_23_in_ruleBuildMethod6239 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleBuildMethod6273 = new BitSet(new long[]{0x0060000001800000L});
    public static final BitSet FOLLOW_rulePreCondition_in_ruleBuildMethod6315 = new BitSet(new long[]{0x0040000001000000L});
    public static final BitSet FOLLOW_rulePostCondition_in_ruleBuildMethod6354 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleBuildMethod6368 = new BitSet(new long[]{0x4F081C804B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_25_in_ruleBuildMethod6378 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundPropertyOperation_in_ruleBuildMethod6412 = new BitSet(new long[]{0x4F081C804B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleAdvice_in_ruleBuildMethod6452 = new BitSet(new long[]{0x4F081C800B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleGroup_in_ruleBuildMethod6491 = new BitSet(new long[]{0x4F081C800B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleLayout_in_ruleBuildMethod6530 = new BitSet(new long[]{0x4F081C800B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleBuildMethod6569 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleBuildMethod6583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter6616 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParameter6626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParameter6684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroupKeyword_in_entryRuleGroupKeyword6721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroupKeyword6732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleGroupKeyword6769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayoutKeyword_in_entryRuleLayoutKeyword6807 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLayoutKeyword6818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_ruleLayoutKeyword6855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayout_in_entryRuleLayout6892 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLayout6902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayoutKeyword_in_ruleLayout6936 = new BitSet(new long[]{0x0040000001000000L});
    public static final BitSet FOLLOW_rulePostCondition_in_ruleLayout6962 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleLayout6976 = new BitSet(new long[]{0x0000004608000030L});
    public static final BitSet FOLLOW_rulePathGroup_in_ruleLayout7010 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleLayout7024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroup_in_entryRuleGroup7057 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroup7067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroupKeyword_in_ruleGroup7101 = new BitSet(new long[]{0x0060000001000000L});
    public static final BitSet FOLLOW_rulePreCondition_in_ruleGroup7127 = new BitSet(new long[]{0x0040000001000000L});
    public static final BitSet FOLLOW_rulePostCondition_in_ruleGroup7166 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleGroup7180 = new BitSet(new long[]{0x0000000209000030L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleGroup7214 = new BitSet(new long[]{0x0000000209000030L});
    public static final BitSet FOLLOW_27_in_ruleGroup7228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration7261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRepositoryConfiguration7271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_ruleRepositoryConfiguration7331 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_45_in_ruleRepositoryConfiguration7351 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration7385 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration7425 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleRepositoryConfiguration7439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_entryRuleURI7473 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleURI7484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleURI7523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice7565 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedAdvice7575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedAdvice7622 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice7665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvice_in_entryRuleAdvice7702 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvice7712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleAdvice7746 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdvice7768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice7800 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundAdvice7810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleCompoundAdvice7844 = new BitSet(new long[]{0x0007C00008000050L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice7879 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleCompoundAdvice7892 = new BitSet(new long[]{0x0007C00008000050L});
    public static final BitSet FOLLOW_27_in_ruleCompoundAdvice7903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement7936 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdviceStatement7946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleAdviceStatement8005 = new BitSet(new long[]{0x0000020001000000L,0x0007FF0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAdviceStatement8045 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdviceStatement8083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement8128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath8166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePath8176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleAdvicePath8222 = new BitSet(new long[]{0x0007800000000050L});
    public static final BitSet FOLLOW_ruleSelector_in_ruleAdvicePath8270 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_46_in_ruleAdvicePath8284 = new BitSet(new long[]{0x0007800000000050L});
    public static final BitSet FOLLOW_ruleSelector_in_ruleAdvicePath8318 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_ruleSelector_in_entryRuleSelector8357 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSelector8367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDiscriminatingSelector_in_ruleSelector8414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_ruleSelector8441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeSelector_in_ruleSelector8468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_entryRuleMultiNodeSelector8500 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiNodeSelector8510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNameSelector_in_ruleMultiNodeSelector8557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisSelector_in_ruleMultiNodeSelector8584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChildrenSelector_in_ruleMultiNodeSelector8611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAncestorSelector_in_ruleMultiNodeSelector8638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpSelector_in_ruleMultiNodeSelector8665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDiscriminatingSelector_in_entryRuleDiscriminatingSelector8697 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDiscriminatingSelector8707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiNodeSelector_in_ruleDiscriminatingSelector8766 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleDiscriminatingSelector8779 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleDiscriminatingSelector8813 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleDiscriminatingSelector8826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeSelector_in_entryRuleNodeSelector8859 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNodeSelector8869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParentSelector_in_ruleNodeSelector8915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNameSelector_in_entryRuleNameSelector8946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNameSelector8956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleNameSelector9014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisSelector_in_entryRuleThisSelector9050 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThisSelector9060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleThisSelector9103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParentSelector_in_entryRuleParentSelector9136 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParentSelector9146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleParentSelector9189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChildrenSelector_in_entryRuleChildrenSelector9222 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChildrenSelector9232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleChildrenSelector9275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAncestorSelector_in_entryRuleAncestorSelector9308 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAncestorSelector9318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_ruleAncestorSelector9361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpSelector_in_entryRuleRegexpSelector9394 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpSelector9404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpSelector9460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilter_in_entryRuleFilter9503 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilter9513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleFilter9547 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFilter9581 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleFilter9594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePreCondition_in_entryRulePreCondition9627 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePreCondition9637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rulePreCondition9671 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_rulePreCondition9680 = new BitSet(new long[]{0x0080000008000000L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePreCondition9714 = new BitSet(new long[]{0x0080000008000000L});
    public static final BitSet FOLLOW_27_in_rulePreCondition9728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostCondition_in_entryRulePostCondition9761 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostCondition9771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rulePostCondition9805 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_rulePostCondition9814 = new BitSet(new long[]{0x0080000008000000L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePostCondition9848 = new BitSet(new long[]{0x0080000008000000L});
    public static final BitSet FOLLOW_27_in_rulePostCondition9862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression9895 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssertionExpression9905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_ruleAssertionExpression9939 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAssertionExpression9973 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_23_in_ruleAssertionExpression9987 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleAssertionExpression10009 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleAssertionExpression10028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement10061 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement10071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_ruleStatement10118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_ruleStatement10145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_ruleStatement10172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_ruleStatement10199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_ruleStatement10226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleStatement10253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleStatement10282 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleStatement10292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_ruleStatement10321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_ruleStatement10348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_ruleStatement10375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_ruleStatement10402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_ruleStatement10429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_ruleStatement10456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_ruleStatement10483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_ruleStatement10510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement10542 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBreakStatement10552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_ruleBreakStatement10595 = new BitSet(new long[]{0x0000000000040010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleBreakStatement10617 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleBreakStatement10635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement10668 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleContinueStatement10678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleContinueStatement10721 = new BitSet(new long[]{0x0000000000040010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleContinueStatement10743 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleContinueStatement10761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement10794 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundStatement10804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleCompoundStatement10838 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCompoundStatement10872 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleCompoundStatement10885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatements_in_entryRuleStatements10918 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatements10928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleStatements10986 = new BitSet(new long[]{0x4F081C80030407F2L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement11023 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWhileStatement11033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleWhileStatement11067 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleWhileStatement11076 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWhileStatement11110 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleWhileStatement11123 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWhileStatement11157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement11194 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitchStatement11204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleSwitchStatement11238 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleSwitchStatement11247 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00204L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleSwitchStatement11281 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleSwitchStatement11294 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleSwitchStatement11303 = new BitSet(new long[]{0x3000000008000000L});
    public static final BitSet FOLLOW_ruleCase_in_ruleSwitchStatement11337 = new BitSet(new long[]{0x3000000008000000L});
    public static final BitSet FOLLOW_60_in_ruleSwitchStatement11352 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleSwitchStatement11361 = new BitSet(new long[]{0x4F081C800B0407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleSwitchStatement11395 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleSwitchStatement11411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCase_in_entryRuleCase11444 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCase11454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleCase11488 = new BitSet(new long[]{0x0000000000000720L,0x00000007C0000000L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleCase11522 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleCase11535 = new BitSet(new long[]{0x4F081C80030407F2L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCase11569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_entryRuleForStatement11607 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleForStatement11617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleForStatement11660 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleForStatement11669 = new BitSet(new long[]{0x80081880030407F0L,0x00000007FFD00204L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_ruleForStatement11703 = new BitSet(new long[]{0x8000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleForStatement11731 = new BitSet(new long[]{0x00081880030407F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement11778 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleForStatement11792 = new BitSet(new long[]{0x00181880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpressionList_in_ruleForStatement11826 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_63_in_ruleForStatement11848 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement11882 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleForStatement11897 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleForStatement11931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoWhileStatement_in_entryRuleDoWhileStatement11968 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDoWhileStatement11978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleDoWhileStatement12012 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleDoWhileStatement12046 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_ruleDoWhileStatement12059 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleDoWhileStatement12068 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleDoWhileStatement12102 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleDoWhileStatement12115 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleDoWhileStatement12124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement12157 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStatement12167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleReturnStatement12201 = new BitSet(new long[]{0x00081880030407F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleReturnStatement12235 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleReturnStatement12249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionStatement_in_entryRuleFunctionStatement12282 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionStatement12292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleFunctionStatement12326 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement12348 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleFunctionStatement12365 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement12388 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleFunctionStatement12406 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFunctionStatement12428 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleFunctionStatement12448 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleFunctionStatement12457 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleFunctionStatement12491 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleFunctionStatement12504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_entryRuleIfStatement12537 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfStatement12547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_ruleIfStatement12581 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleIfStatement12590 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleIfStatement12624 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleIfStatement12637 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement12671 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_ruleIfStatement12685 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleIfStatement12719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelStatement_in_entryRuleLabelStatement12758 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabelStatement12768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLabelStatement12815 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleLabelStatement12832 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleLabelStatement12866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThrowStatement_in_entryRuleThrowStatement12903 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThrowStatement12913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_ruleThrowStatement12947 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleThrowStatement12981 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleThrowStatement12994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTryCatchStatement_in_entryRuleTryCatchStatement13027 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTryCatchStatement13037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleTryCatchStatement13071 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleTryCatchStatement13105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_ruleTryCatchStatement13145 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement13183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_ruleTryCatchStatement13229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCatchBlock_in_entryRuleCatchBlock13267 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCatchBlock13277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleCatchBlock13311 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleCatchBlock13320 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleCatchBlock13342 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleCatchBlock13359 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleCatchBlock13393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFinallyBlock_in_entryRuleFinallyBlock13430 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFinallyBlock13440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleFinallyBlock13474 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleFinallyBlock13508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWithStatement_in_entryRuleWithStatement13545 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWithStatement13555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleWithStatement13589 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleWithStatement13598 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleWithStatement13632 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleWithStatement13645 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWithStatement13679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList13716 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpressionList13726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList13785 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_23_in_ruleVarExpressionList13799 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00204L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList13833 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_ruleExpressionList_in_entryRuleExpressionList13872 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpressionList13882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList13941 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_23_in_ruleExpressionList13955 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList13989 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_entryRuleVarExpression14028 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpression14038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression14085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleVarExpression14109 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVarExpression14131 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_41_in_ruleVarExpression14149 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression14183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression14223 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression14233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleExpression14279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression14310 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression14320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleAssignmentExpression14367 = new BitSet(new long[]{0x0000020000000002L,0x0007FF0000000000L});
    public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression14410 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression14448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression14487 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainedExpression14497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleChainedExpression14543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_entryRuleIfExpression14574 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfExpression14584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_ruleIfExpression14631 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_ruleIfExpression14649 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression14683 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleIfExpression14696 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression14730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression14769 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression14779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression14826 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_ruleOrExpression14856 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression14903 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression14942 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression14952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression14999 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_ruleAndExpression15029 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_ruleAndExpression15076 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleBitwiseExpression_in_entryRuleBitwiseExpression15115 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBitwiseExpression15125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression15172 = new BitSet(new long[]{0x0000000000000002L,0x000000000000E000L});
    public static final BitSet FOLLOW_77_in_ruleBitwiseExpression15203 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_78_in_ruleBitwiseExpression15219 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_79_in_ruleBitwiseExpression15235 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleBitwiseExpression15284 = new BitSet(new long[]{0x0000000000000002L,0x000000000000E000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression15323 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression15333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_ruleRelationalExpression15380 = new BitSet(new long[]{0x0000000000000002L,0x07F800C000000000L});
    public static final BitSet FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression15423 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_ruleRelationalExpression15461 = new BitSet(new long[]{0x0000000000000002L,0x07F800C000000000L});
    public static final BitSet FOLLOW_ruleShiftExpression_in_entryRuleShiftExpression15500 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleShiftExpression15510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression15557 = new BitSet(new long[]{0x0000000000000002L,0x0000000000070000L});
    public static final BitSet FOLLOW_80_in_ruleShiftExpression15588 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_81_in_ruleShiftExpression15604 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_82_in_ruleShiftExpression15620 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleShiftExpression15669 = new BitSet(new long[]{0x0000000000000002L,0x0000000000070000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression15708 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression15718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15765 = new BitSet(new long[]{0x0000000000000002L,0x0000000000180000L});
    public static final BitSet FOLLOW_83_in_ruleAdditiveExpression15796 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_84_in_ruleAdditiveExpression15812 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15861 = new BitSet(new long[]{0x0000000000000002L,0x0000000000180000L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression15900 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression15910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression15957 = new BitSet(new long[]{0x0002000400000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_49_in_ruleMultiplicativeExpression15988 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_34_in_ruleMultiplicativeExpression16004 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_85_in_ruleMultiplicativeExpression16020 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression16069 = new BitSet(new long[]{0x0002000400000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_ruleSetExpression_in_entryRuleSetExpression16108 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetExpression16118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression16165 = new BitSet(new long[]{0x0000000000000002L,0xF800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleSetOperator_in_ruleSetExpression16208 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression16246 = new BitSet(new long[]{0x0000000000000002L,0xF800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression16285 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression16295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression16342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression16369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression16401 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression16411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_ruleUnaryExpression16467 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_84_in_ruleUnaryExpression16483 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_87_in_ruleUnaryExpression16499 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_88_in_ruleUnaryExpression16515 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_89_in_ruleUnaryExpression16531 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_90_in_ruleUnaryExpression16547 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_91_in_ruleUnaryExpression16563 = new BitSet(new long[]{0x00081880030007F0L,0x00000007F0000004L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryExpression16612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression16649 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression16659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression16706 = new BitSet(new long[]{0x0000000000000002L,0x0000000001800000L});
    public static final BitSet FOLLOW_88_in_rulePostopExpression16737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_rulePostopExpression16753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression16803 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression16813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_ruleInfixExpression16860 = new BitSet(new long[]{0x0000808000000002L});
    public static final BitSet FOLLOW_47_in_ruleInfixExpression16879 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression16901 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleInfixExpression16918 = new BitSet(new long[]{0x00181880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression16953 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleInfixExpression16967 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression17001 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleInfixExpression17018 = new BitSet(new long[]{0x0000808000000002L});
    public static final BitSet FOLLOW_39_in_ruleInfixExpression17044 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression17078 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleInfixExpression17091 = new BitSet(new long[]{0x0008808000000002L});
    public static final BitSet FOLLOW_51_in_ruleInfixExpression17101 = new BitSet(new long[]{0x00181880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression17136 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleInfixExpression17150 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression17184 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleInfixExpression17201 = new BitSet(new long[]{0x0000808000000002L});
    public static final BitSet FOLLOW_47_in_ruleInfixExpression17229 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression17251 = new BitSet(new long[]{0x0000808000000002L});
    public static final BitSet FOLLOW_ruleCallExpression_in_entryRuleCallExpression17295 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCallExpression17305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleCallExpression17352 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_51_in_ruleCallExpression17370 = new BitSet(new long[]{0x00181880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression17405 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleCallExpression17419 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleCallExpression17453 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleCallExpression17470 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression17505 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression17515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression17562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression17589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_rulePrimaryExpression17616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_rulePrimaryExpression17643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression17670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression17697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue17729 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue17739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyValue17795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_entryRuleVariableValue17836 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableValue17846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVariableValue17902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables17943 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleKeywordVariables17953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroupKeyword_in_ruleKeywordVariables18013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayoutKeyword_in_ruleKeywordVariables18027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleKeywordVariables18037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression18085 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstructorCallExpression18095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ruleConstructorCallExpression18150 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleConstructorCallExpression18197 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleConstructorCallExpression18210 = new BitSet(new long[]{0x00181880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression18245 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleConstructorCallExpression18259 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleConstructorCallExpression18293 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleConstructorCallExpression18310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral18343 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteral18353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral18400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_ruleLiteral18427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_ruleLiteral18454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_ruleLiteral18481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_ruleLiteral18508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralArray_in_entryRuleLiteralArray18540 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralArray18550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleLiteralArray18593 = new BitSet(new long[]{0x00081980030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray18628 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleLiteralArray18642 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleLiteralArray18676 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleLiteralArray18693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralObject_in_entryRuleLiteralObject18726 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralObject18736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleLiteralObject18779 = new BitSet(new long[]{0x00000000080000B0L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject18814 = new BitSet(new long[]{0x0000000008800000L});
    public static final BitSet FOLLOW_23_in_ruleLiteralObject18828 = new BitSet(new long[]{0x00000000000000B0L});
    public static final BitSet FOLLOW_ruleFeature_in_ruleLiteralObject18862 = new BitSet(new long[]{0x0000000008800000L});
    public static final BitSet FOLLOW_27_in_ruleLiteralObject18879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction18912 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralFunction18922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleLiteralFunction18966 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_93_in_ruleLiteralFunction18981 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleLiteralFunction18991 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction19014 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_23_in_ruleLiteralFunction19032 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLiteralFunction19054 = new BitSet(new long[]{0x0010000000800000L});
    public static final BitSet FOLLOW_52_in_ruleLiteralFunction19074 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleLiteralFunction19083 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatements_in_ruleLiteralFunction19117 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleLiteralFunction19130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeature_in_entryRuleFeature19163 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeature19173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFeature19230 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_RULE_PID_in_ruleFeature19242 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFeature19254 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleFeature19273 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFeature19307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral19344 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral19354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral19401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral19428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_ruleValueLiteral19455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUndefinedLiteral_in_ruleValueLiteral19482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_ruleValueLiteral19509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_ruleValueLiteral19536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQueryLiteral_in_ruleValueLiteral19563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral19595 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBooleanLiteral19605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_ruleBooleanLiteral19661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_ruleBooleanLiteral19677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral19725 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIntegerLiteral19735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleIntegerLiteral19792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleIntegerLiteral19829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral19870 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNullLiteral19880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleNullLiteral19935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUndefinedLiteral_in_entryRuleUndefinedLiteral19981 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUndefinedLiteral19991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_ruleUndefinedLiteral20046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral20092 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteral20102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringLiteral20158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral20199 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRealLiteral20209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealValue_in_ruleRealLiteral20277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealValue_in_entryRuleRealValue20315 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRealValue20326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleRealValue20365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral20407 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpLiteral20417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpLiteral20473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQueryLiteral_in_entryRuleQueryLiteral20514 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQueryLiteral20524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_ruleQueryLiteral20567 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleQueryLiteral20576 = new BitSet(new long[]{0x0007C00000000050L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleQueryLiteral20610 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleQueryLiteral20623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression20656 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression20666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleParanthesizedExpression20700 = new BitSet(new long[]{0x00081880030007F0L,0x00000007FFD00004L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression20722 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleParanthesizedExpression20730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersion_in_entryRuleVersion20763 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersion20773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVersion20820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_ruleVersion20868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersionRange_in_entryRuleVersionRange20905 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersionRange20915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleVersionRange20963 = new BitSet(new long[]{0x0000000000000730L});
    public static final BitSet FOLLOW_51_in_ruleVersionRange20979 = new BitSet(new long[]{0x0000000000000730L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange21028 = new BitSet(new long[]{0x0010010000800000L});
    public static final BitSet FOLLOW_23_in_ruleVersionRange21042 = new BitSet(new long[]{0x0000000000000730L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange21076 = new BitSet(new long[]{0x0010010000000000L});
    public static final BitSet FOLLOW_40_in_ruleVersionRange21104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_ruleVersionRange21120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange21176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName21214 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName21225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName21265 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName21286 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName21312 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName21338 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_47_in_ruleQualifiedName21359 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName21374 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName21395 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName21421 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName21447 = new BitSet(new long[]{0x0000800000000312L,0x0000000800000000L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName21478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG21522 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleHIDDENBUG21533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_ruleHIDDENBUG21571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyName_in_entryRulePropertyName21613 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyName21624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyName21663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName21706 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEscapedQualifiedName21717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName21757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName21790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName21834 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterfaceName21845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleInterfaceName21891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_entryRuleCompoundName21934 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundName21945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName21992 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleCompoundName22010 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName22032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnitName_in_entryRuleUnitName22076 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnitName22087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName22133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_entryRulePartName22176 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartName22187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_rulePartName22233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSeparator_in_entryRuleSeparator22276 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSeparator22287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleSeparator22325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_ruleSeparator22344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_ruleSeparator22363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_ruleSeparator22382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_ruleSeparator22401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_ruleSeparator22420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleSeparator22439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_ruleSeparator22458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleSeparator22477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleSeparator22496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_ruleSeparator22515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_ruleSeparator22534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleSeparator22553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_ruleSeparator22572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym22611 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAlfanumSym22622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym22663 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym22689 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym22715 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym22741 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_ruleSeparator_in_ruleAlfanumSym22770 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym22796 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym22822 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym22848 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym22874 = new BitSet(new long[]{0x0002C20000000712L,0x000000F000782400L});
    public static final BitSet FOLLOW_41_in_ruleAssignmentOperator22933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_ruleAssignmentOperator22948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_ruleAssignmentOperator22963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_ruleAssignmentOperator22978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_ruleAssignmentOperator22993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_ruleAssignmentOperator23008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_ruleAssignmentOperator23023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_ruleAssignmentOperator23038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_ruleAssignmentOperator23053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_ruleAssignmentOperator23068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_ruleAssignmentOperator23083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_114_in_ruleAssignmentOperator23098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_ruleRelationalOperator23141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_ruleRelationalOperator23156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_ruleRelationalOperator23171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_ruleRelationalOperator23186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_ruleRelationalOperator23201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_ruleRelationalOperator23216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_ruleRelationalOperator23231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_ruleRelationalOperator23246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_ruleRelationalOperator23261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_122_in_ruleRelationalOperator23276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_ruleSetOperator23319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_ruleSetOperator23334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_125_in_ruleSetOperator23349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_126_in_ruleSetOperator23364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_ruleSetOperator23379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_128_in_ruleSetOperator23394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_ruleVisibility23437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_130_in_ruleVisibility23452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_131_in_ruleExecutionMode23495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleExecutionMode23510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_synpred807010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_synpred10510253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_synpred10710282 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_synpred10710292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_synpred12812685 = new BitSet(new long[]{0x4F081C80030407F0L,0x00000007FFD0026FL});
    public static final BitSet FOLLOW_ruleStatement_in_synpred12812719 = new BitSet(new long[]{0x0000000000000002L});

}