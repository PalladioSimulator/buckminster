package org.eclipse.b3.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.b3.services.BeeLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

public class InternalBeeLangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_HEX", "RULE_PID", "RULE_STRING", "RULE_REAL", "RULE_REGEX", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'.'", "'~~~~~'", "'/'", "'-'", "'!'", "'@'", "'$'", "'%'", "'&'", "'+'", "'='", "'*'", "'<'", "'>'", "':'", "'?'", "'['", "'('", "','", "']'", "')'", "'import'", "'.*'", "';'", "'unit'", "'version'", "'implements'", "'{'", "'properties'", "'provides'", "'}'", "'requires'", "'meta'", "'advice'", "'sequential'", "'repositories'", "'when'", "'immutable'", "'+='", "'-='", "'*='", "'/='", "'unset'", "'#'", "'artifacts'", "'annotations'", "'expr'", "'group'", "'hidden'", "'with'", "'action'", "'layout'", "'resolver'", "'..'", "'precondition'", "'postcondition'", "'assert'", "'break'", "'continue'", "'while'", "'switch'", "'default'", "'case'", "'for'", "'return'", "'var'", "'%='", "'||'", "'&&'", "'~='", "'=='", "'!='", "'>='", "'<='", "'++'", "'--'", "'true'", "'false'", "'null'", "'public'", "'private'", "'parallel'"
    };
    public static final int RULE_ML_COMMENT=11;
    public static final int RULE_ID=4;
    public static final int RULE_WS=13;
    public static final int RULE_PID=7;
    public static final int EOF=-1;
    public static final int RULE_INT=5;
    public static final int RULE_REGEX=10;
    public static final int RULE_STRING=8;
    public static final int RULE_REAL=9;
    public static final int RULE_ANY_OTHER=14;
    public static final int RULE_HEX=6;
    public static final int RULE_SL_COMMENT=12;

        public InternalBeeLangParser(TokenStream input) {
            super(input);
        }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g"; }


     
     	private BeeLangGrammarAccess grammarAccess;
     	
        public InternalBeeLangParser(TokenStream input, IAstFactory factory, BeeLangGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/b3/parser/antlr/internal/InternalBeeLang.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "BeeModel";	
       	} 



    // $ANTLR start entryRuleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:1: entryRuleBeeModel returns [EObject current=null] : iv_ruleBeeModel= ruleBeeModel EOF ;
    public final EObject entryRuleBeeModel() throws RecognitionException {
        EObject current = null;
        int entryRuleBeeModel_StartIndex = input.index();
        EObject iv_ruleBeeModel = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:74:50: (iv_ruleBeeModel= ruleBeeModel EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:75:2: iv_ruleBeeModel= ruleBeeModel EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBeeModelRule(), currentNode); 
            pushFollow(FOLLOW_ruleBeeModel_in_entryRuleBeeModel80);
            iv_ruleBeeModel=ruleBeeModel();
            _fsp--;

             current =iv_ruleBeeModel; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBeeModel90); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBeeModel


    // $ANTLR start ruleBeeModel
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:82:1: ruleBeeModel returns [EObject current=null] : ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) ;
    public final EObject ruleBeeModel() throws RecognitionException {
        EObject current = null;
        int ruleBeeModel_StartIndex = input.index();
        EObject lv_imports_0 = null;

        EObject lv_body_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:87:6: ( ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:1: ( (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )* (lv_body_1= ruleUnit )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:88:2: (lv_imports_0= ruleImport )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==36) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:91:6: lv_imports_0= ruleImport
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getImportsImportParserRuleCall_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleImport_in_ruleBeeModel149);
            	    lv_imports_0=ruleImport();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "imports", lv_imports_0, "Import", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:109:3: (lv_body_1= ruleUnit )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:112:6: lv_body_1= ruleUnit
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getBeeModelAccess().getBodyUnitParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleUnit_in_ruleBeeModel188);
            lv_body_1=ruleUnit();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getBeeModelRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_1, "Unit", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBeeModel


    // $ANTLR start entryRuleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;
        int entryRuleQualifiedName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:137:54: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:138:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getQualifiedNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName226);
            iv_ruleQualifiedName=ruleQualifiedName();
            _fsp--;

             current =iv_ruleQualifiedName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName237); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleQualifiedName


    // $ANTLR start ruleQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:145:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleQualifiedName_StartIndex = input.index();
        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;
        AntlrDatatypeRuleToken this_HIDDENBUG_9 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:153:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:154:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* this_HIDDENBUG_9= ruleHIDDENBUG
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName277); 

            		current.merge(this_ID_0);
                
             
                createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop2:
            do {
                int alt2=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt2=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt2=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt2=3;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:161:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName298); 

            	    		current.merge(this_INT_1);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_1_0(), null); 
            	        

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:169:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName324); 

            	    		current.merge(this_HEX_2);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_1_1(), null); 
            	        

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:177:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName350); 

            	    		current.merge(this_ID_3);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_2(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:184:3: (kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==15) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:185:2: kw= '.' this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,15,FOLLOW_15_in_ruleQualifiedName371); 

            	            current.merge(kw);
            	            createLeafNode(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0(), null); 
            	        
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName386); 

            	    		current.merge(this_ID_5);
            	        
            	     
            	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop3:
            	    do {
            	        int alt3=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt3=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt3=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt3=3;
            	            }
            	            break;

            	        }

            	        switch (alt3) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:197:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleQualifiedName407); 

            	    	    		current.merge(this_INT_6);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	        

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:205:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleQualifiedName433); 

            	    	    		current.merge(this_HEX_7);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:213:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQualifiedName459); 

            	    	    		current.merge(this_ID_8);
            	    	        
            	    	     
            	    	        createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

             
                    currentNode=createCompositeNode(grammarAccess.getQualifiedNameAccess().getHIDDENBUGParserRuleCall_3(), currentNode); 
                
            pushFollow(FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName490);
            this_HIDDENBUG_9=ruleHIDDENBUG();
            _fsp--;


            		current.merge(this_HIDDENBUG_9);
                
             
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleQualifiedName


    // $ANTLR start entryRuleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:1: entryRuleHIDDENBUG returns [String current=null] : iv_ruleHIDDENBUG= ruleHIDDENBUG EOF ;
    public final String entryRuleHIDDENBUG() throws RecognitionException {
        String current = null;
        int entryRuleHIDDENBUG_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleHIDDENBUG = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:239:50: (iv_ruleHIDDENBUG= ruleHIDDENBUG EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:240:2: iv_ruleHIDDENBUG= ruleHIDDENBUG EOF
            {
             currentNode = createCompositeNode(grammarAccess.getHIDDENBUGRule(), currentNode); 
            pushFollow(FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG534);
            iv_ruleHIDDENBUG=ruleHIDDENBUG();
            _fsp--;

             current =iv_ruleHIDDENBUG.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleHIDDENBUG545); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleHIDDENBUG


    // $ANTLR start ruleHIDDENBUG
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:247:1: ruleHIDDENBUG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '~~~~~' )? ;
    public final AntlrDatatypeRuleToken ruleHIDDENBUG() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleHIDDENBUG_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:255:6: ( (kw= '~~~~~' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:256:1: (kw= '~~~~~' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==16) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:257:2: kw= '~~~~~'
                    {
                    kw=(Token)input.LT(1);
                    match(input,16,FOLLOW_16_in_ruleHIDDENBUG583); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getHIDDENBUGAccess().getTildeTildeTildeTildeTildeKeyword(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleHIDDENBUG


    // $ANTLR start entryRulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:1: entryRulePropertyName returns [String current=null] : iv_rulePropertyName= rulePropertyName EOF ;
    public final String entryRulePropertyName() throws RecognitionException {
        String current = null;
        int entryRulePropertyName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePropertyName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:272:53: (iv_rulePropertyName= rulePropertyName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:273:2: iv_rulePropertyName= rulePropertyName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyNameRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyName_in_entryRulePropertyName625);
            iv_rulePropertyName=rulePropertyName();
            _fsp--;

             current =iv_rulePropertyName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyName636); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyName


    // $ANTLR start rulePropertyName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:280:1: rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_PID_0= RULE_PID ;
    public final AntlrDatatypeRuleToken rulePropertyName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePropertyName_StartIndex = input.index();
        Token this_PID_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:286:6: (this_PID_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:287:5: this_PID_0= RULE_PID
            {
            this_PID_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyName675); 

            		current.merge(this_PID_0);
                
             
                createLeafNode(grammarAccess.getPropertyNameAccess().getPIDTerminalRuleCall(), null); 
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyName


    // $ANTLR start entryRuleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:1: entryRuleEscapedQualifiedName returns [String current=null] : iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF ;
    public final String entryRuleEscapedQualifiedName() throws RecognitionException {
        String current = null;
        int entryRuleEscapedQualifiedName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleEscapedQualifiedName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:302:61: (iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:303:2: iv_ruleEscapedQualifiedName= ruleEscapedQualifiedName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getEscapedQualifiedNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName718);
            iv_ruleEscapedQualifiedName=ruleEscapedQualifiedName();
            _fsp--;

             current =iv_ruleEscapedQualifiedName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEscapedQualifiedName729); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleEscapedQualifiedName


    // $ANTLR start ruleEscapedQualifiedName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:310:1: ruleEscapedQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleEscapedQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleEscapedQualifiedName_StartIndex = input.index();
        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_QualifiedName_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:316:6: ( (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_STRING) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_ID) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("317:1: (this_STRING_0= RULE_STRING | this_QualifiedName_1= ruleQualifiedName )", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:317:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName769); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getEscapedQualifiedNameAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:326:5: this_QualifiedName_1= ruleQualifiedName
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getEscapedQualifiedNameAccess().getQualifiedNameParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName802);
                    this_QualifiedName_1=ruleQualifiedName();
                    _fsp--;


                    		current.merge(this_QualifiedName_1);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleEscapedQualifiedName


    // $ANTLR start entryRuleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:1: entryRuleInterfaceName returns [String current=null] : iv_ruleInterfaceName= ruleInterfaceName EOF ;
    public final String entryRuleInterfaceName() throws RecognitionException {
        String current = null;
        int entryRuleInterfaceName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleInterfaceName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:344:54: (iv_ruleInterfaceName= ruleInterfaceName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:345:2: iv_ruleInterfaceName= ruleInterfaceName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getInterfaceNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName846);
            iv_ruleInterfaceName=ruleInterfaceName();
            _fsp--;

             current =iv_ruleInterfaceName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterfaceName857); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInterfaceName


    // $ANTLR start ruleInterfaceName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:352:1: ruleInterfaceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_QualifiedName_0= ruleQualifiedName ;
    public final AntlrDatatypeRuleToken ruleInterfaceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleInterfaceName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:358:6: (this_QualifiedName_0= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:360:5: this_QualifiedName_0= ruleQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getInterfaceNameAccess().getQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleInterfaceName903);
            this_QualifiedName_0=ruleQualifiedName();
            _fsp--;


            		current.merge(this_QualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInterfaceName


    // $ANTLR start entryRuleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:1: entryRuleCompoundName returns [String current=null] : iv_ruleCompoundName= ruleCompoundName EOF ;
    public final String entryRuleCompoundName() throws RecognitionException {
        String current = null;
        int entryRuleCompoundName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleCompoundName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:378:53: (iv_ruleCompoundName= ruleCompoundName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:379:2: iv_ruleCompoundName= ruleCompoundName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundName_in_entryRuleCompoundName946);
            iv_ruleCompoundName=ruleCompoundName();
            _fsp--;

             current =iv_ruleCompoundName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundName957); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundName


    // $ANTLR start ruleCompoundName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:386:1: ruleCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) ;
    public final AntlrDatatypeRuleToken ruleCompoundName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleCompoundName_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;

        AntlrDatatypeRuleToken this_EscapedQualifiedName_2 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:392:6: ( (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:393:1: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:394:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName kw= '/' this_EscapedQualifiedName_2= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1004);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                
            kw=(Token)input.LT(1);
            match(input,17,FOLLOW_17_in_ruleCompoundName1022); 

                    current.merge(kw);
                    createLeafNode(grammarAccess.getCompoundNameAccess().getSolidusKeyword_1(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getCompoundNameAccess().getEscapedQualifiedNameParserRuleCall_2(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1044);
            this_EscapedQualifiedName_2=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_2);
                
             
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundName


    // $ANTLR start entryRuleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:1: entryRuleUnitName returns [String current=null] : iv_ruleUnitName= ruleUnitName EOF ;
    public final String entryRuleUnitName() throws RecognitionException {
        String current = null;
        int entryRuleUnitName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleUnitName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:429:49: (iv_ruleUnitName= ruleUnitName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:430:2: iv_ruleUnitName= ruleUnitName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnitNameRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnitName_in_entryRuleUnitName1088);
            iv_ruleUnitName=ruleUnitName();
            _fsp--;

             current =iv_ruleUnitName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnitName1099); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnitName


    // $ANTLR start ruleUnitName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:437:1: ruleUnitName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken ruleUnitName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleUnitName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:443:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:445:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getUnitNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1145);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnitName


    // $ANTLR start entryRulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:1: entryRulePartName returns [String current=null] : iv_rulePartName= rulePartName EOF ;
    public final String entryRulePartName() throws RecognitionException {
        String current = null;
        int entryRulePartName_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePartName = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:463:49: (iv_rulePartName= rulePartName EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:464:2: iv_rulePartName= rulePartName EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPartNameRule(), currentNode); 
            pushFollow(FOLLOW_rulePartName_in_entryRulePartName1188);
            iv_rulePartName=rulePartName();
            _fsp--;

             current =iv_rulePartName.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePartName1199); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartName


    // $ANTLR start rulePartName
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:471:1: rulePartName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EscapedQualifiedName_0= ruleEscapedQualifiedName ;
    public final AntlrDatatypeRuleToken rulePartName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePartName_StartIndex = input.index();
        AntlrDatatypeRuleToken this_EscapedQualifiedName_0 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:477:6: (this_EscapedQualifiedName_0= ruleEscapedQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:479:5: this_EscapedQualifiedName_0= ruleEscapedQualifiedName
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPartNameAccess().getEscapedQualifiedNameParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleEscapedQualifiedName_in_rulePartName1245);
            this_EscapedQualifiedName_0=ruleEscapedQualifiedName();
            _fsp--;


            		current.merge(this_EscapedQualifiedName_0);
                
             
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartName


    // $ANTLR start entryRuleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:1: entryRuleSeparator returns [String current=null] : iv_ruleSeparator= ruleSeparator EOF ;
    public final String entryRuleSeparator() throws RecognitionException {
        String current = null;
        int entryRuleSeparator_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSeparator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:497:50: (iv_ruleSeparator= ruleSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:498:2: iv_ruleSeparator= ruleSeparator EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSeparatorRule(), currentNode); 
            pushFollow(FOLLOW_ruleSeparator_in_entryRuleSeparator1288);
            iv_ruleSeparator=ruleSeparator();
            _fsp--;

             current =iv_ruleSeparator.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSeparator1299); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSeparator


    // $ANTLR start ruleSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:505:1: ruleSeparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) ;
    public final AntlrDatatypeRuleToken ruleSeparator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSeparator_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:511:6: ( (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )
            int alt7=14;
            switch ( input.LA(1) ) {
            case 15:
                {
                alt7=1;
                }
                break;
            case 18:
                {
                alt7=2;
                }
                break;
            case 19:
                {
                alt7=3;
                }
                break;
            case 20:
                {
                alt7=4;
                }
                break;
            case 21:
                {
                alt7=5;
                }
                break;
            case 22:
                {
                alt7=6;
                }
                break;
            case 23:
                {
                alt7=7;
                }
                break;
            case 24:
                {
                alt7=8;
                }
                break;
            case 25:
                {
                alt7=9;
                }
                break;
            case 26:
                {
                alt7=10;
                }
                break;
            case 27:
                {
                alt7=11;
                }
                break;
            case 28:
                {
                alt7=12;
                }
                break;
            case 29:
                {
                alt7=13;
                }
                break;
            case 30:
                {
                alt7=14;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("512:1: (kw= '.' | kw= '-' | kw= '!' | kw= '@' | kw= '$' | kw= '%' | kw= '&' | kw= '+' | kw= '=' | kw= '*' | kw= '<' | kw= '>' | kw= ':' | kw= '?' )", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:513:2: kw= '.'
                    {
                    kw=(Token)input.LT(1);
                    match(input,15,FOLLOW_15_in_ruleSeparator1337); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getFullStopKeyword_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:520:2: kw= '-'
                    {
                    kw=(Token)input.LT(1);
                    match(input,18,FOLLOW_18_in_ruleSeparator1356); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getHyphenMinusKeyword_1(), null); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:527:2: kw= '!'
                    {
                    kw=(Token)input.LT(1);
                    match(input,19,FOLLOW_19_in_ruleSeparator1375); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getExclamationMarkKeyword_2(), null); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:534:2: kw= '@'
                    {
                    kw=(Token)input.LT(1);
                    match(input,20,FOLLOW_20_in_ruleSeparator1394); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getCommercialAtKeyword_3(), null); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:541:2: kw= '$'
                    {
                    kw=(Token)input.LT(1);
                    match(input,21,FOLLOW_21_in_ruleSeparator1413); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getDollarSignKeyword_4(), null); 
                        

                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:548:2: kw= '%'
                    {
                    kw=(Token)input.LT(1);
                    match(input,22,FOLLOW_22_in_ruleSeparator1432); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getPercentSignKeyword_5(), null); 
                        

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:555:2: kw= '&'
                    {
                    kw=(Token)input.LT(1);
                    match(input,23,FOLLOW_23_in_ruleSeparator1451); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getAmpersandKeyword_6(), null); 
                        

                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:562:2: kw= '+'
                    {
                    kw=(Token)input.LT(1);
                    match(input,24,FOLLOW_24_in_ruleSeparator1470); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getPlusSignKeyword_7(), null); 
                        

                    }
                    break;
                case 9 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:569:2: kw= '='
                    {
                    kw=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_ruleSeparator1489); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getEqualsSignKeyword_8(), null); 
                        

                    }
                    break;
                case 10 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:576:2: kw= '*'
                    {
                    kw=(Token)input.LT(1);
                    match(input,26,FOLLOW_26_in_ruleSeparator1508); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getAsteriskKeyword_9(), null); 
                        

                    }
                    break;
                case 11 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:583:2: kw= '<'
                    {
                    kw=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_ruleSeparator1527); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getLessThanSignKeyword_10(), null); 
                        

                    }
                    break;
                case 12 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:590:2: kw= '>'
                    {
                    kw=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_ruleSeparator1546); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getGreaterThanSignKeyword_11(), null); 
                        

                    }
                    break;
                case 13 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:597:2: kw= ':'
                    {
                    kw=(Token)input.LT(1);
                    match(input,29,FOLLOW_29_in_ruleSeparator1565); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getColonKeyword_12(), null); 
                        

                    }
                    break;
                case 14 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:604:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_ruleSeparator1584); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getSeparatorAccess().getQuestionMarkKeyword_13(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSeparator


    // $ANTLR start entryRuleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:1: entryRuleAlfanumSym returns [String current=null] : iv_ruleAlfanumSym= ruleAlfanumSym EOF ;
    public final String entryRuleAlfanumSym() throws RecognitionException {
        String current = null;
        int entryRuleAlfanumSym_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleAlfanumSym = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:617:51: (iv_ruleAlfanumSym= ruleAlfanumSym EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:618:2: iv_ruleAlfanumSym= ruleAlfanumSym EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAlfanumSymRule(), currentNode); 
            pushFollow(FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1623);
            iv_ruleAlfanumSym=ruleAlfanumSym();
            _fsp--;

             current =iv_ruleAlfanumSym.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAlfanumSym1634); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAlfanumSym


    // $ANTLR start ruleAlfanumSym
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:625:1: ruleAlfanumSym returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) ;
    public final AntlrDatatypeRuleToken ruleAlfanumSym() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleAlfanumSym_StartIndex = input.index();
        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_REAL_3=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_REAL_8=null;
        AntlrDatatypeRuleToken this_Separator_4 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:631:6: ( ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:1: ( (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL ) (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )
            int alt8=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt8=1;
                }
                break;
            case RULE_INT:
                {
                alt8=2;
                }
                break;
            case RULE_HEX:
                {
                alt8=3;
                }
                break;
            case RULE_REAL:
                {
                alt8=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("632:2: (this_ID_0= RULE_ID | this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_REAL_3= RULE_REAL )", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:632:7: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1675); 

                    		current.merge(this_ID_0);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_0_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:640:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1701); 

                    		current.merge(this_INT_1);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_0_1(), null); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:648:10: this_HEX_2= RULE_HEX
                    {
                    this_HEX_2=(Token)input.LT(1);
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1727); 

                    		current.merge(this_HEX_2);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_0_2(), null); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:656:10: this_REAL_3= RULE_REAL
                    {
                    this_REAL_3=(Token)input.LT(1);
                    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1753); 

                    		current.merge(this_REAL_3);
                        
                     
                        createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_0_3(), null); 
                        

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:663:2: (this_Separator_4= ruleSeparator | this_ID_5= RULE_ID | this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_REAL_8= RULE_REAL )*
            loop9:
            do {
                int alt9=6;
                switch ( input.LA(1) ) {
                case 15:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                    {
                    alt9=1;
                    }
                    break;
                case RULE_ID:
                    {
                    alt9=2;
                    }
                    break;
                case RULE_INT:
                    {
                    alt9=3;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt9=4;
                    }
                    break;
                case RULE_REAL:
                    {
                    alt9=5;
                    }
                    break;

                }

                switch (alt9) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:664:5: this_Separator_4= ruleSeparator
            	    {
            	     
            	            currentNode=createCompositeNode(grammarAccess.getAlfanumSymAccess().getSeparatorParserRuleCall_1_0(), currentNode); 
            	        
            	    pushFollow(FOLLOW_ruleSeparator_in_ruleAlfanumSym1782);
            	    this_Separator_4=ruleSeparator();
            	    _fsp--;


            	    		current.merge(this_Separator_4);
            	        
            	     
            	            currentNode = currentNode.getParent();
            	        

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:675:10: this_ID_5= RULE_ID
            	    {
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAlfanumSym1808); 

            	    		current.merge(this_ID_5);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getIDTerminalRuleCall_1_1(), null); 
            	        

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:683:10: this_INT_6= RULE_INT
            	    {
            	    this_INT_6=(Token)input.LT(1);
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleAlfanumSym1834); 

            	    		current.merge(this_INT_6);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getINTTerminalRuleCall_1_2(), null); 
            	        

            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:691:10: this_HEX_7= RULE_HEX
            	    {
            	    this_HEX_7=(Token)input.LT(1);
            	    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleAlfanumSym1860); 

            	    		current.merge(this_HEX_7);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getHEXTerminalRuleCall_1_3(), null); 
            	        

            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:699:10: this_REAL_8= RULE_REAL
            	    {
            	    this_REAL_8=(Token)input.LT(1);
            	    match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleAlfanumSym1886); 

            	    		current.merge(this_REAL_8);
            	        
            	     
            	        createLeafNode(grammarAccess.getAlfanumSymAccess().getREALTerminalRuleCall_1_4(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAlfanumSym


    // $ANTLR start entryRuleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:1: entryRuleVersion returns [String current=null] : iv_ruleVersion= ruleVersion EOF ;
    public final String entryRuleVersion() throws RecognitionException {
        String current = null;
        int entryRuleVersion_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleVersion = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:714:48: (iv_ruleVersion= ruleVersion EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:715:2: iv_ruleVersion= ruleVersion EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVersionRule(), currentNode); 
            pushFollow(FOLLOW_ruleVersion_in_entryRuleVersion1932);
            iv_ruleVersion=ruleVersion();
            _fsp--;

             current =iv_ruleVersion.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersion1943); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersion


    // $ANTLR start ruleVersion
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:722:1: ruleVersion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym ) ;
    public final AntlrDatatypeRuleToken ruleVersion() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleVersion_StartIndex = input.index();
        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_AlfanumSym_1 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:728:6: ( (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=RULE_ID && LA10_0<=RULE_HEX)||LA10_0==RULE_REAL) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("729:1: (this_STRING_0= RULE_STRING | this_AlfanumSym_1= ruleAlfanumSym )", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:729:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVersion1983); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getVersionAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:738:5: this_AlfanumSym_1= ruleAlfanumSym
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVersionAccess().getAlfanumSymParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleAlfanumSym_in_ruleVersion2016);
                    this_AlfanumSym_1=ruleAlfanumSym();
                    _fsp--;


                    		current.merge(this_AlfanumSym_1);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersion


    // $ANTLR start entryRuleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:756:1: entryRuleVersionRange returns [String current=null] : iv_ruleVersionRange= ruleVersionRange EOF ;
    public final String entryRuleVersionRange() throws RecognitionException {
        String current = null;
        int entryRuleVersionRange_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleVersionRange = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:756:53: (iv_ruleVersionRange= ruleVersionRange EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:757:2: iv_ruleVersionRange= ruleVersionRange EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVersionRangeRule(), currentNode); 
            pushFollow(FOLLOW_ruleVersionRange_in_entryRuleVersionRange2060);
            iv_ruleVersionRange=ruleVersionRange();
            _fsp--;

             current =iv_ruleVersionRange.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVersionRange2071); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVersionRange


    // $ANTLR start ruleVersionRange
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:764:1: ruleVersionRange returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion ) ;
    public final AntlrDatatypeRuleToken ruleVersionRange() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleVersionRange_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_Version_2 = null;

        AntlrDatatypeRuleToken this_Version_4 = null;

        AntlrDatatypeRuleToken this_Version_7 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:770:6: ( ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=31 && LA14_0<=32)) ) {
                alt14=1;
            }
            else if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_HEX)||(LA14_0>=RULE_STRING && LA14_0<=RULE_REAL)) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("771:1: ( ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) ) | this_Version_7= ruleVersion )", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:2: ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:2: ( (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:3: (kw= '[' | kw= '(' ) this_Version_2= ruleVersion (kw= ',' this_Version_4= ruleVersion )? (kw= ']' | kw= ')' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:771:3: (kw= '[' | kw= '(' )
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==31) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==32) ) {
                        alt11=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("771:3: (kw= '[' | kw= '(' )", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:772:2: kw= '['
                            {
                            kw=(Token)input.LT(1);
                            match(input,31,FOLLOW_31_in_ruleVersionRange2111); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getLeftSquareBracketKeyword_0_0_0(), null); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:779:2: kw= '('
                            {
                            kw=(Token)input.LT(1);
                            match(input,32,FOLLOW_32_in_ruleVersionRange2130); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getLeftParenthesisKeyword_0_0_1(), null); 
                                

                            }
                            break;

                    }

                     
                            currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2153);
                    this_Version_2=ruleVersion();
                    _fsp--;


                    		current.merge(this_Version_2);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:795:1: (kw= ',' this_Version_4= ruleVersion )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==33) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:796:2: kw= ',' this_Version_4= ruleVersion
                            {
                            kw=(Token)input.LT(1);
                            match(input,33,FOLLOW_33_in_ruleVersionRange2172); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getCommaKeyword_0_2_0(), null); 
                                
                             
                                    currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_0_2_1(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2194);
                            this_Version_4=ruleVersion();
                            _fsp--;


                            		current.merge(this_Version_4);
                                
                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:812:3: (kw= ']' | kw= ')' )
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==34) ) {
                        alt13=1;
                    }
                    else if ( (LA13_0==35) ) {
                        alt13=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("812:3: (kw= ']' | kw= ')' )", 13, 0, input);

                        throw nvae;
                    }
                    switch (alt13) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:813:2: kw= ']'
                            {
                            kw=(Token)input.LT(1);
                            match(input,34,FOLLOW_34_in_ruleVersionRange2215); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getRightSquareBracketKeyword_0_3_0(), null); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:820:2: kw= ')'
                            {
                            kw=(Token)input.LT(1);
                            match(input,35,FOLLOW_35_in_ruleVersionRange2234); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getVersionRangeAccess().getRightParenthesisKeyword_0_3_1(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:827:5: this_Version_7= ruleVersion
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVersionRangeAccess().getVersionParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVersion_in_ruleVersionRange2264);
                    this_Version_7=ruleVersion();
                    _fsp--;


                    		current.merge(this_Version_7);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVersionRange


    // $ANTLR start entryRuleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:845:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;
        int entryRuleImport_StartIndex = input.index();
        EObject iv_ruleImport = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:845:48: (iv_ruleImport= ruleImport EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:846:2: iv_ruleImport= ruleImport EOF
            {
             currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); 
            pushFollow(FOLLOW_ruleImport_in_entryRuleImport2307);
            iv_ruleImport=ruleImport();
            _fsp--;

             current =iv_ruleImport; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleImport2317); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleImport


    // $ANTLR start ruleImport
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:853:1: ruleImport returns [EObject current=null] : ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;
        int ruleImport_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_importClass_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:858:6: ( ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:1: ( 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:859:2: 'import' (lv_importClass_1= ruleQualifiedName ) ( '.*' )? ';'
            {
            match(input,36,FOLLOW_36_in_ruleImport2351); 

                    createLeafNode(grammarAccess.getImportAccess().getImportKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:863:1: (lv_importClass_1= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:866:6: lv_importClass_1= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getImportAccess().getImportClassQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleImport2385);
            lv_importClass_1=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getImportRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "importClass", lv_importClass_1, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:884:2: ( '.*' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==37) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:884:3: '.*'
                    {
                    match(input,37,FOLLOW_37_in_ruleImport2399); 

                            createLeafNode(grammarAccess.getImportAccess().getFullStopAsteriskKeyword_2(), null); 
                        

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleImport2410); 

                    createLeafNode(grammarAccess.getImportAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleImport


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:899:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;
        int entryRuleUnit_StartIndex = input.index();
        EObject iv_ruleUnit = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:899:46: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:900:2: iv_ruleUnit= ruleUnit EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnit_in_entryRuleUnit2443);
            iv_ruleUnit=ruleUnit();
            _fsp--;

             current =iv_ruleUnit; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnit2453); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:907:1: ruleUnit returns [EObject current=null] : ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;
        int ruleUnit_StartIndex = input.index();
        Enumerator lv_executionMode_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        AntlrDatatypeRuleToken lv_version_4 = null;

        AntlrDatatypeRuleToken lv_implements_6 = null;

        AntlrDatatypeRuleToken lv_implements_8 = null;

        EObject lv_propertyStatements_11 = null;

        EObject lv_providedCapability_14 = null;

        EObject lv_providedCapability_18 = null;

        EObject lv_requiredCapabilities_22 = null;

        EObject lv_requiredCapabilities_26 = null;

        EObject lv_metaRequiredCapabilities_31 = null;

        EObject lv_metaRequiredCapabilities_36 = null;

        EObject lv_advice_39 = null;

        EObject lv_synchronize_42 = null;

        EObject lv_synchronize_45 = null;

        EObject lv_parts_46 = null;

        EObject lv_repositoryConfig_49 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:914:6: ( ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:1: ( (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:2: (lv_executionMode_0= ruleExecutionMode )? 'unit' (lv_name_2= ruleUnitName )? ( 'version' (lv_version_4= ruleVersion ) )? ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )? '{' ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )* ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:915:2: (lv_executionMode_0= ruleExecutionMode )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==49||LA16_0==96) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:918:6: lv_executionMode_0= ruleExecutionMode
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getExecutionModeExecutionModeEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleUnit2512);
                    lv_executionMode_0=ruleExecutionMode();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "executionMode", lv_executionMode_0, "ExecutionMode", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,39,FOLLOW_39_in_ruleUnit2526); 

                    createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:940:1: (lv_name_2= ruleUnitName )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID||LA17_0==RULE_STRING) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:943:6: lv_name_2= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getNameUnitNameParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleUnit2560);
                    lv_name_2=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:3: ( 'version' (lv_version_4= ruleVersion ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==40) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:961:4: 'version' (lv_version_4= ruleVersion )
                    {
                    match(input,40,FOLLOW_40_in_ruleUnit2575); 

                            createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_3_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:965:1: (lv_version_4= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:968:6: lv_version_4= ruleVersion
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getVersionVersionParserRuleCall_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersion_in_ruleUnit2609);
                    lv_version_4=ruleVersion();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "version", lv_version_4, "Version", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:986:4: ( 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==41) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:986:5: 'implements' (lv_implements_6= ruleInterfaceName ) ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    {
                    match(input,41,FOLLOW_41_in_ruleUnit2625); 

                            createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:990:1: (lv_implements_6= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:993:6: lv_implements_6= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2659);
                    lv_implements_6=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "implements", lv_implements_6, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1011:2: ( ',' (lv_implements_8= ruleInterfaceName ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==33) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1011:3: ',' (lv_implements_8= ruleInterfaceName )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleUnit2673); 

                    	            createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_4_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1015:1: (lv_implements_8= ruleInterfaceName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1018:6: lv_implements_8= ruleInterfaceName
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsInterfaceNameParserRuleCall_4_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleInterfaceName_in_ruleUnit2707);
                    	    lv_implements_8=ruleInterfaceName();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "implements", lv_implements_8, "InterfaceName", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleUnit2724); 

                    createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_5(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1040:1: ( 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==43) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1040:2: 'properties' (lv_propertyStatements_11= ruleNamedPropertyStatements )
            	    {
            	    match(input,43,FOLLOW_43_in_ruleUnit2734); 

            	            createLeafNode(grammarAccess.getUnitAccess().getPropertiesKeyword_6_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1044:1: (lv_propertyStatements_11= ruleNamedPropertyStatements )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1047:6: lv_propertyStatements_11= ruleNamedPropertyStatements
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getPropertyStatementsNamedPropertyStatementsParserRuleCall_6_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2768);
            	    lv_propertyStatements_11=ruleNamedPropertyStatements();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "propertyStatements", lv_propertyStatements_11, "NamedPropertyStatements", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:4: ( ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' ) | ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' ) | ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' ) | ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' ) | ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' ) | ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' ) | ( 'advice' (lv_advice_39= ruleNamedAdvice ) ) | ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' ) | ( 'sequential' (lv_synchronize_45= ruleSynchronization ) ) | (lv_parts_46= ruleBuildPart ) | ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' ) )*
            loop27:
            do {
                int alt27=12;
                switch ( input.LA(1) ) {
                case 44:
                    {
                    int LA27_2 = input.LA(2);

                    if ( (LA27_2==42) ) {
                        alt27=1;
                    }
                    else if ( (LA27_2==RULE_ID||LA27_2==51) ) {
                        alt27=2;
                    }


                    }
                    break;
                case 46:
                    {
                    int LA27_3 = input.LA(2);

                    if ( (LA27_3==42) ) {
                        alt27=3;
                    }
                    else if ( (LA27_3==RULE_ID||LA27_3==51) ) {
                        alt27=4;
                    }


                    }
                    break;
                case 47:
                    {
                    int LA27_4 = input.LA(2);

                    if ( (LA27_4==46) ) {
                        int LA27_13 = input.LA(3);

                        if ( (LA27_13==42) ) {
                            alt27=5;
                        }
                        else if ( (LA27_13==RULE_ID||LA27_13==51) ) {
                            alt27=6;
                        }


                    }


                    }
                    break;
                case 48:
                    {
                    alt27=7;
                    }
                    break;
                case 49:
                    {
                    switch ( input.LA(2) ) {
                    case 42:
                        {
                        alt27=8;
                        }
                        break;
                    case 62:
                    case 65:
                        {
                        alt27=10;
                        }
                        break;
                    case RULE_ID:
                    case RULE_STRING:
                        {
                        alt27=9;
                        }
                        break;

                    }

                    }
                    break;
                case 59:
                case 62:
                case 65:
                case 94:
                case 95:
                case 96:
                    {
                    alt27=10;
                    }
                    break;
                case 50:
                    {
                    alt27=11;
                    }
                    break;

                }

                switch (alt27) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:5: ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:5: ( 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1065:6: 'provides' '{' ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+ '}'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2785); 

            	            createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_0_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit2794); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:1: ( (lv_providedCapability_14= ruleProvidedCapability ) ';' )+
            	    int cnt22=0;
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==RULE_ID||LA22_0==51) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:2: (lv_providedCapability_14= ruleProvidedCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1073:2: (lv_providedCapability_14= ruleProvidedCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1076:6: lv_providedCapability_14= ruleProvidedCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_0_2_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2829);
            	    	    lv_providedCapability_14=ruleProvidedCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "providedCapability", lv_providedCapability_14, "ProvidedCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit2842); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt22 >= 1 ) break loop22;
            	                EarlyExitException eee =
            	                    new EarlyExitException(22, input);
            	                throw eee;
            	        }
            	        cnt22++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit2853); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_0_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:6: ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:6: ( 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1103:7: 'provides' (lv_providedCapability_18= ruleProvidedCapability ) ';'
            	    {
            	    match(input,44,FOLLOW_44_in_ruleUnit2870); 

            	            createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1107:1: (lv_providedCapability_18= ruleProvidedCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1110:6: lv_providedCapability_18= ruleProvidedCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilityProvidedCapabilityParserRuleCall_7_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleUnit2904);
            	    lv_providedCapability_18=ruleProvidedCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "providedCapability", lv_providedCapability_18, "ProvidedCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit2917); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_2(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:6: ( 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1133:7: 'requires' '{' ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit2934); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_2_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit2943); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:1: ( (lv_requiredCapabilities_22= ruleRequiredCapability ) ';' )+
            	    int cnt23=0;
            	    loop23:
            	    do {
            	        int alt23=2;
            	        int LA23_0 = input.LA(1);

            	        if ( (LA23_0==RULE_ID||LA23_0==51) ) {
            	            alt23=1;
            	        }


            	        switch (alt23) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:2: (lv_requiredCapabilities_22= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1141:2: (lv_requiredCapabilities_22= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1144:6: lv_requiredCapabilities_22= ruleRequiredCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_2_2_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit2978);
            	    	    lv_requiredCapabilities_22=ruleRequiredCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "requiredCapabilities", lv_requiredCapabilities_22, "RequiredCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit2991); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_2_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt23 >= 1 ) break loop23;
            	                EarlyExitException eee =
            	                    new EarlyExitException(23, input);
            	                throw eee;
            	        }
            	        cnt23++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3002); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_2_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:6: ( 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1171:7: 'requires' (lv_requiredCapabilities_26= ruleRequiredCapability ) ';'
            	    {
            	    match(input,46,FOLLOW_46_in_ruleUnit3019); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1175:1: (lv_requiredCapabilities_26= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1178:6: lv_requiredCapabilities_26= ruleRequiredCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_3_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3053);
            	    lv_requiredCapabilities_26=ruleRequiredCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "requiredCapabilities", lv_requiredCapabilities_26, "RequiredCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3066); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_2(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:6: ( 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1201:7: 'meta' 'requires' '{' ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+ '}'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3083); 

            	            createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_4_0(), null); 
            	        
            	    match(input,46,FOLLOW_46_in_ruleUnit3092); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_1(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3101); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_4_2(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:1: ( (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';' )+
            	    int cnt24=0;
            	    loop24:
            	    do {
            	        int alt24=2;
            	        int LA24_0 = input.LA(1);

            	        if ( (LA24_0==RULE_ID||LA24_0==51) ) {
            	            alt24=1;
            	        }


            	        switch (alt24) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability ) ';'
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1213:2: (lv_metaRequiredCapabilities_31= ruleRequiredCapability )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1216:6: lv_metaRequiredCapabilities_31= ruleRequiredCapability
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3136);
            	    	    lv_metaRequiredCapabilities_31=ruleRequiredCapability();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_31, "RequiredCapability", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleUnit3149); 

            	    	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_3_1(), null); 
            	    	        

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt24 >= 1 ) break loop24;
            	                EarlyExitException eee =
            	                    new EarlyExitException(24, input);
            	                throw eee;
            	        }
            	        cnt24++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3160); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_4_4(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:6: ( 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1243:7: 'meta' 'requires' (lv_metaRequiredCapabilities_36= ruleRequiredCapability ) ';'
            	    {
            	    match(input,47,FOLLOW_47_in_ruleUnit3177); 

            	            createLeafNode(grammarAccess.getUnitAccess().getMetaKeyword_7_5_0(), null); 
            	        
            	    match(input,46,FOLLOW_46_in_ruleUnit3186); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_5_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1251:1: (lv_metaRequiredCapabilities_36= ruleRequiredCapability )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1254:6: lv_metaRequiredCapabilities_36= ruleRequiredCapability
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_5_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRequiredCapability_in_ruleUnit3220);
            	    lv_metaRequiredCapabilities_36=ruleRequiredCapability();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "metaRequiredCapabilities", lv_metaRequiredCapabilities_36, "RequiredCapability", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleUnit3233); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_5_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:6: ( 'advice' (lv_advice_39= ruleNamedAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1277:7: 'advice' (lv_advice_39= ruleNamedAdvice )
            	    {
            	    match(input,48,FOLLOW_48_in_ruleUnit3250); 

            	            createLeafNode(grammarAccess.getUnitAccess().getAdviceKeyword_7_6_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1281:1: (lv_advice_39= ruleNamedAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1284:6: lv_advice_39= ruleNamedAdvice
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getAdviceNamedAdviceParserRuleCall_7_6_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleNamedAdvice_in_ruleUnit3284);
            	    lv_advice_39=ruleNamedAdvice();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_39, "NamedAdvice", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:6: ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:6: ( 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1303:7: 'sequential' '{' (lv_synchronize_42= ruleSynchronization )+ '}'
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3305); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_7_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3314); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_7_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1311:1: (lv_synchronize_42= ruleSynchronization )+
            	    int cnt25=0;
            	    loop25:
            	    do {
            	        int alt25=2;
            	        int LA25_0 = input.LA(1);

            	        if ( (LA25_0==RULE_ID||LA25_0==RULE_STRING) ) {
            	            alt25=1;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1314:6: lv_synchronize_42= ruleSynchronization
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_7_2_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3348);
            	    	    lv_synchronize_42=ruleSynchronization();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "synchronize", lv_synchronize_42, "Synchronization", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt25 >= 1 ) break loop25;
            	                EarlyExitException eee =
            	                    new EarlyExitException(25, input);
            	                throw eee;
            	        }
            	        cnt25++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3362); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_7_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:6: ( 'sequential' (lv_synchronize_45= ruleSynchronization ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:6: ( 'sequential' (lv_synchronize_45= ruleSynchronization ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1337:7: 'sequential' (lv_synchronize_45= ruleSynchronization )
            	    {
            	    match(input,49,FOLLOW_49_in_ruleUnit3379); 

            	            createLeafNode(grammarAccess.getUnitAccess().getSequentialKeyword_7_8_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1341:1: (lv_synchronize_45= ruleSynchronization )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1344:6: lv_synchronize_45= ruleSynchronization
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSynchronizeSynchronizationParserRuleCall_7_8_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleSynchronization_in_ruleUnit3413);
            	    lv_synchronize_45=ruleSynchronization();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "synchronize", lv_synchronize_45, "Synchronization", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1363:6: (lv_parts_46= ruleBuildPart )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1363:6: (lv_parts_46= ruleBuildPart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1366:6: lv_parts_46= ruleBuildPart
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getPartsBuildPartParserRuleCall_7_9_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleBuildPart_in_ruleUnit3458);
            	    lv_parts_46=ruleBuildPart();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "parts", lv_parts_46, "BuildPart", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;
            	case 11 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:6: ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:6: ( 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1385:7: 'repositories' '{' (lv_repositoryConfig_49= ruleRepositoryConfiguration )* '}'
            	    {
            	    match(input,50,FOLLOW_50_in_ruleUnit3478); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRepositoriesKeyword_7_10_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleUnit3487); 

            	            createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_7_10_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1393:1: (lv_repositoryConfig_49= ruleRepositoryConfiguration )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==RULE_STRING||LA26_0==67) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1396:6: lv_repositoryConfig_49= ruleRepositoryConfiguration
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRepositoryConfigRepositoryConfigurationParserRuleCall_7_10_2_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3521);
            	    	    lv_repositoryConfig_49=ruleRepositoryConfiguration();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "repositoryConfig", lv_repositoryConfig_49, "RepositoryConfiguration", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleUnit3535); 

            	            createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_7_10_3(), null); 
            	        

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleUnit3547); 

                    createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1429:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleProvidedCapability_StartIndex = input.index();
        EObject iv_ruleProvidedCapability = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1429:60: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1430:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
             currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            pushFollow(FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3580);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;

             current =iv_ruleProvidedCapability; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProvidedCapability3590); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1437:1: ruleProvidedCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int ruleProvidedCapability_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        AntlrDatatypeRuleToken lv_version_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1442:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_version_6= ruleVersion ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==51) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1443:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleProvidedCapability3625); 

                            createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1447:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1450:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleProvidedCapability3659);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1468:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1471:6: lv_interface_2= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3699);
            lv_interface_2=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,17,FOLLOW_17_in_ruleProvidedCapability3712); 

                    createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1493:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1496:6: lv_name_4= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3746);
            lv_name_4=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1514:2: ( '/' (lv_version_6= ruleVersion ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==17) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1514:3: '/' (lv_version_6= ruleVersion )
                    {
                    match(input,17,FOLLOW_17_in_ruleProvidedCapability3760); 

                            createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSolidusKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1518:1: (lv_version_6= ruleVersion )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1521:6: lv_version_6= ruleVersion
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getVersionVersionParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersion_in_ruleProvidedCapability3794);
                    lv_version_6=ruleVersion();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "version", lv_version_6, "Version", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1546:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleRequiredCapability_StartIndex = input.index();
        EObject iv_ruleRequiredCapability = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1546:60: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1547:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            pushFollow(FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3833);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;

             current =iv_ruleRequiredCapability; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRequiredCapability3843); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1554:1: ruleRequiredCapability returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int ruleRequiredCapability_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_interface_2 = null;

        AntlrDatatypeRuleToken lv_name_4 = null;

        AntlrDatatypeRuleToken lv_range_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1559:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_interface_2= ruleQualifiedName ) '/' (lv_name_4= ruleQualifiedName ) ( '/' (lv_range_6= ruleVersionRange ) )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==51) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1560:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleRequiredCapability3878); 

                            createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1564:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1567:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleRequiredCapability3912);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1585:4: (lv_interface_2= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1588:6: lv_interface_2= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getInterfaceQualifiedNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3952);
            lv_interface_2=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "interface", lv_interface_2, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,17,FOLLOW_17_in_ruleRequiredCapability3965); 

                    createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1610:1: (lv_name_4= ruleQualifiedName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1613:6: lv_name_4= ruleQualifiedName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3999);
            lv_name_4=ruleQualifiedName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_4, "QualifiedName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1631:2: ( '/' (lv_range_6= ruleVersionRange ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==17) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1631:3: '/' (lv_range_6= ruleVersionRange )
                    {
                    match(input,17,FOLLOW_17_in_ruleRequiredCapability4013); 

                            createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSolidusKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1635:1: (lv_range_6= ruleVersionRange )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1638:6: lv_range_6= ruleVersionRange
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRangeVersionRangeParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVersionRange_in_ruleRequiredCapability4047);
                    lv_range_6=ruleVersionRange();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "range", lv_range_6, "VersionRange", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRuleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1663:1: entryRuleNamedPropertyStatements returns [EObject current=null] : iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF ;
    public final EObject entryRuleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;
        int entryRuleNamedPropertyStatements_StartIndex = input.index();
        EObject iv_ruleNamedPropertyStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1663:65: (iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1664:2: iv_ruleNamedPropertyStatements= ruleNamedPropertyStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNamedPropertyStatementsRule(), currentNode); 
            pushFollow(FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4086);
            iv_ruleNamedPropertyStatements=ruleNamedPropertyStatements();
            _fsp--;

             current =iv_ruleNamedPropertyStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedPropertyStatements4096); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedPropertyStatements


    // $ANTLR start ruleNamedPropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1671:1: ruleNamedPropertyStatements returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) ) ;
    public final EObject ruleNamedPropertyStatements() throws RecognitionException {
        EObject current = null;
        int ruleNamedPropertyStatements_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1676:6: ( ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:1: ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:1: ( (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:2: (lv_name_0= RULE_ID )? (lv_statements_1= rulePropertyStatements )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1677:2: (lv_name_0= RULE_ID )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1679:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4143); 

                    		createLeafNode(grammarAccess.getNamedPropertyStatementsAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1697:3: (lv_statements_1= rulePropertyStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1700:6: lv_statements_1= rulePropertyStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getNamedPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyStatements_in_ruleNamedPropertyStatements4186);
            lv_statements_1=rulePropertyStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNamedPropertyStatementsRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_1, "PropertyStatements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedPropertyStatements


    // $ANTLR start entryRulePropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1725:1: entryRulePropertyStatements returns [EObject current=null] : iv_rulePropertyStatements= rulePropertyStatements EOF ;
    public final EObject entryRulePropertyStatements() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyStatements_StartIndex = input.index();
        EObject iv_rulePropertyStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1725:60: (iv_rulePropertyStatements= rulePropertyStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1726:2: iv_rulePropertyStatements= rulePropertyStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyStatementsRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyStatements_in_entryRulePropertyStatements4223);
            iv_rulePropertyStatements=rulePropertyStatements();
            _fsp--;

             current =iv_rulePropertyStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyStatements4233); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyStatements


    // $ANTLR start rulePropertyStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1733:1: rulePropertyStatements returns [EObject current=null] : ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' ) ;
    public final EObject rulePropertyStatements() throws RecognitionException {
        EObject current = null;
        int rulePropertyStatements_StartIndex = input.index();
        EObject lv_filter_2 = null;

        EObject lv_statements_3 = null;

        EObject lv_statements_4 = null;

        EObject lv_statements_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1738:6: ( ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:1: ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:1: ( '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1739:2: '{' ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )* '}'
            {
            match(input,42,FOLLOW_42_in_rulePropertyStatements4267); 

                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:1: ( ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_PID||LA35_0==42||(LA35_0>=51 && LA35_0<=52)||LA35_0==57) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:2: ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:2: ( 'when' (lv_filter_2= ruleFilter ) )?
            	    int alt33=2;
            	    int LA33_0 = input.LA(1);

            	    if ( (LA33_0==51) ) {
            	        alt33=1;
            	    }
            	    switch (alt33) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1743:3: 'when' (lv_filter_2= ruleFilter )
            	            {
            	            match(input,51,FOLLOW_51_in_rulePropertyStatements4278); 

            	                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getWhenKeyword_1_0_0(), null); 
            	                
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1747:1: (lv_filter_2= ruleFilter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1750:6: lv_filter_2= ruleFilter
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getFilterFilterParserRuleCall_1_0_1_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleFilter_in_rulePropertyStatements4312);
            	            lv_filter_2=ruleFilter();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		set(current, "filter", lv_filter_2, "Filter", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:4: ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )
            	    int alt34=3;
            	    switch ( input.LA(1) ) {
            	    case 57:
            	        {
            	        alt34=1;
            	        }
            	        break;
            	    case RULE_PID:
            	    case 52:
            	        {
            	        alt34=2;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt34=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("1768:4: ( (lv_statements_3= ruleUnsetPropertyStatement ) | (lv_statements_4= rulePropertyStatement ) | (lv_statements_5= rulePropertyStatements ) )", 34, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt34) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:5: (lv_statements_3= ruleUnsetPropertyStatement )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1768:5: (lv_statements_3= ruleUnsetPropertyStatement )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1771:6: lv_statements_3= ruleUnsetPropertyStatement
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsUnsetPropertyStatementParserRuleCall_1_1_0_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleUnsetPropertyStatement_in_rulePropertyStatements4353);
            	            lv_statements_3=ruleUnsetPropertyStatement();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_3, "UnsetPropertyStatement", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1790:6: (lv_statements_4= rulePropertyStatement )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1790:6: (lv_statements_4= rulePropertyStatement )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1793:6: lv_statements_4= rulePropertyStatement
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementParserRuleCall_1_1_1_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_rulePropertyStatement_in_rulePropertyStatements4397);
            	            lv_statements_4=rulePropertyStatement();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_4, "PropertyStatement", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1812:6: (lv_statements_5= rulePropertyStatements )
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1812:6: (lv_statements_5= rulePropertyStatements )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1815:6: lv_statements_5= rulePropertyStatements
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementsAccess().getStatementsPropertyStatementsParserRuleCall_1_1_2_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_rulePropertyStatements_in_rulePropertyStatements4441);
            	            lv_statements_5=rulePropertyStatements();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getPropertyStatementsRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "statements", lv_statements_5, "PropertyStatements", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePropertyStatements4457); 

                    createLeafNode(grammarAccess.getPropertyStatementsAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyStatements


    // $ANTLR start entryRulePropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1844:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyStatement_StartIndex = input.index();
        EObject iv_rulePropertyStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1844:59: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1845:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyStatementRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyStatement_in_entryRulePropertyStatement4490);
            iv_rulePropertyStatement=rulePropertyStatement();
            _fsp--;

             current =iv_rulePropertyStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyStatement4500); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyStatement


    // $ANTLR start rulePropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1852:1: rulePropertyStatement returns [EObject current=null] : ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;
        int rulePropertyStatement_StartIndex = input.index();
        Token lv_immutable_0=null;
        Token lv_op_2=null;
        AntlrDatatypeRuleToken lv_key_1 = null;

        EObject lv_value_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1857:6: ( ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:1: ( (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:2: (lv_immutable_0= 'immutable' )? (lv_key_1= rulePropertyName ) (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_3= rulePropertyExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1858:2: (lv_immutable_0= 'immutable' )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==52) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1860:6: lv_immutable_0= 'immutable'
                    {
                    lv_immutable_0=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_rulePropertyStatement4546); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getImmutableImmutableKeyword_0_0(), "immutable"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1879:3: (lv_key_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1882:6: lv_key_1= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementAccess().getKeyPropertyNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_rulePropertyStatement4594);
            lv_key_1=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "key", lv_key_1, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1900:2: (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:6: lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:14: ( '=' | '+=' | '-=' | '*=' | '/=' )
            int alt37=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt37=1;
                }
                break;
            case 53:
                {
                alt37=2;
                }
                break;
            case 54:
                {
                alt37=3;
                }
                break;
            case 55:
                {
                alt37=4;
                }
                break;
            case 56:
                {
                alt37=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("1902:14: ( '=' | '+=' | '-=' | '*=' | '/=' )", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1902:15: '='
                    {
                    match(input,25,FOLLOW_25_in_rulePropertyStatement4620); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpEqualsSignKeyword_2_0_0(), "op"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1908:6: '+='
                    {
                    match(input,53,FOLLOW_53_in_rulePropertyStatement4636); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpPlusSignEqualsSignKeyword_2_0_1(), "op"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1914:6: '-='
                    {
                    match(input,54,FOLLOW_54_in_rulePropertyStatement4652); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpHyphenMinusEqualsSignKeyword_2_0_2(), "op"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1920:6: '*='
                    {
                    match(input,55,FOLLOW_55_in_rulePropertyStatement4668); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpAsteriskEqualsSignKeyword_2_0_3(), "op"); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1926:6: '/='
                    {
                    match(input,56,FOLLOW_56_in_rulePropertyStatement4684); 

                            createLeafNode(grammarAccess.getPropertyStatementAccess().getOpSolidusEqualsSignKeyword_2_0_4(), "op"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "op", /* lv_op_2 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1946:2: (lv_value_3= rulePropertyExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1949:6: lv_value_3= rulePropertyExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPropertyStatementAccess().getValuePropertyExpressionParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyExpression_in_rulePropertyStatement4733);
            lv_value_3=rulePropertyExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_3, "PropertyExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_rulePropertyStatement4746); 

                    createLeafNode(grammarAccess.getPropertyStatementAccess().getSemicolonKeyword_4(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyStatement


    // $ANTLR start entryRuleUnsetPropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1978:1: entryRuleUnsetPropertyStatement returns [EObject current=null] : iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF ;
    public final EObject entryRuleUnsetPropertyStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsetPropertyStatement_StartIndex = input.index();
        EObject iv_ruleUnsetPropertyStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1978:64: (iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1979:2: iv_ruleUnsetPropertyStatement= ruleUnsetPropertyStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnsetPropertyStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnsetPropertyStatement_in_entryRuleUnsetPropertyStatement4779);
            iv_ruleUnsetPropertyStatement=ruleUnsetPropertyStatement();
            _fsp--;

             current =iv_ruleUnsetPropertyStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnsetPropertyStatement4789); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnsetPropertyStatement


    // $ANTLR start ruleUnsetPropertyStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1986:1: ruleUnsetPropertyStatement returns [EObject current=null] : ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' ) ;
    public final EObject ruleUnsetPropertyStatement() throws RecognitionException {
        EObject current = null;
        int ruleUnsetPropertyStatement_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_unsetProperties_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1991:6: ( ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:1: ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:1: ( 'unset' (lv_unsetProperties_1= rulePropertyName ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1992:2: 'unset' (lv_unsetProperties_1= rulePropertyName ) ';'
            {
            match(input,57,FOLLOW_57_in_ruleUnsetPropertyStatement4823); 

                    createLeafNode(grammarAccess.getUnsetPropertyStatementAccess().getUnsetKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1996:1: (lv_unsetProperties_1= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:1999:6: lv_unsetProperties_1= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getUnsetPropertyStatementAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_ruleUnsetPropertyStatement4857);
            lv_unsetProperties_1=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnsetPropertyStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "unsetProperties", lv_unsetProperties_1, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleUnsetPropertyStatement4870); 

                    createLeafNode(grammarAccess.getUnsetPropertyStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnsetPropertyStatement


    // $ANTLR start entryRuleAnnotationStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:1: entryRuleAnnotationStatement returns [EObject current=null] : iv_ruleAnnotationStatement= ruleAnnotationStatement EOF ;
    public final EObject entryRuleAnnotationStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleAnnotationStatement_StartIndex = input.index();
        EObject iv_ruleAnnotationStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2028:61: (iv_ruleAnnotationStatement= ruleAnnotationStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2029:2: iv_ruleAnnotationStatement= ruleAnnotationStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAnnotationStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAnnotationStatement_in_entryRuleAnnotationStatement4903);
            iv_ruleAnnotationStatement=ruleAnnotationStatement();
            _fsp--;

             current =iv_ruleAnnotationStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnnotationStatement4913); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAnnotationStatement


    // $ANTLR start ruleAnnotationStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2036:1: ruleAnnotationStatement returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' ) ;
    public final EObject ruleAnnotationStatement() throws RecognitionException {
        EObject current = null;
        int ruleAnnotationStatement_StartIndex = input.index();
        Token lv_immutable_2=null;
        Token lv_op_4=null;
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_key_3 = null;

        EObject lv_value_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2041:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:2: ( 'when' (lv_filter_1= ruleFilter ) )? (lv_immutable_2= 'immutable' )? (lv_key_3= rulePropertyName ) (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) ) (lv_value_5= rulePropertyExpression ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==51) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2042:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleAnnotationStatement4948); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2046:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2049:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleAnnotationStatement4982);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2067:4: (lv_immutable_2= 'immutable' )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==52) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2069:6: lv_immutable_2= 'immutable'
                    {
                    lv_immutable_2=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_ruleAnnotationStatement5009); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getImmutableImmutableKeyword_1_0(), "immutable"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "immutable", true, "immutable", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2088:3: (lv_key_3= rulePropertyName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2091:6: lv_key_3= rulePropertyName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getKeyPropertyNameParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyName_in_ruleAnnotationStatement5057);
            lv_key_3=rulePropertyName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "key", lv_key_3, "PropertyName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2109:2: (lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:6: lv_op_4= ( '=' | '+=' | '-=' | '*=' | '/=' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:14: ( '=' | '+=' | '-=' | '*=' | '/=' )
            int alt40=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt40=1;
                }
                break;
            case 53:
                {
                alt40=2;
                }
                break;
            case 54:
                {
                alt40=3;
                }
                break;
            case 55:
                {
                alt40=4;
                }
                break;
            case 56:
                {
                alt40=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("2111:14: ( '=' | '+=' | '-=' | '*=' | '/=' )", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2111:15: '='
                    {
                    match(input,25,FOLLOW_25_in_ruleAnnotationStatement5083); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpEqualsSignKeyword_3_0_0(), "op"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2117:6: '+='
                    {
                    match(input,53,FOLLOW_53_in_ruleAnnotationStatement5099); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpPlusSignEqualsSignKeyword_3_0_1(), "op"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2123:6: '-='
                    {
                    match(input,54,FOLLOW_54_in_ruleAnnotationStatement5115); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpHyphenMinusEqualsSignKeyword_3_0_2(), "op"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2129:6: '*='
                    {
                    match(input,55,FOLLOW_55_in_ruleAnnotationStatement5131); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpAsteriskEqualsSignKeyword_3_0_3(), "op"); 
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2135:6: '/='
                    {
                    match(input,56,FOLLOW_56_in_ruleAnnotationStatement5147); 

                            createLeafNode(grammarAccess.getAnnotationStatementAccess().getOpSolidusEqualsSignKeyword_3_0_4(), "op"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "op", /* lv_op_4 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2155:2: (lv_value_5= rulePropertyExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2158:6: lv_value_5= rulePropertyExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAnnotationStatementAccess().getValuePropertyExpressionParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePropertyExpression_in_ruleAnnotationStatement5196);
            lv_value_5=rulePropertyExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAnnotationStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_5, "PropertyExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleAnnotationStatement5209); 

                    createLeafNode(grammarAccess.getAnnotationStatementAccess().getSemicolonKeyword_5(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAnnotationStatement


    // $ANTLR start entryRulePropertyExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2187:1: entryRulePropertyExpression returns [EObject current=null] : iv_rulePropertyExpression= rulePropertyExpression EOF ;
    public final EObject entryRulePropertyExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyExpression_StartIndex = input.index();
        EObject iv_rulePropertyExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2187:60: (iv_rulePropertyExpression= rulePropertyExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2188:2: iv_rulePropertyExpression= rulePropertyExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyExpression_in_entryRulePropertyExpression5242);
            iv_rulePropertyExpression=rulePropertyExpression();
            _fsp--;

             current =iv_rulePropertyExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyExpression5252); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyExpression


    // $ANTLR start rulePropertyExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2195:1: rulePropertyExpression returns [EObject current=null] : this_Expression_0= ruleExpression ;
    public final EObject rulePropertyExpression() throws RecognitionException {
        EObject current = null;
        int rulePropertyExpression_StartIndex = input.index();
        EObject this_Expression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2200:6: (this_Expression_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2202:5: this_Expression_0= ruleExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPropertyExpressionAccess().getExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleExpression_in_rulePropertyExpression5298);
            this_Expression_0=ruleExpression();
            _fsp--;

             
                    current = this_Expression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyExpression


    // $ANTLR start entryRuleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2217:1: entryRuleSynchronization returns [EObject current=null] : iv_ruleSynchronization= ruleSynchronization EOF ;
    public final EObject entryRuleSynchronization() throws RecognitionException {
        EObject current = null;
        int entryRuleSynchronization_StartIndex = input.index();
        EObject iv_ruleSynchronization = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2217:57: (iv_ruleSynchronization= ruleSynchronization EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2218:2: iv_ruleSynchronization= ruleSynchronization EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSynchronizationRule(), currentNode); 
            pushFollow(FOLLOW_ruleSynchronization_in_entryRuleSynchronization5329);
            iv_ruleSynchronization=ruleSynchronization();
            _fsp--;

             current =iv_ruleSynchronization; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronization5339); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronization


    // $ANTLR start ruleSynchronization
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2225:1: ruleSynchronization returns [EObject current=null] : ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) ;
    public final EObject ruleSynchronization() throws RecognitionException {
        EObject current = null;
        int ruleSynchronization_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_partrefs_0 = null;

        AntlrDatatypeRuleToken lv_partrefs_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2230:6: ( ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:1: ( (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:2: (lv_partrefs_0= ruleSynchronizedPart ) ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+ ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2231:2: (lv_partrefs_0= ruleSynchronizedPart )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2234:6: lv_partrefs_0= ruleSynchronizedPart
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5398);
            lv_partrefs_0=ruleSynchronizedPart();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "partrefs", lv_partrefs_0, "SynchronizedPart", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2252:2: ( ',' (lv_partrefs_2= ruleSynchronizedPart ) )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==33) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2252:3: ',' (lv_partrefs_2= ruleSynchronizedPart )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleSynchronization5412); 

            	            createLeafNode(grammarAccess.getSynchronizationAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2256:1: (lv_partrefs_2= ruleSynchronizedPart )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2259:6: lv_partrefs_2= ruleSynchronizedPart
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getSynchronizationAccess().getPartrefsSynchronizedPartParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5446);
            	    lv_partrefs_2=ruleSynchronizedPart();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getSynchronizationRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "partrefs", lv_partrefs_2, "SynchronizedPart", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);

            match(input,38,FOLLOW_38_in_ruleSynchronization5461); 

                    createLeafNode(grammarAccess.getSynchronizationAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronization


    // $ANTLR start entryRuleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:1: entryRuleSynchronizedPart returns [String current=null] : iv_ruleSynchronizedPart= ruleSynchronizedPart EOF ;
    public final String entryRuleSynchronizedPart() throws RecognitionException {
        String current = null;
        int entryRuleSynchronizedPart_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleSynchronizedPart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2288:57: (iv_ruleSynchronizedPart= ruleSynchronizedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2289:2: iv_ruleSynchronizedPart= ruleSynchronizedPart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSynchronizedPartRule(), currentNode); 
            pushFollow(FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5495);
            iv_ruleSynchronizedPart=ruleSynchronizedPart();
            _fsp--;

             current =iv_ruleSynchronizedPart.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSynchronizedPart5506); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSynchronizedPart


    // $ANTLR start ruleSynchronizedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2296:1: ruleSynchronizedPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) ;
    public final AntlrDatatypeRuleToken ruleSynchronizedPart() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleSynchronizedPart_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_CompoundName_0 = null;

        AntlrDatatypeRuleToken this_PartName_2 = null;

        AntlrDatatypeRuleToken this_PartName_3 = null;


         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2302:6: ( ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2303:2: (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2304:5: this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )?
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getCompoundNameParserRuleCall_0_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5554);
                    this_CompoundName_0=ruleCompoundName();
                    _fsp--;


                    		current.merge(this_CompoundName_0);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2314:1: (kw= '#' this_PartName_2= rulePartName )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==58) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2315:2: kw= '#' this_PartName_2= rulePartName
                            {
                            kw=(Token)input.LT(1);
                            match(input,58,FOLLOW_58_in_ruleSynchronizedPart5573); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getSynchronizedPartAccess().getNumberSignKeyword_0_1_0(), null); 
                                
                             
                                    currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_0_1_1(), currentNode); 
                                
                            pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5595);
                            this_PartName_2=rulePartName();
                            _fsp--;


                            		current.merge(this_PartName_2);
                                
                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2333:5: this_PartName_3= rulePartName
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getSynchronizedPartAccess().getPartNameParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePartName_in_ruleSynchronizedPart5631);
                    this_PartName_3=rulePartName();
                    _fsp--;


                    		current.merge(this_PartName_3);
                        
                     
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSynchronizedPart


    // $ANTLR start entryRuleBuildPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2351:1: entryRuleBuildPart returns [EObject current=null] : iv_ruleBuildPart= ruleBuildPart EOF ;
    public final EObject entryRuleBuildPart() throws RecognitionException {
        EObject current = null;
        int entryRuleBuildPart_StartIndex = input.index();
        EObject iv_ruleBuildPart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2351:51: (iv_ruleBuildPart= ruleBuildPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2352:2: iv_ruleBuildPart= ruleBuildPart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBuildPartRule(), currentNode); 
            pushFollow(FOLLOW_ruleBuildPart_in_entryRuleBuildPart5674);
            iv_ruleBuildPart=ruleBuildPart();
            _fsp--;

             current =iv_ruleBuildPart; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBuildPart5684); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBuildPart


    // $ANTLR start ruleBuildPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2359:1: ruleBuildPart returns [EObject current=null] : (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction ) ;
    public final EObject ruleBuildPart() throws RecognitionException {
        EObject current = null;
        int ruleBuildPart_StartIndex = input.index();
        EObject this_Artifacts_0 = null;

        EObject this_Group_1 = null;

        EObject this_Action_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2364:6: ( (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )
            int alt44=3;
            switch ( input.LA(1) ) {
            case 94:
                {
                switch ( input.LA(2) ) {
                case 96:
                    {
                    int LA44_4 = input.LA(3);

                    if ( (LA44_4==65) ) {
                        alt44=3;
                    }
                    else if ( (LA44_4==62) ) {
                        alt44=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 49:
                    {
                    int LA44_5 = input.LA(3);

                    if ( (LA44_5==62) ) {
                        alt44=2;
                    }
                    else if ( (LA44_5==65) ) {
                        alt44=3;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 62:
                    {
                    alt44=2;
                    }
                    break;
                case 59:
                    {
                    alt44=1;
                    }
                    break;
                case 65:
                    {
                    alt44=3;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 1, input);

                    throw nvae;
                }

                }
                break;
            case 95:
                {
                switch ( input.LA(2) ) {
                case 96:
                    {
                    int LA44_4 = input.LA(3);

                    if ( (LA44_4==65) ) {
                        alt44=3;
                    }
                    else if ( (LA44_4==62) ) {
                        alt44=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 49:
                    {
                    int LA44_5 = input.LA(3);

                    if ( (LA44_5==62) ) {
                        alt44=2;
                    }
                    else if ( (LA44_5==65) ) {
                        alt44=3;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    alt44=3;
                    }
                    break;
                case 59:
                    {
                    alt44=1;
                    }
                    break;
                case 62:
                    {
                    alt44=2;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 2, input);

                    throw nvae;
                }

                }
                break;
            case 59:
                {
                alt44=1;
                }
                break;
            case 96:
                {
                int LA44_4 = input.LA(2);

                if ( (LA44_4==65) ) {
                    alt44=3;
                }
                else if ( (LA44_4==62) ) {
                    alt44=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 4, input);

                    throw nvae;
                }
                }
                break;
            case 49:
                {
                int LA44_5 = input.LA(2);

                if ( (LA44_5==62) ) {
                    alt44=2;
                }
                else if ( (LA44_5==65) ) {
                    alt44=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 5, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                alt44=2;
                }
                break;
            case 65:
                {
                alt44=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("2365:1: (this_Artifacts_0= ruleArtifacts | this_Group_1= ruleGroup | this_Action_2= ruleAction )", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2366:5: this_Artifacts_0= ruleArtifacts
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getBuildPartAccess().getArtifactsParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleArtifacts_in_ruleBuildPart5731);
                    this_Artifacts_0=ruleArtifacts();
                    _fsp--;

                     
                            current = this_Artifacts_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2376:5: this_Group_1= ruleGroup
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getBuildPartAccess().getGroupParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleGroup_in_ruleBuildPart5758);
                    this_Group_1=ruleGroup();
                    _fsp--;

                     
                            current = this_Group_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2386:5: this_Action_2= ruleAction
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getBuildPartAccess().getActionParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleAction_in_ruleBuildPart5785);
                    this_Action_2=ruleAction();
                    _fsp--;

                     
                            current = this_Action_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBuildPart


    // $ANTLR start entryRuleArtifacts
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2401:1: entryRuleArtifacts returns [EObject current=null] : iv_ruleArtifacts= ruleArtifacts EOF ;
    public final EObject entryRuleArtifacts() throws RecognitionException {
        EObject current = null;
        int entryRuleArtifacts_StartIndex = input.index();
        EObject iv_ruleArtifacts = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2401:51: (iv_ruleArtifacts= ruleArtifacts EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2402:2: iv_ruleArtifacts= ruleArtifacts EOF
            {
             currentNode = createCompositeNode(grammarAccess.getArtifactsRule(), currentNode); 
            pushFollow(FOLLOW_ruleArtifacts_in_entryRuleArtifacts5817);
            iv_ruleArtifacts=ruleArtifacts();
            _fsp--;

             current =iv_ruleArtifacts; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleArtifacts5827); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleArtifacts


    // $ANTLR start ruleArtifacts
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2409:1: ruleArtifacts returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? 'artifacts' (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePostConditionAssert )? '{' (lv_paths_9= rulePathGroup )* '}' ) ;
    public final EObject ruleArtifacts() throws RecognitionException {
        EObject current = null;
        int ruleArtifacts_StartIndex = input.index();
        Enumerator lv_visibility_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        EObject lv_providedCapabilities_4 = null;

        EObject lv_providedCapabilities_6 = null;

        EObject lv_asserts_7 = null;

        EObject lv_paths_9 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2414:6: ( ( (lv_visibility_0= ruleVisibility )? 'artifacts' (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePostConditionAssert )? '{' (lv_paths_9= rulePathGroup )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2415:1: ( (lv_visibility_0= ruleVisibility )? 'artifacts' (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePostConditionAssert )? '{' (lv_paths_9= rulePathGroup )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2415:1: ( (lv_visibility_0= ruleVisibility )? 'artifacts' (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePostConditionAssert )? '{' (lv_paths_9= rulePathGroup )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2415:2: (lv_visibility_0= ruleVisibility )? 'artifacts' (lv_name_2= rulePartName ) ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )? (lv_asserts_7= rulePostConditionAssert )? '{' (lv_paths_9= rulePathGroup )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2415:2: (lv_visibility_0= ruleVisibility )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( ((LA45_0>=94 && LA45_0<=95)) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2418:6: lv_visibility_0= ruleVisibility
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVisibility_in_ruleArtifacts5886);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,59,FOLLOW_59_in_ruleArtifacts5900); 

                    createLeafNode(grammarAccess.getArtifactsAccess().getArtifactsKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2440:1: (lv_name_2= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2443:6: lv_name_2= rulePartName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getNamePartNameParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePartName_in_ruleArtifacts5934);
            lv_name_2=rulePartName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_2, "PartName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2461:2: ( 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )* )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==44) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2461:3: 'provides' (lv_providedCapabilities_4= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    {
                    match(input,44,FOLLOW_44_in_ruleArtifacts5948); 

                            createLeafNode(grammarAccess.getArtifactsAccess().getProvidesKeyword_3_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2465:1: (lv_providedCapabilities_4= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2468:6: lv_providedCapabilities_4= ruleProvidedCapability
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleArtifacts5982);
                    lv_providedCapabilities_4=ruleProvidedCapability();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "providedCapabilities", lv_providedCapabilities_4, "ProvidedCapability", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2486:2: ( ',' (lv_providedCapabilities_6= ruleProvidedCapability ) )*
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==33) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2486:3: ',' (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleArtifacts5996); 

                    	            createLeafNode(grammarAccess.getArtifactsAccess().getCommaKeyword_3_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2490:1: (lv_providedCapabilities_6= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2493:6: lv_providedCapabilities_6= ruleProvidedCapability
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_3_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleArtifacts6030);
                    	    lv_providedCapabilities_6=ruleProvidedCapability();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "providedCapabilities", lv_providedCapabilities_6, "ProvidedCapability", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2511:6: (lv_asserts_7= rulePostConditionAssert )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==70) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2514:6: lv_asserts_7= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getAssertsPostConditionAssertParserRuleCall_4_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleArtifacts6072);
                    lv_asserts_7=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_7, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleArtifacts6086); 

                    createLeafNode(grammarAccess.getArtifactsAccess().getLeftCurlyBracketKeyword_5(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2536:1: (lv_paths_9= rulePathGroup )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_ID||LA49_0==RULE_STRING||LA49_0==17||LA49_0==51||(LA49_0>=60 && LA49_0<=61)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2539:6: lv_paths_9= rulePathGroup
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getArtifactsAccess().getPathsPathGroupParserRuleCall_6_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePathGroup_in_ruleArtifacts6120);
            	    lv_paths_9=rulePathGroup();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getArtifactsRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "paths", lv_paths_9, "PathGroup", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleArtifacts6134); 

                    createLeafNode(grammarAccess.getArtifactsAccess().getRightCurlyBracketKeyword_7(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleArtifacts


    // $ANTLR start entryRulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2568:1: entryRulePathGroup returns [EObject current=null] : iv_rulePathGroup= rulePathGroup EOF ;
    public final EObject entryRulePathGroup() throws RecognitionException {
        EObject current = null;
        int entryRulePathGroup_StartIndex = input.index();
        EObject iv_rulePathGroup = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2568:51: (iv_rulePathGroup= rulePathGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2569:2: iv_rulePathGroup= rulePathGroup EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathGroupRule(), currentNode); 
            pushFollow(FOLLOW_rulePathGroup_in_entryRulePathGroup6167);
            iv_rulePathGroup=rulePathGroup();
            _fsp--;

             current =iv_rulePathGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePathGroup6177); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathGroup


    // $ANTLR start rulePathGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2576:1: rulePathGroup returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) ) ;
    public final EObject rulePathGroup() throws RecognitionException {
        EObject current = null;
        int rulePathGroup_StartIndex = input.index();
        Token lv_firstIsBase_5=null;
        EObject lv_filter_1 = null;

        EObject lv_paths_2 = null;

        EObject lv_paths_4 = null;

        EObject lv_paths_6 = null;

        EObject lv_paths_8 = null;

        AntlrDatatypeRuleToken lv_unsetProperties_14 = null;

        EObject lv_setProperties_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2581:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2582:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2582:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2582:2: ( 'when' (lv_filter_1= ruleFilter ) )? ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2582:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==51) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2582:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_rulePathGroup6212); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2586:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2589:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_rulePathGroup6246);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2607:4: ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID||LA55_0==RULE_STRING||LA55_0==17||LA55_0==61) ) {
                alt55=1;
            }
            else if ( (LA55_0==60) ) {
                alt55=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2607:4: ( ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' ) | ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' ) )", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2607:5: ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2607:5: ( (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2607:6: (lv_paths_2= rulePathExpression ) ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) ) ';'
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2607:6: (lv_paths_2= rulePathExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2610:6: lv_paths_2= rulePathExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup6288);
                    lv_paths_2=rulePathExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "paths", lv_paths_2, "PathExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:2: ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) )
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==33||LA53_0==38) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==31) ) {
                        alt53=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("2628:2: ( ( ',' (lv_paths_4= rulePathExpression ) )* | ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' ) )", 53, 0, input);

                        throw nvae;
                    }
                    switch (alt53) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:3: ( ',' (lv_paths_4= rulePathExpression ) )*
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:3: ( ',' (lv_paths_4= rulePathExpression ) )*
                            loop51:
                            do {
                                int alt51=2;
                                int LA51_0 = input.LA(1);

                                if ( (LA51_0==33) ) {
                                    alt51=1;
                                }


                                switch (alt51) {
                            	case 1 :
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2628:4: ',' (lv_paths_4= rulePathExpression )
                            	    {
                            	    match(input,33,FOLLOW_33_in_rulePathGroup6303); 

                            	            createLeafNode(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_0_0(), null); 
                            	        
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2632:1: (lv_paths_4= rulePathExpression )
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2635:6: lv_paths_4= rulePathExpression
                            	    {
                            	     
                            	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_0_1_0(), currentNode); 
                            	    	    
                            	    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup6337);
                            	    lv_paths_4=rulePathExpression();
                            	    _fsp--;


                            	    	        if (current==null) {
                            	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	    	        }
                            	    	        
                            	    	        try {
                            	    	       		add(current, "paths", lv_paths_4, "PathExpression", currentNode);
                            	    	        } catch (ValueConverterException vce) {
                            	    				handleValueConverterException(vce);
                            	    	        }
                            	    	        currentNode = currentNode.getParent();
                            	    	    

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop51;
                                }
                            } while (true);


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2654:6: ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' )
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2654:6: ( (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']' )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2654:7: (lv_firstIsBase_5= '[' ) (lv_paths_6= rulePathExpression ) ( ',' (lv_paths_8= rulePathExpression ) )* ']'
                            {
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2654:7: (lv_firstIsBase_5= '[' )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2656:6: lv_firstIsBase_5= '['
                            {
                            lv_firstIsBase_5=(Token)input.LT(1);
                            match(input,31,FOLLOW_31_in_rulePathGroup6371); 

                                    createLeafNode(grammarAccess.getPathGroupAccess().getFirstIsBaseLeftSquareBracketKeyword_1_0_1_1_0_0(), "firstIsBase"); 
                                

                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode, current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "firstIsBase", true, "[", lastConsumedNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	    

                            }

                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2675:2: (lv_paths_6= rulePathExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2678:6: lv_paths_6= rulePathExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup6418);
                            lv_paths_6=rulePathExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		add(current, "paths", lv_paths_6, "PathExpression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }

                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2696:2: ( ',' (lv_paths_8= rulePathExpression ) )*
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==33) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2696:3: ',' (lv_paths_8= rulePathExpression )
                            	    {
                            	    match(input,33,FOLLOW_33_in_rulePathGroup6432); 

                            	            createLeafNode(grammarAccess.getPathGroupAccess().getCommaKeyword_1_0_1_1_2_0(), null); 
                            	        
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2700:1: (lv_paths_8= rulePathExpression )
                            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2703:6: lv_paths_8= rulePathExpression
                            	    {
                            	     
                            	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getPathsPathExpressionParserRuleCall_1_0_1_1_2_1_0(), currentNode); 
                            	    	    
                            	    pushFollow(FOLLOW_rulePathExpression_in_rulePathGroup6466);
                            	    lv_paths_8=rulePathExpression();
                            	    _fsp--;


                            	    	        if (current==null) {
                            	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	    	        }
                            	    	        
                            	    	        try {
                            	    	       		add(current, "paths", lv_paths_8, "PathExpression", currentNode);
                            	    	        } catch (ValueConverterException vce) {
                            	    				handleValueConverterException(vce);
                            	    	        }
                            	    	        currentNode = currentNode.getParent();
                            	    	    

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);

                            match(input,34,FOLLOW_34_in_rulePathGroup6481); 

                                    createLeafNode(grammarAccess.getPathGroupAccess().getRightSquareBracketKeyword_1_0_1_1_3(), null); 
                                

                            }


                            }
                            break;

                    }

                    match(input,38,FOLLOW_38_in_rulePathGroup6492); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_0_2(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2730:6: ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2730:6: ( 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2730:7: 'annotations' '{' ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+ '}'
                    {
                    match(input,60,FOLLOW_60_in_rulePathGroup6509); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getAnnotationsKeyword_1_1_0(), null); 
                        
                    match(input,42,FOLLOW_42_in_rulePathGroup6518); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getLeftCurlyBracketKeyword_1_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2738:1: ( ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' ) | (lv_setProperties_16= ruleAnnotationStatement ) )+
                    int cnt54=0;
                    loop54:
                    do {
                        int alt54=3;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==57) ) {
                            alt54=1;
                        }
                        else if ( (LA54_0==RULE_PID||(LA54_0>=51 && LA54_0<=52)) ) {
                            alt54=2;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2738:2: ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' )
                    	    {
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2738:2: ( 'unset' (lv_unsetProperties_14= rulePropertyName ) ';' )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2738:3: 'unset' (lv_unsetProperties_14= rulePropertyName ) ';'
                    	    {
                    	    match(input,57,FOLLOW_57_in_rulePathGroup6529); 

                    	            createLeafNode(grammarAccess.getPathGroupAccess().getUnsetKeyword_1_1_2_0_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2742:1: (lv_unsetProperties_14= rulePropertyName )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2745:6: lv_unsetProperties_14= rulePropertyName
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getUnsetPropertiesPropertyNameParserRuleCall_1_1_2_0_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_rulePropertyName_in_rulePathGroup6563);
                    	    lv_unsetProperties_14=rulePropertyName();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "unsetProperties", lv_unsetProperties_14, "PropertyName", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }

                    	    match(input,38,FOLLOW_38_in_rulePathGroup6576); 

                    	            createLeafNode(grammarAccess.getPathGroupAccess().getSemicolonKeyword_1_1_2_0_2(), null); 
                    	        

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2768:6: (lv_setProperties_16= ruleAnnotationStatement )
                    	    {
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2768:6: (lv_setProperties_16= ruleAnnotationStatement )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2771:6: lv_setProperties_16= ruleAnnotationStatement
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getPathGroupAccess().getSetPropertiesAnnotationStatementParserRuleCall_1_1_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleAnnotationStatement_in_rulePathGroup6617);
                    	    lv_setProperties_16=ruleAnnotationStatement();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getPathGroupRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "setProperties", lv_setProperties_16, "AnnotationStatement", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt54 >= 1 ) break loop54;
                                EarlyExitException eee =
                                    new EarlyExitException(54, input);
                                throw eee;
                        }
                        cnt54++;
                    } while (true);

                    match(input,45,FOLLOW_45_in_rulePathGroup6632); 

                            createLeafNode(grammarAccess.getPathGroupAccess().getRightCurlyBracketKeyword_1_1_3(), null); 
                        

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathGroup


    // $ANTLR start entryRulePathExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2800:1: entryRulePathExpression returns [EObject current=null] : iv_rulePathExpression= rulePathExpression EOF ;
    public final EObject entryRulePathExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePathExpression_StartIndex = input.index();
        EObject iv_rulePathExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2800:56: (iv_rulePathExpression= rulePathExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2801:2: iv_rulePathExpression= rulePathExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePathExpression_in_entryRulePathExpression6667);
            iv_rulePathExpression=rulePathExpression();
            _fsp--;

             current =iv_rulePathExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePathExpression6677); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePathExpression


    // $ANTLR start rulePathExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2808:1: rulePathExpression returns [EObject current=null] : ( rulePath | this_ExprStatement_1= ruleExprStatement ) ;
    public final EObject rulePathExpression() throws RecognitionException {
        EObject current = null;
        int rulePathExpression_StartIndex = input.index();
        EObject this_ExprStatement_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2813:6: ( ( rulePath | this_ExprStatement_1= ruleExprStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2814:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2814:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_ID||LA56_0==RULE_STRING||LA56_0==17) ) {
                alt56=1;
            }
            else if ( (LA56_0==61) ) {
                alt56=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2814:1: ( rulePath | this_ExprStatement_1= ruleExprStatement )", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2814:2: rulePath
                    {
                    pushFollow(FOLLOW_rulePath_in_rulePathExpression6711);
                    rulePath();
                    _fsp--;


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2816:5: this_ExprStatement_1= ruleExprStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPathExpressionAccess().getExprStatementParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExprStatement_in_rulePathExpression6731);
                    this_ExprStatement_1=ruleExprStatement();
                    _fsp--;

                     
                            current = this_ExprStatement_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePathExpression


    // $ANTLR start entryRuleExprStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2831:1: entryRuleExprStatement returns [EObject current=null] : iv_ruleExprStatement= ruleExprStatement EOF ;
    public final EObject entryRuleExprStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleExprStatement_StartIndex = input.index();
        EObject iv_ruleExprStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2831:55: (iv_ruleExprStatement= ruleExprStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2832:2: iv_ruleExprStatement= ruleExprStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExprStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleExprStatement_in_entryRuleExprStatement6763);
            iv_ruleExprStatement=ruleExprStatement();
            _fsp--;

             current =iv_ruleExprStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExprStatement6773); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExprStatement


    // $ANTLR start ruleExprStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2839:1: ruleExprStatement returns [EObject current=null] : ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' ) ;
    public final EObject ruleExprStatement() throws RecognitionException {
        EObject current = null;
        int ruleExprStatement_StartIndex = input.index();
        EObject lv_expression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2844:6: ( ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2845:1: ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2845:1: ( 'expr' '(' (lv_expression_2= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2845:2: 'expr' '(' (lv_expression_2= ruleExpression ) ')'
            {
            match(input,61,FOLLOW_61_in_ruleExprStatement6807); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getExprKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleExprStatement6816); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2853:1: (lv_expression_2= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2856:6: lv_expression_2= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getExprStatementAccess().getExpressionExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleExprStatement6850);
            lv_expression_2=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getExprStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expression", lv_expression_2, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleExprStatement6863); 

                    createLeafNode(grammarAccess.getExprStatementAccess().getRightParenthesisKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExprStatement


    // $ANTLR start entryRulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2885:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;
        int entryRulePath_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2885:45: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2886:2: iv_rulePath= rulePath EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            pushFollow(FOLLOW_rulePath_in_entryRulePath6897);
            iv_rulePath=rulePath();
            _fsp--;

             current =iv_rulePath.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePath6908); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2893:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePath_StartIndex = input.index();
        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_2 = null;

        AntlrDatatypeRuleToken this_QualifiedName_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2901:6: ( (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2902:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2902:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_STRING) ) {
                alt60=1;
            }
            else if ( (LA60_0==RULE_ID||LA60_0==17) ) {
                alt60=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("2902:1: (this_STRING_0= RULE_STRING | ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? ) )", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2902:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_rulePath6948); 

                    		current.merge(this_STRING_0);
                        
                     
                        createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2910:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2910:6: ( (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2910:7: (kw= '/' )? this_QualifiedName_2= ruleQualifiedName (kw= '/' this_QualifiedName_4= ruleQualifiedName )* (kw= '/' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2910:7: (kw= '/' )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==17) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2911:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath6974); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                

                            }
                            break;

                    }

                     
                            currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath6998);
                    this_QualifiedName_2=ruleQualifiedName();
                    _fsp--;


                    		current.merge(this_QualifiedName_2);
                        
                     
                            currentNode = currentNode.getParent();
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2927:1: (kw= '/' this_QualifiedName_4= ruleQualifiedName )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==17) ) {
                            int LA58_1 = input.LA(2);

                            if ( (LA58_1==RULE_ID) ) {
                                alt58=1;
                            }


                        }


                        switch (alt58) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2928:2: kw= '/' this_QualifiedName_4= ruleQualifiedName
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,17,FOLLOW_17_in_rulePath7017); 

                    	            current.merge(kw);
                    	            createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	        
                    	     
                    	            currentNode=createCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_2_1(), currentNode); 
                    	        
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_rulePath7039);
                    	    this_QualifiedName_4=ruleQualifiedName();
                    	    _fsp--;


                    	    		current.merge(this_QualifiedName_4);
                    	        
                    	     
                    	            currentNode = currentNode.getParent();
                    	        

                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2944:3: (kw= '/' )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==17) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2945:2: kw= '/'
                            {
                            kw=(Token)input.LT(1);
                            match(input,17,FOLLOW_17_in_rulePath7060); 

                                    current.merge(kw);
                                    createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
            		myHiddenTokenState.restore();
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRuleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2958:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;
        int entryRuleGroup_StartIndex = input.index();
        EObject iv_ruleGroup = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2958:47: (iv_ruleGroup= ruleGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2959:2: iv_ruleGroup= ruleGroup EOF
            {
             currentNode = createCompositeNode(grammarAccess.getGroupRule(), currentNode); 
            pushFollow(FOLLOW_ruleGroup_in_entryRuleGroup7101);
            iv_ruleGroup=ruleGroup();
            _fsp--;

             current =iv_ruleGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroup7111); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleGroup


    // $ANTLR start ruleGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2966:1: ruleGroup returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'group' (lv_name_3= rulePartName ) ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' (lv_prerequisites_11= rulePrerequisite )* '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;
        int ruleGroup_StartIndex = input.index();
        Enumerator lv_visibility_0 = null;

        Enumerator lv_executionMode_1 = null;

        AntlrDatatypeRuleToken lv_name_3 = null;

        EObject lv_providedCapabilities_5 = null;

        EObject lv_providedCapabilities_7 = null;

        EObject lv_asserts_8 = null;

        EObject lv_asserts_9 = null;

        EObject lv_prerequisites_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2971:6: ( ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'group' (lv_name_3= rulePartName ) ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' (lv_prerequisites_11= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2972:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'group' (lv_name_3= rulePartName ) ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' (lv_prerequisites_11= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2972:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'group' (lv_name_3= rulePartName ) ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' (lv_prerequisites_11= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2972:2: (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'group' (lv_name_3= rulePartName ) ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' (lv_prerequisites_11= rulePrerequisite )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2972:2: (lv_visibility_0= ruleVisibility )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=94 && LA61_0<=95)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2975:6: lv_visibility_0= ruleVisibility
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVisibility_in_ruleGroup7170);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2993:3: (lv_executionMode_1= ruleExecutionMode )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==49||LA62_0==96) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:2996:6: lv_executionMode_1= ruleExecutionMode
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getExecutionModeExecutionModeEnumRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleGroup7209);
                    lv_executionMode_1=ruleExecutionMode();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "executionMode", lv_executionMode_1, "ExecutionMode", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,62,FOLLOW_62_in_ruleGroup7223); 

                    createLeafNode(grammarAccess.getGroupAccess().getGroupKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3018:1: (lv_name_3= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3021:6: lv_name_3= rulePartName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getNamePartNameParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePartName_in_ruleGroup7257);
            lv_name_3=rulePartName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_3, "PartName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3039:2: ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==44) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3039:3: 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )*
                    {
                    match(input,44,FOLLOW_44_in_ruleGroup7271); 

                            createLeafNode(grammarAccess.getGroupAccess().getProvidesKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3043:1: (lv_providedCapabilities_5= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3046:6: lv_providedCapabilities_5= ruleProvidedCapability
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleGroup7305);
                    lv_providedCapabilities_5=ruleProvidedCapability();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "providedCapabilities", lv_providedCapabilities_5, "ProvidedCapability", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3064:2: ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==33) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3064:3: ',' (lv_providedCapabilities_7= ruleProvidedCapability )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleGroup7319); 

                    	            createLeafNode(grammarAccess.getGroupAccess().getCommaKeyword_4_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3068:1: (lv_providedCapabilities_7= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3071:6: lv_providedCapabilities_7= ruleProvidedCapability
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleGroup7353);
                    	    lv_providedCapabilities_7=ruleProvidedCapability();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "providedCapabilities", lv_providedCapabilities_7, "ProvidedCapability", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3089:6: (lv_asserts_8= rulePreConditionAssert )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==69) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3092:6: lv_asserts_8= rulePreConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getAssertsPreConditionAssertParserRuleCall_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePreConditionAssert_in_ruleGroup7395);
                    lv_asserts_8=rulePreConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_8, "PreConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3110:3: (lv_asserts_9= rulePostConditionAssert )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==70) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3113:6: lv_asserts_9= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getAssertsPostConditionAssertParserRuleCall_6_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleGroup7434);
                    lv_asserts_9=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_9, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleGroup7448); 

                    createLeafNode(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_7(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3135:1: (lv_prerequisites_11= rulePrerequisite )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_ID||LA67_0==RULE_STRING||LA67_0==42||LA67_0==51||LA67_0==61||LA67_0==63) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3138:6: lv_prerequisites_11= rulePrerequisite
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_8_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleGroup7482);
            	    lv_prerequisites_11=rulePrerequisite();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getGroupRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "prerequisites", lv_prerequisites_11, "Prerequisite", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleGroup7496); 

                    createLeafNode(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_9(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleGroup


    // $ANTLR start entryRulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3167:1: entryRulePrerequisite returns [EObject current=null] : iv_rulePrerequisite= rulePrerequisite EOF ;
    public final EObject entryRulePrerequisite() throws RecognitionException {
        EObject current = null;
        int entryRulePrerequisite_StartIndex = input.index();
        EObject iv_rulePrerequisite = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3167:54: (iv_rulePrerequisite= rulePrerequisite EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3168:2: iv_rulePrerequisite= rulePrerequisite EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrerequisiteRule(), currentNode); 
            pushFollow(FOLLOW_rulePrerequisite_in_entryRulePrerequisite7529);
            iv_rulePrerequisite=rulePrerequisite();
            _fsp--;

             current =iv_rulePrerequisite; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisite7539); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisite


    // $ANTLR start rulePrerequisite
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3175:1: rulePrerequisite returns [EObject current=null] : ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) ;
    public final EObject rulePrerequisite() throws RecognitionException {
        EObject current = null;
        int rulePrerequisite_StartIndex = input.index();
        Token lv_surpressed_0=null;
        Token lv_alias_3=null;
        EObject lv_filter_2 = null;

        EObject lv_partReference_5 = null;

        EObject lv_closure_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3180:6: ( ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:1: ( ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) ) ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:2: ( (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:3: (lv_surpressed_0= 'hidden' )? ( 'when' (lv_filter_2= ruleFilter ) )? ( (lv_alias_3= RULE_ID ) '=' )? ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3181:3: (lv_surpressed_0= 'hidden' )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==63) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3183:6: lv_surpressed_0= 'hidden'
                    {
                    lv_surpressed_0=(Token)input.LT(1);
                    match(input,63,FOLLOW_63_in_rulePrerequisite7586); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getSurpressedHiddenKeyword_0_0_0(), "surpressed"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "surpressed", true, "hidden", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3202:3: ( 'when' (lv_filter_2= ruleFilter ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==51) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3202:4: 'when' (lv_filter_2= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_rulePrerequisite7610); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getWhenKeyword_0_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3206:1: (lv_filter_2= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3209:6: lv_filter_2= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getFilterFilterParserRuleCall_0_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_rulePrerequisite7644);
                    lv_filter_2=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_2, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3227:4: ( (lv_alias_3= RULE_ID ) '=' )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ID) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==25) ) {
                    alt70=1;
                }
            }
            switch (alt70) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3227:5: (lv_alias_3= RULE_ID ) '='
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3227:5: (lv_alias_3= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3229:6: lv_alias_3= RULE_ID
                    {
                    lv_alias_3=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rulePrerequisite7673); 

                    		createLeafNode(grammarAccess.getPrerequisiteAccess().getAliasIDTerminalRuleCall_0_2_0_0(), "alias"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "alias", lv_alias_3, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    match(input,25,FOLLOW_25_in_rulePrerequisite7690); 

                            createLeafNode(grammarAccess.getPrerequisiteAccess().getEqualsSignKeyword_0_2_1(), null); 
                        

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:3: ( (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:4: (lv_partReference_5= rulePrerequisiteEntry ) (lv_closure_6= ruleClosure )?
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3251:4: (lv_partReference_5= rulePrerequisiteEntry )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3254:6: lv_partReference_5= rulePrerequisiteEntry
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getPartReferencePrerequisiteEntryParserRuleCall_0_3_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite7727);
            lv_partReference_5=rulePrerequisiteEntry();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "partReference", lv_partReference_5, "PrerequisiteEntry", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3272:2: (lv_closure_6= ruleClosure )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==64) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3275:6: lv_closure_6= ruleClosure
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getPrerequisiteAccess().getClosureClosureParserRuleCall_0_3_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleClosure_in_rulePrerequisite7765);
                    lv_closure_6=ruleClosure();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPrerequisiteRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "closure", lv_closure_6, "Closure", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }


            }


            }

            match(input,38,FOLLOW_38_in_rulePrerequisite7781); 

                    createLeafNode(grammarAccess.getPrerequisiteAccess().getSemicolonKeyword_1(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisite


    // $ANTLR start entryRuleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3304:1: entryRuleClosure returns [EObject current=null] : iv_ruleClosure= ruleClosure EOF ;
    public final EObject entryRuleClosure() throws RecognitionException {
        EObject current = null;
        int entryRuleClosure_StartIndex = input.index();
        EObject iv_ruleClosure = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3304:49: (iv_ruleClosure= ruleClosure EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3305:2: iv_ruleClosure= ruleClosure EOF
            {
             currentNode = createCompositeNode(grammarAccess.getClosureRule(), currentNode); 
            pushFollow(FOLLOW_ruleClosure_in_entryRuleClosure7814);
            iv_ruleClosure=ruleClosure();
            _fsp--;

             current =iv_ruleClosure; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClosure7824); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosure


    // $ANTLR start ruleClosure
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3312:1: ruleClosure returns [EObject current=null] : ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' ) ;
    public final EObject ruleClosure() throws RecognitionException {
        EObject current = null;
        int ruleClosure_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_unsetProperties_5 = null;

        EObject lv_setProperties_7 = null;

        EObject lv_advice_10 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3317:6: ( ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3318:1: ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3318:1: ( 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3318:2: 'with' '{' ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )* '}'
            {
            match(input,64,FOLLOW_64_in_ruleClosure7858); 

                    createLeafNode(grammarAccess.getClosureAccess().getWithKeyword_0(), null); 
                
            match(input,42,FOLLOW_42_in_ruleClosure7867); 

                    createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3326:1: ( ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' ) | ( 'advice' (lv_advice_10= ruleCompoundAdvice ) ) )*
            loop73:
            do {
                int alt73=3;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==43) ) {
                    alt73=1;
                }
                else if ( (LA73_0==48) ) {
                    alt73=2;
                }


                switch (alt73) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3326:2: ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3326:2: ( 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3326:3: 'properties' '{' ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+ '}'
            	    {
            	    match(input,43,FOLLOW_43_in_ruleClosure7878); 

            	            createLeafNode(grammarAccess.getClosureAccess().getPropertiesKeyword_2_0_0(), null); 
            	        
            	    match(input,42,FOLLOW_42_in_ruleClosure7887); 

            	            createLeafNode(grammarAccess.getClosureAccess().getLeftCurlyBracketKeyword_2_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3334:1: ( ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' ) | (lv_setProperties_7= rulePropertyStatement ) )+
            	    int cnt72=0;
            	    loop72:
            	    do {
            	        int alt72=3;
            	        int LA72_0 = input.LA(1);

            	        if ( (LA72_0==57) ) {
            	            alt72=1;
            	        }
            	        else if ( (LA72_0==RULE_PID||LA72_0==52) ) {
            	            alt72=2;
            	        }


            	        switch (alt72) {
            	    	case 1 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3334:2: ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' )
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3334:2: ( 'unset' (lv_unsetProperties_5= rulePropertyName ) ';' )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3334:3: 'unset' (lv_unsetProperties_5= rulePropertyName ) ';'
            	    	    {
            	    	    match(input,57,FOLLOW_57_in_ruleClosure7898); 

            	    	            createLeafNode(grammarAccess.getClosureAccess().getUnsetKeyword_2_0_2_0_0(), null); 
            	    	        
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3338:1: (lv_unsetProperties_5= rulePropertyName )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3341:6: lv_unsetProperties_5= rulePropertyName
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getUnsetPropertiesPropertyNameParserRuleCall_2_0_2_0_1_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_rulePropertyName_in_ruleClosure7932);
            	    	    lv_unsetProperties_5=rulePropertyName();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "unsetProperties", lv_unsetProperties_5, "PropertyName", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }

            	    	    match(input,38,FOLLOW_38_in_ruleClosure7945); 

            	    	            createLeafNode(grammarAccess.getClosureAccess().getSemicolonKeyword_2_0_2_0_2(), null); 
            	    	        

            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3364:6: (lv_setProperties_7= rulePropertyStatement )
            	    	    {
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3364:6: (lv_setProperties_7= rulePropertyStatement )
            	    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3367:6: lv_setProperties_7= rulePropertyStatement
            	    	    {
            	    	     
            	    	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getSetPropertiesPropertyStatementParserRuleCall_2_0_2_1_0(), currentNode); 
            	    	    	    
            	    	    pushFollow(FOLLOW_rulePropertyStatement_in_ruleClosure7986);
            	    	    lv_setProperties_7=rulePropertyStatement();
            	    	    _fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	    	        }
            	    	    	        
            	    	    	        try {
            	    	    	       		add(current, "setProperties", lv_setProperties_7, "PropertyStatement", currentNode);
            	    	    	        } catch (ValueConverterException vce) {
            	    	    				handleValueConverterException(vce);
            	    	    	        }
            	    	    	        currentNode = currentNode.getParent();
            	    	    	    

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt72 >= 1 ) break loop72;
            	                EarlyExitException eee =
            	                    new EarlyExitException(72, input);
            	                throw eee;
            	        }
            	        cnt72++;
            	    } while (true);

            	    match(input,45,FOLLOW_45_in_ruleClosure8001); 

            	            createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_2_0_3(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3390:6: ( 'advice' (lv_advice_10= ruleCompoundAdvice ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3390:6: ( 'advice' (lv_advice_10= ruleCompoundAdvice ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3390:7: 'advice' (lv_advice_10= ruleCompoundAdvice )
            	    {
            	    match(input,48,FOLLOW_48_in_ruleClosure8018); 

            	            createLeafNode(grammarAccess.getClosureAccess().getAdviceKeyword_2_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3394:1: (lv_advice_10= ruleCompoundAdvice )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3397:6: lv_advice_10= ruleCompoundAdvice
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getClosureAccess().getAdviceCompoundAdviceParserRuleCall_2_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleClosure8052);
            	    lv_advice_10=ruleCompoundAdvice();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getClosureRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_10, "CompoundAdvice", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleClosure8068); 

                    createLeafNode(grammarAccess.getClosureAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosure


    // $ANTLR start entryRulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3426:1: entryRulePrerequisiteEntry returns [EObject current=null] : iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF ;
    public final EObject entryRulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;
        int entryRulePrerequisiteEntry_StartIndex = input.index();
        EObject iv_rulePrerequisiteEntry = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3426:59: (iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3427:2: iv_rulePrerequisiteEntry= rulePrerequisiteEntry EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrerequisiteEntryRule(), currentNode); 
            pushFollow(FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry8101);
            iv_rulePrerequisiteEntry=rulePrerequisiteEntry();
            _fsp--;

             current =iv_rulePrerequisiteEntry; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrerequisiteEntry8111); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrerequisiteEntry


    // $ANTLR start rulePrerequisiteEntry
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3434:1: rulePrerequisiteEntry returns [EObject current=null] : (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement ) ;
    public final EObject rulePrerequisiteEntry() throws RecognitionException {
        EObject current = null;
        int rulePrerequisiteEntry_StartIndex = input.index();
        EObject this_PartInSelf_0 = null;

        EObject this_CapabilityReferencedPart_1 = null;

        EObject this_CompoundReferences_2 = null;

        EObject this_ExprStatement_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3439:6: ( (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3440:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3440:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )
            int alt74=4;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3441:5: this_PartInSelf_0= rulePartInSelf
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getPartInSelfParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry8158);
                    this_PartInSelf_0=rulePartInSelf();
                    _fsp--;

                     
                            current = this_PartInSelf_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3451:5: this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCapabilityReferencedPartParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry8185);
                    this_CapabilityReferencedPart_1=ruleCapabilityReferencedPart();
                    _fsp--;

                     
                            current = this_CapabilityReferencedPart_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3461:5: this_CompoundReferences_2= ruleCompoundReferences
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getCompoundReferencesParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry8212);
                    this_CompoundReferences_2=ruleCompoundReferences();
                    _fsp--;

                     
                            current = this_CompoundReferences_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3471:5: this_ExprStatement_3= ruleExprStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrerequisiteEntryAccess().getExprStatementParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExprStatement_in_rulePrerequisiteEntry8239);
                    this_ExprStatement_3=ruleExprStatement();
                    _fsp--;

                     
                            current = this_ExprStatement_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrerequisiteEntry


    // $ANTLR start entryRulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3486:1: entryRulePartInSelf returns [EObject current=null] : iv_rulePartInSelf= rulePartInSelf EOF ;
    public final EObject entryRulePartInSelf() throws RecognitionException {
        EObject current = null;
        int entryRulePartInSelf_StartIndex = input.index();
        EObject iv_rulePartInSelf = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3486:52: (iv_rulePartInSelf= rulePartInSelf EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3487:2: iv_rulePartInSelf= rulePartInSelf EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPartInSelfRule(), currentNode); 
            pushFollow(FOLLOW_rulePartInSelf_in_entryRulePartInSelf8271);
            iv_rulePartInSelf=rulePartInSelf();
            _fsp--;

             current =iv_rulePartInSelf; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePartInSelf8281); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePartInSelf


    // $ANTLR start rulePartInSelf
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3494:1: rulePartInSelf returns [EObject current=null] : (lv_partName_0= rulePartName ) ;
    public final EObject rulePartInSelf() throws RecognitionException {
        EObject current = null;
        int rulePartInSelf_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_partName_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3499:6: ( (lv_partName_0= rulePartName ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3500:1: (lv_partName_0= rulePartName )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3500:1: (lv_partName_0= rulePartName )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3503:6: lv_partName_0= rulePartName
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getPartInSelfAccess().getPartNamePartNameParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePartName_in_rulePartInSelf8339);
            lv_partName_0=rulePartName();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPartInSelfRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "partName", lv_partName_0, "PartName", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePartInSelf


    // $ANTLR start entryRuleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3528:1: entryRuleCapabilityReferencedPart returns [EObject current=null] : iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF ;
    public final EObject entryRuleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;
        int entryRuleCapabilityReferencedPart_StartIndex = input.index();
        EObject iv_ruleCapabilityReferencedPart = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3528:66: (iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3529:2: iv_ruleCapabilityReferencedPart= ruleCapabilityReferencedPart EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCapabilityReferencedPartRule(), currentNode); 
            pushFollow(FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart8375);
            iv_ruleCapabilityReferencedPart=ruleCapabilityReferencedPart();
            _fsp--;

             current =iv_ruleCapabilityReferencedPart; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCapabilityReferencedPart8385); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCapabilityReferencedPart


    // $ANTLR start ruleCapabilityReferencedPart
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3536:1: ruleCapabilityReferencedPart returns [EObject current=null] : ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) ;
    public final EObject ruleCapabilityReferencedPart() throws RecognitionException {
        EObject current = null;
        int ruleCapabilityReferencedPart_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_interface_0 = null;

        AntlrDatatypeRuleToken lv_name_2 = null;

        AntlrDatatypeRuleToken lv_range_4 = null;

        AntlrDatatypeRuleToken lv_partName_6 = null;

        AntlrDatatypeRuleToken lv_interface_7 = null;

        AntlrDatatypeRuleToken lv_name_9 = null;

        AntlrDatatypeRuleToken lv_range_11 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3541:6: ( ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:2: ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:3: (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3542:3: (lv_interface_0= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3545:6: lv_interface_0= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart8445);
                    lv_interface_0=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "interface", lv_interface_0, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart8458); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3567:1: (lv_name_2= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3570:6: lv_name_2= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_0_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart8492);
                    lv_name_2=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3588:2: ( '/' (lv_range_4= ruleVersionRange ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==17) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3588:3: '/' (lv_range_4= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart8506); 

                                    createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_0_3_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3592:1: (lv_range_4= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3595:6: lv_range_4= ruleVersionRange
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_0_3_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart8540);
                            lv_range_4=ruleVersionRange();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "range", lv_range_4, "VersionRange", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }


                            }
                            break;

                    }

                    match(input,58,FOLLOW_58_in_ruleCapabilityReferencedPart8555); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getNumberSignKeyword_0_4(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3617:1: (lv_partName_6= rulePartName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3620:6: lv_partName_6= rulePartName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getPartNamePartNameParserRuleCall_0_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePartName_in_ruleCapabilityReferencedPart8589);
                    lv_partName_6=rulePartName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "partName", lv_partName_6, "PartName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3639:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3639:6: ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3639:7: (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3639:7: (lv_interface_7= ruleInterfaceName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3642:6: lv_interface_7= ruleInterfaceName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getInterfaceInterfaceNameParserRuleCall_1_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart8635);
                    lv_interface_7=ruleInterfaceName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "interface", lv_interface_7, "InterfaceName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart8648); 

                            createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3664:1: (lv_name_9= ruleUnitName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3667:6: lv_name_9= ruleUnitName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getNameUnitNameParserRuleCall_1_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart8682);
                    lv_name_9=ruleUnitName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_9, "UnitName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3685:2: ( '/' (lv_range_11= ruleVersionRange ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==17) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3685:3: '/' (lv_range_11= ruleVersionRange )
                            {
                            match(input,17,FOLLOW_17_in_ruleCapabilityReferencedPart8696); 

                                    createLeafNode(grammarAccess.getCapabilityReferencedPartAccess().getSolidusKeyword_1_3_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3689:1: (lv_range_11= ruleVersionRange )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3692:6: lv_range_11= ruleVersionRange
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getCapabilityReferencedPartAccess().getRangeVersionRangeParserRuleCall_1_3_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart8730);
                            lv_range_11=ruleVersionRange();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getCapabilityReferencedPartRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "range", lv_range_11, "VersionRange", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCapabilityReferencedPart


    // $ANTLR start entryRuleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3717:1: entryRuleCompoundReferences returns [EObject current=null] : iv_ruleCompoundReferences= ruleCompoundReferences EOF ;
    public final EObject entryRuleCompoundReferences() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundReferences_StartIndex = input.index();
        EObject iv_ruleCompoundReferences = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3717:60: (iv_ruleCompoundReferences= ruleCompoundReferences EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3718:2: iv_ruleCompoundReferences= ruleCompoundReferences EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundReferencesRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences8770);
            iv_ruleCompoundReferences=ruleCompoundReferences();
            _fsp--;

             current =iv_ruleCompoundReferences; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundReferences8780); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundReferences


    // $ANTLR start ruleCompoundReferences
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3725:1: ruleCompoundReferences returns [EObject current=null] : ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) ;
    public final EObject ruleCompoundReferences() throws RecognitionException {
        EObject current = null;
        int ruleCompoundReferences_StartIndex = input.index();
        EObject lv_prerequisites_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3730:6: ( ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3731:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3731:1: ( '{' (lv_prerequisites_1= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3731:2: '{' (lv_prerequisites_1= rulePrerequisite )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundReferences8814); 

                    createLeafNode(grammarAccess.getCompoundReferencesAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3735:1: (lv_prerequisites_1= rulePrerequisite )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_ID||LA78_0==RULE_STRING||LA78_0==42||LA78_0==51||LA78_0==61||LA78_0==63) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3738:6: lv_prerequisites_1= rulePrerequisite
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getCompoundReferencesAccess().getPrerequisitesPrerequisiteParserRuleCall_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleCompoundReferences8848);
            	    lv_prerequisites_1=rulePrerequisite();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getCompoundReferencesRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "prerequisites", lv_prerequisites_1, "Prerequisite", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundReferences8862); 

                    createLeafNode(grammarAccess.getCompoundReferencesAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundReferences


    // $ANTLR start entryRuleAction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3767:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;
        int entryRuleAction_StartIndex = input.index();
        EObject iv_ruleAction = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3767:48: (iv_ruleAction= ruleAction EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3768:2: iv_ruleAction= ruleAction EOF
            {
             currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAction_in_entryRuleAction8895);
            iv_ruleAction=ruleAction();
            _fsp--;

             current =iv_ruleAction; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAction8905); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAction


    // $ANTLR start ruleAction
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3775:1: ruleAction returns [EObject current=null] : ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'action' rulePartName ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_12= rulePropertyStatements ) )? (lv_advice_13= ruleAdvice )? (lv_resultGroup_14= ruleActionInputGroup )? (lv_layout_15= ruleLayout )* (lv_statements_16= ruleStatements ) '}' ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;
        int ruleAction_StartIndex = input.index();
        Enumerator lv_visibility_0 = null;

        Enumerator lv_executionMode_1 = null;

        EObject lv_providedCapabilities_5 = null;

        EObject lv_providedCapabilities_7 = null;

        EObject lv_asserts_8 = null;

        EObject lv_asserts_9 = null;

        EObject lv_properties_12 = null;

        EObject lv_advice_13 = null;

        EObject lv_resultGroup_14 = null;

        EObject lv_layout_15 = null;

        EObject lv_statements_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3780:6: ( ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'action' rulePartName ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_12= rulePropertyStatements ) )? (lv_advice_13= ruleAdvice )? (lv_resultGroup_14= ruleActionInputGroup )? (lv_layout_15= ruleLayout )* (lv_statements_16= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3781:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'action' rulePartName ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_12= rulePropertyStatements ) )? (lv_advice_13= ruleAdvice )? (lv_resultGroup_14= ruleActionInputGroup )? (lv_layout_15= ruleLayout )* (lv_statements_16= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3781:1: ( (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'action' rulePartName ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_12= rulePropertyStatements ) )? (lv_advice_13= ruleAdvice )? (lv_resultGroup_14= ruleActionInputGroup )? (lv_layout_15= ruleLayout )* (lv_statements_16= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3781:2: (lv_visibility_0= ruleVisibility )? (lv_executionMode_1= ruleExecutionMode )? 'action' rulePartName ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )? (lv_asserts_8= rulePreConditionAssert )? (lv_asserts_9= rulePostConditionAssert )? '{' ( 'properties' (lv_properties_12= rulePropertyStatements ) )? (lv_advice_13= ruleAdvice )? (lv_resultGroup_14= ruleActionInputGroup )? (lv_layout_15= ruleLayout )* (lv_statements_16= ruleStatements ) '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3781:2: (lv_visibility_0= ruleVisibility )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=94 && LA79_0<=95)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3784:6: lv_visibility_0= ruleVisibility
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getVisibilityVisibilityEnumRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVisibility_in_ruleAction8964);
                    lv_visibility_0=ruleVisibility();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "visibility", lv_visibility_0, "Visibility", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3802:3: (lv_executionMode_1= ruleExecutionMode )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==49||LA80_0==96) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3805:6: lv_executionMode_1= ruleExecutionMode
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getExecutionModeExecutionModeEnumRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExecutionMode_in_ruleAction9003);
                    lv_executionMode_1=ruleExecutionMode();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "executionMode", lv_executionMode_1, "ExecutionMode", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,65,FOLLOW_65_in_ruleAction9017); 

                    createLeafNode(grammarAccess.getActionAccess().getActionKeyword_2(), null); 
                
            pushFollow(FOLLOW_rulePartName_in_ruleAction9026);
            rulePartName();
            _fsp--;

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3827:13: ( 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==44) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3827:14: 'provides' (lv_providedCapabilities_5= ruleProvidedCapability ) ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )*
                    {
                    match(input,44,FOLLOW_44_in_ruleAction9028); 

                            createLeafNode(grammarAccess.getActionAccess().getProvidesKeyword_4_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3831:1: (lv_providedCapabilities_5= ruleProvidedCapability )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3834:6: lv_providedCapabilities_5= ruleProvidedCapability
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleAction9062);
                    lv_providedCapabilities_5=ruleProvidedCapability();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "providedCapabilities", lv_providedCapabilities_5, "ProvidedCapability", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3852:2: ( ',' (lv_providedCapabilities_7= ruleProvidedCapability ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==33) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3852:3: ',' (lv_providedCapabilities_7= ruleProvidedCapability )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleAction9076); 

                    	            createLeafNode(grammarAccess.getActionAccess().getCommaKeyword_4_2_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3856:1: (lv_providedCapabilities_7= ruleProvidedCapability )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3859:6: lv_providedCapabilities_7= ruleProvidedCapability
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_4_2_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleProvidedCapability_in_ruleAction9110);
                    	    lv_providedCapabilities_7=ruleProvidedCapability();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "providedCapabilities", lv_providedCapabilities_7, "ProvidedCapability", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3877:6: (lv_asserts_8= rulePreConditionAssert )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==69) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3880:6: lv_asserts_8= rulePreConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getAssertsPreConditionAssertParserRuleCall_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePreConditionAssert_in_ruleAction9152);
                    lv_asserts_8=rulePreConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_8, "PreConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3898:3: (lv_asserts_9= rulePostConditionAssert )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==70) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3901:6: lv_asserts_9= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getAssertsPostConditionAssertParserRuleCall_6_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleAction9191);
                    lv_asserts_9=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_9, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleAction9205); 

                    createLeafNode(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_7(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3923:1: ( 'properties' (lv_properties_12= rulePropertyStatements ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==43) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3923:2: 'properties' (lv_properties_12= rulePropertyStatements )
                    {
                    match(input,43,FOLLOW_43_in_ruleAction9215); 

                            createLeafNode(grammarAccess.getActionAccess().getPropertiesKeyword_8_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3927:1: (lv_properties_12= rulePropertyStatements )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3930:6: lv_properties_12= rulePropertyStatements
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getPropertiesPropertyStatementsParserRuleCall_8_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePropertyStatements_in_ruleAction9249);
                    lv_properties_12=rulePropertyStatements();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "properties", lv_properties_12, "PropertyStatements", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3948:4: (lv_advice_13= ruleAdvice )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==48) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3951:6: lv_advice_13= ruleAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getAdviceAdviceParserRuleCall_9_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleAdvice_in_ruleAction9289);
                    lv_advice_13=ruleAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_13, "Advice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3969:3: (lv_resultGroup_14= ruleActionInputGroup )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==62) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3972:6: lv_resultGroup_14= ruleActionInputGroup
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getResultGroupActionInputGroupParserRuleCall_10_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleActionInputGroup_in_ruleAction9328);
                    lv_resultGroup_14=ruleActionInputGroup();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "resultGroup", lv_resultGroup_14, "ActionInputGroup", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3990:3: (lv_layout_15= ruleLayout )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==51||LA88_0==66) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:3993:6: lv_layout_15= ruleLayout
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getLayoutLayoutParserRuleCall_11_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleLayout_in_ruleAction9367);
            	    lv_layout_15=ruleLayout();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "layout", lv_layout_15, "Layout", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4011:3: (lv_statements_16= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4014:6: lv_statements_16= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getStatementsStatementsParserRuleCall_12_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_ruleAction9406);
            lv_statements_16=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_16, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_ruleAction9419); 

                    createLeafNode(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_13(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAction


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4043:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleParameter_StartIndex = input.index();
        EObject iv_ruleParameter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4043:51: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4044:2: iv_ruleParameter= ruleParameter EOF
            {
             currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            pushFollow(FOLLOW_ruleParameter_in_entryRuleParameter9452);
            iv_ruleParameter=ruleParameter();
            _fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParameter9462); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4051:1: ruleParameter returns [EObject current=null] : (lv_val_0= ruleExpression ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;
        int ruleParameter_StartIndex = input.index();
        EObject lv_val_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4056:6: ( (lv_val_0= ruleExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4057:1: (lv_val_0= ruleExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4057:1: (lv_val_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4060:6: lv_val_0= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getValExpressionParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleParameter9520);
            lv_val_0=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4085:1: entryRuleLayout returns [EObject current=null] : iv_ruleLayout= ruleLayout EOF ;
    public final EObject entryRuleLayout() throws RecognitionException {
        EObject current = null;
        int entryRuleLayout_StartIndex = input.index();
        EObject iv_ruleLayout = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4085:48: (iv_ruleLayout= ruleLayout EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4086:2: iv_ruleLayout= ruleLayout EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLayoutRule(), currentNode); 
            pushFollow(FOLLOW_ruleLayout_in_entryRuleLayout9556);
            iv_ruleLayout=ruleLayout();
            _fsp--;

             current =iv_ruleLayout; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLayout9566); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLayout


    // $ANTLR start ruleLayout
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4093:1: ruleLayout returns [EObject current=null] : ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' ) ;
    public final EObject ruleLayout() throws RecognitionException {
        EObject current = null;
        int ruleLayout_StartIndex = input.index();
        EObject lv_filter_1 = null;

        AntlrDatatypeRuleToken lv_name_3 = null;

        EObject lv_asserts_4 = null;

        EObject lv_paths_6 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4098:6: ( ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:1: ( ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:2: ( 'when' (lv_filter_1= ruleFilter ) )? 'layout' (lv_name_3= ruleQualifiedName )? (lv_asserts_4= rulePostConditionAssert )? '{' (lv_paths_6= rulePathGroup )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:2: ( 'when' (lv_filter_1= ruleFilter ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==51) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4099:3: 'when' (lv_filter_1= ruleFilter )
                    {
                    match(input,51,FOLLOW_51_in_ruleLayout9601); 

                            createLeafNode(grammarAccess.getLayoutAccess().getWhenKeyword_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4103:1: (lv_filter_1= ruleFilter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4106:6: lv_filter_1= ruleFilter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getFilterFilterParserRuleCall_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleFilter_in_ruleLayout9635);
                    lv_filter_1=ruleFilter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "filter", lv_filter_1, "Filter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            match(input,66,FOLLOW_66_in_ruleLayout9650); 

                    createLeafNode(grammarAccess.getLayoutAccess().getLayoutKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4128:1: (lv_name_3= ruleQualifiedName )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_ID) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4131:6: lv_name_3= ruleQualifiedName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getNameQualifiedNameParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleLayout9684);
                    lv_name_3=ruleQualifiedName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_3, "QualifiedName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4149:3: (lv_asserts_4= rulePostConditionAssert )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==70) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4152:6: lv_asserts_4= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getAssertsPostConditionAssertParserRuleCall_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleLayout9723);
                    lv_asserts_4=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_4, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleLayout9737); 

                    createLeafNode(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4174:1: (lv_paths_6= rulePathGroup )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==RULE_ID||LA92_0==RULE_STRING||LA92_0==17||LA92_0==51||(LA92_0>=60 && LA92_0<=61)) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4177:6: lv_paths_6= rulePathGroup
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getPathsPathGroupParserRuleCall_5_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePathGroup_in_ruleLayout9771);
            	    lv_paths_6=rulePathGroup();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "paths", lv_paths_6, "PathGroup", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleLayout9785); 

                    createLeafNode(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_6(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLayout


    // $ANTLR start entryRuleActionInputGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4206:1: entryRuleActionInputGroup returns [EObject current=null] : iv_ruleActionInputGroup= ruleActionInputGroup EOF ;
    public final EObject entryRuleActionInputGroup() throws RecognitionException {
        EObject current = null;
        int entryRuleActionInputGroup_StartIndex = input.index();
        EObject iv_ruleActionInputGroup = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4206:58: (iv_ruleActionInputGroup= ruleActionInputGroup EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4207:2: iv_ruleActionInputGroup= ruleActionInputGroup EOF
            {
             currentNode = createCompositeNode(grammarAccess.getActionInputGroupRule(), currentNode); 
            pushFollow(FOLLOW_ruleActionInputGroup_in_entryRuleActionInputGroup9818);
            iv_ruleActionInputGroup=ruleActionInputGroup();
            _fsp--;

             current =iv_ruleActionInputGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleActionInputGroup9828); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleActionInputGroup


    // $ANTLR start ruleActionInputGroup
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4214:1: ruleActionInputGroup returns [EObject current=null] : ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) ;
    public final EObject ruleActionInputGroup() throws RecognitionException {
        EObject current = null;
        int ruleActionInputGroup_StartIndex = input.index();
        EObject lv_asserts_1 = null;

        EObject lv_asserts_2 = null;

        EObject lv_prerequisites_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4219:6: ( ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4220:1: ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4220:1: ( 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4220:2: 'group' (lv_asserts_1= rulePreConditionAssert )? (lv_asserts_2= rulePostConditionAssert )? '{' (lv_prerequisites_4= rulePrerequisite )* '}'
            {
            match(input,62,FOLLOW_62_in_ruleActionInputGroup9862); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getGroupKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4224:1: (lv_asserts_1= rulePreConditionAssert )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==69) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4227:6: lv_asserts_1= rulePreConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getAssertsPreConditionAssertParserRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePreConditionAssert_in_ruleActionInputGroup9896);
                    lv_asserts_1=rulePreConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_1, "PreConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4245:3: (lv_asserts_2= rulePostConditionAssert )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==70) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4248:6: lv_asserts_2= rulePostConditionAssert
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getAssertsPostConditionAssertParserRuleCall_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_rulePostConditionAssert_in_ruleActionInputGroup9935);
                    lv_asserts_2=rulePostConditionAssert();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "asserts", lv_asserts_2, "PostConditionAssert", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,42,FOLLOW_42_in_ruleActionInputGroup9949); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getLeftCurlyBracketKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4270:1: (lv_prerequisites_4= rulePrerequisite )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==RULE_ID||LA95_0==RULE_STRING||LA95_0==42||LA95_0==51||LA95_0==61||LA95_0==63) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4273:6: lv_prerequisites_4= rulePrerequisite
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getActionInputGroupAccess().getPrerequisitesPrerequisiteParserRuleCall_4_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_rulePrerequisite_in_ruleActionInputGroup9983);
            	    lv_prerequisites_4=rulePrerequisite();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getActionInputGroupRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "prerequisites", lv_prerequisites_4, "Prerequisite", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleActionInputGroup9997); 

                    createLeafNode(grammarAccess.getActionInputGroupAccess().getRightCurlyBracketKeyword_5(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleActionInputGroup


    // $ANTLR start entryRuleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4302:1: entryRuleRepositoryConfiguration returns [EObject current=null] : iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF ;
    public final EObject entryRuleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;
        int entryRuleRepositoryConfiguration_StartIndex = input.index();
        EObject iv_ruleRepositoryConfiguration = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4302:65: (iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4303:2: iv_ruleRepositoryConfiguration= ruleRepositoryConfiguration EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRepositoryConfigurationRule(), currentNode); 
            pushFollow(FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration10030);
            iv_ruleRepositoryConfiguration=ruleRepositoryConfiguration();
            _fsp--;

             current =iv_ruleRepositoryConfiguration; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRepositoryConfiguration10040); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRepositoryConfiguration


    // $ANTLR start ruleRepositoryConfiguration
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4310:1: ruleRepositoryConfiguration returns [EObject current=null] : ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) ;
    public final EObject ruleRepositoryConfiguration() throws RecognitionException {
        EObject current = null;
        int ruleRepositoryConfiguration_StartIndex = input.index();
        AntlrDatatypeRuleToken lv_location_0 = null;

        AntlrDatatypeRuleToken lv_resolverClass_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4315:6: ( ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:1: ( ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) ) (lv_advice_3= ruleCompoundAdvice )? ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_STRING) ) {
                alt96=1;
            }
            else if ( (LA96_0==67) ) {
                alt96=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("4316:2: ( (lv_location_0= ruleURI ) | ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) ) )", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:3: (lv_location_0= ruleURI )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4316:3: (lv_location_0= ruleURI )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4319:6: lv_location_0= ruleURI
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getLocationURIParserRuleCall_0_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleURI_in_ruleRepositoryConfiguration10100);
                    lv_location_0=ruleURI();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "location", lv_location_0, "URI", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4338:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4338:6: ( 'resolver' (lv_resolverClass_2= ruleQualifiedName ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4338:7: 'resolver' (lv_resolverClass_2= ruleQualifiedName )
                    {
                    match(input,67,FOLLOW_67_in_ruleRepositoryConfiguration10120); 

                            createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getResolverKeyword_0_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4342:1: (lv_resolverClass_2= ruleQualifiedName )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4345:6: lv_resolverClass_2= ruleQualifiedName
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getResolverClassQualifiedNameParserRuleCall_0_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration10154);
                    lv_resolverClass_2=ruleQualifiedName();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "resolverClass", lv_resolverClass_2, "QualifiedName", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4363:4: (lv_advice_3= ruleCompoundAdvice )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==42) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4366:6: lv_advice_3= ruleCompoundAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getRepositoryConfigurationAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration10194);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getRepositoryConfigurationRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleRepositoryConfiguration10208); 

                    createLeafNode(grammarAccess.getRepositoryConfigurationAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRepositoryConfiguration


    // $ANTLR start entryRuleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4395:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;
        int entryRuleURI_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4395:44: (iv_ruleURI= ruleURI EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4396:2: iv_ruleURI= ruleURI EOF
            {
             currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); 
            pushFollow(FOLLOW_ruleURI_in_entryRuleURI10242);
            iv_ruleURI=ruleURI();
            _fsp--;

             current =iv_ruleURI.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleURI10253); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleURI


    // $ANTLR start ruleURI
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4403:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleURI_StartIndex = input.index();
        Token this_STRING_0=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4409:6: (this_STRING_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4410:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleURI10292); 

            		current.merge(this_STRING_0);
                
             
                createLeafNode(grammarAccess.getURIAccess().getSTRINGTerminalRuleCall(), null); 
                

            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleURI


    // $ANTLR start entryRuleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4425:1: entryRuleNamedAdvice returns [EObject current=null] : iv_ruleNamedAdvice= ruleNamedAdvice EOF ;
    public final EObject entryRuleNamedAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleNamedAdvice_StartIndex = input.index();
        EObject iv_ruleNamedAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4425:53: (iv_ruleNamedAdvice= ruleNamedAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4426:2: iv_ruleNamedAdvice= ruleNamedAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNamedAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice10334);
            iv_ruleNamedAdvice=ruleNamedAdvice();
            _fsp--;

             current =iv_ruleNamedAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNamedAdvice10344); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNamedAdvice


    // $ANTLR start ruleNamedAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4433:1: ruleNamedAdvice returns [EObject current=null] : ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) ;
    public final EObject ruleNamedAdvice() throws RecognitionException {
        EObject current = null;
        int ruleNamedAdvice_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4438:6: ( ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4439:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4439:1: ( (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4439:2: (lv_name_0= RULE_ID )? (lv_advice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4439:2: (lv_name_0= RULE_ID )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4441:6: lv_name_0= RULE_ID
                    {
                    lv_name_0=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleNamedAdvice10391); 

                    		createLeafNode(grammarAccess.getNamedAdviceAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4459:3: (lv_advice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4462:6: lv_advice_1= ruleCompoundAdvice
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getNamedAdviceAccess().getAdviceCompoundAdviceParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice10434);
            lv_advice_1=ruleCompoundAdvice();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNamedAdviceRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "advice", lv_advice_1, "CompoundAdvice", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNamedAdvice


    // $ANTLR start entryRuleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4487:1: entryRuleAdvice returns [EObject current=null] : iv_ruleAdvice= ruleAdvice EOF ;
    public final EObject entryRuleAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvice_StartIndex = input.index();
        EObject iv_ruleAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4487:48: (iv_ruleAdvice= ruleAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4488:2: iv_ruleAdvice= ruleAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvice_in_entryRuleAdvice10471);
            iv_ruleAdvice=ruleAdvice();
            _fsp--;

             current =iv_ruleAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvice10481); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvice


    // $ANTLR start ruleAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4495:1: ruleAdvice returns [EObject current=null] : ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) ;
    public final EObject ruleAdvice() throws RecognitionException {
        EObject current = null;
        int ruleAdvice_StartIndex = input.index();
        EObject this_CompoundAdvice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4500:6: ( ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4501:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4501:1: ( 'advice' this_CompoundAdvice_1= ruleCompoundAdvice )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4501:2: 'advice' this_CompoundAdvice_1= ruleCompoundAdvice
            {
            match(input,48,FOLLOW_48_in_ruleAdvice10515); 

                    createLeafNode(grammarAccess.getAdviceAccess().getAdviceKeyword_0(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getAdviceAccess().getCompoundAdviceParserRuleCall_1(), currentNode); 
                
            pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdvice10537);
            this_CompoundAdvice_1=ruleCompoundAdvice();
            _fsp--;

             
                    current = this_CompoundAdvice_1; 
                    currentNode = currentNode.getParent();
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvice


    // $ANTLR start entryRuleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4521:1: entryRuleCompoundAdvice returns [EObject current=null] : iv_ruleCompoundAdvice= ruleCompoundAdvice EOF ;
    public final EObject entryRuleCompoundAdvice() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundAdvice_StartIndex = input.index();
        EObject iv_ruleCompoundAdvice = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4521:56: (iv_ruleCompoundAdvice= ruleCompoundAdvice EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4522:2: iv_ruleCompoundAdvice= ruleCompoundAdvice EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundAdviceRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice10569);
            iv_ruleCompoundAdvice=ruleCompoundAdvice();
            _fsp--;

             current =iv_ruleCompoundAdvice; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundAdvice10579); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundAdvice


    // $ANTLR start ruleCompoundAdvice
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4529:1: ruleCompoundAdvice returns [EObject current=null] : ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) ;
    public final EObject ruleCompoundAdvice() throws RecognitionException {
        EObject current = null;
        int ruleCompoundAdvice_StartIndex = input.index();
        EObject lv_advice_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4534:6: ( ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4535:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4535:1: ( '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4535:2: '{' ( (lv_advice_1= ruleAdviceStatement ) ';' )* '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundAdvice10613); 

                    createLeafNode(grammarAccess.getCompoundAdviceAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4539:1: ( (lv_advice_1= ruleAdviceStatement ) ';' )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_ID||LA99_0==15||LA99_0==17||LA99_0==30||LA99_0==68) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4539:2: (lv_advice_1= ruleAdviceStatement ) ';'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4539:2: (lv_advice_1= ruleAdviceStatement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4542:6: lv_advice_1= ruleAdviceStatement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getCompoundAdviceAccess().getAdviceAdviceStatementParserRuleCall_1_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice10648);
            	    lv_advice_1=ruleAdviceStatement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getCompoundAdviceRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "advice", lv_advice_1, "AdviceStatement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,38,FOLLOW_38_in_ruleCompoundAdvice10661); 

            	            createLeafNode(grammarAccess.getCompoundAdviceAccess().getSemicolonKeyword_1_1(), null); 
            	        

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_ruleCompoundAdvice10672); 

                    createLeafNode(grammarAccess.getCompoundAdviceAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundAdvice


    // $ANTLR start entryRuleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4575:1: entryRuleAdviceStatement returns [EObject current=null] : iv_ruleAdviceStatement= ruleAdviceStatement EOF ;
    public final EObject entryRuleAdviceStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleAdviceStatement_StartIndex = input.index();
        EObject iv_ruleAdviceStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4575:57: (iv_ruleAdviceStatement= ruleAdviceStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4576:2: iv_ruleAdviceStatement= ruleAdviceStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdviceStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement10705);
            iv_ruleAdviceStatement=ruleAdviceStatement();
            _fsp--;

             current =iv_ruleAdviceStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdviceStatement10715); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdviceStatement


    // $ANTLR start ruleAdviceStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4583:1: ruleAdviceStatement returns [EObject current=null] : ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) ;
    public final EObject ruleAdviceStatement() throws RecognitionException {
        EObject current = null;
        int ruleAdviceStatement_StartIndex = input.index();
        EObject lv_path_0 = null;

        EObject lv_value_2 = null;

        EObject lv_advice_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4588:6: ( ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4589:1: ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4589:1: ( (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4589:2: (lv_path_0= ruleAdvicePath ) ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4589:2: (lv_path_0= ruleAdvicePath )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4592:6: lv_path_0= ruleAdvicePath
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getPathAdvicePathParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAdvicePath_in_ruleAdviceStatement10774);
            lv_path_0=ruleAdvicePath();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "path", lv_path_0, "AdvicePath", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4610:2: ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==25) ) {
                alt100=1;
            }
            else if ( (LA100_0==42) ) {
                alt100=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("4610:2: ( ( '=' (lv_value_2= ruleExpression ) ) | (lv_advice_3= ruleCompoundAdvice ) )", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4610:3: ( '=' (lv_value_2= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4610:3: ( '=' (lv_value_2= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4610:4: '=' (lv_value_2= ruleExpression )
                    {
                    match(input,25,FOLLOW_25_in_ruleAdviceStatement10789); 

                            createLeafNode(grammarAccess.getAdviceStatementAccess().getEqualsSignKeyword_1_0_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4614:1: (lv_value_2= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4617:6: lv_value_2= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getValueExpressionParserRuleCall_1_0_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleAdviceStatement10823);
                    lv_value_2=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "value", lv_value_2, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4636:6: (lv_advice_3= ruleCompoundAdvice )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4636:6: (lv_advice_3= ruleCompoundAdvice )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4639:6: lv_advice_3= ruleCompoundAdvice
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdviceStatementAccess().getAdviceCompoundAdviceParserRuleCall_1_1_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement10868);
                    lv_advice_3=ruleCompoundAdvice();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdviceStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "advice", lv_advice_3, "CompoundAdvice", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdviceStatement


    // $ANTLR start entryRuleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4664:1: entryRuleAdvicePath returns [EObject current=null] : iv_ruleAdvicePath= ruleAdvicePath EOF ;
    public final EObject entryRuleAdvicePath() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePath_StartIndex = input.index();
        EObject iv_ruleAdvicePath = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4664:52: (iv_ruleAdvicePath= ruleAdvicePath EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4665:2: iv_ruleAdvicePath= ruleAdvicePath EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath10906);
            iv_ruleAdvicePath=ruleAdvicePath();
            _fsp--;

             current =iv_ruleAdvicePath; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePath10916); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePath


    // $ANTLR start ruleAdvicePath
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4672:1: ruleAdvicePath returns [EObject current=null] : ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* ) ;
    public final EObject ruleAdvicePath() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePath_StartIndex = input.index();
        EObject lv_pathElements_0 = null;

        EObject lv_pathElements_1 = null;

        EObject lv_pathElements_2 = null;

        EObject lv_pathElement_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4677:6: ( ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4678:1: ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4678:1: ( (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4678:2: (lv_pathElements_0= ruleAdvicePathSeparator )? (lv_pathElements_1= ruleAdvicePathElement ) ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4678:2: (lv_pathElements_0= ruleAdvicePathSeparator )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==17) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4681:6: lv_pathElements_0= ruleAdvicePathSeparator
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10975);
                    lv_pathElements_0=ruleAdvicePathSeparator();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "pathElements", lv_pathElements_0, "AdvicePathSeparator", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4699:3: (lv_pathElements_1= ruleAdvicePathElement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4702:6: lv_pathElements_1= ruleAdvicePathElement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathElementParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath11014);
            lv_pathElements_1=ruleAdvicePathElement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "pathElements", lv_pathElements_1, "AdvicePathElement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4720:2: ( (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==17) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4720:3: (lv_pathElements_2= ruleAdvicePathSeparator ) (lv_pathElement_3= ruleAdvicePathElement )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4720:3: (lv_pathElements_2= ruleAdvicePathSeparator )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4723:6: lv_pathElements_2= ruleAdvicePathSeparator
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementsAdvicePathSeparatorParserRuleCall_2_0_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath11053);
            	    lv_pathElements_2=ruleAdvicePathSeparator();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "pathElements", lv_pathElements_2, "AdvicePathSeparator", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4741:2: (lv_pathElement_3= ruleAdvicePathElement )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4744:6: lv_pathElement_3= ruleAdvicePathElement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdvicePathAccess().getPathElementAdvicePathElementParserRuleCall_2_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath11091);
            	    lv_pathElement_3=ruleAdvicePathElement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdvicePathRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "pathElement", lv_pathElement_3, "AdvicePathElement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePath


    // $ANTLR start entryRuleAdvicePathSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4769:1: entryRuleAdvicePathSeparator returns [EObject current=null] : iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF ;
    public final EObject entryRuleAdvicePathSeparator() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathSeparator_StartIndex = input.index();
        EObject iv_ruleAdvicePathSeparator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4769:61: (iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4770:2: iv_ruleAdvicePathSeparator= ruleAdvicePathSeparator EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathSeparatorRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathSeparator_in_entryRuleAdvicePathSeparator11130);
            iv_ruleAdvicePathSeparator=ruleAdvicePathSeparator();
            _fsp--;

             current =iv_ruleAdvicePathSeparator; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathSeparator11140); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathSeparator


    // $ANTLR start ruleAdvicePathSeparator
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4777:1: ruleAdvicePathSeparator returns [EObject current=null] : this_AdvicePathChildren_0= ruleAdvicePathChildren ;
    public final EObject ruleAdvicePathSeparator() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathSeparator_StartIndex = input.index();
        EObject this_AdvicePathChildren_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4782:6: (this_AdvicePathChildren_0= ruleAdvicePathChildren )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4784:5: this_AdvicePathChildren_0= ruleAdvicePathChildren
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAdvicePathSeparatorAccess().getAdvicePathChildrenParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleAdvicePathChildren_in_ruleAdvicePathSeparator11186);
            this_AdvicePathChildren_0=ruleAdvicePathChildren();
            _fsp--;

             
                    current = this_AdvicePathChildren_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathSeparator


    // $ANTLR start entryRuleAdvicePathChildren
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4799:1: entryRuleAdvicePathChildren returns [EObject current=null] : iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF ;
    public final EObject entryRuleAdvicePathChildren() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathChildren_StartIndex = input.index();
        EObject iv_ruleAdvicePathChildren = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4799:60: (iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4800:2: iv_ruleAdvicePathChildren= ruleAdvicePathChildren EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathChildrenRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathChildren_in_entryRuleAdvicePathChildren11217);
            iv_ruleAdvicePathChildren=ruleAdvicePathChildren();
            _fsp--;

             current =iv_ruleAdvicePathChildren; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathChildren11227); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathChildren


    // $ANTLR start ruleAdvicePathChildren
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4807:1: ruleAdvicePathChildren returns [EObject current=null] : ( () '/' ) ;
    public final EObject ruleAdvicePathChildren() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathChildren_StartIndex = input.index();
         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4812:6: ( ( () '/' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4813:1: ( () '/' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4813:1: ( () '/' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4813:2: () '/'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4813:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4814:5: 
            {
             
                    temp=factory.create(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getAdvicePathChildrenAccess().getAdvicePathChildrenAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,17,FOLLOW_17_in_ruleAdvicePathChildren11270); 

                    createLeafNode(grammarAccess.getAdvicePathChildrenAccess().getSolidusKeyword_1(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathChildren


    // $ANTLR start entryRuleAdvicePathElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4835:1: entryRuleAdvicePathElement returns [EObject current=null] : iv_ruleAdvicePathElement= ruleAdvicePathElement EOF ;
    public final EObject entryRuleAdvicePathElement() throws RecognitionException {
        EObject current = null;
        int entryRuleAdvicePathElement_StartIndex = input.index();
        EObject iv_ruleAdvicePathElement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4835:59: (iv_ruleAdvicePathElement= ruleAdvicePathElement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4836:2: iv_ruleAdvicePathElement= ruleAdvicePathElement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdvicePathElementRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdvicePathElement_in_entryRuleAdvicePathElement11303);
            iv_ruleAdvicePathElement=ruleAdvicePathElement();
            _fsp--;

             current =iv_ruleAdvicePathElement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdvicePathElement11313); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdvicePathElement


    // $ANTLR start ruleAdvicePathElement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4843:1: ruleAdvicePathElement returns [EObject current=null] : ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) ) ;
    public final EObject ruleAdvicePathElement() throws RecognitionException {
        EObject current = null;
        int ruleAdvicePathElement_StartIndex = input.index();
        Token lv_node_0=null;
        Token lv_node_4=null;
        EObject lv_predicate_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4848:6: ( ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==RULE_ID||LA105_0==15||LA105_0==30) ) {
                alt105=1;
            }
            else if ( (LA105_0==68) ) {
                alt105=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("4849:1: ( ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? ) | (lv_node_4= '..' ) )", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:2: ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:2: ( (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )? )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:3: (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) ) ( '[' (lv_predicate_2= ruleExpression ) ']' )?
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4849:3: (lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4851:6: lv_node_0= ( ruleQualifiedName | ruleWildcardNode | '.' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4851:16: ( ruleQualifiedName | ruleWildcardNode | '.' )
                    int alt103=3;
                    switch ( input.LA(1) ) {
                    case RULE_ID:
                        {
                        alt103=1;
                        }
                        break;
                    case 30:
                        {
                        alt103=2;
                        }
                        break;
                    case 15:
                        {
                        alt103=3;
                        }
                        break;
                    default:
                        NoViableAltException nvae =
                            new NoViableAltException("4851:16: ( ruleQualifiedName | ruleWildcardNode | '.' )", 103, 0, input);

                        throw nvae;
                    }

                    switch (alt103) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4851:18: ruleQualifiedName
                            {
                             
                                    currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getNodeQualifiedNameParserRuleCall_0_0_0_0(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleQualifiedName_in_ruleAdvicePathElement11365);
                            ruleQualifiedName();
                            _fsp--;

                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4858:7: ruleWildcardNode
                            {
                             
                                    currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getNodeWildcardNodeParserRuleCall_0_0_0_1(), currentNode); 
                                
                            pushFollow(FOLLOW_ruleWildcardNode_in_ruleAdvicePathElement11379);
                            ruleWildcardNode();
                            _fsp--;

                             
                                    currentNode = currentNode.getParent();
                                

                            }
                            break;
                        case 3 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4865:6: '.'
                            {
                            match(input,15,FOLLOW_15_in_ruleAdvicePathElement11389); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getNodeFullStopKeyword_0_0_0_2(), "node"); 
                                

                            }
                            break;

                    }


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "node", /* lv_node_0 */ input.LT(-1), null, lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4885:2: ( '[' (lv_predicate_2= ruleExpression ) ']' )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==31) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4885:3: '[' (lv_predicate_2= ruleExpression ) ']'
                            {
                            match(input,31,FOLLOW_31_in_ruleAdvicePathElement11414); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getLeftSquareBracketKeyword_0_1_0(), null); 
                                
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4889:1: (lv_predicate_2= ruleExpression )
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4892:6: lv_predicate_2= ruleExpression
                            {
                             
                            	        currentNode=createCompositeNode(grammarAccess.getAdvicePathElementAccess().getPredicateExpressionParserRuleCall_0_1_1_0(), currentNode); 
                            	    
                            pushFollow(FOLLOW_ruleExpression_in_ruleAdvicePathElement11448);
                            lv_predicate_2=ruleExpression();
                            _fsp--;


                            	        if (current==null) {
                            	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                            	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	        }
                            	        
                            	        try {
                            	       		set(current, "predicate", lv_predicate_2, "Expression", currentNode);
                            	        } catch (ValueConverterException vce) {
                            				handleValueConverterException(vce);
                            	        }
                            	        currentNode = currentNode.getParent();
                            	    

                            }

                            match(input,34,FOLLOW_34_in_ruleAdvicePathElement11461); 

                                    createLeafNode(grammarAccess.getAdvicePathElementAccess().getRightSquareBracketKeyword_0_1_2(), null); 
                                

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4915:6: (lv_node_4= '..' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4915:6: (lv_node_4= '..' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4917:6: lv_node_4= '..'
                    {
                    lv_node_4=(Token)input.LT(1);
                    match(input,68,FOLLOW_68_in_ruleAdvicePathElement11491); 

                            createLeafNode(grammarAccess.getAdvicePathElementAccess().getNodeFullStopFullStopKeyword_1_0(), "node"); 
                        

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAdvicePathElementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "node", /* lv_node_4 */ input.LT(-1), "..", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdvicePathElement


    // $ANTLR start entryRuleWildcardNode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4943:1: entryRuleWildcardNode returns [String current=null] : iv_ruleWildcardNode= ruleWildcardNode EOF ;
    public final String entryRuleWildcardNode() throws RecognitionException {
        String current = null;
        int entryRuleWildcardNode_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleWildcardNode = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4943:53: (iv_ruleWildcardNode= ruleWildcardNode EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4944:2: iv_ruleWildcardNode= ruleWildcardNode EOF
            {
             currentNode = createCompositeNode(grammarAccess.getWildcardNodeRule(), currentNode); 
            pushFollow(FOLLOW_ruleWildcardNode_in_entryRuleWildcardNode11538);
            iv_ruleWildcardNode=ruleWildcardNode();
            _fsp--;

             current =iv_ruleWildcardNode.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardNode11549); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWildcardNode


    // $ANTLR start ruleWildcardNode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4951:1: ruleWildcardNode returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '?' (kw= '?' )? ) ;
    public final AntlrDatatypeRuleToken ruleWildcardNode() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleWildcardNode_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4957:6: ( (kw= '?' (kw= '?' )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4958:1: (kw= '?' (kw= '?' )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4958:1: (kw= '?' (kw= '?' )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4959:2: kw= '?' (kw= '?' )?
            {
            kw=(Token)input.LT(1);
            match(input,30,FOLLOW_30_in_ruleWildcardNode11587); 

                    current.merge(kw);
                    createLeafNode(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4964:1: (kw= '?' )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==30) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4965:2: kw= '?'
                    {
                    kw=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_ruleWildcardNode11601); 

                            current.merge(kw);
                            createLeafNode(grammarAccess.getWildcardNodeAccess().getQuestionMarkKeyword_1(), null); 
                        

                    }
                    break;

            }


            }


            }

             resetLookahead(); 
            	    lastConsumedNode = currentNode;
            	    lastConsumedDatatypeToken = current;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWildcardNode


    // $ANTLR start entryRuleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4978:1: entryRuleFilter returns [EObject current=null] : iv_ruleFilter= ruleFilter EOF ;
    public final EObject entryRuleFilter() throws RecognitionException {
        EObject current = null;
        int entryRuleFilter_StartIndex = input.index();
        EObject iv_ruleFilter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4978:48: (iv_ruleFilter= ruleFilter EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4979:2: iv_ruleFilter= ruleFilter EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFilterRule(), currentNode); 
            pushFollow(FOLLOW_ruleFilter_in_entryRuleFilter11641);
            iv_ruleFilter=ruleFilter();
            _fsp--;

             current =iv_ruleFilter; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFilter11651); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFilter


    // $ANTLR start ruleFilter
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4986:1: ruleFilter returns [EObject current=null] : ( '(' (lv_predicate_1= ruleExpression ) ')' ) ;
    public final EObject ruleFilter() throws RecognitionException {
        EObject current = null;
        int ruleFilter_StartIndex = input.index();
        EObject lv_predicate_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4991:6: ( ( '(' (lv_predicate_1= ruleExpression ) ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4992:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4992:1: ( '(' (lv_predicate_1= ruleExpression ) ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4992:2: '(' (lv_predicate_1= ruleExpression ) ')'
            {
            match(input,32,FOLLOW_32_in_ruleFilter11685); 

                    createLeafNode(grammarAccess.getFilterAccess().getLeftParenthesisKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4996:1: (lv_predicate_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:4999:6: lv_predicate_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getFilterAccess().getPredicateExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleFilter11719);
            lv_predicate_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getFilterRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "predicate", lv_predicate_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleFilter11732); 

                    createLeafNode(grammarAccess.getFilterAccess().getRightParenthesisKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFilter


    // $ANTLR start entryRulePreConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5028:1: entryRulePreConditionAssert returns [EObject current=null] : iv_rulePreConditionAssert= rulePreConditionAssert EOF ;
    public final EObject entryRulePreConditionAssert() throws RecognitionException {
        EObject current = null;
        int entryRulePreConditionAssert_StartIndex = input.index();
        EObject iv_rulePreConditionAssert = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5028:60: (iv_rulePreConditionAssert= rulePreConditionAssert EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5029:2: iv_rulePreConditionAssert= rulePreConditionAssert EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPreConditionAssertRule(), currentNode); 
            pushFollow(FOLLOW_rulePreConditionAssert_in_entryRulePreConditionAssert11765);
            iv_rulePreConditionAssert=rulePreConditionAssert();
            _fsp--;

             current =iv_rulePreConditionAssert; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePreConditionAssert11775); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePreConditionAssert


    // $ANTLR start rulePreConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5036:1: rulePreConditionAssert returns [EObject current=null] : ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePreConditionAssert() throws RecognitionException {
        EObject current = null;
        int rulePreConditionAssert_StartIndex = input.index();
        Token lv_scope_0=null;
        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5041:6: ( ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5042:1: ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5042:1: ( (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5042:2: (lv_scope_0= 'precondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5042:2: (lv_scope_0= 'precondition' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5044:6: lv_scope_0= 'precondition'
            {
            lv_scope_0=(Token)input.LT(1);
            match(input,69,FOLLOW_69_in_rulePreConditionAssert11821); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getScopePreconditionKeyword_0_0(), "scope"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPreConditionAssertRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "scope", /* lv_scope_0 */ input.LT(-1), "precondition", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,42,FOLLOW_42_in_rulePreConditionAssert11843); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5067:1: (lv_asserts_2= ruleAssertionExpression )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==71) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5070:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getPreConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePreConditionAssert11877);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getPreConditionAssertRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePreConditionAssert11891); 

                    createLeafNode(grammarAccess.getPreConditionAssertAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePreConditionAssert


    // $ANTLR start entryRulePostConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5099:1: entryRulePostConditionAssert returns [EObject current=null] : iv_rulePostConditionAssert= rulePostConditionAssert EOF ;
    public final EObject entryRulePostConditionAssert() throws RecognitionException {
        EObject current = null;
        int entryRulePostConditionAssert_StartIndex = input.index();
        EObject iv_rulePostConditionAssert = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5099:61: (iv_rulePostConditionAssert= rulePostConditionAssert EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5100:2: iv_rulePostConditionAssert= rulePostConditionAssert EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPostConditionAssertRule(), currentNode); 
            pushFollow(FOLLOW_rulePostConditionAssert_in_entryRulePostConditionAssert11924);
            iv_rulePostConditionAssert=rulePostConditionAssert();
            _fsp--;

             current =iv_rulePostConditionAssert; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePostConditionAssert11934); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostConditionAssert


    // $ANTLR start rulePostConditionAssert
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5107:1: rulePostConditionAssert returns [EObject current=null] : ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) ;
    public final EObject rulePostConditionAssert() throws RecognitionException {
        EObject current = null;
        int rulePostConditionAssert_StartIndex = input.index();
        Token lv_scope_0=null;
        EObject lv_asserts_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5112:6: ( ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5113:1: ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5113:1: ( (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5113:2: (lv_scope_0= 'postcondition' ) '{' (lv_asserts_2= ruleAssertionExpression )* '}'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5113:2: (lv_scope_0= 'postcondition' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5115:6: lv_scope_0= 'postcondition'
            {
            lv_scope_0=(Token)input.LT(1);
            match(input,70,FOLLOW_70_in_rulePostConditionAssert11980); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getScopePostconditionKeyword_0_0(), "scope"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPostConditionAssertRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "scope", /* lv_scope_0 */ input.LT(-1), "postcondition", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,42,FOLLOW_42_in_rulePostConditionAssert12002); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getLeftCurlyBracketKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5138:1: (lv_asserts_2= ruleAssertionExpression )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==71) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5141:6: lv_asserts_2= ruleAssertionExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getPostConditionAssertAccess().getAssertsAssertionExpressionParserRuleCall_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAssertionExpression_in_rulePostConditionAssert12036);
            	    lv_asserts_2=ruleAssertionExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getPostConditionAssertRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "asserts", lv_asserts_2, "AssertionExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            match(input,45,FOLLOW_45_in_rulePostConditionAssert12050); 

                    createLeafNode(grammarAccess.getPostConditionAssertAccess().getRightCurlyBracketKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostConditionAssert


    // $ANTLR start entryRuleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5170:1: entryRuleAssertionExpression returns [EObject current=null] : iv_ruleAssertionExpression= ruleAssertionExpression EOF ;
    public final EObject entryRuleAssertionExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAssertionExpression_StartIndex = input.index();
        EObject iv_ruleAssertionExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5170:61: (iv_ruleAssertionExpression= ruleAssertionExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5171:2: iv_ruleAssertionExpression= ruleAssertionExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAssertionExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression12083);
            iv_ruleAssertionExpression=ruleAssertionExpression();
            _fsp--;

             current =iv_ruleAssertionExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssertionExpression12093); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssertionExpression


    // $ANTLR start ruleAssertionExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5178:1: ruleAssertionExpression returns [EObject current=null] : ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) ;
    public final EObject ruleAssertionExpression() throws RecognitionException {
        EObject current = null;
        int ruleAssertionExpression_StartIndex = input.index();
        Token lv_message_3=null;
        EObject lv_expr_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5183:6: ( ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5184:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5184:1: ( 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5184:2: 'assert' (lv_expr_1= ruleExpression ) ( ',' (lv_message_3= RULE_STRING ) )? ';'
            {
            match(input,71,FOLLOW_71_in_ruleAssertionExpression12127); 

                    createLeafNode(grammarAccess.getAssertionExpressionAccess().getAssertKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5188:1: (lv_expr_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5191:6: lv_expr_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getAssertionExpressionAccess().getExprExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleAssertionExpression12161);
            lv_expr_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "expr", lv_expr_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5209:2: ( ',' (lv_message_3= RULE_STRING ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==33) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5209:3: ',' (lv_message_3= RULE_STRING )
                    {
                    match(input,33,FOLLOW_33_in_ruleAssertionExpression12175); 

                            createLeafNode(grammarAccess.getAssertionExpressionAccess().getCommaKeyword_2_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5213:1: (lv_message_3= RULE_STRING )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5215:6: lv_message_3= RULE_STRING
                    {
                    lv_message_3=(Token)input.LT(1);
                    match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleAssertionExpression12197); 

                    		createLeafNode(grammarAccess.getAssertionExpressionAccess().getMessageSTRINGTerminalRuleCall_2_1_0(), "message"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getAssertionExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "message", lv_message_3, "STRING", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleAssertionExpression12216); 

                    createLeafNode(grammarAccess.getAssertionExpressionAccess().getSemicolonKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssertionExpression


    // $ANTLR start entryRuleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5244:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleStatement_StartIndex = input.index();
        EObject iv_ruleStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5244:51: (iv_ruleStatement= ruleStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5245:2: iv_ruleStatement= ruleStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement12249);
            iv_ruleStatement=ruleStatement();
            _fsp--;

             current =iv_ruleStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement12259); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatement


    // $ANTLR start ruleStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5252:1: ruleStatement returns [EObject current=null] : (this_SwitchStatement_0= ruleSwitchStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement | this_CompoundStatement_3= ruleCompoundStatement | (this_VarExpression_4= ruleVarExpression ';' ) | this_BreakStatement_6= ruleBreakStatement | this_ContinueStatement_7= ruleContinueStatement | this_ReturnStatement_8= ruleReturnStatement ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;
        int ruleStatement_StartIndex = input.index();
        EObject this_SwitchStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;

        EObject this_CompoundStatement_3 = null;

        EObject this_VarExpression_4 = null;

        EObject this_BreakStatement_6 = null;

        EObject this_ContinueStatement_7 = null;

        EObject this_ReturnStatement_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5257:6: ( (this_SwitchStatement_0= ruleSwitchStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement | this_CompoundStatement_3= ruleCompoundStatement | (this_VarExpression_4= ruleVarExpression ';' ) | this_BreakStatement_6= ruleBreakStatement | this_ContinueStatement_7= ruleContinueStatement | this_ReturnStatement_8= ruleReturnStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5258:1: (this_SwitchStatement_0= ruleSwitchStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement | this_CompoundStatement_3= ruleCompoundStatement | (this_VarExpression_4= ruleVarExpression ';' ) | this_BreakStatement_6= ruleBreakStatement | this_ContinueStatement_7= ruleContinueStatement | this_ReturnStatement_8= ruleReturnStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5258:1: (this_SwitchStatement_0= ruleSwitchStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement | this_CompoundStatement_3= ruleCompoundStatement | (this_VarExpression_4= ruleVarExpression ';' ) | this_BreakStatement_6= ruleBreakStatement | this_ContinueStatement_7= ruleContinueStatement | this_ReturnStatement_8= ruleReturnStatement )
            int alt110=8;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt110=1;
                }
                break;
            case 74:
                {
                alt110=2;
                }
                break;
            case 78:
                {
                alt110=3;
                }
                break;
            case 42:
                {
                alt110=4;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_HEX:
            case RULE_PID:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 18:
            case 19:
            case 32:
            case 80:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
                {
                alt110=5;
                }
                break;
            case 72:
                {
                alt110=6;
                }
                break;
            case 73:
                {
                alt110=7;
                }
                break;
            case 79:
                {
                alt110=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("5258:1: (this_SwitchStatement_0= ruleSwitchStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement | this_CompoundStatement_3= ruleCompoundStatement | (this_VarExpression_4= ruleVarExpression ';' ) | this_BreakStatement_6= ruleBreakStatement | this_ContinueStatement_7= ruleContinueStatement | this_ReturnStatement_8= ruleReturnStatement )", 110, 0, input);

                throw nvae;
            }

            switch (alt110) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5259:5: this_SwitchStatement_0= ruleSwitchStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleSwitchStatement_in_ruleStatement12306);
                    this_SwitchStatement_0=ruleSwitchStatement();
                    _fsp--;

                     
                            current = this_SwitchStatement_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5269:5: this_WhileStatement_1= ruleWhileStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleWhileStatement_in_ruleStatement12333);
                    this_WhileStatement_1=ruleWhileStatement();
                    _fsp--;

                     
                            current = this_WhileStatement_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5279:5: this_ForStatement_2= ruleForStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleForStatement_in_ruleStatement12360);
                    this_ForStatement_2=ruleForStatement();
                    _fsp--;

                     
                            current = this_ForStatement_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5289:5: this_CompoundStatement_3= ruleCompoundStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleCompoundStatement_in_ruleStatement12387);
                    this_CompoundStatement_3=ruleCompoundStatement();
                    _fsp--;

                     
                            current = this_CompoundStatement_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5298:6: (this_VarExpression_4= ruleVarExpression ';' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5298:6: (this_VarExpression_4= ruleVarExpression ';' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5299:5: this_VarExpression_4= ruleVarExpression ';'
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getVarExpressionParserRuleCall_4_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVarExpression_in_ruleStatement12415);
                    this_VarExpression_4=ruleVarExpression();
                    _fsp--;

                     
                            current = this_VarExpression_4; 
                            currentNode = currentNode.getParent();
                        
                    match(input,38,FOLLOW_38_in_ruleStatement12423); 

                            createLeafNode(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1(), null); 
                        

                    }


                    }
                    break;
                case 6 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5313:5: this_BreakStatement_6= ruleBreakStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleBreakStatement_in_ruleStatement12452);
                    this_BreakStatement_6=ruleBreakStatement();
                    _fsp--;

                     
                            current = this_BreakStatement_6; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 7 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5323:5: this_ContinueStatement_7= ruleContinueStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_6(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleContinueStatement_in_ruleStatement12479);
                    this_ContinueStatement_7=ruleContinueStatement();
                    _fsp--;

                     
                            current = this_ContinueStatement_7; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 8 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5333:5: this_ReturnStatement_8= ruleReturnStatement
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_7(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleReturnStatement_in_ruleStatement12506);
                    this_ReturnStatement_8=ruleReturnStatement();
                    _fsp--;

                     
                            current = this_ReturnStatement_8; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatement


    // $ANTLR start entryRuleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5348:1: entryRuleBreakStatement returns [EObject current=null] : iv_ruleBreakStatement= ruleBreakStatement EOF ;
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleBreakStatement_StartIndex = input.index();
        EObject iv_ruleBreakStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5348:56: (iv_ruleBreakStatement= ruleBreakStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5349:2: iv_ruleBreakStatement= ruleBreakStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBreakStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement12538);
            iv_ruleBreakStatement=ruleBreakStatement();
            _fsp--;

             current =iv_ruleBreakStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBreakStatement12548); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBreakStatement


    // $ANTLR start ruleBreakStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5356:1: ruleBreakStatement returns [EObject current=null] : ( () 'break' ';' ) ;
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;
        int ruleBreakStatement_StartIndex = input.index();
         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5361:6: ( ( () 'break' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5362:1: ( () 'break' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5362:1: ( () 'break' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5362:2: () 'break' ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5362:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5363:5: 
            {
             
                    temp=factory.create(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,72,FOLLOW_72_in_ruleBreakStatement12591); 

                    createLeafNode(grammarAccess.getBreakStatementAccess().getBreakKeyword_1(), null); 
                
            match(input,38,FOLLOW_38_in_ruleBreakStatement12600); 

                    createLeafNode(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBreakStatement


    // $ANTLR start entryRuleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5388:1: entryRuleContinueStatement returns [EObject current=null] : iv_ruleContinueStatement= ruleContinueStatement EOF ;
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleContinueStatement_StartIndex = input.index();
        EObject iv_ruleContinueStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5388:59: (iv_ruleContinueStatement= ruleContinueStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5389:2: iv_ruleContinueStatement= ruleContinueStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getContinueStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement12633);
            iv_ruleContinueStatement=ruleContinueStatement();
            _fsp--;

             current =iv_ruleContinueStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleContinueStatement12643); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleContinueStatement


    // $ANTLR start ruleContinueStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5396:1: ruleContinueStatement returns [EObject current=null] : ( () 'continue' ';' ) ;
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;
        int ruleContinueStatement_StartIndex = input.index();
         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5401:6: ( ( () 'continue' ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5402:1: ( () 'continue' ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5402:1: ( () 'continue' ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5402:2: () 'continue' ';'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5402:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5403:5: 
            {
             
                    temp=factory.create(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,73,FOLLOW_73_in_ruleContinueStatement12686); 

                    createLeafNode(grammarAccess.getContinueStatementAccess().getContinueKeyword_1(), null); 
                
            match(input,38,FOLLOW_38_in_ruleContinueStatement12695); 

                    createLeafNode(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleContinueStatement


    // $ANTLR start entryRuleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5428:1: entryRuleCompoundStatement returns [EObject current=null] : iv_ruleCompoundStatement= ruleCompoundStatement EOF ;
    public final EObject entryRuleCompoundStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleCompoundStatement_StartIndex = input.index();
        EObject iv_ruleCompoundStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5428:59: (iv_ruleCompoundStatement= ruleCompoundStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5429:2: iv_ruleCompoundStatement= ruleCompoundStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCompoundStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12728);
            iv_ruleCompoundStatement=ruleCompoundStatement();
            _fsp--;

             current =iv_ruleCompoundStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCompoundStatement12738); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCompoundStatement


    // $ANTLR start ruleCompoundStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5436:1: ruleCompoundStatement returns [EObject current=null] : ( '{' (lv_statements_1= ruleStatements ) '}' ) ;
    public final EObject ruleCompoundStatement() throws RecognitionException {
        EObject current = null;
        int ruleCompoundStatement_StartIndex = input.index();
        EObject lv_statements_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5441:6: ( ( '{' (lv_statements_1= ruleStatements ) '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5442:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5442:1: ( '{' (lv_statements_1= ruleStatements ) '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5442:2: '{' (lv_statements_1= ruleStatements ) '}'
            {
            match(input,42,FOLLOW_42_in_ruleCompoundStatement12772); 

                    createLeafNode(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5446:1: (lv_statements_1= ruleStatements )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5449:6: lv_statements_1= ruleStatements
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCompoundStatementAccess().getStatementsStatementsParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatements_in_ruleCompoundStatement12806);
            lv_statements_1=ruleStatements();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCompoundStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "statements", lv_statements_1, "Statements", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,45,FOLLOW_45_in_ruleCompoundStatement12819); 

                    createLeafNode(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCompoundStatement


    // $ANTLR start entryRuleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5478:1: entryRuleStatements returns [EObject current=null] : iv_ruleStatements= ruleStatements EOF ;
    public final EObject entryRuleStatements() throws RecognitionException {
        EObject current = null;
        int entryRuleStatements_StartIndex = input.index();
        EObject iv_ruleStatements = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5478:52: (iv_ruleStatements= ruleStatements EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5479:2: iv_ruleStatements= ruleStatements EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStatementsRule(), currentNode); 
            pushFollow(FOLLOW_ruleStatements_in_entryRuleStatements12852);
            iv_ruleStatements=ruleStatements();
            _fsp--;

             current =iv_ruleStatements; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatements12862); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStatements


    // $ANTLR start ruleStatements
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5486:1: ruleStatements returns [EObject current=null] : (lv_statements_0= ruleStatement )* ;
    public final EObject ruleStatements() throws RecognitionException {
        EObject current = null;
        int ruleStatements_StartIndex = input.index();
        EObject lv_statements_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5491:6: ( (lv_statements_0= ruleStatement )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5492:1: (lv_statements_0= ruleStatement )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5492:1: (lv_statements_0= ruleStatement )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( ((LA111_0>=RULE_ID && LA111_0<=RULE_REGEX)||(LA111_0>=18 && LA111_0<=19)||LA111_0==32||LA111_0==42||(LA111_0>=72 && LA111_0<=75)||(LA111_0>=78 && LA111_0<=80)||(LA111_0>=89 && LA111_0<=93)) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5495:6: lv_statements_0= ruleStatement
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleStatement_in_ruleStatements12920);
            	    lv_statements_0=ruleStatement();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getStatementsRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "statements", lv_statements_0, "Statement", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStatements


    // $ANTLR start entryRuleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5520:1: entryRuleWhileStatement returns [EObject current=null] : iv_ruleWhileStatement= ruleWhileStatement EOF ;
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleWhileStatement_StartIndex = input.index();
        EObject iv_ruleWhileStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5520:56: (iv_ruleWhileStatement= ruleWhileStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5521:2: iv_ruleWhileStatement= ruleWhileStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getWhileStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12957);
            iv_ruleWhileStatement=ruleWhileStatement();
            _fsp--;

             current =iv_ruleWhileStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWhileStatement12967); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWhileStatement


    // $ANTLR start ruleWhileStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5528:1: ruleWhileStatement returns [EObject current=null] : ( 'while' '(' (lv_condition_2= ruleVarExpression ) ')' (lv_body_4= ruleStatement ) ) ;
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;
        int ruleWhileStatement_StartIndex = input.index();
        EObject lv_condition_2 = null;

        EObject lv_body_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5533:6: ( ( 'while' '(' (lv_condition_2= ruleVarExpression ) ')' (lv_body_4= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5534:1: ( 'while' '(' (lv_condition_2= ruleVarExpression ) ')' (lv_body_4= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5534:1: ( 'while' '(' (lv_condition_2= ruleVarExpression ) ')' (lv_body_4= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5534:2: 'while' '(' (lv_condition_2= ruleVarExpression ) ')' (lv_body_4= ruleStatement )
            {
            match(input,74,FOLLOW_74_in_ruleWhileStatement13001); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getWhileKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleWhileStatement13010); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5542:1: (lv_condition_2= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5545:6: lv_condition_2= ruleVarExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getConditionVarExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleVarExpression_in_ruleWhileStatement13044);
            lv_condition_2=ruleVarExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "condition", lv_condition_2, "VarExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleWhileStatement13057); 

                    createLeafNode(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5567:1: (lv_body_4= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5570:6: lv_body_4= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleWhileStatement13091);
            lv_body_4=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getWhileStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_4, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWhileStatement


    // $ANTLR start entryRuleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5595:1: entryRuleSwitchStatement returns [EObject current=null] : iv_ruleSwitchStatement= ruleSwitchStatement EOF ;
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleSwitchStatement_StartIndex = input.index();
        EObject iv_ruleSwitchStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5595:57: (iv_ruleSwitchStatement= ruleSwitchStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5596:2: iv_ruleSwitchStatement= ruleSwitchStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getSwitchStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement13128);
            iv_ruleSwitchStatement=ruleSwitchStatement();
            _fsp--;

             current =iv_ruleSwitchStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitchStatement13138); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSwitchStatement


    // $ANTLR start ruleSwitchStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5603:1: ruleSwitchStatement returns [EObject current=null] : ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements ) )? '}' ) ;
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;
        int ruleSwitchStatement_StartIndex = input.index();
        EObject lv_switchExpr_2 = null;

        EObject lv_case_5 = null;

        EObject lv_statements_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5608:6: ( ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements ) )? '}' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5609:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements ) )? '}' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5609:1: ( 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements ) )? '}' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5609:2: 'switch' '(' (lv_switchExpr_2= ruleVarExpression ) ')' '{' (lv_case_5= ruleCase )* ( 'default' ':' (lv_statements_8= ruleStatements ) )? '}'
            {
            match(input,75,FOLLOW_75_in_ruleSwitchStatement13172); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0(), null); 
                
            match(input,32,FOLLOW_32_in_ruleSwitchStatement13181); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5617:1: (lv_switchExpr_2= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5620:6: lv_switchExpr_2= ruleVarExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getSwitchExprVarExpressionParserRuleCall_2_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleVarExpression_in_ruleSwitchStatement13215);
            lv_switchExpr_2=ruleVarExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "switchExpr", lv_switchExpr_2, "VarExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,35,FOLLOW_35_in_ruleSwitchStatement13228); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3(), null); 
                
            match(input,42,FOLLOW_42_in_ruleSwitchStatement13237); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5646:1: (lv_case_5= ruleCase )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==77) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5649:6: lv_case_5= ruleCase
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getCaseCaseParserRuleCall_5_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleCase_in_ruleSwitchStatement13271);
            	    lv_case_5=ruleCase();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "case", lv_case_5, "Case", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5667:3: ( 'default' ':' (lv_statements_8= ruleStatements ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==76) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5667:4: 'default' ':' (lv_statements_8= ruleStatements )
                    {
                    match(input,76,FOLLOW_76_in_ruleSwitchStatement13286); 

                            createLeafNode(grammarAccess.getSwitchStatementAccess().getDefaultKeyword_6_0(), null); 
                        
                    match(input,29,FOLLOW_29_in_ruleSwitchStatement13295); 

                            createLeafNode(grammarAccess.getSwitchStatementAccess().getColonKeyword_6_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5675:1: (lv_statements_8= ruleStatements )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5678:6: lv_statements_8= ruleStatements
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getSwitchStatementAccess().getStatementsStatementsParserRuleCall_6_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleStatements_in_ruleSwitchStatement13329);
                    lv_statements_8=ruleStatements();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getSwitchStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "statements", lv_statements_8, "Statements", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }

            match(input,45,FOLLOW_45_in_ruleSwitchStatement13344); 

                    createLeafNode(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSwitchStatement


    // $ANTLR start entryRuleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5707:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;
        int entryRuleCase_StartIndex = input.index();
        EObject iv_ruleCase = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5707:46: (iv_ruleCase= ruleCase EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5708:2: iv_ruleCase= ruleCase EOF
            {
             currentNode = createCompositeNode(grammarAccess.getCaseRule(), currentNode); 
            pushFollow(FOLLOW_ruleCase_in_entryRuleCase13377);
            iv_ruleCase=ruleCase();
            _fsp--;

             current =iv_ruleCase; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCase13387); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCase


    // $ANTLR start ruleCase
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5715:1: ruleCase returns [EObject current=null] : ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatement ) ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;
        int ruleCase_StartIndex = input.index();
        EObject lv_condition_1 = null;

        EObject lv_statements_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5720:6: ( ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5721:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5721:1: ( 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5721:2: 'case' (lv_condition_1= ruleValueLiteral ) ':' (lv_statements_3= ruleStatement )
            {
            match(input,77,FOLLOW_77_in_ruleCase13421); 

                    createLeafNode(grammarAccess.getCaseAccess().getCaseKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5725:1: (lv_condition_1= ruleValueLiteral )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5728:6: lv_condition_1= ruleValueLiteral
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getConditionValueLiteralParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleValueLiteral_in_ruleCase13455);
            lv_condition_1=ruleValueLiteral();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "condition", lv_condition_1, "ValueLiteral", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,29,FOLLOW_29_in_ruleCase13468); 

                    createLeafNode(grammarAccess.getCaseAccess().getColonKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5750:1: (lv_statements_3= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5753:6: lv_statements_3= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getCaseAccess().getStatementsStatementParserRuleCall_3_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleCase13502);
            lv_statements_3=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getCaseRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "statements", lv_statements_3, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCase


    // $ANTLR start entryRuleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5778:1: entryRuleForStatement returns [EObject current=null] : iv_ruleForStatement= ruleForStatement EOF ;
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleForStatement_StartIndex = input.index();
        EObject iv_ruleForStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5778:54: (iv_ruleForStatement= ruleForStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5779:2: iv_ruleForStatement= ruleForStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getForStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleForStatement_in_entryRuleForStatement13539);
            iv_ruleForStatement=ruleForStatement();
            _fsp--;

             current =iv_ruleForStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleForStatement13549); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleForStatement


    // $ANTLR start ruleForStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5786:1: ruleForStatement returns [EObject current=null] : ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ')' (lv_body_9= ruleStatement ) ) ;
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;
        int ruleForStatement_StartIndex = input.index();
        EObject lv_init_3 = null;

        EObject lv_cond_5 = null;

        EObject lv_iterate_7 = null;

        EObject lv_body_9 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5791:6: ( ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ')' (lv_body_9= ruleStatement ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5792:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ')' (lv_body_9= ruleStatement ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5792:1: ( () 'for' '(' (lv_init_3= ruleVarExpressionList )? ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ')' (lv_body_9= ruleStatement ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5792:2: () 'for' '(' (lv_init_3= ruleVarExpressionList )? ';' (lv_cond_5= ruleExpression )? ';' (lv_iterate_7= ruleExpressionList )? ')' (lv_body_9= ruleStatement )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5792:2: ()
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5793:5: 
            {
             
                    temp=factory.create(grammarAccess.getForStatementAccess().getForStatementAction_0().getType().getClassifier());
                    current = temp; 
                    temp = null;
                    CompositeNode newNode = createCompositeNode(grammarAccess.getForStatementAccess().getForStatementAction_0(), currentNode.getParent());
                newNode.getChildren().add(currentNode);
                moveLookaheadInfo(currentNode, newNode);
                currentNode = newNode; 
                    associateNodeWithAstElement(currentNode, current); 
                

            }

            match(input,78,FOLLOW_78_in_ruleForStatement13592); 

                    createLeafNode(grammarAccess.getForStatementAccess().getForKeyword_1(), null); 
                
            match(input,32,FOLLOW_32_in_ruleForStatement13601); 

                    createLeafNode(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5811:1: (lv_init_3= ruleVarExpressionList )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( ((LA114_0>=RULE_ID && LA114_0<=RULE_REGEX)||(LA114_0>=18 && LA114_0<=19)||LA114_0==32||LA114_0==80||(LA114_0>=89 && LA114_0<=93)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5814:6: lv_init_3= ruleVarExpressionList
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getInitVarExpressionListParserRuleCall_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleVarExpressionList_in_ruleForStatement13635);
                    lv_init_3=ruleVarExpressionList();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "init", lv_init_3, "VarExpressionList", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleForStatement13649); 

                    createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_4(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5836:1: (lv_cond_5= ruleExpression )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=RULE_ID && LA115_0<=RULE_REGEX)||(LA115_0>=18 && LA115_0<=19)||LA115_0==32||(LA115_0>=89 && LA115_0<=93)) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5839:6: lv_cond_5= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getCondExpressionParserRuleCall_5_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleForStatement13683);
                    lv_cond_5=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "cond", lv_cond_5, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,38,FOLLOW_38_in_ruleForStatement13697); 

                    createLeafNode(grammarAccess.getForStatementAccess().getSemicolonKeyword_6(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5861:1: (lv_iterate_7= ruleExpressionList )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( ((LA116_0>=RULE_ID && LA116_0<=RULE_REGEX)||(LA116_0>=18 && LA116_0<=19)||LA116_0==32||(LA116_0>=89 && LA116_0<=93)) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5864:6: lv_iterate_7= ruleExpressionList
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getIterateExpressionListParserRuleCall_7_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpressionList_in_ruleForStatement13731);
                    lv_iterate_7=ruleExpressionList();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "iterate", lv_iterate_7, "ExpressionList", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleForStatement13745); 

                    createLeafNode(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_8(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5886:1: (lv_body_9= ruleStatement )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5889:6: lv_body_9= ruleStatement
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_9_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleStatement_in_ruleForStatement13779);
            lv_body_9=ruleStatement();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getForStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "body", lv_body_9, "Statement", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleForStatement


    // $ANTLR start entryRuleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5914:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;
        int entryRuleReturnStatement_StartIndex = input.index();
        EObject iv_ruleReturnStatement = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5914:57: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5915:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
             currentNode = createCompositeNode(grammarAccess.getReturnStatementRule(), currentNode); 
            pushFollow(FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13816);
            iv_ruleReturnStatement=ruleReturnStatement();
            _fsp--;

             current =iv_ruleReturnStatement; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStatement13826); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleReturnStatement


    // $ANTLR start ruleReturnStatement
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5922:1: ruleReturnStatement returns [EObject current=null] : ( 'return' (lv_return_1= ruleExpression ) ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;
        int ruleReturnStatement_StartIndex = input.index();
        EObject lv_return_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5927:6: ( ( 'return' (lv_return_1= ruleExpression ) ';' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5928:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5928:1: ( 'return' (lv_return_1= ruleExpression ) ';' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5928:2: 'return' (lv_return_1= ruleExpression ) ';'
            {
            match(input,79,FOLLOW_79_in_ruleReturnStatement13860); 

                    createLeafNode(grammarAccess.getReturnStatementAccess().getReturnKeyword_0(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5932:1: (lv_return_1= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5935:6: lv_return_1= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleReturnStatement13894);
            lv_return_1=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getReturnStatementRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "return", lv_return_1, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            match(input,38,FOLLOW_38_in_ruleReturnStatement13907); 

                    createLeafNode(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleReturnStatement


    // $ANTLR start entryRuleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5966:1: entryRuleVarExpressionList returns [EObject current=null] : iv_ruleVarExpressionList= ruleVarExpressionList EOF ;
    public final EObject entryRuleVarExpressionList() throws RecognitionException {
        EObject current = null;
        int entryRuleVarExpressionList_StartIndex = input.index();
        EObject iv_ruleVarExpressionList = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5966:59: (iv_ruleVarExpressionList= ruleVarExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5967:2: iv_ruleVarExpressionList= ruleVarExpressionList EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVarExpressionListRule(), currentNode); 
            pushFollow(FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList13942);
            iv_ruleVarExpressionList=ruleVarExpressionList();
            _fsp--;

             current =iv_ruleVarExpressionList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpressionList13952); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpressionList


    // $ANTLR start ruleVarExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5974:1: ruleVarExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) ;
    public final EObject ruleVarExpressionList() throws RecognitionException {
        EObject current = null;
        int ruleVarExpressionList_StartIndex = input.index();
        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5979:6: ( ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5980:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5980:1: ( (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5980:2: (lv_expr_0= ruleVarExpression ) ( ',' (lv_expr_2= ruleVarExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5980:2: (lv_expr_0= ruleVarExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:5983:6: lv_expr_0= ruleVarExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList14011);
            lv_expr_0=ruleVarExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "expr", lv_expr_0, "VarExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6001:2: ( ',' (lv_expr_2= ruleVarExpression ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==33) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6001:3: ',' (lv_expr_2= ruleVarExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleVarExpressionList14025); 

            	            createLeafNode(grammarAccess.getVarExpressionListAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6005:1: (lv_expr_2= ruleVarExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6008:6: lv_expr_2= ruleVarExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getVarExpressionListAccess().getExprVarExpressionParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleVarExpression_in_ruleVarExpressionList14059);
            	    lv_expr_2=ruleVarExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getVarExpressionListRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "expr", lv_expr_2, "VarExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpressionList


    // $ANTLR start entryRuleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6033:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;
        int entryRuleExpressionList_StartIndex = input.index();
        EObject iv_ruleExpressionList = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6033:56: (iv_ruleExpressionList= ruleExpressionList EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6034:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExpressionListRule(), currentNode); 
            pushFollow(FOLLOW_ruleExpressionList_in_entryRuleExpressionList14098);
            iv_ruleExpressionList=ruleExpressionList();
            _fsp--;

             current =iv_ruleExpressionList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpressionList14108); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpressionList


    // $ANTLR start ruleExpressionList
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6041:1: ruleExpressionList returns [EObject current=null] : ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;
        int ruleExpressionList_StartIndex = input.index();
        EObject lv_expr_0 = null;

        EObject lv_expr_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6046:6: ( ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6047:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6047:1: ( (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6047:2: (lv_expr_0= ruleExpression ) ( ',' (lv_expr_2= ruleExpression ) )*
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6047:2: (lv_expr_0= ruleExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6050:6: lv_expr_0= ruleExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList14167);
            lv_expr_0=ruleExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "expr", lv_expr_0, "Expression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6068:2: ( ',' (lv_expr_2= ruleExpression ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==33) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6068:3: ',' (lv_expr_2= ruleExpression )
            	    {
            	    match(input,33,FOLLOW_33_in_ruleExpressionList14181); 

            	            createLeafNode(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6072:1: (lv_expr_2= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6075:6: lv_expr_2= ruleExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleExpression_in_ruleExpressionList14215);
            	    lv_expr_2=ruleExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getExpressionListRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "expr", lv_expr_2, "Expression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpressionList


    // $ANTLR start entryRuleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6100:1: entryRuleVarExpression returns [EObject current=null] : iv_ruleVarExpression= ruleVarExpression EOF ;
    public final EObject entryRuleVarExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleVarExpression_StartIndex = input.index();
        EObject iv_ruleVarExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6100:55: (iv_ruleVarExpression= ruleVarExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6101:2: iv_ruleVarExpression= ruleVarExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVarExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleVarExpression_in_entryRuleVarExpression14254);
            iv_ruleVarExpression=ruleVarExpression();
            _fsp--;

             current =iv_ruleVarExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarExpression14264); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarExpression


    // $ANTLR start ruleVarExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6108:1: ruleVarExpression returns [EObject current=null] : (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) ) ) ;
    public final EObject ruleVarExpression() throws RecognitionException {
        EObject current = null;
        int ruleVarExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_Expression_0 = null;

        EObject lv_value_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6113:6: ( (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6114:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6114:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) ) )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=RULE_ID && LA119_0<=RULE_REGEX)||(LA119_0>=18 && LA119_0<=19)||LA119_0==32||(LA119_0>=89 && LA119_0<=93)) ) {
                alt119=1;
            }
            else if ( (LA119_0==80) ) {
                alt119=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("6114:1: (this_Expression_0= ruleExpression | ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) ) )", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6115:5: this_Expression_0= ruleExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getExpressionParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression14311);
                    this_Expression_0=ruleExpression();
                    _fsp--;

                     
                            current = this_Expression_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6124:6: ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6124:6: ( 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6124:7: 'var' (lv_name_2= RULE_ID ) '=' (lv_value_4= ruleExpression )
                    {
                    match(input,80,FOLLOW_80_in_ruleVarExpression14326); 

                            createLeafNode(grammarAccess.getVarExpressionAccess().getVarKeyword_1_0(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6128:1: (lv_name_2= RULE_ID )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6130:6: lv_name_2= RULE_ID
                    {
                    lv_name_2=(Token)input.LT(1);
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVarExpression14348); 

                    		createLeafNode(grammarAccess.getVarExpressionAccess().getNameIDTerminalRuleCall_1_1_0(), "name"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", lv_name_2, "ID", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }

                    match(input,25,FOLLOW_25_in_ruleVarExpression14365); 

                            createLeafNode(grammarAccess.getVarExpressionAccess().getEqualsSignKeyword_1_2(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6152:1: (lv_value_4= ruleExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6155:6: lv_value_4= ruleExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getVarExpressionAccess().getValueExpressionParserRuleCall_1_3_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleExpression_in_ruleVarExpression14399);
                    lv_value_4=ruleExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getVarExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "value", lv_value_4, "Expression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6180:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleExpression_StartIndex = input.index();
        EObject iv_ruleExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6180:52: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6181:2: iv_ruleExpression= ruleExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression14437);
            iv_ruleExpression=ruleExpression();
            _fsp--;

             current =iv_ruleExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpression14447); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6188:1: ruleExpression returns [EObject current=null] : this_ValueExpression_0= ruleValueExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;
        int ruleExpression_StartIndex = input.index();
        EObject this_ValueExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6193:6: (this_ValueExpression_0= ruleValueExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6195:5: this_ValueExpression_0= ruleValueExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleValueExpression_in_ruleExpression14493);
            this_ValueExpression_0=ruleValueExpression();
            _fsp--;

             
                    current = this_ValueExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleValueExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6210:1: entryRuleValueExpression returns [EObject current=null] : iv_ruleValueExpression= ruleValueExpression EOF ;
    public final EObject entryRuleValueExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleValueExpression_StartIndex = input.index();
        EObject iv_ruleValueExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6210:57: (iv_ruleValueExpression= ruleValueExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6211:2: iv_ruleValueExpression= ruleValueExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getValueExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleValueExpression_in_entryRuleValueExpression14524);
            iv_ruleValueExpression=ruleValueExpression();
            _fsp--;

             current =iv_ruleValueExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueExpression14534); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueExpression


    // $ANTLR start ruleValueExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6218:1: ruleValueExpression returns [EObject current=null] : (lv_value_0= ruleAssignmentExpression ) ;
    public final EObject ruleValueExpression() throws RecognitionException {
        EObject current = null;
        int ruleValueExpression_StartIndex = input.index();
        EObject lv_value_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6223:6: ( (lv_value_0= ruleAssignmentExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6224:1: (lv_value_0= ruleAssignmentExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6224:1: (lv_value_0= ruleAssignmentExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6227:6: lv_value_0= ruleAssignmentExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getValueExpressionAccess().getValueAssignmentExpressionParserRuleCall_0(), currentNode); 
            	    
            pushFollow(FOLLOW_ruleAssignmentExpression_in_ruleValueExpression14592);
            lv_value_0=ruleAssignmentExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getValueExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		set(current, "value", lv_value_0, "AssignmentExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6252:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAssignmentExpression_StartIndex = input.index();
        EObject iv_ruleAssignmentExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6252:62: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6253:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression14628);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;

             current =iv_ruleAssignmentExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignmentExpression14638); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6260:1: ruleAssignmentExpression returns [EObject current=null] : (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )* ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int ruleAssignmentExpression_StartIndex = input.index();
        Token lv_op_2=null;
        EObject this_ChainExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6265:6: ( (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6266:1: (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6266:1: (this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6267:5: this_ChainExpression_0= ruleChainExpression ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getChainExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleChainExpression_in_ruleAssignmentExpression14685);
            this_ChainExpression_0=ruleChainExpression();
            _fsp--;

             
                    current = this_ChainExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6275:1: ( () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==25||(LA121_0>=53 && LA121_0<=56)||LA121_0==81) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6275:2: () (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) ) (lv_right_3= ruleChainExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6275:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6276:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.add(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6291:2: (lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6293:6: lv_op_2= ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6293:14: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' )
            	    int alt120=6;
            	    switch ( input.LA(1) ) {
            	    case 25:
            	        {
            	        alt120=1;
            	        }
            	        break;
            	    case 53:
            	        {
            	        alt120=2;
            	        }
            	        break;
            	    case 54:
            	        {
            	        alt120=3;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt120=4;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt120=5;
            	        }
            	        break;
            	    case 81:
            	        {
            	        alt120=6;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("6293:14: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' )", 120, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt120) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6293:15: '='
            	            {
            	            match(input,25,FOLLOW_25_in_ruleAssignmentExpression14716); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpEqualsSignKeyword_1_1_0_0(), "op"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6299:6: '+='
            	            {
            	            match(input,53,FOLLOW_53_in_ruleAssignmentExpression14732); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpPlusSignEqualsSignKeyword_1_1_0_1(), "op"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6305:6: '-='
            	            {
            	            match(input,54,FOLLOW_54_in_ruleAssignmentExpression14748); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpHyphenMinusEqualsSignKeyword_1_1_0_2(), "op"); 
            	                

            	            }
            	            break;
            	        case 4 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6311:6: '*='
            	            {
            	            match(input,55,FOLLOW_55_in_ruleAssignmentExpression14764); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpAsteriskEqualsSignKeyword_1_1_0_3(), "op"); 
            	                

            	            }
            	            break;
            	        case 5 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6317:6: '/='
            	            {
            	            match(input,56,FOLLOW_56_in_ruleAssignmentExpression14780); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpSolidusEqualsSignKeyword_1_1_0_4(), "op"); 
            	                

            	            }
            	            break;
            	        case 6 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6323:6: '%='
            	            {
            	            match(input,81,FOLLOW_81_in_ruleAssignmentExpression14796); 

            	                    createLeafNode(grammarAccess.getAssignmentExpressionAccess().getOpPercentSignEqualsSignKeyword_1_1_0_5(), "op"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "op", /* lv_op_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6343:2: (lv_right_3= ruleChainExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6346:6: lv_right_3= ruleChainExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightChainExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleChainExpression_in_ruleAssignmentExpression14845);
            	    lv_right_3=ruleChainExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "right", lv_right_3, "ChainExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleChainExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6371:1: entryRuleChainExpression returns [EObject current=null] : iv_ruleChainExpression= ruleChainExpression EOF ;
    public final EObject entryRuleChainExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleChainExpression_StartIndex = input.index();
        EObject iv_ruleChainExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6371:57: (iv_ruleChainExpression= ruleChainExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6372:2: iv_ruleChainExpression= ruleChainExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getChainExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleChainExpression_in_entryRuleChainExpression14884);
            iv_ruleChainExpression=ruleChainExpression();
            _fsp--;

             current =iv_ruleChainExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainExpression14894); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainExpression


    // $ANTLR start ruleChainExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6379:1: ruleChainExpression returns [EObject current=null] : this_ChainedExpression_0= ruleChainedExpression ;
    public final EObject ruleChainExpression() throws RecognitionException {
        EObject current = null;
        int ruleChainExpression_StartIndex = input.index();
        EObject this_ChainedExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6384:6: (this_ChainedExpression_0= ruleChainedExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6386:5: this_ChainedExpression_0= ruleChainedExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleChainedExpression_in_ruleChainExpression14940);
            this_ChainedExpression_0=ruleChainedExpression();
            _fsp--;

             
                    current = this_ChainedExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainExpression


    // $ANTLR start entryRuleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6401:1: entryRuleChainedExpression returns [EObject current=null] : iv_ruleChainedExpression= ruleChainedExpression EOF ;
    public final EObject entryRuleChainedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleChainedExpression_StartIndex = input.index();
        EObject iv_ruleChainedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6401:59: (iv_ruleChainedExpression= ruleChainedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6402:2: iv_ruleChainedExpression= ruleChainedExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getChainedExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression14971);
            iv_ruleChainedExpression=ruleChainedExpression();
            _fsp--;

             current =iv_ruleChainedExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChainedExpression14981); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleChainedExpression


    // $ANTLR start ruleChainedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6409:1: ruleChainedExpression returns [EObject current=null] : this_IfExpression_0= ruleIfExpression ;
    public final EObject ruleChainedExpression() throws RecognitionException {
        EObject current = null;
        int ruleChainedExpression_StartIndex = input.index();
        EObject this_IfExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6414:6: (this_IfExpression_0= ruleIfExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6416:5: this_IfExpression_0= ruleIfExpression
            {
             
                    currentNode=createCompositeNode(grammarAccess.getChainedExpressionAccess().getIfExpressionParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleIfExpression_in_ruleChainedExpression15027);
            this_IfExpression_0=ruleIfExpression();
            _fsp--;

             
                    current = this_IfExpression_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleChainedExpression


    // $ANTLR start entryRuleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6431:1: entryRuleIfExpression returns [EObject current=null] : iv_ruleIfExpression= ruleIfExpression EOF ;
    public final EObject entryRuleIfExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleIfExpression_StartIndex = input.index();
        EObject iv_ruleIfExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6431:54: (iv_ruleIfExpression= ruleIfExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6432:2: iv_ruleIfExpression= ruleIfExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getIfExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleIfExpression_in_entryRuleIfExpression15058);
            iv_ruleIfExpression=ruleIfExpression();
            _fsp--;

             current =iv_ruleIfExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfExpression15068); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIfExpression


    // $ANTLR start ruleIfExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6439:1: ruleIfExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) ;
    public final EObject ruleIfExpression() throws RecognitionException {
        EObject current = null;
        int ruleIfExpression_StartIndex = input.index();
        EObject this_OrExpression_0 = null;

        EObject lv_thenPart_3 = null;

        EObject lv_elsePart_5 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6444:6: ( (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6445:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6445:1: (this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6446:5: this_OrExpression_0= ruleOrExpression ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            {
             
                    currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getOrExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleOrExpression_in_ruleIfExpression15115);
            this_OrExpression_0=ruleOrExpression();
            _fsp--;

             
                    current = this_OrExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6454:1: ( () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==30) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6454:2: () '?' (lv_thenPart_3= ruleChainedExpression ) ':' (lv_elsePart_5= ruleChainedExpression )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6454:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6455:5: 
                    {
                     
                            temp=factory.create(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0().getType().getClassifier());
                            try {
                            	factory.set(temp, "condition", current, null /*ParserRule*/, currentNode);
                            } catch(ValueConverterException vce) {
                            	handleValueConverterException(vce);
                            }
                            current = temp; 
                            temp = null;
                            CompositeNode newNode = createCompositeNode(grammarAccess.getIfExpressionAccess().getIfExpressionConditionAction_1_0(), currentNode.getParent());
                        newNode.getChildren().add(currentNode);
                        moveLookaheadInfo(currentNode, newNode);
                        currentNode = newNode; 
                            associateNodeWithAstElement(currentNode, current); 
                        

                    }

                    match(input,30,FOLLOW_30_in_ruleIfExpression15133); 

                            createLeafNode(grammarAccess.getIfExpressionAccess().getQuestionMarkKeyword_1_1(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6474:1: (lv_thenPart_3= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6477:6: lv_thenPart_3= ruleChainedExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getThenPartChainedExpressionParserRuleCall_1_2_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression15167);
                    lv_thenPart_3=ruleChainedExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "thenPart", lv_thenPart_3, "ChainedExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    match(input,29,FOLLOW_29_in_ruleIfExpression15180); 

                            createLeafNode(grammarAccess.getIfExpressionAccess().getColonKeyword_1_3(), null); 
                        
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6499:1: (lv_elsePart_5= ruleChainedExpression )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6502:6: lv_elsePart_5= ruleChainedExpression
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getIfExpressionAccess().getElsePartChainedExpressionParserRuleCall_1_4_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleChainedExpression_in_ruleIfExpression15214);
                    lv_elsePart_5=ruleChainedExpression();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIfExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "elsePart", lv_elsePart_5, "ChainedExpression", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIfExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6527:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleOrExpression_StartIndex = input.index();
        EObject iv_ruleOrExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6527:54: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6528:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleOrExpression_in_entryRuleOrExpression15253);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;

             current =iv_ruleOrExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrExpression15263); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6535:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;
        int ruleOrExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6540:6: ( (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6541:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6541:1: (this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6542:5: this_AndExpression_0= ruleAndExpression ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression15310);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;

             
                    current = this_AndExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6550:1: ( () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==82) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6550:2: () (lv_operator_2= '||' ) (lv_right_3= ruleAndExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6550:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6551:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6566:2: (lv_operator_2= '||' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6568:6: lv_operator_2= '||'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,82,FOLLOW_82_in_ruleOrExpression15340); 

            	            createLeafNode(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0(), "operator"); 
            	        

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "||", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6587:2: (lv_right_3= ruleAndExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6590:6: lv_right_3= ruleAndExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAndExpression_in_ruleOrExpression15387);
            	    lv_right_3=ruleAndExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "AndExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6615:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAndExpression_StartIndex = input.index();
        EObject iv_ruleAndExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6615:55: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6616:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAndExpression_in_entryRuleAndExpression15426);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;

             current =iv_ruleAndExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndExpression15436); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6623:1: ruleAndExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;
        int ruleAndExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_RelationalExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6628:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6629:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6629:1: (this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6630:5: this_RelationalExpression_0= ruleRelationalExpression ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleRelationalExpression_in_ruleAndExpression15483);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;

             
                    current = this_RelationalExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6638:1: ( () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==83) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6638:2: () (lv_operator_2= '&&' ) (lv_right_3= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6638:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6639:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6654:2: (lv_operator_2= '&&' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6656:6: lv_operator_2= '&&'
            	    {
            	    lv_operator_2=(Token)input.LT(1);
            	    match(input,83,FOLLOW_83_in_ruleAndExpression15513); 

            	            createLeafNode(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0(), "operator"); 
            	        

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), "&&", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6675:2: (lv_right_3= ruleRelationalExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6678:6: lv_right_3= ruleRelationalExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleRelationalExpression_in_ruleAndExpression15560);
            	    lv_right_3=ruleRelationalExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "RelationalExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6703:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleRelationalExpression_StartIndex = input.index();
        EObject iv_ruleRelationalExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6703:62: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6704:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression15599);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;

             current =iv_ruleRelationalExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRelationalExpression15609); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6711:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int ruleRelationalExpression_StartIndex = input.index();
        Token lv_operator_2=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_right_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6716:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6717:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6717:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6718:5: this_AdditiveExpression_0= ruleAdditiveExpression ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression15656);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;

             
                    current = this_AdditiveExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6726:1: ( () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression ) )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( ((LA126_0>=27 && LA126_0<=28)||(LA126_0>=84 && LA126_0<=88)) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6726:2: () (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) ) (lv_right_3= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6726:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6727:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "left", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6742:2: (lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6744:6: lv_operator_2= ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6744:20: ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' )
            	    int alt125=7;
            	    switch ( input.LA(1) ) {
            	    case 84:
            	        {
            	        alt125=1;
            	        }
            	        break;
            	    case 85:
            	        {
            	        alt125=2;
            	        }
            	        break;
            	    case 86:
            	        {
            	        alt125=3;
            	        }
            	        break;
            	    case 87:
            	        {
            	        alt125=4;
            	        }
            	        break;
            	    case 88:
            	        {
            	        alt125=5;
            	        }
            	        break;
            	    case 28:
            	        {
            	        alt125=6;
            	        }
            	        break;
            	    case 27:
            	        {
            	        alt125=7;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("6744:20: ( '~=' | '==' | '!=' | '>=' | '<=' | '>' | '<' )", 125, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt125) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6744:21: '~='
            	            {
            	            match(input,84,FOLLOW_84_in_ruleRelationalExpression15687); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorTildeEqualsSignKeyword_1_1_0_0(), "operator"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6750:6: '=='
            	            {
            	            match(input,85,FOLLOW_85_in_ruleRelationalExpression15703); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_1(), "operator"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6756:6: '!='
            	            {
            	            match(input,86,FOLLOW_86_in_ruleRelationalExpression15719); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_2(), "operator"); 
            	                

            	            }
            	            break;
            	        case 4 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6762:6: '>='
            	            {
            	            match(input,87,FOLLOW_87_in_ruleRelationalExpression15735); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3(), "operator"); 
            	                

            	            }
            	            break;
            	        case 5 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6768:6: '<='
            	            {
            	            match(input,88,FOLLOW_88_in_ruleRelationalExpression15751); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4(), "operator"); 
            	                

            	            }
            	            break;
            	        case 6 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6774:6: '>'
            	            {
            	            match(input,28,FOLLOW_28_in_ruleRelationalExpression15767); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_5(), "operator"); 
            	                

            	            }
            	            break;
            	        case 7 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6780:6: '<'
            	            {
            	            match(input,27,FOLLOW_27_in_ruleRelationalExpression15783); 

            	                    createLeafNode(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_6(), "operator"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "operator", /* lv_operator_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6800:2: (lv_right_3= ruleAdditiveExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6803:6: lv_right_3= ruleAdditiveExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression15832);
            	    lv_right_3=ruleAdditiveExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "right", lv_right_3, "AdditiveExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6828:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAdditiveExpression_StartIndex = input.index();
        EObject iv_ruleAdditiveExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6828:60: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6829:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression15871);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;

             current =iv_ruleAdditiveExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAdditiveExpression15881); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6836:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int ruleAdditiveExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6841:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6842:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6842:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6843:5: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15928);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;

             
                    current = this_MultiplicativeExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6851:1: ( () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression ) )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==18||LA128_0==24) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6851:2: () (lv_name_2= ( '+' | '-' ) ) (lv_params_3= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6851:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6852:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6867:2: (lv_name_2= ( '+' | '-' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6869:6: lv_name_2= ( '+' | '-' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6869:16: ( '+' | '-' )
            	    int alt127=2;
            	    int LA127_0 = input.LA(1);

            	    if ( (LA127_0==24) ) {
            	        alt127=1;
            	    }
            	    else if ( (LA127_0==18) ) {
            	        alt127=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("6869:16: ( '+' | '-' )", 127, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt127) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6869:17: '+'
            	            {
            	            match(input,24,FOLLOW_24_in_ruleAdditiveExpression15959); 

            	                    createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0(), "name"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6875:6: '-'
            	            {
            	            match(input,18,FOLLOW_18_in_ruleAdditiveExpression15975); 

            	                    createLeafNode(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1(), "name"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6895:2: (lv_params_3= ruleMultiplicativeExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6898:6: lv_params_3= ruleMultiplicativeExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression16024);
            	    lv_params_3=ruleMultiplicativeExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_3, "MultiplicativeExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6923:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        EObject iv_ruleMultiplicativeExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6923:66: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6924:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression16063);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;

             current =iv_ruleMultiplicativeExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiplicativeExpression16073); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6931:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int ruleMultiplicativeExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_UnaryOrInfixExpression_0 = null;

        EObject lv_params_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6936:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6937:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6937:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6938:5: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression16120);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;

             
                    current = this_UnaryOrInfixExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6946:1: ( () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==17||LA130_0==22||LA130_0==26) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6946:2: () (lv_name_2= ( '*' | '/' | '%' ) ) (lv_params_3= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6946:2: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6947:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0().getType().getClassifier());
            	            try {
            	            	factory.add(temp, "params", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6962:2: (lv_name_2= ( '*' | '/' | '%' ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6964:6: lv_name_2= ( '*' | '/' | '%' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6964:16: ( '*' | '/' | '%' )
            	    int alt129=3;
            	    switch ( input.LA(1) ) {
            	    case 26:
            	        {
            	        alt129=1;
            	        }
            	        break;
            	    case 17:
            	        {
            	        alt129=2;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt129=3;
            	        }
            	        break;
            	    default:
            	        NoViableAltException nvae =
            	            new NoViableAltException("6964:16: ( '*' | '/' | '%' )", 129, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt129) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6964:17: '*'
            	            {
            	            match(input,26,FOLLOW_26_in_ruleMultiplicativeExpression16151); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0(), "name"); 
            	                

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6970:6: '/'
            	            {
            	            match(input,17,FOLLOW_17_in_ruleMultiplicativeExpression16167); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1(), "name"); 
            	                

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6976:6: '%'
            	            {
            	            match(input,22,FOLLOW_22_in_ruleMultiplicativeExpression16183); 

            	                    createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getNamePercentSignKeyword_1_1_0_2(), "name"); 
            	                

            	            }
            	            break;

            	    }


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6996:2: (lv_params_3= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:6999:6: lv_params_3= ruleUnaryOrInfixExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression16232);
            	    lv_params_3=ruleUnaryOrInfixExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		add(current, "params", lv_params_3, "UnaryOrInfixExpression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7024:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7024:64: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7025:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression16271);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;

             current =iv_ruleUnaryOrInfixExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression16281); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7032:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryOrInfixExpression_StartIndex = input.index();
        EObject this_UnaryExpression_0 = null;

        EObject this_PostopExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7037:6: ( (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7038:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7038:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=18 && LA131_0<=19)||(LA131_0>=89 && LA131_0<=90)) ) {
                alt131=1;
            }
            else if ( ((LA131_0>=RULE_ID && LA131_0<=RULE_REGEX)||LA131_0==32||(LA131_0>=91 && LA131_0<=93)) ) {
                alt131=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7038:1: (this_UnaryExpression_0= ruleUnaryExpression | this_PostopExpression_1= rulePostopExpression )", 131, 0, input);

                throw nvae;
            }
            switch (alt131) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7039:5: this_UnaryExpression_0= ruleUnaryExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression16328);
                    this_UnaryExpression_0=ruleUnaryExpression();
                    _fsp--;

                     
                            current = this_UnaryExpression_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7049:5: this_PostopExpression_1= rulePostopExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression16355);
                    this_PostopExpression_1=rulePostopExpression();
                    _fsp--;

                     
                            current = this_PostopExpression_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7064:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryExpression_StartIndex = input.index();
        EObject iv_ruleUnaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7064:57: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7065:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression16387);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;

             current =iv_ruleUnaryExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryExpression16397); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7072:1: ruleUnaryExpression returns [EObject current=null] : ( (lv_name_0= ( '!' | '-' | '++' | '--' ) ) (lv_params_1= rulePostopExpression ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryExpression_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_params_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7077:6: ( ( (lv_name_0= ( '!' | '-' | '++' | '--' ) ) (lv_params_1= rulePostopExpression ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7078:1: ( (lv_name_0= ( '!' | '-' | '++' | '--' ) ) (lv_params_1= rulePostopExpression ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7078:1: ( (lv_name_0= ( '!' | '-' | '++' | '--' ) ) (lv_params_1= rulePostopExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7078:2: (lv_name_0= ( '!' | '-' | '++' | '--' ) ) (lv_params_1= rulePostopExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7078:2: (lv_name_0= ( '!' | '-' | '++' | '--' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7080:6: lv_name_0= ( '!' | '-' | '++' | '--' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7080:16: ( '!' | '-' | '++' | '--' )
            int alt132=4;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt132=1;
                }
                break;
            case 18:
                {
                alt132=2;
                }
                break;
            case 89:
                {
                alt132=3;
                }
                break;
            case 90:
                {
                alt132=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("7080:16: ( '!' | '-' | '++' | '--' )", 132, 0, input);

                throw nvae;
            }

            switch (alt132) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7080:17: '!'
                    {
                    match(input,19,FOLLOW_19_in_ruleUnaryExpression16444); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0(), "name"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7086:6: '-'
                    {
                    match(input,18,FOLLOW_18_in_ruleUnaryExpression16460); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1(), "name"); 
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7092:6: '++'
                    {
                    match(input,89,FOLLOW_89_in_ruleUnaryExpression16476); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNamePlusSignPlusSignKeyword_0_0_2(), "name"); 
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7098:6: '--'
                    {
                    match(input,90,FOLLOW_90_in_ruleUnaryExpression16492); 

                            createLeafNode(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_0_0_3(), "name"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", /* lv_name_0 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7118:2: (lv_params_1= rulePostopExpression )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7121:6: lv_params_1= rulePostopExpression
            {
             
            	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getParamsPostopExpressionParserRuleCall_1_0(), currentNode); 
            	    
            pushFollow(FOLLOW_rulePostopExpression_in_ruleUnaryExpression16541);
            lv_params_1=rulePostopExpression();
            _fsp--;


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	        }
            	        
            	        try {
            	       		add(current, "params", lv_params_1, "PostopExpression", currentNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	        currentNode = currentNode.getParent();
            	    

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7146:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePostopExpression_StartIndex = input.index();
        EObject iv_rulePostopExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7146:58: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7147:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePostopExpression_in_entryRulePostopExpression16578);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;

             current =iv_rulePostopExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePostopExpression16588); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7154:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;
        int rulePostopExpression_StartIndex = input.index();
        Token lv_name_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7159:6: ( (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7160:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7160:1: (this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )? )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7161:5: this_InfixExpression_0= ruleInfixExpression ( () (lv_name_2= ( '--' | '++' ) ) )?
            {
             
                    currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_ruleInfixExpression_in_rulePostopExpression16635);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;

             
                    current = this_InfixExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7169:1: ( () (lv_name_2= ( '--' | '++' ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=89 && LA134_0<=90)) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7169:2: () (lv_name_2= ( '--' | '++' ) )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7169:2: ()
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7170:5: 
                    {
                     
                            temp=factory.create(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0().getType().getClassifier());
                            try {
                            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
                            } catch(ValueConverterException vce) {
                            	handleValueConverterException(vce);
                            }
                            current = temp; 
                            temp = null;
                            CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getPostOpCallTargetAction_1_0(), currentNode.getParent());
                        newNode.getChildren().add(currentNode);
                        moveLookaheadInfo(currentNode, newNode);
                        currentNode = newNode; 
                            associateNodeWithAstElement(currentNode, current); 
                        

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7185:2: (lv_name_2= ( '--' | '++' ) )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7187:6: lv_name_2= ( '--' | '++' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7187:16: ( '--' | '++' )
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==90) ) {
                        alt133=1;
                    }
                    else if ( (LA133_0==89) ) {
                        alt133=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("7187:16: ( '--' | '++' )", 133, 0, input);

                        throw nvae;
                    }
                    switch (alt133) {
                        case 1 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7187:17: '--'
                            {
                            match(input,90,FOLLOW_90_in_rulePostopExpression16666); 

                                    createLeafNode(grammarAccess.getPostopExpressionAccess().getNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "name"); 
                                

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7193:6: '++'
                            {
                            match(input,89,FOLLOW_89_in_rulePostopExpression16682); 

                                    createLeafNode(grammarAccess.getPostopExpressionAccess().getNamePlusSignPlusSignKeyword_1_1_0_1(), "name"); 
                                

                            }
                            break;

                    }


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "name", /* lv_name_2 */ input.LT(-1), null, lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;

            }


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7220:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleInfixExpression_StartIndex = input.index();
        EObject iv_ruleInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7220:57: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7221:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression16732);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;

             current =iv_ruleInfixExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInfixExpression16742); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7228:1: ruleInfixExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleInfixExpression_StartIndex = input.index();
        Token lv_name_3=null;
        Token lv_type_20=null;
        EObject this_PrimaryExpression_0 = null;

        EObject lv_params_5 = null;

        EObject lv_params_7 = null;

        EObject lv_index_11 = null;

        EObject lv_params_14 = null;

        EObject lv_params_16 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7233:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7234:1: (this_PrimaryExpression_0= rulePrimaryExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7234:1: (this_PrimaryExpression_0= rulePrimaryExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )* )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7235:5: this_PrimaryExpression_0= rulePrimaryExpression ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            {
             
                    currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                
            pushFollow(FOLLOW_rulePrimaryExpression_in_ruleInfixExpression16789);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;

             
                    current = this_PrimaryExpression_0; 
                    currentNode = currentNode.getParent();
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:1: ( ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' ) | ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? ) | ( () '.' (lv_type_20= RULE_ID ) ) )*
            loop140:
            do {
                int alt140=4;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==15) ) {
                    int LA140_2 = input.LA(2);

                    if ( (LA140_2==RULE_ID) ) {
                        int LA140_4 = input.LA(3);

                        if ( (LA140_4==32) ) {
                            alt140=1;
                        }
                        else if ( (LA140_4==EOF||LA140_4==15||(LA140_4>=17 && LA140_4<=18)||LA140_4==22||(LA140_4>=24 && LA140_4<=31)||(LA140_4>=33 && LA140_4<=35)||LA140_4==38||(LA140_4>=53 && LA140_4<=56)||(LA140_4>=81 && LA140_4<=90)) ) {
                            alt140=3;
                        }


                    }


                }
                else if ( (LA140_0==31) ) {
                    alt140=2;
                }


                switch (alt140) {
            	case 1 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:2: ( () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')' )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:3: () '.' (lv_name_3= RULE_ID ) '(' ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )? ')'
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7243:3: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7244:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression16808); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7263:1: (lv_name_3= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7265:6: lv_name_3= RULE_ID
            	    {
            	    lv_name_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression16830); 

            	    		createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "name", lv_name_3, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }

            	    match(input,32,FOLLOW_32_in_ruleInfixExpression16847); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7287:1: ( (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )* )?
            	    int alt136=2;
            	    int LA136_0 = input.LA(1);

            	    if ( ((LA136_0>=RULE_ID && LA136_0<=RULE_REGEX)||(LA136_0>=18 && LA136_0<=19)||LA136_0==32||(LA136_0>=89 && LA136_0<=93)) ) {
            	        alt136=1;
            	    }
            	    switch (alt136) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7287:2: (lv_params_5= ruleParameter ) ( ',' (lv_params_7= ruleParameter ) )*
            	            {
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7287:2: (lv_params_5= ruleParameter )
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7290:6: lv_params_5= ruleParameter
            	            {
            	             
            	            	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_0_0(), currentNode); 
            	            	    
            	            pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression16882);
            	            lv_params_5=ruleParameter();
            	            _fsp--;


            	            	        if (current==null) {
            	            	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	        }
            	            	        
            	            	        try {
            	            	       		add(current, "params", lv_params_5, "Parameter", currentNode);
            	            	        } catch (ValueConverterException vce) {
            	            				handleValueConverterException(vce);
            	            	        }
            	            	        currentNode = currentNode.getParent();
            	            	    

            	            }

            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7308:2: ( ',' (lv_params_7= ruleParameter ) )*
            	            loop135:
            	            do {
            	                int alt135=2;
            	                int LA135_0 = input.LA(1);

            	                if ( (LA135_0==33) ) {
            	                    alt135=1;
            	                }


            	                switch (alt135) {
            	            	case 1 :
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7308:3: ',' (lv_params_7= ruleParameter )
            	            	    {
            	            	    match(input,33,FOLLOW_33_in_ruleInfixExpression16896); 

            	            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0(), null); 
            	            	        
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7312:1: (lv_params_7= ruleParameter )
            	            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7315:6: lv_params_7= ruleParameter
            	            	    {
            	            	     
            	            	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_0_4_1_1_0(), currentNode); 
            	            	    	    
            	            	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression16930);
            	            	    lv_params_7=ruleParameter();
            	            	    _fsp--;


            	            	    	        if (current==null) {
            	            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	            	    	        }
            	            	    	        
            	            	    	        try {
            	            	    	       		add(current, "params", lv_params_7, "Parameter", currentNode);
            	            	    	        } catch (ValueConverterException vce) {
            	            	    				handleValueConverterException(vce);
            	            	    	        }
            	            	    	        currentNode = currentNode.getParent();
            	            	    	    

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop135;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    match(input,35,FOLLOW_35_in_ruleInfixExpression16947); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	        

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:6: ( () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )? )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:7: () '[' (lv_index_11= ruleExpression ) ']' ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7338:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7339:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtCallTargetAction_1_1_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,31,FOLLOW_31_in_ruleInfixExpression16973); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7358:1: (lv_index_11= ruleExpression )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7361:6: lv_index_11= ruleExpression
            	    {
            	     
            	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	    	    
            	    pushFollow(FOLLOW_ruleExpression_in_ruleInfixExpression17007);
            	    lv_index_11=ruleExpression();
            	    _fsp--;


            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "index", lv_index_11, "Expression", currentNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	        currentNode = currentNode.getParent();
            	    	    

            	    }

            	    match(input,34,FOLLOW_34_in_ruleInfixExpression17020); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7383:1: ( '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')' )?
            	    int alt139=2;
            	    int LA139_0 = input.LA(1);

            	    if ( (LA139_0==32) ) {
            	        alt139=1;
            	    }
            	    switch (alt139) {
            	        case 1 :
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7383:2: '(' ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )? ')'
            	            {
            	            match(input,32,FOLLOW_32_in_ruleInfixExpression17030); 

            	                    createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_1_4_0(), null); 
            	                
            	            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7387:1: ( (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )* )?
            	            int alt138=2;
            	            int LA138_0 = input.LA(1);

            	            if ( ((LA138_0>=RULE_ID && LA138_0<=RULE_REGEX)||(LA138_0>=18 && LA138_0<=19)||LA138_0==32||(LA138_0>=89 && LA138_0<=93)) ) {
            	                alt138=1;
            	            }
            	            switch (alt138) {
            	                case 1 :
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7387:2: (lv_params_14= ruleParameter ) ( ',' (lv_params_16= ruleParameter ) )*
            	                    {
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7387:2: (lv_params_14= ruleParameter )
            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7390:6: lv_params_14= ruleParameter
            	                    {
            	                     
            	                    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_0_0(), currentNode); 
            	                    	    
            	                    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression17065);
            	                    lv_params_14=ruleParameter();
            	                    _fsp--;


            	                    	        if (current==null) {
            	                    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	        }
            	                    	        
            	                    	        try {
            	                    	       		add(current, "params", lv_params_14, "Parameter", currentNode);
            	                    	        } catch (ValueConverterException vce) {
            	                    				handleValueConverterException(vce);
            	                    	        }
            	                    	        currentNode = currentNode.getParent();
            	                    	    

            	                    }

            	                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7408:2: ( ',' (lv_params_16= ruleParameter ) )*
            	                    loop137:
            	                    do {
            	                        int alt137=2;
            	                        int LA137_0 = input.LA(1);

            	                        if ( (LA137_0==33) ) {
            	                            alt137=1;
            	                        }


            	                        switch (alt137) {
            	                    	case 1 :
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7408:3: ',' (lv_params_16= ruleParameter )
            	                    	    {
            	                    	    match(input,33,FOLLOW_33_in_ruleInfixExpression17079); 

            	                    	            createLeafNode(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_1_4_1_1_0(), null); 
            	                    	        
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7412:1: (lv_params_16= ruleParameter )
            	                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7415:6: lv_params_16= ruleParameter
            	                    	    {
            	                    	     
            	                    	    	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParamsParameterParserRuleCall_1_1_4_1_1_1_0(), currentNode); 
            	                    	    	    
            	                    	    pushFollow(FOLLOW_ruleParameter_in_ruleInfixExpression17113);
            	                    	    lv_params_16=ruleParameter();
            	                    	    _fsp--;


            	                    	    	        if (current==null) {
            	                    	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
            	                    	    	        }
            	                    	    	        
            	                    	    	        try {
            	                    	    	       		add(current, "params", lv_params_16, "Parameter", currentNode);
            	                    	    	        } catch (ValueConverterException vce) {
            	                    	    				handleValueConverterException(vce);
            	                    	    	        }
            	                    	    	        currentNode = currentNode.getParent();
            	                    	    	    

            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop137;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            match(input,35,FOLLOW_35_in_ruleInfixExpression17130); 

            	                    createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_1_4_2(), null); 
            	                

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:6: ( () '.' (lv_type_20= RULE_ID ) )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:7: () '.' (lv_type_20= RULE_ID )
            	    {
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7438:7: ()
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7439:5: 
            	    {
            	     
            	            temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0().getType().getClassifier());
            	            try {
            	            	factory.set(temp, "target", current, null /*ParserRule*/, currentNode);
            	            } catch(ValueConverterException vce) {
            	            	handleValueConverterException(vce);
            	            }
            	            current = temp; 
            	            temp = null;
            	            CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_2_0(), currentNode.getParent());
            	        newNode.getChildren().add(currentNode);
            	        moveLookaheadInfo(currentNode, newNode);
            	        currentNode = newNode; 
            	            associateNodeWithAstElement(currentNode, current); 
            	        

            	    }

            	    match(input,15,FOLLOW_15_in_ruleInfixExpression17158); 

            	            createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	        
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7458:1: (lv_type_20= RULE_ID )
            	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7460:6: lv_type_20= RULE_ID
            	    {
            	    lv_type_20=(Token)input.LT(1);
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleInfixExpression17180); 

            	    		createLeafNode(grammarAccess.getInfixExpressionAccess().getTypeIDTerminalRuleCall_1_2_2_0(), "type"); 
            	    	

            	    	        if (current==null) {
            	    	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	    	            associateNodeWithAstElement(currentNode, current);
            	    	        }
            	    	        
            	    	        try {
            	    	       		set(current, "type", lv_type_20, "ID", lastConsumedNode);
            	    	        } catch (ValueConverterException vce) {
            	    				handleValueConverterException(vce);
            	    	        }
            	    	    

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7485:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePrimaryExpression_StartIndex = input.index();
        EObject iv_rulePrimaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7485:59: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7486:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            pushFollow(FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression17224);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;

             current =iv_rulePrimaryExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryExpression17234); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7493:1: rulePrimaryExpression returns [EObject current=null] : (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int rulePrimaryExpression_StartIndex = input.index();
        EObject this_Literal_0 = null;

        EObject this_FeatureCall_1 = null;

        EObject this_VariableValue_2 = null;

        EObject this_PropertyValue_3 = null;

        EObject this_ParanthesizedExpression_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7498:6: ( (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7499:1: (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7499:1: (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression )
            int alt141=5;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_HEX:
            case RULE_STRING:
            case RULE_REAL:
            case RULE_REGEX:
            case 91:
            case 92:
            case 93:
                {
                alt141=1;
                }
                break;
            case RULE_ID:
                {
                int LA141_2 = input.LA(2);

                if ( (LA141_2==32) ) {
                    alt141=2;
                }
                else if ( (LA141_2==EOF||LA141_2==15||(LA141_2>=17 && LA141_2<=18)||LA141_2==22||(LA141_2>=24 && LA141_2<=31)||(LA141_2>=33 && LA141_2<=35)||LA141_2==38||(LA141_2>=53 && LA141_2<=56)||(LA141_2>=81 && LA141_2<=90)) ) {
                    alt141=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("7499:1: (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression )", 141, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_PID:
                {
                int LA141_3 = input.LA(2);

                if ( (LA141_3==EOF||LA141_3==15||(LA141_3>=17 && LA141_3<=18)||LA141_3==22||(LA141_3>=24 && LA141_3<=31)||(LA141_3>=33 && LA141_3<=35)||LA141_3==38||(LA141_3>=53 && LA141_3<=56)||(LA141_3>=81 && LA141_3<=90)) ) {
                    alt141=4;
                }
                else if ( (LA141_3==32) ) {
                    alt141=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("7499:1: (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression )", 141, 3, input);

                    throw nvae;
                }
                }
                break;
            case 32:
                {
                alt141=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("7499:1: (this_Literal_0= ruleLiteral | this_FeatureCall_1= ruleFeatureCall | this_VariableValue_2= ruleVariableValue | this_PropertyValue_3= rulePropertyValue | this_ParanthesizedExpression_4= ruleParanthesizedExpression )", 141, 0, input);

                throw nvae;
            }

            switch (alt141) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7500:5: this_Literal_0= ruleLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleLiteral_in_rulePrimaryExpression17281);
                    this_Literal_0=ruleLiteral();
                    _fsp--;

                     
                            current = this_Literal_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7510:5: this_FeatureCall_1= ruleFeatureCall
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleFeatureCall_in_rulePrimaryExpression17308);
                    this_FeatureCall_1=ruleFeatureCall();
                    _fsp--;

                     
                            current = this_FeatureCall_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7520:5: this_VariableValue_2= ruleVariableValue
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableValueParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleVariableValue_in_rulePrimaryExpression17335);
                    this_VariableValue_2=ruleVariableValue();
                    _fsp--;

                     
                            current = this_VariableValue_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7530:5: this_PropertyValue_3= rulePropertyValue
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPropertyValueParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_rulePropertyValue_in_rulePrimaryExpression17362);
                    this_PropertyValue_3=rulePropertyValue();
                    _fsp--;

                     
                            current = this_PropertyValue_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7540:5: this_ParanthesizedExpression_4= ruleParanthesizedExpression
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression17389);
                    this_ParanthesizedExpression_4=ruleParanthesizedExpression();
                    _fsp--;

                     
                            current = this_ParanthesizedExpression_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7555:1: entryRulePropertyValue returns [EObject current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final EObject entryRulePropertyValue() throws RecognitionException {
        EObject current = null;
        int entryRulePropertyValue_StartIndex = input.index();
        EObject iv_rulePropertyValue = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7555:55: (iv_rulePropertyValue= rulePropertyValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7556:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
             currentNode = createCompositeNode(grammarAccess.getPropertyValueRule(), currentNode); 
            pushFollow(FOLLOW_rulePropertyValue_in_entryRulePropertyValue17421);
            iv_rulePropertyValue=rulePropertyValue();
            _fsp--;

             current =iv_rulePropertyValue; 
            match(input,EOF,FOLLOW_EOF_in_entryRulePropertyValue17431); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePropertyValue


    // $ANTLR start rulePropertyValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7563:1: rulePropertyValue returns [EObject current=null] : (lv_name_0= RULE_PID ) ;
    public final EObject rulePropertyValue() throws RecognitionException {
        EObject current = null;
        int rulePropertyValue_StartIndex = input.index();
        Token lv_name_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7568:6: ( (lv_name_0= RULE_PID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7569:1: (lv_name_0= RULE_PID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7569:1: (lv_name_0= RULE_PID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7571:6: lv_name_0= RULE_PID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_PID,FOLLOW_RULE_PID_in_rulePropertyValue17477); 

            		createLeafNode(grammarAccess.getPropertyValueAccess().getNamePIDTerminalRuleCall_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getPropertyValueRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, "PID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePropertyValue


    // $ANTLR start entryRuleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7596:1: entryRuleVariableValue returns [EObject current=null] : iv_ruleVariableValue= ruleVariableValue EOF ;
    public final EObject entryRuleVariableValue() throws RecognitionException {
        EObject current = null;
        int entryRuleVariableValue_StartIndex = input.index();
        EObject iv_ruleVariableValue = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7596:55: (iv_ruleVariableValue= ruleVariableValue EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7597:2: iv_ruleVariableValue= ruleVariableValue EOF
            {
             currentNode = createCompositeNode(grammarAccess.getVariableValueRule(), currentNode); 
            pushFollow(FOLLOW_ruleVariableValue_in_entryRuleVariableValue17517);
            iv_ruleVariableValue=ruleVariableValue();
            _fsp--;

             current =iv_ruleVariableValue; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariableValue17527); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVariableValue


    // $ANTLR start ruleVariableValue
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7604:1: ruleVariableValue returns [EObject current=null] : (lv_name_0= RULE_ID ) ;
    public final EObject ruleVariableValue() throws RecognitionException {
        EObject current = null;
        int ruleVariableValue_StartIndex = input.index();
        Token lv_name_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7609:6: ( (lv_name_0= RULE_ID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7610:1: (lv_name_0= RULE_ID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7610:1: (lv_name_0= RULE_ID )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7612:6: lv_name_0= RULE_ID
            {
            lv_name_0=(Token)input.LT(1);
            match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVariableValue17573); 

            		createLeafNode(grammarAccess.getVariableValueAccess().getNameIDTerminalRuleCall_0(), "name"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getVariableValueRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, "ID", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVariableValue


    // $ANTLR start entryRuleFeatureCall
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7637:1: entryRuleFeatureCall returns [EObject current=null] : iv_ruleFeatureCall= ruleFeatureCall EOF ;
    public final EObject entryRuleFeatureCall() throws RecognitionException {
        EObject current = null;
        int entryRuleFeatureCall_StartIndex = input.index();
        EObject iv_ruleFeatureCall = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7637:53: (iv_ruleFeatureCall= ruleFeatureCall EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7638:2: iv_ruleFeatureCall= ruleFeatureCall EOF
            {
             currentNode = createCompositeNode(grammarAccess.getFeatureCallRule(), currentNode); 
            pushFollow(FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall17613);
            iv_ruleFeatureCall=ruleFeatureCall();
            _fsp--;

             current =iv_ruleFeatureCall; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeatureCall17623); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeatureCall


    // $ANTLR start ruleFeatureCall
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7645:1: ruleFeatureCall returns [EObject current=null] : this_OperationCall_0= ruleOperationCall ;
    public final EObject ruleFeatureCall() throws RecognitionException {
        EObject current = null;
        int ruleFeatureCall_StartIndex = input.index();
        EObject this_OperationCall_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7650:6: (this_OperationCall_0= ruleOperationCall )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7652:5: this_OperationCall_0= ruleOperationCall
            {
             
                    currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall(), currentNode); 
                
            pushFollow(FOLLOW_ruleOperationCall_in_ruleFeatureCall17669);
            this_OperationCall_0=ruleOperationCall();
            _fsp--;

             
                    current = this_OperationCall_0; 
                    currentNode = currentNode.getParent();
                

            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeatureCall


    // $ANTLR start entryRuleOperationCall
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7667:1: entryRuleOperationCall returns [EObject current=null] : iv_ruleOperationCall= ruleOperationCall EOF ;
    public final EObject entryRuleOperationCall() throws RecognitionException {
        EObject current = null;
        int entryRuleOperationCall_StartIndex = input.index();
        EObject iv_ruleOperationCall = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7667:55: (iv_ruleOperationCall= ruleOperationCall EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7668:2: iv_ruleOperationCall= ruleOperationCall EOF
            {
             currentNode = createCompositeNode(grammarAccess.getOperationCallRule(), currentNode); 
            pushFollow(FOLLOW_ruleOperationCall_in_entryRuleOperationCall17700);
            iv_ruleOperationCall=ruleOperationCall();
            _fsp--;

             current =iv_ruleOperationCall; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOperationCall17710); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOperationCall


    // $ANTLR start ruleOperationCall
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7675:1: ruleOperationCall returns [EObject current=null] : ( (lv_name_0= ( RULE_ID | RULE_PID ) ) '(' ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )? ')' ) ;
    public final EObject ruleOperationCall() throws RecognitionException {
        EObject current = null;
        int ruleOperationCall_StartIndex = input.index();
        Token lv_name_0=null;
        EObject lv_params_2 = null;

        EObject lv_params_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7680:6: ( ( (lv_name_0= ( RULE_ID | RULE_PID ) ) '(' ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )? ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7681:1: ( (lv_name_0= ( RULE_ID | RULE_PID ) ) '(' ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )? ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7681:1: ( (lv_name_0= ( RULE_ID | RULE_PID ) ) '(' ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )? ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7681:2: (lv_name_0= ( RULE_ID | RULE_PID ) ) '(' ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )? ')'
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7681:2: (lv_name_0= ( RULE_ID | RULE_PID ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7683:6: lv_name_0= ( RULE_ID | RULE_PID )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7683:16: ( RULE_ID | RULE_PID )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==RULE_ID) ) {
                alt142=1;
            }
            else if ( (LA142_0==RULE_PID) ) {
                alt142=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7683:16: ( RULE_ID | RULE_PID )", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7683:18: RULE_ID
                    {
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleOperationCall17758); 

                    		createLeafNode(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_0_0_0(), "name"); 
                    	

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7688:7: RULE_PID
                    {
                    match(input,RULE_PID,FOLLOW_RULE_PID_in_ruleOperationCall17770); 

                    		createLeafNode(grammarAccess.getOperationCallAccess().getNamePIDTerminalRuleCall_0_0_1(), "name"); 
                    	

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "name", lv_name_0, null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }

            match(input,32,FOLLOW_32_in_ruleOperationCall17789); 

                    createLeafNode(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1(), null); 
                
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7711:1: ( (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( ((LA144_0>=RULE_ID && LA144_0<=RULE_REGEX)||(LA144_0>=18 && LA144_0<=19)||LA144_0==32||(LA144_0>=89 && LA144_0<=93)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7711:2: (lv_params_2= ruleParameter ) ( ',' (lv_params_4= ruleParameter ) )*
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7711:2: (lv_params_2= ruleParameter )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7714:6: lv_params_2= ruleParameter
                    {
                     
                    	        currentNode=createCompositeNode(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_0_0(), currentNode); 
                    	    
                    pushFollow(FOLLOW_ruleParameter_in_ruleOperationCall17824);
                    lv_params_2=ruleParameter();
                    _fsp--;


                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	        }
                    	        
                    	        try {
                    	       		add(current, "params", lv_params_2, "Parameter", currentNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	        currentNode = currentNode.getParent();
                    	    

                    }

                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7732:2: ( ',' (lv_params_4= ruleParameter ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==33) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7732:3: ',' (lv_params_4= ruleParameter )
                    	    {
                    	    match(input,33,FOLLOW_33_in_ruleOperationCall17838); 

                    	            createLeafNode(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0(), null); 
                    	        
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7736:1: (lv_params_4= ruleParameter )
                    	    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7739:6: lv_params_4= ruleParameter
                    	    {
                    	     
                    	    	        currentNode=createCompositeNode(grammarAccess.getOperationCallAccess().getParamsParameterParserRuleCall_2_1_1_0(), currentNode); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleParameter_in_ruleOperationCall17872);
                    	    lv_params_4=ruleParameter();
                    	    _fsp--;


                    	    	        if (current==null) {
                    	    	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
                    	    	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	    	        }
                    	    	        
                    	    	        try {
                    	    	       		add(current, "params", lv_params_4, "Parameter", currentNode);
                    	    	        } catch (ValueConverterException vce) {
                    	    				handleValueConverterException(vce);
                    	    	        }
                    	    	        currentNode = currentNode.getParent();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,35,FOLLOW_35_in_ruleOperationCall17889); 

                    createLeafNode(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOperationCall


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7768:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteral_StartIndex = input.index();
        EObject iv_ruleLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 181) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7768:49: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7769:2: iv_ruleLiteral= ruleLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleLiteral_in_entryRuleLiteral17922);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;

             current =iv_ruleLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteral17932); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7776:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;
        int ruleLiteral_StartIndex = input.index();
        EObject this_ValueLiteral_0 = null;

        EObject this_RegexpLiteral_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 182) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7781:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7782:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7782:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral )
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( ((LA145_0>=RULE_INT && LA145_0<=RULE_HEX)||(LA145_0>=RULE_STRING && LA145_0<=RULE_REAL)||(LA145_0>=91 && LA145_0<=93)) ) {
                alt145=1;
            }
            else if ( (LA145_0==RULE_REGEX) ) {
                alt145=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7782:1: (this_ValueLiteral_0= ruleValueLiteral | this_RegexpLiteral_1= ruleRegexpLiteral )", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7783:5: this_ValueLiteral_0= ruleValueLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleValueLiteral_in_ruleLiteral17979);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;

                     
                            current = this_ValueLiteral_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7793:5: this_RegexpLiteral_1= ruleRegexpLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getRegexpLiteralParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleRegexpLiteral_in_ruleLiteral18006);
                    this_RegexpLiteral_1=ruleRegexpLiteral();
                    _fsp--;

                     
                            current = this_RegexpLiteral_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7808:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleValueLiteral_StartIndex = input.index();
        EObject iv_ruleValueLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 183) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7808:54: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7809:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral18038);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;

             current =iv_ruleValueLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleValueLiteral18048); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7816:1: ruleValueLiteral returns [EObject current=null] : (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_StringLiteral_3= ruleStringLiteral | this_RealLiteral_4= ruleRealLiteral ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;
        int ruleValueLiteral_StartIndex = input.index();
        EObject this_BooleanLiteral_0 = null;

        EObject this_IntegerLiteral_1 = null;

        EObject this_NullLiteral_2 = null;

        EObject this_StringLiteral_3 = null;

        EObject this_RealLiteral_4 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 184) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7821:6: ( (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_StringLiteral_3= ruleStringLiteral | this_RealLiteral_4= ruleRealLiteral ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7822:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_StringLiteral_3= ruleStringLiteral | this_RealLiteral_4= ruleRealLiteral )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7822:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_StringLiteral_3= ruleStringLiteral | this_RealLiteral_4= ruleRealLiteral )
            int alt146=5;
            switch ( input.LA(1) ) {
            case 91:
            case 92:
                {
                alt146=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
                {
                alt146=2;
                }
                break;
            case 93:
                {
                alt146=3;
                }
                break;
            case RULE_STRING:
                {
                alt146=4;
                }
                break;
            case RULE_REAL:
                {
                alt146=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("7822:1: (this_BooleanLiteral_0= ruleBooleanLiteral | this_IntegerLiteral_1= ruleIntegerLiteral | this_NullLiteral_2= ruleNullLiteral | this_StringLiteral_3= ruleStringLiteral | this_RealLiteral_4= ruleRealLiteral )", 146, 0, input);

                throw nvae;
            }

            switch (alt146) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7823:5: this_BooleanLiteral_0= ruleBooleanLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getBooleanLiteralParserRuleCall_0(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral18095);
                    this_BooleanLiteral_0=ruleBooleanLiteral();
                    _fsp--;

                     
                            current = this_BooleanLiteral_0; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7833:5: this_IntegerLiteral_1= ruleIntegerLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getIntegerLiteralParserRuleCall_1(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral18122);
                    this_IntegerLiteral_1=ruleIntegerLiteral();
                    _fsp--;

                     
                            current = this_IntegerLiteral_1; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 3 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7843:5: this_NullLiteral_2= ruleNullLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getNullLiteralParserRuleCall_2(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleNullLiteral_in_ruleValueLiteral18149);
                    this_NullLiteral_2=ruleNullLiteral();
                    _fsp--;

                     
                            current = this_NullLiteral_2; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 4 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7853:5: this_StringLiteral_3= ruleStringLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_3(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleStringLiteral_in_ruleValueLiteral18176);
                    this_StringLiteral_3=ruleStringLiteral();
                    _fsp--;

                     
                            current = this_StringLiteral_3; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;
                case 5 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7863:5: this_RealLiteral_4= ruleRealLiteral
                    {
                     
                            currentNode=createCompositeNode(grammarAccess.getValueLiteralAccess().getRealLiteralParserRuleCall_4(), currentNode); 
                        
                    pushFollow(FOLLOW_ruleRealLiteral_in_ruleValueLiteral18203);
                    this_RealLiteral_4=ruleRealLiteral();
                    _fsp--;

                     
                            current = this_RealLiteral_4; 
                            currentNode = currentNode.getParent();
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7878:1: entryRuleBooleanLiteral returns [EObject current=null] : iv_ruleBooleanLiteral= ruleBooleanLiteral EOF ;
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleBooleanLiteral_StartIndex = input.index();
        EObject iv_ruleBooleanLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 185) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7878:56: (iv_ruleBooleanLiteral= ruleBooleanLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7879:2: iv_ruleBooleanLiteral= ruleBooleanLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getBooleanLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral18235);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();
            _fsp--;

             current =iv_ruleBooleanLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBooleanLiteral18245); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBooleanLiteral


    // $ANTLR start ruleBooleanLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7886:1: ruleBooleanLiteral returns [EObject current=null] : (lv_val_0= ( 'true' | 'false' ) ) ;
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;
        int ruleBooleanLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 186) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7891:6: ( (lv_val_0= ( 'true' | 'false' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7892:1: (lv_val_0= ( 'true' | 'false' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7892:1: (lv_val_0= ( 'true' | 'false' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7894:6: lv_val_0= ( 'true' | 'false' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7894:15: ( 'true' | 'false' )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==91) ) {
                alt147=1;
            }
            else if ( (LA147_0==92) ) {
                alt147=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7894:15: ( 'true' | 'false' )", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7894:16: 'true'
                    {
                    match(input,91,FOLLOW_91_in_ruleBooleanLiteral18291); 

                            createLeafNode(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0(), "val"); 
                        

                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7900:6: 'false'
                    {
                    match(input,92,FOLLOW_92_in_ruleBooleanLiteral18307); 

                            createLeafNode(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1(), "val"); 
                        

                    }
                    break;

            }


            	        if (current==null) {
            	            current = factory.create(grammarAccess.getBooleanLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", /* lv_val_0 */ input.LT(-1), null, lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBooleanLiteral


    // $ANTLR start entryRuleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7927:1: entryRuleIntegerLiteral returns [EObject current=null] : iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleIntegerLiteral_StartIndex = input.index();
        EObject iv_ruleIntegerLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 187) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7927:56: (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7928:2: iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getIntegerLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral18354);
            iv_ruleIntegerLiteral=ruleIntegerLiteral();
            _fsp--;

             current =iv_ruleIntegerLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIntegerLiteral18364); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleIntegerLiteral


    // $ANTLR start ruleIntegerLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7935:1: ruleIntegerLiteral returns [EObject current=null] : ( (lv_val_0= RULE_INT ) | RULE_HEX ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;
        int ruleIntegerLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 188) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7940:6: ( ( (lv_val_0= RULE_INT ) | RULE_HEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_INT) ) {
                alt148=1;
            }
            else if ( (LA148_0==RULE_HEX) ) {
                alt148=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("7941:1: ( (lv_val_0= RULE_INT ) | RULE_HEX )", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:2: (lv_val_0= RULE_INT )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7941:2: (lv_val_0= RULE_INT )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7943:6: lv_val_0= RULE_INT
                    {
                    lv_val_0=(Token)input.LT(1);
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleIntegerLiteral18411); 

                    		createLeafNode(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0_0(), "val"); 
                    	

                    	        if (current==null) {
                    	            current = factory.create(grammarAccess.getIntegerLiteralRule().getType().getClassifier());
                    	            associateNodeWithAstElement(currentNode, current);
                    	        }
                    	        
                    	        try {
                    	       		set(current, "val", lv_val_0, "INT", lastConsumedNode);
                    	        } catch (ValueConverterException vce) {
                    				handleValueConverterException(vce);
                    	        }
                    	    

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7962:6: RULE_HEX
                    {
                    match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleIntegerLiteral18434); 
                     
                        createLeafNode(grammarAccess.getIntegerLiteralAccess().getHEXTerminalRuleCall_1(), null); 
                        

                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleIntegerLiteral


    // $ANTLR start entryRuleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7973:1: entryRuleNullLiteral returns [EObject current=null] : iv_ruleNullLiteral= ruleNullLiteral EOF ;
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleNullLiteral_StartIndex = input.index();
        EObject iv_ruleNullLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 189) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7973:53: (iv_ruleNullLiteral= ruleNullLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7974:2: iv_ruleNullLiteral= ruleNullLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getNullLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral18466);
            iv_ruleNullLiteral=ruleNullLiteral();
            _fsp--;

             current =iv_ruleNullLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNullLiteral18476); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleNullLiteral


    // $ANTLR start ruleNullLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7981:1: ruleNullLiteral returns [EObject current=null] : (lv_val_0= 'null' ) ;
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;
        int ruleNullLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 190) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7986:6: ( (lv_val_0= 'null' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7987:1: (lv_val_0= 'null' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7987:1: (lv_val_0= 'null' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:7989:6: lv_val_0= 'null'
            {
            lv_val_0=(Token)input.LT(1);
            match(input,93,FOLLOW_93_in_ruleNullLiteral18521); 

                    createLeafNode(grammarAccess.getNullLiteralAccess().getValNullKeyword_0(), "val"); 
                

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getNullLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", /* lv_val_0 */ input.LT(-1), "null", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleNullLiteral


    // $ANTLR start entryRuleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8015:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleStringLiteral_StartIndex = input.index();
        EObject iv_ruleStringLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 191) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8015:55: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8016:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral18566);
            iv_ruleStringLiteral=ruleStringLiteral();
            _fsp--;

             current =iv_ruleStringLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringLiteral18576); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleStringLiteral


    // $ANTLR start ruleStringLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8023:1: ruleStringLiteral returns [EObject current=null] : (lv_val_0= RULE_STRING ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;
        int ruleStringLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 192) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8028:6: ( (lv_val_0= RULE_STRING ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8029:1: (lv_val_0= RULE_STRING )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8029:1: (lv_val_0= RULE_STRING )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8031:6: lv_val_0= RULE_STRING
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleStringLiteral18622); 

            		createLeafNode(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "STRING", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleStringLiteral


    // $ANTLR start entryRuleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8056:1: entryRuleRealLiteral returns [EObject current=null] : iv_ruleRealLiteral= ruleRealLiteral EOF ;
    public final EObject entryRuleRealLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleRealLiteral_StartIndex = input.index();
        EObject iv_ruleRealLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 193) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8056:53: (iv_ruleRealLiteral= ruleRealLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8057:2: iv_ruleRealLiteral= ruleRealLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRealLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral18662);
            iv_ruleRealLiteral=ruleRealLiteral();
            _fsp--;

             current =iv_ruleRealLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRealLiteral18672); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRealLiteral


    // $ANTLR start ruleRealLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8064:1: ruleRealLiteral returns [EObject current=null] : (lv_val_0= RULE_REAL ) ;
    public final EObject ruleRealLiteral() throws RecognitionException {
        EObject current = null;
        int ruleRealLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 194) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8069:6: ( (lv_val_0= RULE_REAL ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8070:1: (lv_val_0= RULE_REAL )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8070:1: (lv_val_0= RULE_REAL )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8072:6: lv_val_0= RULE_REAL
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_REAL,FOLLOW_RULE_REAL_in_ruleRealLiteral18718); 

            		createLeafNode(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRealLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "REAL", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRealLiteral


    // $ANTLR start entryRuleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8097:1: entryRuleRegexpLiteral returns [EObject current=null] : iv_ruleRegexpLiteral= ruleRegexpLiteral EOF ;
    public final EObject entryRuleRegexpLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleRegexpLiteral_StartIndex = input.index();
        EObject iv_ruleRegexpLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 195) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8097:55: (iv_ruleRegexpLiteral= ruleRegexpLiteral EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8098:2: iv_ruleRegexpLiteral= ruleRegexpLiteral EOF
            {
             currentNode = createCompositeNode(grammarAccess.getRegexpLiteralRule(), currentNode); 
            pushFollow(FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral18758);
            iv_ruleRegexpLiteral=ruleRegexpLiteral();
            _fsp--;

             current =iv_ruleRegexpLiteral; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRegexpLiteral18768); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRegexpLiteral


    // $ANTLR start ruleRegexpLiteral
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8105:1: ruleRegexpLiteral returns [EObject current=null] : (lv_val_0= RULE_REGEX ) ;
    public final EObject ruleRegexpLiteral() throws RecognitionException {
        EObject current = null;
        int ruleRegexpLiteral_StartIndex = input.index();
        Token lv_val_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 196) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8110:6: ( (lv_val_0= RULE_REGEX ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8111:1: (lv_val_0= RULE_REGEX )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8111:1: (lv_val_0= RULE_REGEX )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8113:6: lv_val_0= RULE_REGEX
            {
            lv_val_0=(Token)input.LT(1);
            match(input,RULE_REGEX,FOLLOW_RULE_REGEX_in_ruleRegexpLiteral18814); 

            		createLeafNode(grammarAccess.getRegexpLiteralAccess().getValREGEXTerminalRuleCall_0(), "val"); 
            	

            	        if (current==null) {
            	            current = factory.create(grammarAccess.getRegexpLiteralRule().getType().getClassifier());
            	            associateNodeWithAstElement(currentNode, current);
            	        }
            	        
            	        try {
            	       		set(current, "val", lv_val_0, "REGEX", lastConsumedNode);
            	        } catch (ValueConverterException vce) {
            				handleValueConverterException(vce);
            	        }
            	    

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRegexpLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8138:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        EObject iv_ruleParanthesizedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 197) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8138:65: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8139:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
             currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            pushFollow(FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression18854);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;

             current =iv_ruleParanthesizedExpression; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParanthesizedExpression18864); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8146:1: ruleParanthesizedExpression returns [EObject current=null] : ( '(' this_Expression_1= ruleExpression ')' ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int ruleParanthesizedExpression_StartIndex = input.index();
        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 198) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8151:6: ( ( '(' this_Expression_1= ruleExpression ')' ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8152:1: ( '(' this_Expression_1= ruleExpression ')' )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8152:1: ( '(' this_Expression_1= ruleExpression ')' )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8152:2: '(' this_Expression_1= ruleExpression ')'
            {
            match(input,32,FOLLOW_32_in_ruleParanthesizedExpression18898); 

                    createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                
             
                    currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                
            pushFollow(FOLLOW_ruleExpression_in_ruleParanthesizedExpression18920);
            this_Expression_1=ruleExpression();
            _fsp--;

             
                    current = this_Expression_1; 
                    currentNode = currentNode.getParent();
                
            match(input,35,FOLLOW_35_in_ruleParanthesizedExpression18928); 

                    createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start ruleVisibility
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8176:1: ruleVisibility returns [Enumerator current=null] : ( ( 'public' ) | ( 'private' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;
        int ruleVisibility_StartIndex = input.index();
         setCurrentLookahead(); resetLookahead(); 
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 199) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8180:6: ( ( ( 'public' ) | ( 'private' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8181:1: ( ( 'public' ) | ( 'private' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8181:1: ( ( 'public' ) | ( 'private' ) )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==94) ) {
                alt149=1;
            }
            else if ( (LA149_0==95) ) {
                alt149=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("8181:1: ( ( 'public' ) | ( 'private' ) )", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8181:2: ( 'public' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8181:2: ( 'public' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8181:4: 'public'
                    {
                    match(input,94,FOLLOW_94_in_ruleVisibility18975); 

                            current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8187:6: ( 'private' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8187:6: ( 'private' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8187:8: 'private'
                    {
                    match(input,95,FOLLOW_95_in_ruleVisibility18990); 

                            current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1(), null); 
                        

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVisibility


    // $ANTLR start ruleExecutionMode
    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8199:1: ruleExecutionMode returns [Enumerator current=null] : ( ( 'parallel' ) | ( 'sequential' ) ) ;
    public final Enumerator ruleExecutionMode() throws RecognitionException {
        Enumerator current = null;
        int ruleExecutionMode_StartIndex = input.index();
         setCurrentLookahead(); resetLookahead(); 
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 200) ) { return current; }
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8203:6: ( ( ( 'parallel' ) | ( 'sequential' ) ) )
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:1: ( ( 'parallel' ) | ( 'sequential' ) )
            {
            // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:1: ( ( 'parallel' ) | ( 'sequential' ) )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==96) ) {
                alt150=1;
            }
            else if ( (LA150_0==49) ) {
                alt150=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("8204:1: ( ( 'parallel' ) | ( 'sequential' ) )", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:2: ( 'parallel' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:2: ( 'parallel' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8204:4: 'parallel'
                    {
                    match(input,96,FOLLOW_96_in_ruleExecutionMode19035); 

                            current = grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getExecutionModeAccess().getParallelEnumLiteralDeclaration_0(), null); 
                        

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8210:6: ( 'sequential' )
                    {
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8210:6: ( 'sequential' )
                    // ../org.eclipse.b3.beelang/src-gen/org/eclipse/b3/parser/antlr/internal/InternalBeeLang.g:8210:8: 'sequential'
                    {
                    match(input,49,FOLLOW_49_in_ruleExecutionMode19050); 

                            current = grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                            createLeafNode(grammarAccess.getExecutionModeAccess().getSequentialEnumLiteralDeclaration_1(), null); 
                        

                    }


                    }
                    break;

            }


            }

             resetLookahead(); 
                	lastConsumedNode = currentNode;
                
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExecutionMode


    protected DFA43 dfa43 = new DFA43(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    static final String DFA43_eotS =
        "\16\uffff";
    static final String DFA43_eofS =
        "\1\uffff\2\4\2\uffff\3\4\1\uffff\5\4";
    static final String DFA43_minS =
        "\1\4\1\21\1\4\2\uffff\4\4\1\21\4\4";
    static final String DFA43_maxS =
        "\1\10\2\46\2\uffff\3\46\1\4\5\46";
    static final String DFA43_acceptS =
        "\3\uffff\1\1\1\2\11\uffff";
    static final String DFA43_specialS =
        "\16\uffff}>";
    static final String[] DFA43_transitionS = {
            "\1\2\3\uffff\1\1",
            "\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\12",
            "\1\3\17\uffff\1\4\4\uffff\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\15\1\13\1\14\10\uffff\1\10\1\11\1\3\17\uffff\1\4\4\uffff"+
            "\1\4"
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "2303:1: ( (this_CompoundName_0= ruleCompoundName (kw= '#' this_PartName_2= rulePartName )? ) | this_PartName_3= rulePartName )";
        }
    }
    static final String DFA74_eotS =
        "\17\uffff";
    static final String DFA74_eofS =
        "\2\uffff\1\1\2\uffff\3\1\1\uffff\1\1\1\uffff\4\1";
    static final String DFA74_minS =
        "\1\4\1\uffff\1\4\2\uffff\4\4\1\21\1\uffff\4\4";
    static final String DFA74_maxS =
        "\1\75\1\uffff\1\100\2\uffff\3\100\1\4\1\100\1\uffff\4\100";
    static final String DFA74_acceptS =
        "\1\uffff\1\1\1\uffff\1\3\1\4\5\uffff\1\2\4\uffff";
    static final String DFA74_specialS =
        "\17\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\2\3\uffff\1\1\41\uffff\1\3\22\uffff\1\4",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff\1"+
            "\1",
            "",
            "",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff\1"+
            "\1",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff\1"+
            "\1",
            "\1\7\1\5\1\6\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff\1"+
            "\1",
            "\1\13",
            "\1\12\24\uffff\1\1\31\uffff\1\1",
            "",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff"+
            "\1\1",
            "\1\16\1\14\1\15\10\uffff\1\10\1\11\1\12\24\uffff\1\1\31\uffff"+
            "\1\1"
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "3440:1: (this_PartInSelf_0= rulePartInSelf | this_CapabilityReferencedPart_1= ruleCapabilityReferencedPart | this_CompoundReferences_2= ruleCompoundReferences | this_ExprStatement_3= ruleExprStatement )";
        }
    }
    static final String DFA77_eotS =
        "\144\uffff";
    static final String DFA77_eofS =
        "\11\uffff\2\20\6\uffff\3\20\1\uffff\1\20\2\uffff\6\20\5\uffff\25"+
        "\20\1\uffff\2\20\51\uffff";
    static final String DFA77_minS =
        "\6\4\1\21\2\4\1\21\5\4\2\uffff\4\4\1\21\2\4\1\46\5\4\1\41\32\4\2"+
        "\46\22\4\1\42\26\4";
    static final String DFA77_maxS =
        "\1\4\4\21\1\4\1\21\1\10\1\21\2\100\3\21\1\40\2\uffff\3\100\1\4\1"+
        "\100\2\11\6\100\5\43\25\100\1\11\2\100\51\43";
    static final String DFA77_acceptS =
        "\17\uffff\1\1\1\2\123\uffff";
    static final String DFA77_specialS =
        "\144\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\1",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\4\1\2\1\3\10\uffff\1\5\1\6\1\7",
            "\1\10",
            "\1\7",
            "\1\12\3\uffff\1\11",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\16\24\uffff\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\15\1\13\1\14\10\uffff\1\5\1\6\1\7",
            "\1\31\1\32\1\33\1\uffff\1\30\1\34\25\uffff\1\26\1\27",
            "",
            "",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\23\1\21\1\22\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\35",
            "\1\16\24\uffff\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\37\1\40\1\41\1\uffff\1\36\1\42",
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\61\1\62\1\63\2\uffff\1\64\5\uffff\1\43\2\uffff\1\44\1\45"+
            "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\7\uffff"+
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\67\1\65\1\66\10\uffff\1\24\1\25\1\16\24\uffff\1\20\23\uffff"+
            "\1\17\5\uffff\1\20",
            "\1\116\1\117\1\120\1\uffff\1\115\1\121",
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\20\23\uffff\1\17\5\uffff\1\20",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\111\1\112\1\113\2\uffff\1\114\5\uffff\1\73\2\uffff\1\74\1"+
            "\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
            "\1\110\2\uffff\1\70\1\71\1\72",
            "\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72",
            "\1\140\1\141\1\142\2\uffff\1\143\5\uffff\1\122\2\uffff\1\123"+
            "\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135"+
            "\1\136\1\137\3\uffff\1\71\1\72"
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "3542:1: ( ( (lv_interface_0= ruleInterfaceName ) '/' (lv_name_2= ruleUnitName ) ( '/' (lv_range_4= ruleVersionRange ) )? '#' (lv_partName_6= rulePartName ) ) | ( (lv_interface_7= ruleInterfaceName ) '/' (lv_name_9= ruleUnitName ) ( '/' (lv_range_11= ruleVersionRange ) )? ) )";
        }
    }
 

    public static final BitSet FOLLOW_ruleBeeModel_in_entryRuleBeeModel80 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBeeModel90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_ruleBeeModel149 = new BitSet(new long[]{0x0002009000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_ruleUnit_in_ruleBeeModel188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName277 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName298 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName324 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName350 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_15_in_ruleQualifiedName371 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName386 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleQualifiedName407 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleQualifiedName433 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQualifiedName459 = new BitSet(new long[]{0x0000000000018072L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_ruleQualifiedName490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleHIDDENBUG_in_entryRuleHIDDENBUG534 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleHIDDENBUG545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_ruleHIDDENBUG583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyName_in_entryRulePropertyName625 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyName636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyName675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_entryRuleEscapedQualifiedName718 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEscapedQualifiedName729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleEscapedQualifiedName769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEscapedQualifiedName802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_entryRuleInterfaceName846 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterfaceName857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleInterfaceName903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_entryRuleCompoundName946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundName957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1004 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCompoundName1022 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleCompoundName1044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnitName_in_entryRuleUnitName1088 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnitName1099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_ruleUnitName1145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_entryRulePartName1188 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartName1199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEscapedQualifiedName_in_rulePartName1245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSeparator_in_entryRuleSeparator1288 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSeparator1299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_ruleSeparator1337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_ruleSeparator1356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleSeparator1375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleSeparator1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_ruleSeparator1413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleSeparator1432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_ruleSeparator1451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleSeparator1470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleSeparator1489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleSeparator1508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleSeparator1527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_ruleSeparator1546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleSeparator1565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleSeparator1584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_entryRuleAlfanumSym1623 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAlfanumSym1634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1675 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1701 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1727 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1753 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleSeparator_in_ruleAlfanumSym1782 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAlfanumSym1808 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleAlfanumSym1834 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleAlfanumSym1860 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleAlfanumSym1886 = new BitSet(new long[]{0x000000007FFC8272L});
    public static final BitSet FOLLOW_ruleVersion_in_entryRuleVersion1932 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersion1943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVersion1983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAlfanumSym_in_ruleVersion2016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersionRange_in_entryRuleVersionRange2060 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVersionRange2071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleVersionRange2111 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_32_in_ruleVersionRange2130 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2153 = new BitSet(new long[]{0x0000000E00000000L});
    public static final BitSet FOLLOW_33_in_ruleVersionRange2172 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2194 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_34_in_ruleVersionRange2215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleVersionRange2234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleVersionRange2264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_entryRuleImport2307 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImport2317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleImport2351 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImport2385 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_37_in_ruleImport2399 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleImport2410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit2443 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnit2453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleUnit2512 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleUnit2526 = new BitSet(new long[]{0x0000070000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleUnit2560 = new BitSet(new long[]{0x0000070000000000L});
    public static final BitSet FOLLOW_40_in_ruleUnit2575 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleUnit2609 = new BitSet(new long[]{0x0000060000000000L});
    public static final BitSet FOLLOW_41_in_ruleUnit2625 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2659 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_33_in_ruleUnit2673 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleUnit2707 = new BitSet(new long[]{0x0000040200000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2724 = new BitSet(new long[]{0x4807F80000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_43_in_ruleUnit2734 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_ruleUnit2768 = new BitSet(new long[]{0x4807F80000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_44_in_ruleUnit2785 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2794 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2829 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2842 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit2853 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_44_in_ruleUnit2870 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit2904 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2917 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_46_in_ruleUnit2934 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit2943 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit2978 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit2991 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3002 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_46_in_ruleUnit3019 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3053 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3066 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_47_in_ruleUnit3083 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3092 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3101 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3136 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3149 = new BitSet(new long[]{0x0008200000000010L});
    public static final BitSet FOLLOW_45_in_ruleUnit3160 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_47_in_ruleUnit3177 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleUnit3186 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit3220 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnit3233 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_48_in_ruleUnit3250 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_ruleUnit3284 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_49_in_ruleUnit3305 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3314 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3348 = new BitSet(new long[]{0x0000200000000110L});
    public static final BitSet FOLLOW_45_in_ruleUnit3362 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_49_in_ruleUnit3379 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronization_in_ruleUnit3413 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_ruleBuildPart_in_ruleUnit3458 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_50_in_ruleUnit3478 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleUnit3487 = new BitSet(new long[]{0x0000200000000100L,0x0000000000000008L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_ruleUnit3521 = new BitSet(new long[]{0x0000200000000100L,0x0000000000000008L});
    public static final BitSet FOLLOW_45_in_ruleUnit3535 = new BitSet(new long[]{0x4807F00000000000L,0x00000001C0000002L});
    public static final BitSet FOLLOW_45_in_ruleUnit3547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability3580 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability3590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleProvidedCapability3625 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleProvidedCapability3659 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3699 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3712 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleProvidedCapability3746 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleProvidedCapability3760 = new BitSet(new long[]{0x0000000000000370L});
    public static final BitSet FOLLOW_ruleVersion_in_ruleProvidedCapability3794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability3833 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability3843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleRequiredCapability3878 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleRequiredCapability3912 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3952 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability3965 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRequiredCapability3999 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleRequiredCapability4013 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleRequiredCapability4047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedPropertyStatements_in_entryRuleNamedPropertyStatements4086 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedPropertyStatements4096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedPropertyStatements4143 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_ruleNamedPropertyStatements4186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_entryRulePropertyStatements4223 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyStatements4233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rulePropertyStatements4267 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_51_in_rulePropertyStatements4278 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePropertyStatements4312 = new BitSet(new long[]{0x0210040000000080L});
    public static final BitSet FOLLOW_ruleUnsetPropertyStatement_in_rulePropertyStatements4353 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_rulePropertyStatements4397 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_rulePropertyStatements4441 = new BitSet(new long[]{0x0218240000000080L});
    public static final BitSet FOLLOW_45_in_rulePropertyStatements4457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_entryRulePropertyStatement4490 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyStatement4500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rulePropertyStatement4546 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_rulePropertyStatement4594 = new BitSet(new long[]{0x01E0000002000000L});
    public static final BitSet FOLLOW_25_in_rulePropertyStatement4620 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_53_in_rulePropertyStatement4636 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_54_in_rulePropertyStatement4652 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_55_in_rulePropertyStatement4668 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_56_in_rulePropertyStatement4684 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_rulePropertyStatement4733 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePropertyStatement4746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnsetPropertyStatement_in_entryRuleUnsetPropertyStatement4779 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnsetPropertyStatement4789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleUnsetPropertyStatement4823 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleUnsetPropertyStatement4857 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleUnsetPropertyStatement4870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnnotationStatement_in_entryRuleAnnotationStatement4903 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationStatement4913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleAnnotationStatement4948 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleAnnotationStatement4982 = new BitSet(new long[]{0x0010000000000080L});
    public static final BitSet FOLLOW_52_in_ruleAnnotationStatement5009 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleAnnotationStatement5057 = new BitSet(new long[]{0x01E0000002000000L});
    public static final BitSet FOLLOW_25_in_ruleAnnotationStatement5083 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_53_in_ruleAnnotationStatement5099 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_54_in_ruleAnnotationStatement5115 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_55_in_ruleAnnotationStatement5131 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_56_in_ruleAnnotationStatement5147 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_ruleAnnotationStatement5196 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAnnotationStatement5209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyExpression_in_entryRulePropertyExpression5242 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyExpression5252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rulePropertyExpression5298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronization_in_entryRuleSynchronization5329 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronization5339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5398 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ruleSynchronization5412 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_ruleSynchronization5446 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_38_in_ruleSynchronization5461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSynchronizedPart_in_entryRuleSynchronizedPart5495 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSynchronizedPart5506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundName_in_ruleSynchronizedPart5554 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_58_in_ruleSynchronizedPart5573 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_ruleSynchronizedPart5631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBuildPart_in_entryRuleBuildPart5674 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBuildPart5684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArtifacts_in_ruleBuildPart5731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroup_in_ruleBuildPart5758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAction_in_ruleBuildPart5785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArtifacts_in_entryRuleArtifacts5817 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArtifacts5827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleArtifacts5886 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleArtifacts5900 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleArtifacts5934 = new BitSet(new long[]{0x0000140000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_44_in_ruleArtifacts5948 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleArtifacts5982 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_33_in_ruleArtifacts5996 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleArtifacts6030 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleArtifacts6072 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleArtifacts6086 = new BitSet(new long[]{0x3008200000020110L});
    public static final BitSet FOLLOW_rulePathGroup_in_ruleArtifacts6120 = new BitSet(new long[]{0x3008200000020110L});
    public static final BitSet FOLLOW_45_in_ruleArtifacts6134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathGroup_in_entryRulePathGroup6167 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathGroup6177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rulePathGroup6212 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePathGroup6246 = new BitSet(new long[]{0x3000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup6288 = new BitSet(new long[]{0x0000004280000000L});
    public static final BitSet FOLLOW_33_in_rulePathGroup6303 = new BitSet(new long[]{0x2000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup6337 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_31_in_rulePathGroup6371 = new BitSet(new long[]{0x2000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup6418 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_33_in_rulePathGroup6432 = new BitSet(new long[]{0x2000000000020110L});
    public static final BitSet FOLLOW_rulePathExpression_in_rulePathGroup6466 = new BitSet(new long[]{0x0000000600000000L});
    public static final BitSet FOLLOW_34_in_rulePathGroup6481 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePathGroup6492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rulePathGroup6509 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePathGroup6518 = new BitSet(new long[]{0x0218000000000080L});
    public static final BitSet FOLLOW_57_in_rulePathGroup6529 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_rulePathGroup6563 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePathGroup6576 = new BitSet(new long[]{0x0218200000000080L});
    public static final BitSet FOLLOW_ruleAnnotationStatement_in_rulePathGroup6617 = new BitSet(new long[]{0x0218200000000080L});
    public static final BitSet FOLLOW_45_in_rulePathGroup6632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePathExpression_in_entryRulePathExpression6667 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePathExpression6677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_rulePathExpression6711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_rulePathExpression6731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_entryRuleExprStatement6763 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExprStatement6773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleExprStatement6807 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleExprStatement6816 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExprStatement6850 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleExprStatement6863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePath_in_entryRulePath6897 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePath6908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_rulePath6948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rulePath6974 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath6998 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath7017 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePath7039 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_rulePath7060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroup_in_entryRuleGroup7101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroup7111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleGroup7170 = new BitSet(new long[]{0x4002000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleGroup7209 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_ruleGroup7223 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleGroup7257 = new BitSet(new long[]{0x0000140000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_44_in_ruleGroup7271 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleGroup7305 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_33_in_ruleGroup7319 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleGroup7353 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_ruleGroup7395 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleGroup7434 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleGroup7448 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleGroup7482 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_45_in_ruleGroup7496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisite_in_entryRulePrerequisite7529 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisite7539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rulePrerequisite7586 = new BitSet(new long[]{0x2008040000000110L});
    public static final BitSet FOLLOW_51_in_rulePrerequisite7610 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_rulePrerequisite7644 = new BitSet(new long[]{0x2000040000000110L});
    public static final BitSet FOLLOW_RULE_ID_in_rulePrerequisite7673 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_rulePrerequisite7690 = new BitSet(new long[]{0x2000040000000110L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_rulePrerequisite7727 = new BitSet(new long[]{0x0000004000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleClosure_in_rulePrerequisite7765 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePrerequisite7781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClosure_in_entryRuleClosure7814 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClosure7824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleClosure7858 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleClosure7867 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_43_in_ruleClosure7878 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleClosure7887 = new BitSet(new long[]{0x0210000000000080L});
    public static final BitSet FOLLOW_57_in_ruleClosure7898 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_rulePropertyName_in_ruleClosure7932 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleClosure7945 = new BitSet(new long[]{0x0210200000000080L});
    public static final BitSet FOLLOW_rulePropertyStatement_in_ruleClosure7986 = new BitSet(new long[]{0x0210200000000080L});
    public static final BitSet FOLLOW_45_in_ruleClosure8001 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_48_in_ruleClosure8018 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleClosure8052 = new BitSet(new long[]{0x0001280000000000L});
    public static final BitSet FOLLOW_45_in_ruleClosure8068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrerequisiteEntry_in_entryRulePrerequisiteEntry8101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrerequisiteEntry8111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_rulePrerequisiteEntry8158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_rulePrerequisiteEntry8185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_rulePrerequisiteEntry8212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExprStatement_in_rulePrerequisiteEntry8239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartInSelf_in_entryRulePartInSelf8271 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePartInSelf8281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePartName_in_rulePartInSelf8339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCapabilityReferencedPart_in_entryRuleCapabilityReferencedPart8375 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCapabilityReferencedPart8385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart8445 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart8458 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart8492 = new BitSet(new long[]{0x0400000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart8506 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart8540 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_ruleCapabilityReferencedPart8555 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleCapabilityReferencedPart8589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceName_in_ruleCapabilityReferencedPart8635 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart8648 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_ruleUnitName_in_ruleCapabilityReferencedPart8682 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_ruleCapabilityReferencedPart8696 = new BitSet(new long[]{0x0000000180000370L});
    public static final BitSet FOLLOW_ruleVersionRange_in_ruleCapabilityReferencedPart8730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundReferences_in_entryRuleCompoundReferences8770 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundReferences8780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundReferences8814 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleCompoundReferences8848 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_45_in_ruleCompoundReferences8862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAction_in_entryRuleAction8895 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAction8905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleAction8964 = new BitSet(new long[]{0x0002000000000000L,0x0000000100000002L});
    public static final BitSet FOLLOW_ruleExecutionMode_in_ruleAction9003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleAction9017 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_rulePartName_in_ruleAction9026 = new BitSet(new long[]{0x0000140000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_44_in_ruleAction9028 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleAction9062 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_33_in_ruleAction9076 = new BitSet(new long[]{0x0008000000000010L});
    public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleAction9110 = new BitSet(new long[]{0x0000040200000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_ruleAction9152 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleAction9191 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleAction9205 = new BitSet(new long[]{0x40092C01000C07F0L,0x000000003E01CF04L});
    public static final BitSet FOLLOW_43_in_ruleAction9215 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_rulePropertyStatements_in_ruleAction9249 = new BitSet(new long[]{0x40092401000C07F0L,0x000000003E01CF04L});
    public static final BitSet FOLLOW_ruleAdvice_in_ruleAction9289 = new BitSet(new long[]{0x40082401000C07F0L,0x000000003E01CF04L});
    public static final BitSet FOLLOW_ruleActionInputGroup_in_ruleAction9328 = new BitSet(new long[]{0x00082401000C07F0L,0x000000003E01CF04L});
    public static final BitSet FOLLOW_ruleLayout_in_ruleAction9367 = new BitSet(new long[]{0x00082401000C07F0L,0x000000003E01CF04L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleAction9406 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleAction9419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter9452 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParameter9462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParameter9520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLayout_in_entryRuleLayout9556 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLayout9566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleLayout9601 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleFilter_in_ruleLayout9635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleLayout9650 = new BitSet(new long[]{0x0000040000000010L,0x0000000000000040L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleLayout9684 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleLayout9723 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleLayout9737 = new BitSet(new long[]{0x3008200000020110L});
    public static final BitSet FOLLOW_rulePathGroup_in_ruleLayout9771 = new BitSet(new long[]{0x3008200000020110L});
    public static final BitSet FOLLOW_45_in_ruleLayout9785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActionInputGroup_in_entryRuleActionInputGroup9818 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleActionInputGroup9828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleActionInputGroup9862 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_ruleActionInputGroup9896 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_ruleActionInputGroup9935 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleActionInputGroup9949 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_rulePrerequisite_in_ruleActionInputGroup9983 = new BitSet(new long[]{0xA008240000000110L});
    public static final BitSet FOLLOW_45_in_ruleActionInputGroup9997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRepositoryConfiguration_in_entryRuleRepositoryConfiguration10030 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRepositoryConfiguration10040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_ruleRepositoryConfiguration10100 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_67_in_ruleRepositoryConfiguration10120 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRepositoryConfiguration10154 = new BitSet(new long[]{0x0000044000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleRepositoryConfiguration10194 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleRepositoryConfiguration10208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleURI_in_entryRuleURI10242 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleURI10253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleURI10292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNamedAdvice_in_entryRuleNamedAdvice10334 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNamedAdvice10344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleNamedAdvice10391 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleNamedAdvice10434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvice_in_entryRuleAdvice10471 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvice10481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleAdvice10515 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdvice10537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_entryRuleCompoundAdvice10569 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundAdvice10579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundAdvice10613 = new BitSet(new long[]{0x0000200040028010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_ruleCompoundAdvice10648 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleCompoundAdvice10661 = new BitSet(new long[]{0x0000200040028010L,0x0000000000000010L});
    public static final BitSet FOLLOW_45_in_ruleCompoundAdvice10672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdviceStatement_in_entryRuleAdviceStatement10705 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdviceStatement10715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_ruleAdviceStatement10774 = new BitSet(new long[]{0x0000040002000000L});
    public static final BitSet FOLLOW_25_in_ruleAdviceStatement10789 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdviceStatement10823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundAdvice_in_ruleAdviceStatement10868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePath_in_entryRuleAdvicePath10906 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePath10916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath10975 = new BitSet(new long[]{0x0000000040008010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath11014 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_ruleAdvicePath11053 = new BitSet(new long[]{0x0000000040008010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_ruleAdvicePath11091 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_ruleAdvicePathSeparator_in_entryRuleAdvicePathSeparator11130 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathSeparator11140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathChildren_in_ruleAdvicePathSeparator11186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathChildren_in_entryRuleAdvicePathChildren11217 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathChildren11227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleAdvicePathChildren11270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdvicePathElement_in_entryRuleAdvicePathElement11303 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdvicePathElement11313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAdvicePathElement11365 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_ruleWildcardNode_in_ruleAdvicePathElement11379 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_15_in_ruleAdvicePathElement11389 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_31_in_ruleAdvicePathElement11414 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAdvicePathElement11448 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleAdvicePathElement11461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_ruleAdvicePathElement11491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNode_in_entryRuleWildcardNode11538 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardNode11549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleWildcardNode11587 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_ruleWildcardNode11601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFilter_in_entryRuleFilter11641 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFilter11651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleFilter11685 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleFilter11719 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleFilter11732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePreConditionAssert_in_entryRulePreConditionAssert11765 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePreConditionAssert11775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_rulePreConditionAssert11821 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePreConditionAssert11843 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePreConditionAssert11877 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_45_in_rulePreConditionAssert11891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostConditionAssert_in_entryRulePostConditionAssert11924 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostConditionAssert11934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_rulePostConditionAssert11980 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_rulePostConditionAssert12002 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_rulePostConditionAssert12036 = new BitSet(new long[]{0x0000200000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_45_in_rulePostConditionAssert12050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssertionExpression_in_entryRuleAssertionExpression12083 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssertionExpression12093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleAssertionExpression12127 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleAssertionExpression12161 = new BitSet(new long[]{0x0000004200000000L});
    public static final BitSet FOLLOW_33_in_ruleAssertionExpression12175 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleAssertionExpression12197 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAssertionExpression12216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement12249 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement12259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_ruleStatement12306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_ruleStatement12333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_ruleStatement12360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_ruleStatement12387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleStatement12415 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleStatement12423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_ruleStatement12452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_ruleStatement12479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_ruleStatement12506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakStatement_in_entryRuleBreakStatement12538 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBreakStatement12548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleBreakStatement12591 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleBreakStatement12600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContinueStatement_in_entryRuleContinueStatement12633 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleContinueStatement12643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleContinueStatement12686 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleContinueStatement12695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCompoundStatement_in_entryRuleCompoundStatement12728 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCompoundStatement12738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCompoundStatement12772 = new BitSet(new long[]{0x00002401000C07F0L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleCompoundStatement12806 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleCompoundStatement12819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatements_in_entryRuleStatements12852 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatements12862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleStatements12920 = new BitSet(new long[]{0x00000401000C07F2L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement12957 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWhileStatement12967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_ruleWhileStatement13001 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleWhileStatement13010 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E010000L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleWhileStatement13044 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleWhileStatement13057 = new BitSet(new long[]{0x00000401000C07F0L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleWhileStatement13091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitchStatement_in_entryRuleSwitchStatement13128 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitchStatement13138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleSwitchStatement13172 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleSwitchStatement13181 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E010000L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleSwitchStatement13215 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleSwitchStatement13228 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleSwitchStatement13237 = new BitSet(new long[]{0x0000200000000000L,0x0000000000003000L});
    public static final BitSet FOLLOW_ruleCase_in_ruleSwitchStatement13271 = new BitSet(new long[]{0x0000200000000000L,0x0000000000003000L});
    public static final BitSet FOLLOW_76_in_ruleSwitchStatement13286 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleSwitchStatement13295 = new BitSet(new long[]{0x00002401000C07F0L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleStatements_in_ruleSwitchStatement13329 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleSwitchStatement13344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCase_in_entryRuleCase13377 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCase13387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleCase13421 = new BitSet(new long[]{0x0000000000000360L,0x0000000038000000L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleCase13455 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleCase13468 = new BitSet(new long[]{0x00000401000C07F0L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleCase13502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleForStatement_in_entryRuleForStatement13539 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleForStatement13549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_ruleForStatement13592 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleForStatement13601 = new BitSet(new long[]{0x00000041000C07F0L,0x000000003E010000L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_ruleForStatement13635 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleForStatement13649 = new BitSet(new long[]{0x00000041000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleForStatement13683 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleForStatement13697 = new BitSet(new long[]{0x00000009000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpressionList_in_ruleForStatement13731 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleForStatement13745 = new BitSet(new long[]{0x00000401000C07F0L,0x000000003E01CF00L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleForStatement13779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement13816 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStatement13826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleReturnStatement13860 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleReturnStatement13894 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleReturnStatement13907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpressionList_in_entryRuleVarExpressionList13942 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpressionList13952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList14011 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleVarExpressionList14025 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E010000L});
    public static final BitSet FOLLOW_ruleVarExpression_in_ruleVarExpressionList14059 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleExpressionList_in_entryRuleExpressionList14098 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpressionList14108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList14167 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_ruleExpressionList14181 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionList14215 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_ruleVarExpression_in_entryRuleVarExpression14254 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarExpression14264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression14311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleVarExpression14326 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVarExpression14348 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_ruleVarExpression14365 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleVarExpression14399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression14437 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression14447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueExpression_in_ruleExpression14493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueExpression_in_entryRuleValueExpression14524 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueExpression14534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleValueExpression14592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression14628 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression14638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainExpression_in_ruleAssignmentExpression14685 = new BitSet(new long[]{0x01E0000002000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_25_in_ruleAssignmentExpression14716 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_53_in_ruleAssignmentExpression14732 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_54_in_ruleAssignmentExpression14748 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_55_in_ruleAssignmentExpression14764 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_56_in_ruleAssignmentExpression14780 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_81_in_ruleAssignmentExpression14796 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleChainExpression_in_ruleAssignmentExpression14845 = new BitSet(new long[]{0x01E0000002000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_ruleChainExpression_in_entryRuleChainExpression14884 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainExpression14894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleChainExpression14940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_entryRuleChainedExpression14971 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChainedExpression14981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_ruleChainedExpression15027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfExpression_in_entryRuleIfExpression15058 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfExpression15068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_ruleIfExpression15115 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_ruleIfExpression15133 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression15167 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleIfExpression15180 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleChainedExpression_in_ruleIfExpression15214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression15253 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression15263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression15310 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_ruleOrExpression15340 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression15387 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression15426 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression15436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression15483 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_ruleAndExpression15513 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression15560 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
    public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression15599 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression15609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression15656 = new BitSet(new long[]{0x0000000018000002L,0x0000000001F00000L});
    public static final BitSet FOLLOW_84_in_ruleRelationalExpression15687 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_85_in_ruleRelationalExpression15703 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_86_in_ruleRelationalExpression15719 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_87_in_ruleRelationalExpression15735 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_88_in_ruleRelationalExpression15751 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_28_in_ruleRelationalExpression15767 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_27_in_ruleRelationalExpression15783 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression15832 = new BitSet(new long[]{0x0000000018000002L,0x0000000001F00000L});
    public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression15871 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression15881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression15928 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_24_in_ruleAdditiveExpression15959 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_18_in_ruleAdditiveExpression15975 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression16024 = new BitSet(new long[]{0x0000000001040002L});
    public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression16063 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression16073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression16120 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_26_in_ruleMultiplicativeExpression16151 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_17_in_ruleMultiplicativeExpression16167 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_22_in_ruleMultiplicativeExpression16183 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleMultiplicativeExpression16232 = new BitSet(new long[]{0x0000000004420002L});
    public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression16271 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression16281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression16328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression16355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression16387 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression16397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleUnaryExpression16444 = new BitSet(new long[]{0x00000001000007F0L,0x0000000038000000L});
    public static final BitSet FOLLOW_18_in_ruleUnaryExpression16460 = new BitSet(new long[]{0x00000001000007F0L,0x0000000038000000L});
    public static final BitSet FOLLOW_89_in_ruleUnaryExpression16476 = new BitSet(new long[]{0x00000001000007F0L,0x0000000038000000L});
    public static final BitSet FOLLOW_90_in_ruleUnaryExpression16492 = new BitSet(new long[]{0x00000001000007F0L,0x0000000038000000L});
    public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryExpression16541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression16578 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression16588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression16635 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_90_in_rulePostopExpression16666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_rulePostopExpression16682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression16732 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression16742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleInfixExpression16789 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression16808 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression16830 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression16847 = new BitSet(new long[]{0x00000009000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression16882 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression16896 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression16930 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression16947 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_31_in_ruleInfixExpression16973 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression17007 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_ruleInfixExpression17020 = new BitSet(new long[]{0x0000000180008002L});
    public static final BitSet FOLLOW_32_in_ruleInfixExpression17030 = new BitSet(new long[]{0x00000009000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression17065 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleInfixExpression17079 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleInfixExpression17113 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleInfixExpression17130 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_15_in_ruleInfixExpression17158 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression17180 = new BitSet(new long[]{0x0000000080008002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression17224 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression17234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression17281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCall_in_rulePrimaryExpression17308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_rulePrimaryExpression17335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_rulePrimaryExpression17362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression17389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue17421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue17431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_PID_in_rulePropertyValue17477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableValue_in_entryRuleVariableValue17517 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableValue17527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVariableValue17573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall17613 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCall17623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOperationCall_in_ruleFeatureCall17669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOperationCall_in_entryRuleOperationCall17700 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOperationCall17710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleOperationCall17758 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_RULE_PID_in_ruleOperationCall17770 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleOperationCall17789 = new BitSet(new long[]{0x00000009000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleOperationCall17824 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_33_in_ruleOperationCall17838 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleParameter_in_ruleOperationCall17872 = new BitSet(new long[]{0x0000000A00000000L});
    public static final BitSet FOLLOW_35_in_ruleOperationCall17889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral17922 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteral17932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral17979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_ruleLiteral18006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral18038 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral18048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_ruleValueLiteral18095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleValueLiteral18122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_ruleValueLiteral18149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_ruleValueLiteral18176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_ruleValueLiteral18203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanLiteral_in_entryRuleBooleanLiteral18235 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBooleanLiteral18245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_ruleBooleanLiteral18291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ruleBooleanLiteral18307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral18354 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIntegerLiteral18364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleIntegerLiteral18411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleIntegerLiteral18434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullLiteral_in_entryRuleNullLiteral18466 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNullLiteral18476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_ruleNullLiteral18521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral18566 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteral18576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringLiteral18622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRealLiteral_in_entryRuleRealLiteral18662 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRealLiteral18672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REAL_in_ruleRealLiteral18718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRegexpLiteral_in_entryRuleRegexpLiteral18758 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRegexpLiteral18768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_REGEX_in_ruleRegexpLiteral18814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression18854 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression18864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleParanthesizedExpression18898 = new BitSet(new long[]{0x00000001000C07F0L,0x000000003E000000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression18920 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_ruleParanthesizedExpression18928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_ruleVisibility18975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_ruleVisibility18990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleExecutionMode19035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleExecutionMode19050 = new BitSet(new long[]{0x0000000000000002L});

}